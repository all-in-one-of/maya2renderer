//    Generated by Liquid v2.3.5 (buildtime=17:36:25.18)
//    Scene : E:/MyDocuments/maya/projects/default/er_rm_shader_graph_phong
//    User  : yaoyansi
//    Time  : Sat Mar 24 17:59:02 2012

//### SCENE BEGIN ###
eiContext *CONTEXT = ei_create_context();
ei_context(CONTEXT);
//ei_set_connection( &(MayaConnection::getInstance()->connection.base );
ei_verbose( 6 );
ei_link( "eiIMG" );
ei_link( "eiSHADER" );
ei_link( "eiSHADER_maya" );
//----------------phong_shader_for_test begin---
ei_shader("phong_shader_for_test");
ei_shader_param_string("desc","plastic");
ei_shader_param_vector("Cs",1,0.2,0.3);
ei_shader_param_vector("Kd",0.7,1,1);
ei_shader_param_scalar("Ks",1);
ei_shader_param_scalar("roughness",0.2);
ei_end_shader();
ei_shader("opaque_shadow_for_test");
ei_shader_param_string("desc","opaque");
ei_end_shader();
ei_material("phong_mtl_for_test");
ei_add_surface("phong_shader_for_test");
ei_add_shadow("opaque_shadow_for_test");
ei_end_material();
//----------------phong_shader_for_test end ---

//############################### option #
ei_options("perspShape_option");
ei_contrast(0.05,0.05,0.05,0.05);
ei_samples(0,2);
ei_filter(4,3);
//transform motion=0, deform motion=0
ei_motion(0);
ei_trace_depth(4,4,4);
ei_displace(0);
ei_face(3);
ei_end_options();
// maya settings: focal=35, aperture = 36, aspect=1.33333
//Depth of Field on camera "|persp|perspShape" is turned off in Maya

//############################### camera #
ei_camera("|persp|perspShape_object");
ei_output("E:/MyDocuments/maya/projects/default/rmanpix/er_rm_shader_graph_phong_perspShape_1_elvishray.bmp","bmp",1);
ei_output_variable("color",10);
ei_end_output();
ei_focal(35);
ei_aperture(36);
ei_aspect(1.33333);
ei_resolution(768,576);
ei_clip(0.1,1000);
ei_end_camera();
//----------------------------------
ei_instance("|persp|perspShape");
ei_element("|persp|perspShape_object");
ei_transform(0.99824,0,-0.0593064,0,   -0.0550414,0.372367,-0.926452,0,   0.0220837,0.928086,0.371711,0,   8.43938,87.5891,47.0188,1);
ei_end_instance();
//
ei_shader("place2dTexture1");
ei_shader_param_string("desc", "maya_place2dTexture");
ei_shader_param_scalar("coverageU", 1);
ei_shader_param_scalar("coverageV", 1);
ei_shader_param_scalar("noiseU", 0);
ei_shader_param_scalar("noiseV", 0);
ei_shader_param_scalar("offsetU", 0);
ei_shader_param_scalar("offsetV", 0);
ei_shader_param_scalar("repeatU", 1);
ei_shader_param_scalar("repeatV", 1);
ei_shader_param_scalar("translateFrameU", 0);
ei_shader_param_scalar("translateFrameV", 0);
ei_shader_param_vector("outUV", 0, 0, 4.5499e+174);
ei_end_shader();

ei_texture("E:/dev/Autodesk/maya/myplugin/project/liquid_/2.3.3/test/test_shader_graph/texture/check112.bmp");
ei_file_texture("E:/dev/Autodesk/maya/myplugin/project/liquid_/2.3.3/test/test_shader_graph/texture/check112.bmp.tex", eiFALSE);
ei_end_texture();
ei_shader("file1");
ei_shader_param_string("desc", "maya_file");
ei_shader_param_scalar("alphaGain", 1);
ei_shader_param_bool("alphaIsLuminance", 0);
ei_shader_param_scalar("alphaOffset", 0);
ei_shader_param_vector("colorGain", 1, 1, 1);
ei_shader_param_vector("colorOffset", 0, 0, 0);
ei_shader_param_vector("defaultColor", 0.5, 0.5, 0.5);
ei_shader_link_param("uvCoord", "place2dTexture1", "outUV");
ei_shader_param_texture("fileTextureName", "E:/dev/Autodesk/maya/myplugin/project/liquid_/2.3.3/test/test_shader_graph/texture/check112.bmp");
ei_shader_param_index("filterType", 3);
ei_shader_param_scalar("filter", 1);
ei_shader_param_scalar("filterOffset", 0);
ei_shader_param_bool("invert", 0);
ei_shader_param_bool("fileHasAlpha", 0);
ei_shader_param_scalar("outAlpha", 1);
ei_shader_param_vector("outColor", 0, 0, 0);
ei_shader_param_vector("outTransparency", 0, 0, 0);
ei_end_shader();

ei_shader("phong1");
ei_shader_param_string("desc", "maya_phong");
ei_shader_link_param("color_", "file1", "outColor");
ei_shader_param_vector("transparency", 0.1405, 0.1405, 0.1405);
ei_shader_param_vector("ambientColor", 0, 0, 0);
ei_shader_param_vector("incandescence", 0, 0, 0);
ei_shader_param_vector("normalCamera", 1, 1, 1);
ei_shader_param_scalar("diffuse", 0.82642);
ei_shader_param_scalar("translucence", 0);
ei_shader_param_scalar("translucenceDepth", 0);
ei_shader_param_scalar("translucenceFocus", 8e-005);
ei_shader_param_scalar("cosinePower", 26.3);
ei_shader_param_vector("specularColor", 0, 0, 0);
ei_shader_param_scalar("reflectivity", 6e-005);
ei_shader_param_vector("reflectedColor", 0.16528, 0.16528, 0.16528);
ei_shader_param_index("matteOpacityMode", 2);
ei_shader_param_scalar("matteOpacity", 1);
ei_shader_param_index("reflectionLimit", 1);
ei_shader_param_vector("outColor", 0, 0, 0);
ei_shader_param_vector("outTransparency", 0.1405, 0.1405, 0.1405);
ei_end_shader();

ei_material("phong1SG");
ei_add_surface("phong1");
ei_end_material();

//worldPrologue

// Renderer::exportLight("_pointLight1_pointLightShape1");

// Renderer::exportPointLight()
ei_shader("|pointLight1|pointLightShape1_shader");
ei_shader_param_string("desc","pointlight");
ei_shader_param_vector("lightcolor",1,1,1);
ei_shader_param_scalar("intensity",1);
ei_end_shader();
ei_light("|pointLight1|pointLightShape1_object");
ei_add_light("|pointLight1|pointLightShape1_shader" );
ei_origin(13.1371,15.4759,13.8213);
ei_end_light();
ei_instance("|pointLight1|pointLightShape1");
ei_element("|pointLight1|pointLightShape1_object");
ei_end_instance();

// Renderer::exportOneGeometry_Mesh(|pPlane1|pPlaneShape1,0,0)

//############################### mesh #
ei_object("pPlaneShape1_object","poly");
{
eiTag tag;
//### vertex positions, fnMesh.numVertices()=4
tag = ei_tab(EI_DATA_TYPE_VECTOR, 1024);
//tag=290
ei_pos_list(tag);
ei_tab_add_vector(-18.5024,-3.70836e-015,16.701);
ei_tab_add_vector(18.5024,-3.70836e-015,16.701);
ei_tab_add_vector(-18.5024,3.70836e-015,-16.701);
ei_tab_add_vector(18.5024,3.70836e-015,-16.701);
ei_end_tab();
//vertex normals are not output temporarily.
//### N
tag = eiNULL_TAG;
ei_declare("N",2,5, &tag);
tag = ei_tab(EI_DATA_TYPE_VECTOR, 1024);
//tag=292
ei_variable("N", &tag);
ei_tab_add_vector(0,1,2.22045e-016);
ei_tab_add_vector(0,1,2.22045e-016);
ei_tab_add_vector(0,1,2.22045e-016);
ei_tab_add_vector(0,1,2.22045e-016);
ei_end_tab();
//### UV(map1), size=4
tag = eiNULL_TAG;
ei_declare("u",2,5, &tag);
tag = ei_tab(EI_DATA_TYPE_SCALAR, 1024);
//tag=294
ei_variable("u", &tag);
ei_tab_add_scalar(0);
ei_tab_add_scalar(1);
ei_tab_add_scalar(0);
ei_tab_add_scalar(0.997722);
ei_end_tab();
tag = eiNULL_TAG;
ei_declare("v",2,5, &tag);
tag = ei_tab(EI_DATA_TYPE_SCALAR, 1024);
//tag=296
ei_variable("v", &tag);
ei_tab_add_scalar(0);
ei_tab_add_scalar(0);
ei_tab_add_scalar(0.998191);
ei_tab_add_scalar(0.998778);
ei_end_tab();
//### triangles, size=[2]
tag = ei_tab(EI_DATA_TYPE_INDEX, 1024);
//tag=298
ei_triangle_list(tag);
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(2);
ei_tab_add_index(1);
ei_tab_add_index(3);
ei_end_tab();
}//pPlaneShape1_object
ei_end_object();
I bet it will never goes here.Renderer::writeShader_HasNoSurfaceShaderORIngoreSurface(ribNode=|pPlane1|pPlaneShape1,)
//--------------------------
ei_instance("pPlaneShape1");
ei_add_material("phong1SG");
ei_element("pPlaneShape1_object");
ei_transform(1,0,0,0,   0,1,0,0,   0,0,1,0,   -0.642661,-10.3652,8.77257,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
ei_end_instance();
//

//Renderer::worldEpilogue()
ei_instgroup("perspShape");
//camera
ei_add_instance("|persp|perspShape");
//lightlinks and meshes
ei_add_instance("|pointLight1|pointLightShape1");
ei_add_instance("pPlaneShape1");
ei_end_instgroup( );
ei_render("perspShape", "|persp|perspShape", "perspShape_option");
ei_delete_context(CONTEXT);
