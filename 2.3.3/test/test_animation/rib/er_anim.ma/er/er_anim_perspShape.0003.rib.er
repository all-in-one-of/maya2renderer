//### SCENE BEGIN ###
eiContext *CONTEXT = ei_create_context();
ei_context(CONTEXT);
//ei_set_connection( &(MayaConnection::getInstance()->connection.base );
ei_verbose( 6 );
ei_link( "eiIMG" );
ei_link( "eiSHADER" );
ei_link( "eiSHADER_maya" );
//----------------phong_shader_for_test begin---
ei_shader("phong_shader_for_test");
ei_shader_param_string("desc","plastic");
ei_shader_param_vector("Cs",1,0.2,0.3);
ei_shader_param_vector("Kd",0.7,1,1);
ei_shader_param_scalar("Ks",1);
ei_shader_param_scalar("roughness",0.2);
ei_end_shader();
ei_shader("opaque_shadow_for_test");
ei_shader_param_string("desc","opaque");
ei_end_shader();
ei_material("phong_mtl_for_test");
ei_add_surface("phong_shader_for_test");
ei_add_shadow("opaque_shadow_for_test");
ei_end_material();
//----------------phong_shader_for_test end ---
//    Generated by Liquid v2.3.5 (buildtime=13:32:42.06)
//    Scene : E:/MyDocuments/maya/projects/default/er_anim
//    User  : yaoyansi
//    Time  : Mon Apr 02 14:44:03 2012


//############################### option #
ei_options("perspShape_option");
ei_contrast(0.05,0.05,0.05,0.05);
ei_samples(0,2);
ei_filter(4,3);
//transform motion=0, deform motion=0
ei_motion(0);
ei_trace_depth(4,4,4);
ei_displace(0);
ei_face(3);
ei_end_options();
// maya settings: focal=35, aperture = 36, aspect=1.33333
//Depth of Field on camera "|persp|perspShape" is turned off in Maya

//############################### camera #
ei_camera("|persp|perspShape_object");
ei_output("E:/MyDocuments/maya/projects/default/rmanpix/er_anim.perspShape.3.elvishray.bmp","bmp",1);
ei_output_variable("color",11);
ei_end_output();
ei_focal(35);
ei_aperture(36);
ei_aspect(1.33333);
ei_resolution(768,576);
ei_clip(0.1,1000);
ei_end_camera();
//----------------------------------
ei_instance("|persp|perspShape");
ei_element("|persp|perspShape_object");
ei_transform(0.960294,1.38778e-017,0.278991,0,   0.176852,0.773416,-0.608729,0,   -0.215776,0.633899,0.742707,0,   -2.25407,7.63656,8.49921,1);
ei_end_instance();
//
// shader(plastic,, ...)
ei_shader("liquidSurface1");
ei_shader_param_string( "desc","plastic");
ei_shader_param_vector("Cs",1,0,0);
ei_shader_param_vector("Kd",1,1,1);
ei_shader_param_scalar("Ks",0.5);
ei_shader_param_scalar("roughness",0.1);
ei_shader_param_vector("specularcolor",1,1,1);
ei_end_shader();
// shader(opaque,, ...)
ei_shader("liquidSurface2");
ei_shader_param_string( "desc","opaque");
ei_end_shader();
ei_material("liquidSurface1SG");
ei_add_surface("liquidSurface1");
ei_add_shadow("liquidSurface2");
ei_end_material();
// shader(plastic,, ...)
ei_shader("liquidSurface3");
ei_shader_param_string( "desc","plastic");
ei_shader_param_vector("Cs",0,0,1);
ei_shader_param_vector("Kd",1,1,1);
ei_shader_param_scalar("Ks",0.5);
ei_shader_param_scalar("roughness",0.1);
ei_shader_param_vector("specularcolor",1,1,1);
ei_end_shader();
ei_material("liquidSurface3SG");
ei_add_surface("liquidSurface3");
ei_end_material();

//worldPrologue

// Renderer::exportLight("_pointLight1_pointLightShape1");

// Renderer::exportPointLight()
ei_shader("|pointLight1|pointLightShape1_shader");
ei_shader_param_string("desc","pointlight");
ei_shader_param_vector("lightcolor",0.973,0.993407,1);
ei_shader_param_scalar("intensity",0.5);
ei_end_shader();
ei_light("|pointLight1|pointLightShape1_object");
ei_add_light("|pointLight1|pointLightShape1_shader" );
ei_origin(-2.10242,2.86003,1.07926);
ei_end_light();
ei_instance("|pointLight1|pointLightShape1");
ei_element("|pointLight1|pointLightShape1_object");
ei_end_instance();

// Renderer::exportOneGeometry_Mesh(|pCube1|pCubeShape1,0,0)

//############################### mesh #
ei_object("pCubeShape1_object","poly");
{
eiTag tag;
//### vertex positions, fnMesh.numVertices()=8
tag = ei_tab(EI_DATA_TYPE_VECTOR, 1024);
//tag=217
ei_pos_list(tag);
ei_tab_add_vector(-0.5,-0.5,0.5);
ei_tab_add_vector(0.5,-0.5,0.5);
ei_tab_add_vector(-0.5,0.5,0.5);
ei_tab_add_vector(0.5,0.5,0.5);
ei_tab_add_vector(-0.5,0.5,-0.5);
ei_tab_add_vector(0.5,0.5,-0.5);
ei_tab_add_vector(-0.5,-0.5,-0.5);
ei_tab_add_vector(0.5,-0.5,-0.5);
ei_end_tab();
//vertex normals are not output temporarily.
//### UV(map1), size=14
tag = eiNULL_TAG;
ei_declare("u",2,6, &tag);
tag = ei_tab(EI_DATA_TYPE_SCALAR, 1024);
//tag=219
ei_variable("u", &tag);
ei_tab_add_scalar(0.375);
ei_tab_add_scalar(0.625);
ei_tab_add_scalar(0.375);
ei_tab_add_scalar(0.625);
ei_tab_add_scalar(0.375);
ei_tab_add_scalar(0.625);
ei_tab_add_scalar(0.375);
ei_tab_add_scalar(0.625);
ei_tab_add_scalar(0.375);
ei_tab_add_scalar(0.625);
ei_tab_add_scalar(0.875);
ei_tab_add_scalar(0.875);
ei_tab_add_scalar(0.125);
ei_tab_add_scalar(0.125);
ei_end_tab();
tag = eiNULL_TAG;
ei_declare("v",2,6, &tag);
tag = ei_tab(EI_DATA_TYPE_SCALAR, 1024);
//tag=221
ei_variable("v", &tag);
ei_tab_add_scalar(0);
ei_tab_add_scalar(0);
ei_tab_add_scalar(0.25);
ei_tab_add_scalar(0.25);
ei_tab_add_scalar(0.5);
ei_tab_add_scalar(0.5);
ei_tab_add_scalar(0.75);
ei_tab_add_scalar(0.75);
ei_tab_add_scalar(1);
ei_tab_add_scalar(1);
ei_tab_add_scalar(0);
ei_tab_add_scalar(0.25);
ei_tab_add_scalar(0);
ei_tab_add_scalar(0.25);
ei_end_tab();
//### triangles, size=[2, 2, 2, 2, 2, 2]
tag = ei_tab(EI_DATA_TYPE_INDEX, 1024);
//tag=223
ei_triangle_list(tag);
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(2);
ei_tab_add_index(1);
ei_tab_add_index(3);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(4);
ei_tab_add_index(3);
ei_tab_add_index(5);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(6);
ei_tab_add_index(5);
ei_tab_add_index(7);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(0);
ei_tab_add_index(0);
ei_tab_add_index(7);
ei_tab_add_index(1);
ei_tab_add_index(1);
ei_tab_add_index(7);
ei_tab_add_index(3);
ei_tab_add_index(3);
ei_tab_add_index(7);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(0);
ei_tab_add_index(4);
ei_tab_add_index(4);
ei_tab_add_index(0);
ei_tab_add_index(2);
ei_end_tab();
}//pCubeShape1_object
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|pPlane1|pPlaneShape1,0,0)

//############################### mesh #
ei_object("pPlaneShape1_object","poly");
{
eiTag tag;
//### vertex positions, fnMesh.numVertices()=4
tag = ei_tab(EI_DATA_TYPE_VECTOR, 1024);
//tag=226
ei_pos_list(tag);
ei_tab_add_vector(-4.76676,-1.12863e-015,5.08292);
ei_tab_add_vector(4.76676,-1.12863e-015,5.08292);
ei_tab_add_vector(-4.76676,1.12863e-015,-5.08292);
ei_tab_add_vector(4.76676,1.12863e-015,-5.08292);
ei_end_tab();
//vertex normals are not output temporarily.
//### N
tag = eiNULL_TAG;
ei_declare("N",2,6, &tag);
tag = ei_tab(EI_DATA_TYPE_VECTOR, 1024);
//tag=228
ei_variable("N", &tag);
ei_tab_add_vector(0,1,2.22045e-016);
ei_tab_add_vector(0,1,2.22045e-016);
ei_tab_add_vector(0,1,2.22045e-016);
ei_tab_add_vector(0,1,2.22045e-016);
ei_end_tab();
//### UV(map1), size=4
tag = eiNULL_TAG;
ei_declare("u",2,6, &tag);
tag = ei_tab(EI_DATA_TYPE_SCALAR, 1024);
//tag=230
ei_variable("u", &tag);
ei_tab_add_scalar(0);
ei_tab_add_scalar(0.937799);
ei_tab_add_scalar(0);
ei_tab_add_scalar(0.937799);
ei_end_tab();
tag = eiNULL_TAG;
ei_declare("v",2,6, &tag);
tag = ei_tab(EI_DATA_TYPE_SCALAR, 1024);
//tag=232
ei_variable("v", &tag);
ei_tab_add_scalar(0);
ei_tab_add_scalar(0);
ei_tab_add_scalar(1);
ei_tab_add_scalar(1);
ei_end_tab();
//### triangles, size=[2]
tag = ei_tab(EI_DATA_TYPE_INDEX, 1024);
//tag=234
ei_triangle_list(tag);
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(2);
ei_tab_add_index(1);
ei_tab_add_index(3);
ei_end_tab();
}//pPlaneShape1_object
ei_end_object();
//--------------------------
ei_instance("pCubeShape1");
ei_add_material("liquidSurface1SG");
ei_element("pCubeShape1_object");
ei_transform(1,0,0,0,   0,1,0,0,   0,0,1,0,   -2.44014,1,0,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
ei_end_instance();
//
//--------------------------
ei_instance("pPlaneShape1");
ei_add_material("liquidSurface3SG");
ei_element("pPlaneShape1_object");
ei_transform(1,0,0,0,   0,1,0,0,   0,0,1,0,   0,0,0,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
ei_end_instance();
//

//Renderer::worldEpilogue()
ei_instgroup("perspShape");
//camera
ei_add_instance("|persp|perspShape");
//lightlinks and meshes
ei_add_instance("|pointLight1|pointLightShape1");
ei_add_instance("pCubeShape1");
//lightlinks and meshes
ei_add_instance("|pointLight1|pointLightShape1");
ei_add_instance("pPlaneShape1");
ei_end_instgroup( );
// in batch render mode
ei_render("perspShape", "|persp|perspShape", "perspShape_option");
ei_delete_context(CONTEXT);
