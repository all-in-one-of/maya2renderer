>0 liqRibTranslator::doIt()-->if(checkSettings()==true)
  >1 RendererMgr::createFactory(elvishray)
  >1 RendererMgr::install()
  >1 RendererMgr::prologue()
    >2 Renderer::openLog()(but do nothing now)
  >1 Renderer::canExport()
  >1 liqRibTranslatorNew::_doItNew(args,defaultRenderLayer)
    >2 liqRibTranslatorNew::_doItNewWithoutRenderScript(arg,defaultRenderLayer)
      >3 liqRibTranslator::verifyOutputDirectories()
      >3 liqRibTranslator::generateRenderScriptName()
      >3 liqRibTranslator::generateTempMayaSceneName()
      >3 tFrameScriptJobMgr::setCommonParameters(test_shader_plFrame0)
      >3 liqRibTranslatorNew::processOneFrame(0, liqglo__)
        >4 liqShaderFactory::clearShaders()
        >4 liqRibTranslatorNew::buildJobs__()
          >5 liqShader::liqShader(liquidSurface23)
            >6 liqShaderFactory::getUniqueShaderHandler()
            >6 liqTokenPointer:set(,0,0,0)
            >6 liqGetSloInfo::setShaderNode(liquidSurface23)
            >6 liqTokenPointer:set(liq_frequency,0,0,0)
            >6 liqTokenPointer:set(liq_frequency,0,0,0)
            >6 liqTokenPointer:set(,0,0,0)
            >6 liqTokenPointer:set(texname,5,0,0)
            >6 liqTokenPointer:set(liq_frequency,0,0,0)
            >6 liqTokenPointer:set(texname,5,0,0)
            >6 liqTokenPointer:set(,0,0,0)
            >6 liqTokenPointer:set(texname0,5,0,0)
            >6 liqTokenPointer:set(liq_frequency,0,0,0)
            >6 liqTokenPointer:set(texname,5,0,0)
            >6 liqTokenPointer:set(texname0,5,0,0)
            >6 liqTokenPointer:set(,0,0,0)
            >6 liqTokenPointer:set(texname2,5,0,0)
            >6 liqTokenPointer:set(liq_frequency,0,0,0)
            >6 liqTokenPointer:set(texname,5,0,0)
            >6 liqTokenPointer:set(texname0,5,0,0)
            >6 liqTokenPointer:set(texname2,5,0,0)
            >6 liqTokenPointer:set(,0,0,0)
            >6 liqShader::liqShaderParseVectorAttr(liquidSurface23,liq_c0,4)
              >7 liqTokenPointer:set(liq_c0,4,0,0)
            >6 liqTokenPointer:set(,0,0,0)
            >6 liqShader::liqShaderParseVectorAttr(liquidSurface23,liq_p0,1)
              >7 liqTokenPointer:set(liq_p0,1,0,0)
            >6 liqTokenPointer:set(liq_frequency,0,0,0)
            >6 liqTokenPointer:set(texname,5,0,0)
            >6 liqTokenPointer:set(texname0,5,0,0)
            >6 liqTokenPointer:set(texname2,5,0,0)
            >6 liqTokenPointer:set(liq_c0,4,0,0)
            >6 liqTokenPointer:set(liq_p0,1,0,0)
            >6 liqTokenPointer:set(,0,0,0)
            >6 liqShader::liqShaderParseVectorAttr(liquidSurface23,liq_v0,2)
              >7 liqTokenPointer:set(liq_v0,2,0,0)
            >6 liqTokenPointer:set(,0,0,0)
            >6 liqShader::liqShaderParseVectorAttr(liquidSurface23,liq_n0,3)
              >7 liqTokenPointer:set(liq_n0,3,0,0)
            >6 liqTokenPointer:set(,0,0,0)
            >6 liqShader::liqShaderParseMatrixAttr(liquidSurface23,liq_m0,7)
              >7 liqTokenPointer:set(liq_m0,7,0,0)
            >6 liqTokenPointer:set(liq_frequency,0,0,0)
            >6 liqTokenPointer:set(texname,5,0,0)
            >6 liqTokenPointer:set(texname0,5,0,0)
            >6 liqTokenPointer:set(texname2,5,0,0)
            >6 liqTokenPointer:set(liq_c0,4,0,0)
            >6 liqTokenPointer:set(liq_p0,1,0,0)
            >6 liqTokenPointer:set(liq_v0,2,0,0)
            >6 liqTokenPointer:set(liq_n0,3,0,0)
            >6 liqTokenPointer:set(liq_m0,7,0,0)
            >6 liqTokenPointer:set(,0,0,0)
            >6 liqShader::liqShaderParseMatrixAttr(liquidSurface23,liq_m1,7)
              >7 liqTokenPointer:set(liq_m1,7,0,0)
            >6 liqTokenPointer:set(,0,0,0)
          >5 liqShader::buildJobs()
            >6 liqShader::scanExpressions(liquidSurface23)
              >7 liqShader::processExpression(texname,*light)
                >8 removeRedundentExtsion(.tex)
                >8 liqExpression::liqExpression([MakeTexture .tex],)
                >8 liqExpression::CalcValue()
                >8 liqExpression::GetCmd()
              >7 liqShader::processExpression(texname0,*light)
                >8 removeRedundentExtsion(E:/check12.bmp.tex)
                >8 liqExpression::liqExpression([MakeTexture E:/check12.bmp],)
                >8 liqExpression::CalcValue()
                >8 liqExpression::GetCmd()
              >7 liqShader::processExpression(texname2,*light)
                >8 removeRedundentExtsion(E:/dev/Autodesk/maya/myplugin/project/liquid_/2.3.3/test/test_rm_texture/textures/check12.bmp.tex)
                >8 liqExpression::liqExpression([MakeTexture E:/dev/Autodesk/maya/myplugin/project/liquid_/2.3.3/test/test_rm_texture/textures/check12.bmp],)
                >8 liqExpression::CalcValue()
                >8 liqExpression::GetCmd()
          >5 liqRibTranslatorNew::buildShadowJobs__()
            >6 tJobScriptMgr::buildShadowJob(thisJob___, 0)
            >6 tJobScriptMgr::buildShadowCameraJob(thisJob___, 0)
          >5 tRibCameraMgr::gatherDataForJob(liqglo___, ,jobList__,0,1)
          >5 liqRibTranslator::generateFileName(2,perspShape)
          >5 liqRibTranslator::generateFileName(3,perspShape)
          >5 liqRibTranslator::renderFrameSort(,)
          >5 liqRibTranslator::renderFrameSort(,)
          >5 liqRibTranslator::renderFrameSort(,)
          >5 liqRibTranslator::renderFrameSort(,)
        >4 liqRibTranslatorNew::calaculateSamplingTime(1)
        >4 liqRibTranslatorNew::scanScene__(1,0)
          >5 tJobScriptMgr::scanScene(1,0, htable__, count, returnStatus__)
            >6 liqRibClipPlaneData::insert(|pointLight1|pointLightShape1,lframe,0,3,0,matrix,,-1)
              >7 liqRibHT::hash(|pointLight1|pointLightShape1,0)
              >7 liqRibClipPlaneData::find(|pointLight1|pointLightShape1,|pointLight1|pointLightShape1,3)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|pointLight1|pointLightShape1,0,3,-1)
                >8 liqRibNode::parseVectorAttributes(pointLight1,,2)
                >8 liqRibNode::parseVectorAttributes(pointLight1,,3)
                >8 liqRibNode::parseVectorAttributes(pointLight1,,4)
                >8 liqRibNode::findShadingGroup(|pointLight1|pointLightShape1,3)
                >8 liqRibObj::liqRibObj(|pointLight1|pointLightShape1,3)
                  >9 liqShader::liqShader()
                    >10 liqTokenPointer:set(,0,0,0)
                    >10 liqShaderFactory::getUniqueShaderHandler()
                  >9 liqRibLightData::liqRibLightData(|pointLight1|pointLightShape1)
                    >10 liqRibData::addAdditionalSurfaceParameters(pointLightShape1)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 liqRibClipPlaneData::insert(|pointLight2|pointLightShape2,lframe,0,3,1,matrix,,-1)
              >7 liqRibHT::hash(|pointLight2|pointLightShape2,1)
              >7 liqRibClipPlaneData::find(|pointLight2|pointLightShape2,|pointLight2|pointLightShape2,3)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|pointLight2|pointLightShape2,0,3,-1)
                >8 liqRibNode::parseVectorAttributes(pointLight2,,2)
                >8 liqRibNode::parseVectorAttributes(pointLight2,,3)
                >8 liqRibNode::parseVectorAttributes(pointLight2,,4)
                >8 liqRibNode::findShadingGroup(|pointLight2|pointLightShape2,3)
                >8 liqRibObj::liqRibObj(|pointLight2|pointLightShape2,3)
                  >9 liqShader::liqShader()
                    >10 liqTokenPointer:set(,0,0,0)
                    >10 liqShaderFactory::getUniqueShaderHandler()
                  >9 liqRibLightData::liqRibLightData(|pointLight2|pointLightShape2)
                    >10 liqRibData::addAdditionalSurfaceParameters(pointLightShape2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
          >5 tLocatorMgr::scanScene(1,0,htable__,count__,returnStatus__)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibClipPlaneData::insert(|pPlane2|pPlaneShape11,lframe,0,0,2,matrix,,-1)
              >7 liqRibHT::hash(|pPlane2|pPlaneShape11,2)
              >7 liqRibClipPlaneData::find(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|pPlane2|pPlaneShape11,0,0,-1)
                >8 liqRibNode::parseVectorAttributes(pPlane2,,2)
                >8 liqRibNode::parseVectorAttributes(pPlane2,,3)
                >8 liqRibNode::parseVectorAttributes(pPlane2,,4)
                >8 liqRibNode::findShadingGroup(|pPlane2|pPlaneShape11,0)
                >8 liqRibNode::findShader(liquidSurface24SG)
                >8 liqRibNode::findDisp(liquidSurface24SG)
                >8 liqRibNode::findVolume(liquidSurface24SG)
                >8 liqRibNode::getColor(&shader,&color)
                >8 liqRibNode::getOpacity(&shader,&color)
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|pPlane2|pPlaneShape11,0)
                  >9 liqRibMeshData::liqRibMeshData(|pPlane2|pPlaneShape11)
                    >10 liqTokenPointer:set(P,1,4,0)
                    >10 liqTokenPointer:set(N,3,4,0)
                    >10 liqTokenPointer:set(st,0,6,2)
                    >10 liqTokenPointer:set(st,0,6,2)
                    >10 liqTokenPointer:set(P,1,4,0)
                    >10 liqTokenPointer:set(P,1,4,0)
                    >10 liqTokenPointer:set(N,3,4,0)
                    >10 liqTokenPointer:set(P,1,4,0)
                    >10 liqTokenPointer:set(N,3,4,0)
                    >10 liqTokenPointer:set(st,0,6,2)
                    >10 liqRibData::addAdditionalSurfaceParameters(pPlaneShape11)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibClipPlaneData::insert(|pPlane7|pPlaneShape16,lframe,0,0,3,matrix,,-1)
              >7 liqRibHT::hash(|pPlane7|pPlaneShape16,3)
              >7 liqRibClipPlaneData::find(|pPlane7|pPlaneShape16,|pPlane7|pPlaneShape16,0)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|pPlane7|pPlaneShape16,0,0,-1)
                >8 liqRibNode::parseVectorAttributes(pPlane7,,2)
                >8 liqRibNode::parseVectorAttributes(pPlane7,,3)
                >8 liqRibNode::parseVectorAttributes(pPlane7,,4)
                >8 liqRibNode::findShadingGroup(|pPlane7|pPlaneShape16,0)
                >8 liqRibNode::findShader(initialShadingGroup)
                >8 liqRibNode::findDisp(initialShadingGroup)
                >8 liqRibNode::findVolume(initialShadingGroup)
                >8 liqRibNode::getColor(&shader,&color)
                >8 liqRibNode::getOpacity(&shader,&color)
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|pPlane7|pPlaneShape16,0)
                  >9 liqRibMeshData::liqRibMeshData(|pPlane7|pPlaneShape16)
                    >10 liqTokenPointer:set(P,1,4,0)
                    >10 liqTokenPointer:set(N,3,4,0)
                    >10 liqTokenPointer:set(st,0,4,2)
                    >10 liqTokenPointer:set(st,0,4,2)
                    >10 liqTokenPointer:set(P,1,4,0)
                    >10 liqTokenPointer:set(P,1,4,0)
                    >10 liqTokenPointer:set(N,3,4,0)
                    >10 liqTokenPointer:set(P,1,4,0)
                    >10 liqTokenPointer:set(N,3,4,0)
                    >10 liqTokenPointer:set(st,0,4,2)
                    >10 liqRibData::addAdditionalSurfaceParameters(pPlaneShape16)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibClipPlaneData::insert(|pPlane8|pPlaneShape17,lframe,0,0,4,matrix,,-1)
              >7 liqRibHT::hash(|pPlane8|pPlaneShape17,4)
              >7 liqRibClipPlaneData::find(|pPlane8|pPlaneShape17,|pPlane8|pPlaneShape17,0)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|pPlane8|pPlaneShape17,0,0,-1)
                >8 liqRibNode::parseVectorAttributes(pPlane8,,2)
                >8 liqRibNode::parseVectorAttributes(pPlane8,,3)
                >8 liqRibNode::parseVectorAttributes(pPlane8,,4)
                >8 liqRibNode::findShadingGroup(|pPlane8|pPlaneShape17,0)
                >8 liqRibNode::findShader(initialShadingGroup)
                >8 liqRibNode::findDisp(initialShadingGroup)
                >8 liqRibNode::findVolume(initialShadingGroup)
                >8 liqRibNode::getColor(&shader,&color)
                >8 liqRibNode::getOpacity(&shader,&color)
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|pPlane8|pPlaneShape17,0)
                  >9 liqRibMeshData::liqRibMeshData(|pPlane8|pPlaneShape17)
                    >10 liqTokenPointer:set(P,1,4,0)
                    >10 liqTokenPointer:set(N,3,4,0)
                    >10 liqTokenPointer:set(st,0,4,2)
                    >10 liqTokenPointer:set(st,0,4,2)
                    >10 liqTokenPointer:set(P,1,4,0)
                    >10 liqTokenPointer:set(P,1,4,0)
                    >10 liqTokenPointer:set(N,3,4,0)
                    >10 liqTokenPointer:set(P,1,4,0)
                    >10 liqTokenPointer:set(N,3,4,0)
                    >10 liqTokenPointer:set(st,0,4,2)
                    >10 liqRibData::addAdditionalSurfaceParameters(pPlaneShape17)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
          >5 liqRibTranslatorNew::dealwithParticleInstancedObjects(0,1,5)
          >5 liqRibTranslatorNew::getCameraData(iter__,0)
            >6 liqRibTranslator::getCameraInfo(,&cam)
              >7 liqRibTranslator::portFieldOfView(768,576,&horizontal,&vertical,&fnCamera)
                >8 liqRibTranslator::computeViewingFrustum(1.33333,,&left,&right,&bottom,&top,&cam)
        >4 liqRibTranslatorNew::doTextures(size=3)
          >5 Renderer::frameEpilogue(txtList_.size=3)
        >4 liqRibTranslatorNew::doShadows(size=0)
          >5 Renderer::doShadows(shadowList_.size=0)
        >4 Renderer::setRenderScriptFormatAndCompress(0,0)
        >4 Renderer::isHeroPassReady(perspShape)
        >4 Renderer::HeroPassBegin(perspShape)
        >4 tHeroRibWriterMgr::write(liqglo___,perspShape,1,0)
          >5 liqRibTranslatorNew::ribPrologue__(perspShape)
            >6 Renderer::ribPrologue_begin(perspShape)
              >7 Renderer::dummyPhongShader()
            >6 Renderer::ribPrologue_comment(2.3.5 (buildtime=16:32:50.68),E:/MyDocuments/maya/projects/default/test_shader_pl,yaoyansi,time)
            >6 Renderer::ribPrologue_options(perspShape)
          >5 liqRibTranslatorNew::framePrologue__(1,perspShape)
            >6 Renderer::framePrologue(1,perspShape)
              >7 Renderer::framePrologue_camera(1,perspShape)
                >8 Renderer::gatherCameraShaders(cameraShaders.size=0,|persp|perspShape,liqEnvironmentShader)
          >5 ShaderMgr::exportShaderGraph()
            >6 ConvertShadingNetwork::exportShaderGraph()
              >7 ConvertShadingNetwork::beforeExport()
              >7 ConvertShadingNetwork::__export()
                >8 ConvertShadingNetwork::canShadingGroupExported(liquidSurface24SG)
                >8 Renderer::getValidShaderPlugsInShadingGroup()
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(pPlaneShape11,liquidSurface24SG,surfaceShader)
                  >9 ConvertShadingNetwork::canShaderExported(liquidSurface23)
                  >9 ConvertShadingNetwork::exportShaderBegin(liquidSurface23)
                  >9 liqShaderFactory::getShader(liquidSurface23)
                    >10 liqShader::liqShader(liquidSurface23)
                      >11 liqShaderFactory::getUniqueShaderHandler()
                      >11 liqTokenPointer:set(,0,0,0)
                      >11 liqGetSloInfo::setShaderNode(liquidSurface23)
                      >11 liqTokenPointer:set(liq_frequency,0,0,0)
                      >11 liqTokenPointer:set(liq_frequency,0,0,0)
                      >11 liqTokenPointer:set(,0,0,0)
                      >11 liqTokenPointer:set(texname,5,0,0)
                      >11 liqTokenPointer:set(liq_frequency,0,0,0)
                      >11 liqTokenPointer:set(texname,5,0,0)
                      >11 liqTokenPointer:set(,0,0,0)
                      >11 liqTokenPointer:set(texname0,5,0,0)
                      >11 liqTokenPointer:set(liq_frequency,0,0,0)
                      >11 liqTokenPointer:set(texname,5,0,0)
                      >11 liqTokenPointer:set(texname0,5,0,0)
                      >11 liqTokenPointer:set(,0,0,0)
                      >11 liqTokenPointer:set(texname2,5,0,0)
                      >11 liqTokenPointer:set(liq_frequency,0,0,0)
                      >11 liqTokenPointer:set(texname,5,0,0)
                      >11 liqTokenPointer:set(texname0,5,0,0)
                      >11 liqTokenPointer:set(texname2,5,0,0)
                      >11 liqTokenPointer:set(,0,0,0)
                      >11 liqShader::liqShaderParseVectorAttr(liquidSurface23,liq_c0,4)
                        >12 liqTokenPointer:set(liq_c0,4,0,0)
                      >11 liqTokenPointer:set(,0,0,0)
                      >11 liqShader::liqShaderParseVectorAttr(liquidSurface23,liq_p0,1)
                        >12 liqTokenPointer:set(liq_p0,1,0,0)
                      >11 liqTokenPointer:set(liq_frequency,0,0,0)
                      >11 liqTokenPointer:set(texname,5,0,0)
                      >11 liqTokenPointer:set(texname0,5,0,0)
                      >11 liqTokenPointer:set(texname2,5,0,0)
                      >11 liqTokenPointer:set(liq_c0,4,0,0)
                      >11 liqTokenPointer:set(liq_p0,1,0,0)
                      >11 liqTokenPointer:set(,0,0,0)
                      >11 liqShader::liqShaderParseVectorAttr(liquidSurface23,liq_v0,2)
                        >12 liqTokenPointer:set(liq_v0,2,0,0)
                      >11 liqTokenPointer:set(,0,0,0)
                      >11 liqShader::liqShaderParseVectorAttr(liquidSurface23,liq_n0,3)
                        >12 liqTokenPointer:set(liq_n0,3,0,0)
                      >11 liqTokenPointer:set(,0,0,0)
                      >11 liqShader::liqShaderParseMatrixAttr(liquidSurface23,liq_m0,7)
                        >12 liqTokenPointer:set(liq_m0,7,0,0)
                      >11 liqTokenPointer:set(liq_frequency,0,0,0)
                      >11 liqTokenPointer:set(texname,5,0,0)
                      >11 liqTokenPointer:set(texname0,5,0,0)
                      >11 liqTokenPointer:set(texname2,5,0,0)
                      >11 liqTokenPointer:set(liq_c0,4,0,0)
                      >11 liqTokenPointer:set(liq_p0,1,0,0)
                      >11 liqTokenPointer:set(liq_v0,2,0,0)
                      >11 liqTokenPointer:set(liq_n0,3,0,0)
                      >11 liqTokenPointer:set(liq_m0,7,0,0)
                      >11 liqTokenPointer:set(,0,0,0)
                      >11 liqShader::liqShaderParseMatrixAttr(liquidSurface23,liq_m1,7)
                        >12 liqTokenPointer:set(liq_m1,7,0,0)
                      >11 liqTokenPointer:set(,0,0,0)
                  >9 liqShader::write()
                    >10 liqShader::getName()
                    >10 shader_UserDefinedShader(liquidSurface23)
                      >11 liqShader::getShaderFileName()
                      >11 liqShader::getName()
                      >11 Renderer::shader_surface(liquidSurface23, tokenPointerArray)
                        >12 liqShader::getName()
                        >12 Renderer::_UserDefinedShader(liquidSurface23, tokenPointerArray)
                          >13 liqShader::getName()
                          >13 liqShader::getShaderFileName()
                  >9 ConvertShadingNetwork::exportShaderEnd(liquidSurface23)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(pPlaneShape11,liquidSurface24SG,displacementShader)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(pPlaneShape11,liquidSurface24SG,volumeShader)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(pPlaneShape11,liquidSurface24SG,liqShadowShader)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(pPlaneShape11,liquidSurface24SG,liqEnvironmentShader)
                >8 ConvertShadingNetwork::exportShadingGroupBegin(liquidSurface24SG)
                >8 ConvertShadingNetwork::outputShadingGroup(liquidSurface24SG)
                  >9 Visitor::outputShadingGroup(liquidSurface24SG)
                  >9 Visitor::outputShadingGroup(liquidSurface24SG)
                >8 ConvertShadingNetwork::exportShadingGroupEnd(liquidSurface24SG)
                >8 ConvertShadingNetwork::canShadingGroupExported(initialShadingGroup)
                >8 Renderer::getValidShaderPlugsInShadingGroup()
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(pPlaneShape16,initialShadingGroup,surfaceShader)
                  >9 ConvertShadingNetwork::canShaderExported(lambert2)
                  >9 ConvertShadingNetwork::exportShaderBegin(lambert2)
                  >9 ConvertShadingNetwork::convertShadingNetworkToRSL(lambert2,pPlaneShape16,surfaceShader)
                    >10 Visitor::initShaderData(lambert2,surfaceShader)
                    >10 Visitor::initShaderData(lambert2,surfaceShader)
                    >10 ConvertShadingNetwork::getUpstreamConvertibleNodes(lambert2, nodes, numConnections)
                      >11 ConvertShadingNetwork::nodeIsConvertible(lambert2)
                        >12 ShaderMgr::hasShaderType(lambert)
                      >11 ShaderMgr::getValidConnectionRef(lambert)
                      >11 ConvertShadingNetwork::convertibleConnection(lambert2.color)
                        >12 ConvertShadingNetwork::ensurePlugExists(lambert2.color)
                        >12 ConvertShadingNetwork::nodeIsConvertible(checker1)
                          >13 ShaderMgr::hasShaderType(checker)
                      >11 ConvertShadingNetwork::convertibleConnection(lambert2.transparency)
                        >12 ConvertShadingNetwork::ensurePlugExists(lambert2.transparency)
                      >11 ConvertShadingNetwork::convertibleConnection(lambert2.ambientColor)
                        >12 ConvertShadingNetwork::ensurePlugExists(lambert2.ambientColor)
                      >11 ConvertShadingNetwork::convertibleConnection(lambert2.incandescence)
                        >12 ConvertShadingNetwork::ensurePlugExists(lambert2.incandescence)
                      >11 ConvertShadingNetwork::convertibleConnection(lambert2.diffuse)
                        >12 ConvertShadingNetwork::ensurePlugExists(lambert2.diffuse)
                      >11 ConvertShadingNetwork::convertibleConnection(lambert2.outColor)
                        >12 ConvertShadingNetwork::ensurePlugExists(lambert2.outColor)
                        >12 ConvertShadingNetwork::nodeIsConvertible(initialShadingGroup)
                          >13 ShaderMgr::hasShaderType(shadingEngine)
                        >12 ConvertShadingNetwork::nodeIsConvertible(lambert2SG)
                          >13 ShaderMgr::hasShaderType(shadingEngine)
                      >11 ConvertShadingNetwork::convertibleConnection(lambert2.outTransparency)
                        >12 ConvertShadingNetwork::ensurePlugExists(lambert2.outTransparency)
                      >11 ConvertShadingNetwork::getUpstreamConvertibleNodes(checker1, nodes, numConnections)
                        >12 ConvertShadingNetwork::nodeIsConvertible(checker1)
                          >13 ShaderMgr::hasShaderType(checker)
                        >12 ShaderMgr::getValidConnectionRef(checker)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1R)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1R)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1G)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1G)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1B)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1B)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2R)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2R)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2G)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2G)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2B)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2B)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture2)
                            >14 ShaderMgr::hasShaderType(place2dTexture)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.uCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.uCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.vCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.vCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                          >13 ConvertShadingNetwork::nodeIsConvertible(lambert2)
                            >14 ShaderMgr::hasShaderType(lambert)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorB)
                        >12 ConvertShadingNetwork::getUpstreamConvertibleNodes(place2dTexture2, nodes, numConnections)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture2)
                            >14 ShaderMgr::hasShaderType(place2dTexture)
                          >13 ShaderMgr::getValidConnectionRef(place2dTexture)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture2.uvCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.uvCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture2.coverageU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.coverageU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture2.coverageV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.coverageV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture2.coverage)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.coverage)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture2.mirrorU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.mirrorU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture2.mirrorV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.mirrorV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture2.noiseU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.noiseU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture2.noiseV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.noiseV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture2.noiseUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.noiseUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture2.offsetU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.offsetU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture2.offsetV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.offsetV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture2.offset)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.offset)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture2.repeatU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.repeatU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture2.repeatV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.repeatV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture2.repeatUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.repeatUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture2.rotateFrame)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.rotateFrame)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture2.rotateUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.rotateUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture2.stagger)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.stagger)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture2.translateFrameU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.translateFrameU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture2.translateFrameV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.translateFrameV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture2.translateFrame)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.translateFrame)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture2.wrapU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.wrapU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture2.wrapV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.wrapV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture2.outUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.outUV)
                            >14 ConvertShadingNetwork::nodeIsConvertible(checker1)
                              >15 ShaderMgr::hasShaderType(checker)
                    >10 Visitor::preOutput(lambert2)
                    >10 Visitor::preOutput(lambert2)
                    >10 Visitor::outputBegin(lambert2)
                    >10 Visitor::outputBegin(lambert2)
                    >10 ConvertShadingNetwork::traverseGraphAndOutputNodeFunctions( nodes, numConnections)
                      >11 Visitor::outputUpstreamShader(place2dTexture2)
                        >12 ShaderOutputVisitor::_outputUpstreamShader(place2dTexture2,place2dTexture)
                          >13 Visitor::visitPlace2dTexture(place2dTexture2)
                            >14 OutputHelper::beginRSL(place2dTexture2)
                            >14 ShaderMgr::convertibleConnection(place2dTexture2.coverageU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture2.coverageU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.coverageU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture2.coverageV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture2.coverageV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.coverageV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture2.mirrorU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture2.mirrorU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.mirrorU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture2.mirrorV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture2.mirrorV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.mirrorV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture2.noiseU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture2.noiseU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.noiseU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture2.noiseV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture2.noiseV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.noiseV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture2.offsetU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture2.offsetU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.offsetU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture2.offsetV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture2.offsetV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.offsetV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture2.repeatU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture2.repeatU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.repeatU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture2.repeatV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture2.repeatV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.repeatV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture2.rotateFrame)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture2.rotateFrame)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.rotateFrame)
                            >14 ShaderMgr::convertibleConnection(place2dTexture2.rotateUV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture2.rotateUV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.rotateUV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture2.stagger)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture2.stagger)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.stagger)
                            >14 ShaderMgr::convertibleConnection(place2dTexture2.translateFrameU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture2.translateFrameU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.translateFrameU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture2.translateFrameV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture2.translateFrameV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.translateFrameV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture2.wrapU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture2.wrapU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.wrapU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture2.wrapV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture2.wrapV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.wrapV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture2.outUV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture2.outUV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.outUV)
                                >16 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                  >17 ShaderMgr::hasShaderType(checker)
                            >14 OutputHelper::endRSL()
                      >11 Visitor::outputUpstreamShader(place2dTexture2)
                        >12 ShaderOutputVisitor::_outputUpstreamShader(place2dTexture2,place2dTexture)
                          >13 Visitor::visitPlace2dTexture(place2dTexture2)
                            >14 OutputHelper::beginRSL(place2dTexture2)
                            >14 ShaderMgr::convertibleConnection(place2dTexture2.coverageU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture2.coverageU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.coverageU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture2.coverageV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture2.coverageV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.coverageV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture2.mirrorU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture2.mirrorU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.mirrorU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture2.mirrorV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture2.mirrorV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.mirrorV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture2.noiseU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture2.noiseU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.noiseU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture2.noiseV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture2.noiseV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.noiseV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture2.offsetU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture2.offsetU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.offsetU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture2.offsetV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture2.offsetV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.offsetV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture2.repeatU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture2.repeatU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.repeatU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture2.repeatV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture2.repeatV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.repeatV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture2.rotateFrame)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture2.rotateFrame)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.rotateFrame)
                            >14 ShaderMgr::convertibleConnection(place2dTexture2.rotateUV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture2.rotateUV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.rotateUV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture2.stagger)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture2.stagger)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.stagger)
                            >14 ShaderMgr::convertibleConnection(place2dTexture2.translateFrameU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture2.translateFrameU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.translateFrameU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture2.translateFrameV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture2.translateFrameV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.translateFrameV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture2.wrapU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture2.wrapU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.wrapU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture2.wrapV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture2.wrapV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.wrapV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture2.outUV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture2.outUV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.outUV)
                                >16 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                  >17 ShaderMgr::hasShaderType(checker)
                            >14 OutputHelper::endRSL()
                      >11 ShaderMgr::getValidConnectionRef(place2dTexture)
                      >11 ConvertShadingNetwork::decrementDownstreamConnections(place2dTexture2, nodes, numConnections, validConnections)
                      >11 ConvertShadingNetwork::getNodeVariables(place2dTexture2, validConnections, inputVars, outputVars)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture2.uvCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.uvCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture2.coverageU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.coverageU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture2.coverageV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.coverageV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture2.coverage)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.coverage)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture2.mirrorU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.mirrorU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture2.mirrorV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.mirrorV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture2.noiseU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.noiseU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture2.noiseV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.noiseV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture2.noiseUV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.noiseUV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture2.offsetU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.offsetU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture2.offsetV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.offsetV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture2.offset)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.offset)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture2.repeatU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.repeatU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture2.repeatV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.repeatV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture2.repeatUV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.repeatUV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture2.rotateFrame)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.rotateFrame)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture2.rotateUV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.rotateUV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture2.stagger)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.stagger)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture2.translateFrameU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.translateFrameU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture2.translateFrameV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.translateFrameV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture2.translateFrame)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.translateFrame)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture2.wrapU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.wrapU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture2.wrapV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.wrapV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture2.outUV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.outUV)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                        >12 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture2,outUV,place2dTexture2.outUV, outputVars)
                          >13 Visitor::addShaderMethodVariavles(2,place2dTexture2_outUV)
                          >13 Visitor::addShaderMethodVariavles(2,place2dTexture2_outUV)
                      >11 Visitor::addShaderMethodBody(place2dTexture2,,place2dTexture2_outUV124)
                      >11 Visitor::addShaderMethodBody(place2dTexture2,,place2dTexture2_outUV124)
                      >11 Visitor::outputUpstreamShader(checker1)
                        >12 ShaderOutputVisitor::_outputUpstreamShader(checker1,checker)
                          >13 Visitor::visitChecker(checker1)
                            >14 OutputHelper::beginRSL(checker1)
                            >14 ShaderMgr::convertibleConnection(checker1.alphaGain)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                            >14 ShaderMgr::convertibleConnection(checker1.alphaIsLuminance)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                            >14 ShaderMgr::convertibleConnection(checker1.alphaOffset)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                            >14 ShaderMgr::convertibleConnection(checker1.color1)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                            >14 ShaderMgr::convertibleConnection(checker1.color2)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                            >14 ShaderMgr::convertibleConnection(checker1.colorGain)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                            >14 ShaderMgr::convertibleConnection(checker1.colorOffset)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                            >14 ShaderMgr::convertibleConnection(checker1.contrast)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                            >14 ShaderMgr::convertibleConnection(checker1.defaultColor)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                            >14 ShaderMgr::convertibleConnection(checker1.filter)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                            >14 ShaderMgr::convertibleConnection(checker1.filterOffset)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                            >14 ShaderMgr::convertibleConnection(checker1.invert)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                            >14 ShaderMgr::convertibleConnection(checker1.uvCoord)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                                >16 ConvertShadingNetwork::nodeIsConvertible(place2dTexture2)
                                  >17 ShaderMgr::hasShaderType(place2dTexture)
                            >14 ShaderMgr::convertibleConnection(checker1.outAlpha)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                            >14 ShaderMgr::convertibleConnection(checker1.outColor)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                                >16 ConvertShadingNetwork::nodeIsConvertible(lambert2)
                                  >17 ShaderMgr::hasShaderType(lambert)
                            >14 OutputHelper::endRSL()
                      >11 Visitor::outputUpstreamShader(checker1)
                        >12 ShaderOutputVisitor::_outputUpstreamShader(checker1,checker)
                          >13 Visitor::visitChecker(checker1)
                            >14 OutputHelper::beginRSL(checker1)
                            >14 ShaderMgr::convertibleConnection(checker1.alphaGain)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                            >14 ShaderMgr::convertibleConnection(checker1.alphaIsLuminance)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                            >14 ShaderMgr::convertibleConnection(checker1.alphaOffset)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                            >14 ShaderMgr::convertibleConnection(checker1.color1)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                            >14 ShaderMgr::convertibleConnection(checker1.color2)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                            >14 ShaderMgr::convertibleConnection(checker1.colorGain)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                            >14 ShaderMgr::convertibleConnection(checker1.colorOffset)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                            >14 ShaderMgr::convertibleConnection(checker1.contrast)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                            >14 ShaderMgr::convertibleConnection(checker1.defaultColor)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                            >14 ShaderMgr::convertibleConnection(checker1.filter)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                            >14 ShaderMgr::convertibleConnection(checker1.filterOffset)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                            >14 ShaderMgr::convertibleConnection(checker1.invert)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                            >14 ShaderMgr::convertibleConnection(checker1.uvCoord)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                                >16 ConvertShadingNetwork::nodeIsConvertible(place2dTexture2)
                                  >17 ShaderMgr::hasShaderType(place2dTexture)
                            >14 ShaderMgr::convertibleConnection(checker1.outAlpha)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                            >14 ShaderMgr::convertibleConnection(checker1.outColor)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                                >16 ConvertShadingNetwork::nodeIsConvertible(lambert2)
                                  >17 ShaderMgr::hasShaderType(lambert)
                            >14 OutputHelper::endRSL()
                      >11 ShaderMgr::getValidConnectionRef(checker)
                      >11 ConvertShadingNetwork::decrementDownstreamConnections(checker1, nodes, numConnections, validConnections)
                      >11 ConvertShadingNetwork::getNodeVariables(checker1, validConnections, inputVars, outputVars)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1R)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1R)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1G)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1G)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1B)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1B)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2R)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2R)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2G)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2G)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2B)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2B)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture2)
                            >14 ShaderMgr::hasShaderType(place2dTexture)
                        >12 ConvertShadingNetwork::addNodeInputVariable(checker1.uvCoord, inputVars)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture2)
                            >14 ShaderMgr::hasShaderType(place2dTexture)
                          >13 ShaderMgr::getValidConnectionRef(place2dTexture)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.uCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.uCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.vCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.vCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                          >13 ConvertShadingNetwork::nodeIsConvertible(lambert2)
                            >14 ShaderMgr::hasShaderType(lambert)
                        >12 ConvertShadingNetwork::addNodeOutputVariable(checker1,outColor,checker1.outColor, outputVars)
                          >13 Visitor::addShaderMethodVariavles(3,checker1_outColor)
                          >13 Visitor::addShaderMethodVariavles(3,checker1_outColor)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorB)
                      >11 Visitor::addShaderMethodBody(checker1,place2dTexture2_outUV124,checker1_outColor124)
                      >11 Visitor::addShaderMethodBody(checker1,place2dTexture2_outUV124,checker1_outColor124)
                      >11 Visitor::outputUpstreamShader(lambert2)
                        >12 ShaderOutputVisitor::_outputUpstreamShader(lambert2,lambert)
                          >13 Visitor::visitLambert(lambert2)
                            >14 OutputHelper::beginRSL(lambert2)
                            >14 ShaderMgr::convertibleConnection(lambert2.color)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert2.color)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert2.color)
                                >16 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                  >17 ShaderMgr::hasShaderType(checker)
                            >14 ShaderMgr::convertibleConnection(lambert2.transparency)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert2.transparency)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert2.transparency)
                            >14 ShaderMgr::convertibleConnection(lambert2.ambientColor)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert2.ambientColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert2.ambientColor)
                            >14 ShaderMgr::convertibleConnection(lambert2.incandescence)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert2.incandescence)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert2.incandescence)
                            >14 ShaderMgr::convertibleConnection(lambert2.diffuse)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert2.diffuse)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert2.diffuse)
                            >14 ShaderMgr::convertibleConnection(lambert2.outColor)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert2.outColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert2.outColor)
                                >16 ConvertShadingNetwork::nodeIsConvertible(initialShadingGroup)
                                  >17 ShaderMgr::hasShaderType(shadingEngine)
                                >16 ConvertShadingNetwork::nodeIsConvertible(lambert2SG)
                                  >17 ShaderMgr::hasShaderType(shadingEngine)
                            >14 ShaderMgr::convertibleConnection(lambert2.outTransparency)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert2.outTransparency)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert2.outTransparency)
                            >14 OutputHelper::endRSL()
                      >11 Visitor::outputUpstreamShader(lambert2)
                        >12 ShaderOutputVisitor::_outputUpstreamShader(lambert2,lambert)
                          >13 Visitor::visitLambert(lambert2)
                            >14 OutputHelper::beginRSL(lambert2)
                            >14 ShaderMgr::convertibleConnection(lambert2.color)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert2.color)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert2.color)
                                >16 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                  >17 ShaderMgr::hasShaderType(checker)
                            >14 ShaderMgr::convertibleConnection(lambert2.transparency)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert2.transparency)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert2.transparency)
                            >14 ShaderMgr::convertibleConnection(lambert2.ambientColor)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert2.ambientColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert2.ambientColor)
                            >14 ShaderMgr::convertibleConnection(lambert2.incandescence)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert2.incandescence)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert2.incandescence)
                            >14 ShaderMgr::convertibleConnection(lambert2.diffuse)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert2.diffuse)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert2.diffuse)
                            >14 ShaderMgr::convertibleConnection(lambert2.outColor)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert2.outColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert2.outColor)
                                >16 ConvertShadingNetwork::nodeIsConvertible(initialShadingGroup)
                                  >17 ShaderMgr::hasShaderType(shadingEngine)
                                >16 ConvertShadingNetwork::nodeIsConvertible(lambert2SG)
                                  >17 ShaderMgr::hasShaderType(shadingEngine)
                            >14 ShaderMgr::convertibleConnection(lambert2.outTransparency)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert2.outTransparency)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert2.outTransparency)
                            >14 OutputHelper::endRSL()
                      >11 ShaderMgr::getValidConnectionRef(lambert)
                      >11 ConvertShadingNetwork::decrementDownstreamConnections(lambert2, nodes, numConnections, validConnections)
                      >11 ConvertShadingNetwork::getNodeVariables(lambert2, validConnections, inputVars, outputVars)
                        >12 ConvertShadingNetwork::convertibleConnection(lambert2.color)
                          >13 ConvertShadingNetwork::ensurePlugExists(lambert2.color)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                        >12 ConvertShadingNetwork::addNodeInputVariable(lambert2.color, inputVars)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                          >13 ShaderMgr::getValidConnectionRef(checker)
                        >12 ConvertShadingNetwork::convertibleConnection(lambert2.transparency)
                          >13 ConvertShadingNetwork::ensurePlugExists(lambert2.transparency)
                        >12 ConvertShadingNetwork::convertibleConnection(lambert2.ambientColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(lambert2.ambientColor)
                        >12 ConvertShadingNetwork::convertibleConnection(lambert2.incandescence)
                          >13 ConvertShadingNetwork::ensurePlugExists(lambert2.incandescence)
                        >12 ConvertShadingNetwork::convertibleConnection(lambert2.diffuse)
                          >13 ConvertShadingNetwork::ensurePlugExists(lambert2.diffuse)
                        >12 ConvertShadingNetwork::convertibleConnection(lambert2.outColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(lambert2.outColor)
                          >13 ConvertShadingNetwork::nodeIsConvertible(initialShadingGroup)
                            >14 ShaderMgr::hasShaderType(shadingEngine)
                          >13 ConvertShadingNetwork::nodeIsConvertible(lambert2SG)
                            >14 ShaderMgr::hasShaderType(shadingEngine)
                        >12 ConvertShadingNetwork::convertibleConnection(lambert2.outTransparency)
                          >13 ConvertShadingNetwork::ensurePlugExists(lambert2.outTransparency)
                      >11 Visitor::addShaderMethodBody(lambert2,checker1_outColor124,)
                      >11 Visitor::addShaderMethodBody(lambert2,checker1_outColor124,)
                    >10 ConvertShadingNetwork::outputShaderMethod()
                      >11 Visitor::outputShaderMethod()
                      >11 Visitor::outputShaderMethod()
                    >10 Visitor::outputEnd()
                    >10 Visitor::outputEnd()
                    >10 Visitor::postOutput()
                    >10 Visitor::postOutput()
                  >9 ConvertShadingNetwork::exportShaderEnd(lambert2)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(pPlaneShape16,initialShadingGroup,displacementShader)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(pPlaneShape16,initialShadingGroup,volumeShader)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(pPlaneShape16,initialShadingGroup,liqShadowShader)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(pPlaneShape16,initialShadingGroup,liqEnvironmentShader)
                >8 ConvertShadingNetwork::exportShadingGroupBegin(initialShadingGroup)
                >8 ConvertShadingNetwork::outputShadingGroup(initialShadingGroup)
                  >9 Visitor::outputShadingGroup(initialShadingGroup)
                  >9 Visitor::outputShadingGroup(initialShadingGroup)
                >8 ConvertShadingNetwork::exportShadingGroupEnd(initialShadingGroup)
                >8 ConvertShadingNetwork::canShadingGroupExported(initialShadingGroup)
              >7  ConvertShadingNetwork::afterExport()
          >5 liqRibTranslatorNew::worldPrologue__(perspShape)
            >6 Renderer::worldPrologue(perspShape)
          >5 liqRibTranslatorNew::lightBlock__(perspShape)
            >6 Renderer::writeLight_pre(|pointLight1|pointLightShape1,perspShape)
            >6 liqRibObj::writeObject(,perspShape,0)
              >7 liqRibLightData::write(,job=perspShape,0)
                >8 Helper::RiBeginRef()
                >8 liqRibLightData::_write(job=perspShape)
                  >9 Renderer::exportPointLight(pointlight,pointLightShape1,...)
                    >10 addLightGroupForLight(|pointLight1|pointLightShape1)
                >8 Helper::RiEndRef()
            >6 Renderer::writeLight_post(|pointLight1|pointLightShape1,perspShape)
            >6 Renderer::writeLight_pre(|pointLight2|pointLightShape2,perspShape)
            >6 liqRibObj::writeObject(,perspShape,0)
              >7 liqRibLightData::write(,job=perspShape,0)
                >8 Helper::RiBeginRef()
                >8 liqRibLightData::_write(job=perspShape)
                  >9 Renderer::exportPointLight(pointlight,pointLightShape2,...)
                    >10 addLightGroupForLight(|pointLight2|pointLightShape2)
                >8 Helper::RiEndRef()
            >6 Renderer::writeLight_post(|pointLight2|pointLightShape2,perspShape)
          >5 liqRibTranslatorNew::coordSysBlock__(perspShape)
          >5 liqRibTranslatorNew::objectBlock__(perspShape)
            >6 liqRibTranslatorNew::objectBlock_data(perspShape)
              >7 liqRibTranslatorNew::getShadowSetObject(perspShape)
              >7 liqRibTranslatorNew::oneObjectBlock_data(|pPlane2|pPlaneShape11,perspShape)
                >8 Renderer::exportOneObject_data(|pPlane2|pPlaneShape11,perspShape)
                  >9 Renderer::_writeObject(|pPlane2|pPlaneShape11,perspShape,0,0,0)
                    >10 liqRibObj::writeObject(E:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.1.rib,perspShape,0)
                      >11 liqRibMeshData::write(E:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.1.rib,job=perspShape,0)
                        >12 liqRibData::getFullPathName()
                        >12 Renderer::write(|pPlane2|pPlaneShape11,E:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.1.rib,perspShape,ref=0)
                          >13 liqRibData::getFullPathName()
                          >13 _write(|pPlane2|pPlaneShape11,perspShape)
                            >14 liqRibClipPlaneData::find(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                            >14 liqRibData::getFullPathName()
                            >14 _exportVertexFromNodePlug(|pPlane2|pPlaneShape11,0)
                              >15 liqTokenPointer:set(P,1,4,0)
              >7 liqRibTranslatorNew::oneObjectBlock_data(|pPlane7|pPlaneShape16,perspShape)
                >8 Renderer::exportOneObject_data(|pPlane7|pPlaneShape16,perspShape)
                  >9 Renderer::_writeObject(|pPlane7|pPlaneShape16,perspShape,0,0,0)
                    >10 liqRibObj::writeObject(E:/MyDocuments/maya/projects/default/rib/_pPlane7_pPlaneShape16.1.rib,perspShape,0)
                      >11 liqRibMeshData::write(E:/MyDocuments/maya/projects/default/rib/_pPlane7_pPlaneShape16.1.rib,job=perspShape,0)
                        >12 liqRibData::getFullPathName()
                        >12 Renderer::write(|pPlane7|pPlaneShape16,E:/MyDocuments/maya/projects/default/rib/_pPlane7_pPlaneShape16.1.rib,perspShape,ref=0)
                          >13 liqRibData::getFullPathName()
                          >13 _write(|pPlane7|pPlaneShape16,perspShape)
                            >14 liqRibClipPlaneData::find(|pPlane7|pPlaneShape16,|pPlane7|pPlaneShape16,0)
                            >14 liqRibData::getFullPathName()
                            >14 _exportVertexFromNodePlug(|pPlane7|pPlaneShape16,0)
                              >15 liqTokenPointer:set(P,1,4,0)
              >7 liqRibTranslatorNew::oneObjectBlock_data(|pPlane8|pPlaneShape17,perspShape)
                >8 Renderer::exportOneObject_data(|pPlane8|pPlaneShape17,perspShape)
                  >9 Renderer::_writeObject(|pPlane8|pPlaneShape17,perspShape,0,0,0)
                    >10 liqRibObj::writeObject(E:/MyDocuments/maya/projects/default/rib/_pPlane8_pPlaneShape17.1.rib,perspShape,0)
                      >11 liqRibMeshData::write(E:/MyDocuments/maya/projects/default/rib/_pPlane8_pPlaneShape17.1.rib,job=perspShape,0)
                        >12 liqRibData::getFullPathName()
                        >12 Renderer::write(|pPlane8|pPlaneShape17,E:/MyDocuments/maya/projects/default/rib/_pPlane8_pPlaneShape17.1.rib,perspShape,ref=0)
                          >13 liqRibData::getFullPathName()
                          >13 _write(|pPlane8|pPlaneShape17,perspShape)
                            >14 liqRibClipPlaneData::find(|pPlane8|pPlaneShape17,|pPlane8|pPlaneShape17,0)
                            >14 liqRibData::getFullPathName()
                            >14 _exportVertexFromNodePlug(|pPlane8|pPlaneShape17,0)
                              >15 liqTokenPointer:set(P,1,4,0)
            >6 liqRibTranslatorNew::objectBlock_reference(perspShape)
              >7 liqRibTranslatorNew::preGeometryMel()
              >7 liqRibTranslatorNew::getShadowSetObject(perspShape)
              >7 liqRibTranslatorNew::oneObjectBlock_reference(|pPlane2|pPlaneShape11,perspShape)
                >8 Renderer::oneObjectBlock_reference_attribute_begin(|pPlane2|pPlaneShape11,perspShape)
                >8 Renderer::oneObjectBlock_reference_attribute_block0(|pPlane2|pPlaneShape11,perspShape)
                >8 liqRibTranslatorNew::tRiIlluminate(perspShape,|pPlane2|pPlaneShape11)
                  >9 Renderer::exportLightLinks(perspShape,|pPlane2|pPlaneShape11,lightedByWhichLightShapes.size=2)
                >8 liqRibTranslatorNew::checkSurfaceShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                >8 liqRibTranslatorNew::checkDisplacementShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                >8 liqRibTranslatorNew::checkVolumeShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                >8 Renderer::oneObjectBlock_reference_attribute_block1(|pPlane2|pPlaneShape11,perspShape)
                >8 liqRibTranslatorNew::writeShader_(1,|pPlane2|pPlaneShape11,v=0,s=1,c=0,,|pPlane2|pPlaneShape11,perspShape)
                  >9 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_RegularShader(|pPlane2|pPlaneShape11,perspShape)
                >8 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|pPlane2|pPlaneShape11)
                >8 Renderer::exportOneObject_reference(|pPlane2|pPlaneShape11,perspShape)
                  >9 liqRibData::getFullPathName()
                  >9 liqRibData::getFullPathName()
                  >9 liqRibData::getFullPathName()
                >8 Renderer::oneObjectBlock_reference_attribute_end(|pPlane2|pPlaneShape11,perspShape)
              >7 liqRibTranslatorNew::oneObjectBlock_reference(|pPlane7|pPlaneShape16,perspShape)
                >8 Renderer::oneObjectBlock_reference_attribute_begin(|pPlane7|pPlaneShape16,perspShape)
                >8 Renderer::oneObjectBlock_reference_attribute_block0(|pPlane7|pPlaneShape16,perspShape)
                >8 liqRibTranslatorNew::tRiIlluminate(perspShape,|pPlane7|pPlaneShape16)
                  >9 Renderer::exportLightLinks(perspShape,|pPlane7|pPlaneShape16,lightedByWhichLightShapes.size=1)
                >8 liqRibTranslatorNew::checkSurfaceShader(|pPlane7|pPlaneShape16,|pPlane7|pPlaneShape16,,,)
                >8 liqRibTranslatorNew::checkDisplacementShader(|pPlane7|pPlaneShape16,|pPlane7|pPlaneShape16,,,)
                >8 liqRibTranslatorNew::checkVolumeShader(|pPlane7|pPlaneShape16,|pPlane7|pPlaneShape16,,,)
                >8 Renderer::oneObjectBlock_reference_attribute_block1(|pPlane7|pPlaneShape16,perspShape)
                >8 liqRibTranslatorNew::writeShader_(1,|pPlane7|pPlaneShape16,v=0,s=0,c=0,,|pPlane7|pPlaneShape16,perspShape)
                  >9 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|pPlane7|pPlaneShape16,|pPlane7|pPlaneShape16,0)
                >8 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|pPlane7|pPlaneShape16)
                >8 Renderer::exportOneObject_reference(|pPlane7|pPlaneShape16,perspShape)
                  >9 liqRibData::getFullPathName()
                  >9 liqRibData::getFullPathName()
                  >9 liqRibData::getFullPathName()
                >8 Renderer::oneObjectBlock_reference_attribute_end(|pPlane7|pPlaneShape16,perspShape)
              >7 liqRibTranslatorNew::oneObjectBlock_reference(|pPlane8|pPlaneShape17,perspShape)
                >8 Renderer::oneObjectBlock_reference_attribute_begin(|pPlane8|pPlaneShape17,perspShape)
                >8 Renderer::oneObjectBlock_reference_attribute_block0(|pPlane8|pPlaneShape17,perspShape)
                >8 liqRibTranslatorNew::tRiIlluminate(perspShape,|pPlane8|pPlaneShape17)
                  >9 Renderer::exportLightLinks(perspShape,|pPlane8|pPlaneShape17,lightedByWhichLightShapes.size=1)
                >8 liqRibTranslatorNew::checkSurfaceShader(|pPlane8|pPlaneShape17,|pPlane8|pPlaneShape17,,,)
                >8 liqRibTranslatorNew::checkDisplacementShader(|pPlane8|pPlaneShape17,|pPlane8|pPlaneShape17,,,)
                >8 liqRibTranslatorNew::checkVolumeShader(|pPlane8|pPlaneShape17,|pPlane8|pPlaneShape17,,,)
                >8 Renderer::oneObjectBlock_reference_attribute_block1(|pPlane8|pPlaneShape17,perspShape)
                >8 liqRibTranslatorNew::writeShader_(1,|pPlane8|pPlaneShape17,v=0,s=0,c=0,,|pPlane8|pPlaneShape17,perspShape)
                  >9 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|pPlane8|pPlaneShape17,|pPlane8|pPlaneShape17,0)
                >8 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|pPlane8|pPlaneShape17)
                >8 Renderer::exportOneObject_reference(|pPlane8|pPlaneShape17,perspShape)
                  >9 liqRibData::getFullPathName()
                  >9 liqRibData::getFullPathName()
                  >9 liqRibData::getFullPathName()
                >8 Renderer::oneObjectBlock_reference_attribute_end(|pPlane8|pPlaneShape17,perspShape)
          >5 liqRibTranslatorNew::worldEpilogue__()
            >6 liqRibTranslator::worldEpilogue()
              >7 Renderer::worldEpilogue()
          >5 liqRibTranslatorNew::frameEpilogue__(1)
            >6 Renderer::frameEpilogue(1)
          >5 liqRibTranslatorNew::ribEpilogue__(perspShape)
            >6 Renderer::ribPrologue_end(perspShape)
              >7 Renderer::cookInstanceGroup()
        >4 Renderer::HeroPassEnd(perspShape)
      >3 liqRenderScript::addJob(job.title=test_shader_plFrame0,0)
        >4 liqRenderScript::popNextJobID()
      >3 liqRibTranslatorNew::postActions(defaultRenderLayer)
  >1 RendererMgr::test()
  >1 RendererMgr::epilogue()
    >2 Renderer::closeLog()(but do nothing now)
  >1 RendererMgr::uninstall()
  >1 RendererMgr::deleteFactory()
