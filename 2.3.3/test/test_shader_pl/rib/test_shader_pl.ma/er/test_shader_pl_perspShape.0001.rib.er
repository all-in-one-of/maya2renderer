//### SCENE BEGIN ###
eiContext *CONTEXT = ei_create_context();
ei_context(CONTEXT);
//ei_set_connection( &(MayaConnection::getInstance()->connection.base );
ei_verbose( 6 );
ei_link( "eiIMG" );
ei_link( "eiSHADER" );
ei_link( "eiSHADER_maya" );
//----------------phong_shader_for_test begin---
ei_shader("phong_shader_for_test");
ei_shader_param_string("desc","plastic");
ei_shader_param_vector("Cs",1,0.2,0.3);
ei_shader_param_vector("Kd",0.7,1,1);
ei_shader_param_scalar("Ks",1);
ei_shader_param_scalar("roughness",0.2);
ei_end_shader();
ei_shader("opaque_shadow_for_test");
ei_shader_param_string("desc","opaque");
ei_end_shader();
ei_material("phong_mtl_for_test");
ei_add_surface("phong_shader_for_test");
ei_add_shadow("opaque_shadow_for_test");
ei_end_material();
//----------------phong_shader_for_test end ---
//    Generated by Liquid v2.3.5 (buildtime=14:59:24.04)
//    Scene : E:/MyDocuments/maya/projects/default/test_shader_pl
//    User  : admin
//    Time  : Fri Mar 30 15:41:41 2012


//############################### option #
ei_options("perspShape_option");
ei_contrast(0.05,0.05,0.05,0.05);
ei_samples(0,2);
ei_filter(4,3);
//transform motion=0, deform motion=0
ei_motion(0);
ei_trace_depth(4,4,4);
ei_displace(0);
ei_face(3);
ei_end_options();
// maya settings: focal=35, aperture = 36, aspect=1.33333
//Depth of Field on camera "|persp|perspShape" is turned off in Maya

//############################### camera #
ei_camera("|persp|perspShape_object");
ei_output("E:/MyDocuments/maya/projects/default/rmanpix/test_shader_pl_perspShape_1.bmp","bmp",1);
ei_output_variable("color",10);
ei_end_output();
ei_focal(35);
ei_aperture(36);
ei_aspect(1.33333);
ei_resolution(768,576);
ei_clip(0.1,1000);
ei_end_camera();
//----------------------------------
ei_instance("|persp|perspShape");
ei_element("|persp|perspShape_object");
ei_transform(0.999263,0,-0.0383878,0,   -0.0371378,0.25311,-0.966724,0,   0.00971635,0.967437,0.252924,0,   -1.45174,24.2842,6.4667,1);
ei_end_instance();
//
// shader(maya_lambert_transparent,, ...)
ei_shader("liquidSurface23");
ei_shader_param_string( "desc","maya_lambert_transparent");
ei_shader_param_scalar("liq_frequency",8.5);
ei_shader_param_string("texname",.tex);
ei_shader_param_string("texname0",E:/check12.bmp.tex);
ei_shader_param_string("texname2",E:/dev/Autodesk/maya/myplugin/project/liquid_/2.3.3/test/test_rm_texture/textures/check12.bmp.tex);
ei_shader_param_vector("liq_c0",1,1,1);
ei_shader_param_vector("liq_p0",2,2,2);
ei_shader_param_vector("liq_v0",3,3,3);
ei_shader_param_vector("liq_n0",4,4,4);
//matrix:0,0,0,00,0,0,00,0,0,00,0,0,0
//matrix:0,1,2,34,5,6,78,9,10,1112,13,14,15
ei_end_shader();
ei_material("liquidSurface24SG");
ei_add_surface("liquidSurface23");
ei_end_material();
ei_shader("place2dTexture2");
ei_shader_param_string("desc", "maya_place2dTexture");
ei_shader_param_scalar("coverageU", 1);
ei_shader_param_scalar("coverageV", 1);
ei_shader_param_bool("mirrorU", 0);
ei_shader_param_bool("mirrorV", 0);
ei_shader_param_scalar("noiseU", 0);
ei_shader_param_scalar("noiseV", 0);
ei_shader_param_scalar("offsetU", 0);
ei_shader_param_scalar("offsetV", 0);
ei_shader_param_scalar("repeatU", 5);
ei_shader_param_scalar("repeatV", 5);
ei_shader_param_scalar("rotateFrame", 0);
ei_shader_param_scalar("rotateUV", 0);
ei_shader_param_bool("stagger", 0);
ei_shader_param_scalar("translateFrameU", 0);
ei_shader_param_scalar("translateFrameV", 0);
ei_shader_param_scalar("wrapU", 1);
ei_shader_param_scalar("wrapV", 1);
ei_shader_param_vector("outUV", 0, 0, 4.5499e+174);
ei_end_shader();

ei_shader("checker1");
ei_shader_param_string("desc", "maya_checker");
ei_shader_param_scalar("alphaGain", 1);
ei_shader_param_bool("alphaIsLuminance", 0);
ei_shader_param_scalar("alphaOffset", 0);
ei_shader_param_vector("color1", 1, 1, 1);
ei_shader_param_vector("color2", 0, 0, 0);
ei_shader_param_vector("colorGain", 1, 1, 1);
ei_shader_param_vector("colorOffset", 0, 0, 0);
ei_shader_param_scalar("contrast", 1);
ei_shader_param_vector("defaultColor", 0.5, 0.5, 0.5);
ei_shader_param_scalar("filter", 1);
ei_shader_param_scalar("filterOffset", 0);
ei_shader_param_bool("invert", 0);
ei_shader_link_param("uvCoord", "place2dTexture2", "outUV");
ei_shader_param_scalar("outAlpha", 0.5);
ei_shader_param_vector("outColor", 0.5, 0.5, 0.5);
ei_end_shader();

ei_shader("lambert2");
ei_shader_param_string("desc", "maya_lambert_transparent");
ei_shader_link_param("Cs", "checker1", "outColor");
ei_shader_param_vector("transparency", 0, 0, 0);
ei_shader_param_vector("ambientColor", 0, 0, 0);
ei_shader_param_vector("incandescence", 0, 0, 0);
ei_shader_param_scalar("diffusion", 0.8);
ei_shader_param_vector("outColor", 0, 0, 0);
ei_shader_param_vector("outTransparency", 0, 0, 0);
ei_end_shader();

ei_material("initialShadingGroup");
ei_add_surface("lambert2");
ei_end_material();

//worldPrologue

// Renderer::exportLight("_pointLight1_pointLightShape1");

// Renderer::exportPointLight()
ei_shader("|pointLight1|pointLightShape1_shader");
ei_shader_param_string("desc","pointlight");
ei_shader_param_vector("lightcolor",1,1,1);
ei_shader_param_scalar("intensity",1);
ei_end_shader();
ei_light("|pointLight1|pointLightShape1_object");
ei_add_light("|pointLight1|pointLightShape1_shader" );
ei_origin(0,5.23026,0);
ei_end_light();
ei_instance("|pointLight1|pointLightShape1");
ei_element("|pointLight1|pointLightShape1_object");
ei_end_instance();

// Renderer::exportLight("_pointLight2_pointLightShape2");

// Renderer::exportPointLight()
ei_shader("|pointLight2|pointLightShape2_shader");
ei_shader_param_string("desc","pointlight");
ei_shader_param_vector("lightcolor",1,1,1);
ei_shader_param_scalar("intensity",1);
ei_end_shader();
ei_light("|pointLight2|pointLightShape2_object");
ei_add_light("|pointLight2|pointLightShape2_shader" );
ei_origin(-5.18346,1.22941,0);
ei_end_light();
ei_instance("|pointLight2|pointLightShape2");
ei_element("|pointLight2|pointLightShape2_object");
ei_end_instance();

// Renderer::exportOneGeometry_Mesh(|pPlane2|pPlaneShape11,0,0)

//############################### mesh #
ei_object("pPlaneShape11_object","poly");
{
eiTag tag;
//### vertex positions, fnMesh.numVertices()=4
tag = ei_tab(EI_DATA_TYPE_VECTOR, 1024);
//tag=272
ei_pos_list(tag);
ei_tab_add_vector(-0.5,-1.11022e-016,0.5);
ei_tab_add_vector(0.5,-1.11022e-016,0.5);
ei_tab_add_vector(-0.5,1.11022e-016,-0.5);
ei_tab_add_vector(0.5,1.11022e-016,-0.5);
ei_end_tab();
//vertex normals are not output temporarily.
//### N
tag = eiNULL_TAG;
ei_declare("N",2,5, &tag);
tag = ei_tab(EI_DATA_TYPE_VECTOR, 1024);
//tag=274
ei_variable("N", &tag);
ei_tab_add_vector(0,1,2.22045e-016);
ei_tab_add_vector(0,1,2.22045e-016);
ei_tab_add_vector(0,1,2.22045e-016);
ei_tab_add_vector(0,1,2.22045e-016);
ei_end_tab();
//### UV(map1), size=4
tag = eiNULL_TAG;
ei_declare("u",2,5, &tag);
tag = ei_tab(EI_DATA_TYPE_SCALAR, 1024);
//tag=276
ei_variable("u", &tag);
ei_tab_add_scalar(0);
ei_tab_add_scalar(1);
ei_tab_add_scalar(0);
ei_tab_add_scalar(1);
ei_end_tab();
tag = eiNULL_TAG;
ei_declare("v",2,5, &tag);
tag = ei_tab(EI_DATA_TYPE_SCALAR, 1024);
//tag=278
ei_variable("v", &tag);
ei_tab_add_scalar(0);
ei_tab_add_scalar(0);
ei_tab_add_scalar(1);
ei_tab_add_scalar(1);
ei_end_tab();
//### triangles, size=[1, 1]
tag = ei_tab(EI_DATA_TYPE_INDEX, 1024);
//tag=280
ei_triangle_list(tag);
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(2);
ei_tab_add_index(1);
ei_tab_add_index(3);
ei_end_tab();
}//pPlaneShape11_object
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|pPlane7|pPlaneShape16,0,0)

//############################### mesh #
ei_object("pPlaneShape16_object","poly");
{
eiTag tag;
//### vertex positions, fnMesh.numVertices()=4
tag = ei_tab(EI_DATA_TYPE_VECTOR, 1024);
//tag=283
ei_pos_list(tag);
ei_tab_add_vector(-0.5,-1.11022e-016,0.5);
ei_tab_add_vector(0.5,-1.11022e-016,0.5);
ei_tab_add_vector(-0.5,1.11022e-016,-0.5);
ei_tab_add_vector(0.5,1.11022e-016,-0.5);
ei_end_tab();
//vertex normals are not output temporarily.
//### N
tag = eiNULL_TAG;
ei_declare("N",2,5, &tag);
tag = ei_tab(EI_DATA_TYPE_VECTOR, 1024);
//tag=285
ei_variable("N", &tag);
ei_tab_add_vector(0,1,2.22045e-016);
ei_tab_add_vector(0,1,2.22045e-016);
ei_tab_add_vector(0,1,2.22045e-016);
ei_tab_add_vector(0,1,2.22045e-016);
ei_end_tab();
//### UV(map1), size=4
tag = eiNULL_TAG;
ei_declare("u",2,5, &tag);
tag = ei_tab(EI_DATA_TYPE_SCALAR, 1024);
//tag=287
ei_variable("u", &tag);
ei_tab_add_scalar(0);
ei_tab_add_scalar(1);
ei_tab_add_scalar(0);
ei_tab_add_scalar(1);
ei_end_tab();
tag = eiNULL_TAG;
ei_declare("v",2,5, &tag);
tag = ei_tab(EI_DATA_TYPE_SCALAR, 1024);
//tag=289
ei_variable("v", &tag);
ei_tab_add_scalar(0);
ei_tab_add_scalar(0);
ei_tab_add_scalar(1);
ei_tab_add_scalar(1);
ei_end_tab();
//### triangles, size=[2]
tag = ei_tab(EI_DATA_TYPE_INDEX, 1024);
//tag=291
ei_triangle_list(tag);
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(2);
ei_tab_add_index(1);
ei_tab_add_index(3);
ei_end_tab();
}//pPlaneShape16_object
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|pPlane8|pPlaneShape17,0,0)

//############################### mesh #
ei_object("pPlaneShape17_object","poly");
{
eiTag tag;
//### vertex positions, fnMesh.numVertices()=4
tag = ei_tab(EI_DATA_TYPE_VECTOR, 1024);
//tag=294
ei_pos_list(tag);
ei_tab_add_vector(-0.5,-1.11022e-016,0.5);
ei_tab_add_vector(0.5,-1.11022e-016,0.5);
ei_tab_add_vector(-0.5,1.11022e-016,-0.5);
ei_tab_add_vector(0.5,1.11022e-016,-0.5);
ei_end_tab();
//vertex normals are not output temporarily.
//### N
tag = eiNULL_TAG;
ei_declare("N",2,5, &tag);
tag = ei_tab(EI_DATA_TYPE_VECTOR, 1024);
//tag=296
ei_variable("N", &tag);
ei_tab_add_vector(0,1,2.22045e-016);
ei_tab_add_vector(0,1,2.22045e-016);
ei_tab_add_vector(0,1,2.22045e-016);
ei_tab_add_vector(0,1,2.22045e-016);
ei_end_tab();
//### UV(map1), size=4
tag = eiNULL_TAG;
ei_declare("u",2,5, &tag);
tag = ei_tab(EI_DATA_TYPE_SCALAR, 1024);
//tag=298
ei_variable("u", &tag);
ei_tab_add_scalar(0);
ei_tab_add_scalar(1);
ei_tab_add_scalar(0);
ei_tab_add_scalar(1);
ei_end_tab();
tag = eiNULL_TAG;
ei_declare("v",2,5, &tag);
tag = ei_tab(EI_DATA_TYPE_SCALAR, 1024);
//tag=300
ei_variable("v", &tag);
ei_tab_add_scalar(0);
ei_tab_add_scalar(0);
ei_tab_add_scalar(1);
ei_tab_add_scalar(1);
ei_end_tab();
//### triangles, size=[2]
tag = ei_tab(EI_DATA_TYPE_INDEX, 1024);
//tag=302
ei_triangle_list(tag);
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(2);
ei_tab_add_index(1);
ei_tab_add_index(3);
ei_end_tab();
}//pPlaneShape17_object
ei_end_object();
//--------------------------
ei_instance("pPlaneShape11");
ei_add_material("liquidSurface24SG");
ei_element("pPlaneShape11_object");
ei_transform(9.6133,0,0,0,   0,1,0,0,   0,0,8.02763,0,   -2.76716,0,-0.566055,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
ei_end_instance();
//
//--------------------------
ei_instance("pPlaneShape16");
ei_add_material("initialShadingGroup");
ei_element("pPlaneShape16_object");
ei_transform(1,0,0,0,   0,1,0,0,   0,0,1,0,   0.746887,0,4.03431,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
ei_end_instance();
//
//--------------------------
ei_instance("pPlaneShape17");
ei_add_material("initialShadingGroup");
ei_element("pPlaneShape17_object");
ei_transform(1,0,0,0,   0,1,0,0,   0,0,1,0,   2.22142,0,4.08684,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
ei_end_instance();
//

//Renderer::worldEpilogue()
ei_instgroup("perspShape");
//camera
ei_add_instance("|persp|perspShape");
//lightlinks and meshes
ei_add_instance("|pointLight1|pointLightShape1");
ei_add_instance("|pointLight2|pointLightShape2");
ei_add_instance("pPlaneShape11");
//lightlinks and meshes
ei_add_instance("|pointLight2|pointLightShape2");
ei_add_instance("pPlaneShape16");
//lightlinks and meshes
ei_add_instance("|pointLight1|pointLightShape1");
ei_add_instance("pPlaneShape17");
ei_end_instgroup( );
// in batch render mode
ei_render("perspShape", "|persp|perspShape", "perspShape_option");
ei_delete_context(CONTEXT);
