>0 liqRibTranslator::doIt()-->if(checkSettings()==true)
  >1 RendererMgr::createFactory(renderman)
  >1 RendererMgr::install()
  >1 RendererMgr::prologue()
    >2 Renderer::openLog()(but do nothing now)
  >1 Renderer::canExport()
  >1 liqRibTranslatorNew::_doItNew(args,defaultRenderLayer)
    >2 liqRibTranslatorNew::_doItNewWithoutRenderScript(arg,defaultRenderLayer)
      >3 liqRibTranslator::verifyOutputDirectories()
      >3 liqRibTranslator::generateRenderScriptName()
      >3 liqRibTranslator::generateTempMayaSceneName()
      >3 tFrameScriptJobMgr::setCommonParameters(rm_spotlightFrame0)
      >3 liqRibTranslatorNew::processOneFrame(0, liqglo__)
        >4 liqShaderFactory::clearShaders()
        >4 liqRibTranslatorNew::buildJobs__()
          >5 liqShader::liqShader(liquidDisplacement1)
            >6 liqShaderFactory::getUniqueShaderHandler()
            >6 liqTokenPointer:set(,0,0,0)
            >6 liqGetSloInfo::setShaderNode(liquidDisplacement1)
            >6 liqTokenPointer:set(amplitude,0,0,0)
            >6 liqTokenPointer:set(amplitude,0,0,0)
            >6 liqTokenPointer:set(,0,0,0)
            >6 liqTokenPointer:set(frequency,0,0,0)
            >6 liqTokenPointer:set(amplitude,0,0,0)
            >6 liqTokenPointer:set(frequency,0,0,0)
            >6 liqTokenPointer:set(,0,0,0)
            >6 liqTokenPointer:set(details,0,0,0)
            >6 liqTokenPointer:set(amplitude,0,0,0)
            >6 liqTokenPointer:set(frequency,0,0,0)
            >6 liqTokenPointer:set(details,0,0,0)
            >6 liqTokenPointer:set(,0,0,0)
          >5 liqShader::buildJobs()
            >6 liqShader::scanExpressions(liquidDisplacement1)
          >5 liqShader::liqShader(liquidLight1)
            >6 liqShaderFactory::getUniqueShaderHandler()
            >6 liqTokenPointer:set(,0,0,0)
            >6 liqGetSloInfo::setShaderNode(liquidLight1)
            >6 liqTokenPointer:set(intensity,0,0,0)
            >6 liqTokenPointer:set(intensity,0,0,0)
            >6 liqTokenPointer:set(,0,0,0)
            >6 liqShader::liqShaderParseVectorAttr(liquidLight1,lightcolor,4)
              >7 liqTokenPointer:set(lightcolor,4,0,0)
            >6 liqTokenPointer:set(intensity,0,0,0)
            >6 liqTokenPointer:set(lightcolor,4,0,0)
            >6 liqTokenPointer:set(,0,0,0)
            >6 liqTokenPointer:set(coneangle,0,0,0)
            >6 liqTokenPointer:set(intensity,0,0,0)
            >6 liqTokenPointer:set(lightcolor,4,0,0)
            >6 liqTokenPointer:set(coneangle,0,0,0)
            >6 liqTokenPointer:set(,0,0,0)
            >6 liqTokenPointer:set(penumbraangle,0,0,0)
            >6 liqTokenPointer:set(intensity,0,0,0)
            >6 liqTokenPointer:set(lightcolor,4,0,0)
            >6 liqTokenPointer:set(coneangle,0,0,0)
            >6 liqTokenPointer:set(penumbraangle,0,0,0)
            >6 liqTokenPointer:set(,0,0,0)
            >6 liqTokenPointer:set(dropoff,0,0,0)
            >6 liqTokenPointer:set(,0,0,0)
            >6 liqTokenPointer:set(decay,0,0,0)
            >6 liqTokenPointer:set(intensity,0,0,0)
            >6 liqTokenPointer:set(lightcolor,4,0,0)
            >6 liqTokenPointer:set(coneangle,0,0,0)
            >6 liqTokenPointer:set(penumbraangle,0,0,0)
            >6 liqTokenPointer:set(dropoff,0,0,0)
            >6 liqTokenPointer:set(decay,0,0,0)
            >6 liqTokenPointer:set(,0,0,0)
            >6 liqTokenPointer:set(barndoors,0,0,0)
            >6 liqTokenPointer:set(,0,0,0)
            >6 liqTokenPointer:set(leftbarndoor,0,0,0)
            >6 liqTokenPointer:set(,0,0,0)
            >6 liqTokenPointer:set(rightbarndoor,0,0,0)
            >6 liqTokenPointer:set(intensity,0,0,0)
            >6 liqTokenPointer:set(lightcolor,4,0,0)
            >6 liqTokenPointer:set(coneangle,0,0,0)
            >6 liqTokenPointer:set(penumbraangle,0,0,0)
            >6 liqTokenPointer:set(dropoff,0,0,0)
            >6 liqTokenPointer:set(decay,0,0,0)
            >6 liqTokenPointer:set(barndoors,0,0,0)
            >6 liqTokenPointer:set(leftbarndoor,0,0,0)
            >6 liqTokenPointer:set(rightbarndoor,0,0,0)
            >6 liqTokenPointer:set(,0,0,0)
            >6 liqTokenPointer:set(topbarndoor,0,0,0)
            >6 liqTokenPointer:set(,0,0,0)
            >6 liqTokenPointer:set(bottombarndoor,0,0,0)
            >6 liqTokenPointer:set(,0,0,0)
            >6 liqTokenPointer:set(decayRegions,0,0,0)
            >6 liqTokenPointer:set(,0,0,0)
            >6 liqTokenPointer:set(startDistance1,0,0,0)
            >6 liqTokenPointer:set(intensity,0,0,0)
            >6 liqTokenPointer:set(lightcolor,4,0,0)
            >6 liqTokenPointer:set(coneangle,0,0,0)
            >6 liqTokenPointer:set(penumbraangle,0,0,0)
            >6 liqTokenPointer:set(dropoff,0,0,0)
            >6 liqTokenPointer:set(decay,0,0,0)
            >6 liqTokenPointer:set(barndoors,0,0,0)
            >6 liqTokenPointer:set(leftbarndoor,0,0,0)
            >6 liqTokenPointer:set(rightbarndoor,0,0,0)
            >6 liqTokenPointer:set(topbarndoor,0,0,0)
            >6 liqTokenPointer:set(bottombarndoor,0,0,0)
            >6 liqTokenPointer:set(decayRegions,0,0,0)
            >6 liqTokenPointer:set(startDistance1,0,0,0)
            >6 liqTokenPointer:set(,0,0,0)
            >6 liqTokenPointer:set(endDistance1,0,0,0)
            >6 liqTokenPointer:set(,0,0,0)
            >6 liqTokenPointer:set(startDistance2,0,0,0)
            >6 liqTokenPointer:set(,0,0,0)
            >6 liqTokenPointer:set(endDistance2,0,0,0)
            >6 liqTokenPointer:set(,0,0,0)
            >6 liqTokenPointer:set(startDistance3,0,0,0)
            >6 liqTokenPointer:set(,0,0,0)
            >6 liqTokenPointer:set(endDistance3,0,0,0)
            >6 liqTokenPointer:set(,0,0,0)
            >6 liqTokenPointer:set(startDistanceIntensity1,0,0,0)
            >6 liqTokenPointer:set(intensity,0,0,0)
            >6 liqTokenPointer:set(lightcolor,4,0,0)
            >6 liqTokenPointer:set(coneangle,0,0,0)
            >6 liqTokenPointer:set(penumbraangle,0,0,0)
            >6 liqTokenPointer:set(dropoff,0,0,0)
            >6 liqTokenPointer:set(decay,0,0,0)
            >6 liqTokenPointer:set(barndoors,0,0,0)
            >6 liqTokenPointer:set(leftbarndoor,0,0,0)
            >6 liqTokenPointer:set(rightbarndoor,0,0,0)
            >6 liqTokenPointer:set(topbarndoor,0,0,0)
            >6 liqTokenPointer:set(bottombarndoor,0,0,0)
            >6 liqTokenPointer:set(decayRegions,0,0,0)
            >6 liqTokenPointer:set(startDistance1,0,0,0)
            >6 liqTokenPointer:set(endDistance1,0,0,0)
            >6 liqTokenPointer:set(startDistance2,0,0,0)
            >6 liqTokenPointer:set(endDistance2,0,0,0)
            >6 liqTokenPointer:set(startDistance3,0,0,0)
            >6 liqTokenPointer:set(endDistance3,0,0,0)
            >6 liqTokenPointer:set(startDistanceIntensity1,0,0,0)
            >6 liqTokenPointer:set(,0,0,0)
            >6 liqTokenPointer:set(endDistanceIntensity1,0,0,0)
            >6 liqTokenPointer:set(,0,0,0)
            >6 liqTokenPointer:set(startDistanceIntensity2,0,0,0)
            >6 liqTokenPointer:set(,0,0,0)
            >6 liqTokenPointer:set(endDistanceIntensity2,0,0,0)
            >6 liqTokenPointer:set(,0,0,0)
            >6 liqTokenPointer:set(startDistanceIntensity3,0,0,0)
            >6 liqTokenPointer:set(,0,0,0)
            >6 liqTokenPointer:set(endDistanceIntensity3,0,0,0)
            >6 liqTokenPointer:set(,0,0,0)
            >6 liqTokenPointer:set(shadowbias,0,0,0)
            >6 liqTokenPointer:set(,0,0,0)
            >6 liqTokenPointer:set(shadowblur,0,0,0)
            >6 liqTokenPointer:set(,0,0,0)
            >6 liqTokenPointer:set(shadowsamples,0,0,0)
            >6 liqTokenPointer:set(,0,0,0)
            >6 liqTokenPointer:set(shadowfiltersize,0,0,0)
            >6 liqTokenPointer:set(intensity,0,0,0)
            >6 liqTokenPointer:set(lightcolor,4,0,0)
            >6 liqTokenPointer:set(coneangle,0,0,0)
            >6 liqTokenPointer:set(penumbraangle,0,0,0)
            >6 liqTokenPointer:set(dropoff,0,0,0)
            >6 liqTokenPointer:set(decay,0,0,0)
            >6 liqTokenPointer:set(barndoors,0,0,0)
            >6 liqTokenPointer:set(leftbarndoor,0,0,0)
            >6 liqTokenPointer:set(rightbarndoor,0,0,0)
            >6 liqTokenPointer:set(topbarndoor,0,0,0)
            >6 liqTokenPointer:set(bottombarndoor,0,0,0)
            >6 liqTokenPointer:set(decayRegions,0,0,0)
            >6 liqTokenPointer:set(startDistance1,0,0,0)
            >6 liqTokenPointer:set(endDistance1,0,0,0)
            >6 liqTokenPointer:set(startDistance2,0,0,0)
            >6 liqTokenPointer:set(endDistance2,0,0,0)
            >6 liqTokenPointer:set(startDistance3,0,0,0)
            >6 liqTokenPointer:set(endDistance3,0,0,0)
            >6 liqTokenPointer:set(startDistanceIntensity1,0,0,0)
            >6 liqTokenPointer:set(endDistanceIntensity1,0,0,0)
            >6 liqTokenPointer:set(startDistanceIntensity2,0,0,0)
            >6 liqTokenPointer:set(endDistanceIntensity2,0,0,0)
            >6 liqTokenPointer:set(startDistanceIntensity3,0,0,0)
            >6 liqTokenPointer:set(endDistanceIntensity3,0,0,0)
            >6 liqTokenPointer:set(shadowbias,0,0,0)
            >6 liqTokenPointer:set(shadowblur,0,0,0)
            >6 liqTokenPointer:set(shadowsamples,0,0,0)
            >6 liqTokenPointer:set(shadowfiltersize,0,0,0)
            >6 liqTokenPointer:set(,0,0,0)
            >6 liqShader::liqShaderParseVectorAttr(liquidLight1,shadowcolor,4)
              >7 liqTokenPointer:set(shadowcolor,4,0,0)
            >6 liqTokenPointer:set(,0,0,0)
            >6 liqShader::liqShaderParseVectorAttr(liquidLight1,shadowcolorSurf,4)
              >7 liqTokenPointer:set(shadowcolorSurf,4,0,0)
            >6 liqTokenPointer:set(,0,0,0)
            >6 liqTokenPointer:set(shadowcolorMix,0,0,0)
            >6 liqTokenPointer:set(,0,0,0)
            >6 liqTokenPointer:set(lightID,0,0,0)
            >6 liqTokenPointer:set(,0,0,0)
          >5 liqShader::buildJobs()
            >6 liqShader::scanExpressions(liquidLight1)
          >5 liqRibTranslatorNew::buildShadowJobs__()
            >6 tJobScriptMgr::buildShadowJob(thisJob___, 0)
            >6 tJobScriptMgr::buildShadowCameraJob(thisJob___, 0)
          >5 tRibCameraMgr::gatherDataForJob(liqglo___, ,jobList__,0,1)
          >5 liqRibTranslator::generateFileName(2,perspShape)
          >5 liqRibTranslator::generateFileName(3,perspShape)
        >4 liqRibTranslatorNew::calaculateSamplingTime(1)
        >4 liqRibTranslatorNew::scanScene__(1,0)
          >5 tJobScriptMgr::scanScene(1,0, htable__, count, returnStatus__)
            >6 liqRibClipPlaneData::insert(|spotLight1|spotLightShape1,lframe,0,3,0,matrix,,-1)
              >7 liqRibHT::hash(|spotLight1|spotLightShape1,0)
              >7 liqRibClipPlaneData::find(|spotLight1|spotLightShape1,|spotLight1|spotLightShape1,3)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|spotLight1|spotLightShape1,0,3,-1)
                >8 liqRibNode::parseVectorAttributes(spotLight1,[],2)
                >8 liqRibNode::parseVectorAttributes(spotLight1,[],3)
                >8 liqRibNode::parseVectorAttributes(spotLight1,[],4)
                >8 liqRibNode::findShadingGroup(|spotLight1|spotLightShape1,3)
                >8 liqRibObj::liqRibObj(|spotLight1|spotLightShape1,3)
                  >9 liqShader::liqShader()
                    >10 liqTokenPointer:set(,0,0,0)
                    >10 liqShaderFactory::getUniqueShaderHandler()
                  >9 liqRibLightData::liqRibLightData(|spotLight1|spotLightShape1)
                    >10 liqRibData::addAdditionalSurfaceParameters(spotLightShape1)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 liqRibClipPlaneData::insert(|spotLight2|spotLightShape2,lframe,0,3,1,matrix,,-1)
              >7 liqRibHT::hash(|spotLight2|spotLightShape2,1)
              >7 liqRibClipPlaneData::find(|spotLight2|spotLightShape2,|spotLight2|spotLightShape2,3)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|spotLight2|spotLightShape2,0,3,-1)
                >8 liqRibNode::parseVectorAttributes(spotLight2,[],2)
                >8 liqRibNode::parseVectorAttributes(spotLight2,[],3)
                >8 liqRibNode::parseVectorAttributes(spotLight2,[],4)
                >8 liqRibNode::findShadingGroup(|spotLight2|spotLightShape2,3)
                >8 liqRibObj::liqRibObj(|spotLight2|spotLightShape2,3)
                  >9 liqShader::liqShader()
                    >10 liqTokenPointer:set(,0,0,0)
                    >10 liqShaderFactory::getUniqueShaderHandler()
                  >9 liqRibLightData::liqRibLightData(|spotLight2|spotLightShape2)
                    >10 liqShaderFactory::getShader(liquidLight1)
                      >11 liqShader::liqShader(liquidLight1)
                        >12 liqShaderFactory::getUniqueShaderHandler()
                        >12 liqTokenPointer:set(,0,0,0)
                        >12 liqGetSloInfo::setShaderNode(liquidLight1)
                        >12 liqTokenPointer:set(intensity,0,0,0)
                        >12 liqTokenPointer:set(intensity,0,0,0)
                        >12 liqTokenPointer:set(,0,0,0)
                        >12 liqShader::liqShaderParseVectorAttr(liquidLight1,lightcolor,4)
                          >13 liqTokenPointer:set(lightcolor,4,0,0)
                        >12 liqTokenPointer:set(intensity,0,0,0)
                        >12 liqTokenPointer:set(lightcolor,4,0,0)
                        >12 liqTokenPointer:set(,0,0,0)
                        >12 liqTokenPointer:set(coneangle,0,0,0)
                        >12 liqTokenPointer:set(intensity,0,0,0)
                        >12 liqTokenPointer:set(lightcolor,4,0,0)
                        >12 liqTokenPointer:set(coneangle,0,0,0)
                        >12 liqTokenPointer:set(,0,0,0)
                        >12 liqTokenPointer:set(penumbraangle,0,0,0)
                        >12 liqTokenPointer:set(intensity,0,0,0)
                        >12 liqTokenPointer:set(lightcolor,4,0,0)
                        >12 liqTokenPointer:set(coneangle,0,0,0)
                        >12 liqTokenPointer:set(penumbraangle,0,0,0)
                        >12 liqTokenPointer:set(,0,0,0)
                        >12 liqTokenPointer:set(dropoff,0,0,0)
                        >12 liqTokenPointer:set(,0,0,0)
                        >12 liqTokenPointer:set(decay,0,0,0)
                        >12 liqTokenPointer:set(intensity,0,0,0)
                        >12 liqTokenPointer:set(lightcolor,4,0,0)
                        >12 liqTokenPointer:set(coneangle,0,0,0)
                        >12 liqTokenPointer:set(penumbraangle,0,0,0)
                        >12 liqTokenPointer:set(dropoff,0,0,0)
                        >12 liqTokenPointer:set(decay,0,0,0)
                        >12 liqTokenPointer:set(,0,0,0)
                        >12 liqTokenPointer:set(barndoors,0,0,0)
                        >12 liqTokenPointer:set(,0,0,0)
                        >12 liqTokenPointer:set(leftbarndoor,0,0,0)
                        >12 liqTokenPointer:set(,0,0,0)
                        >12 liqTokenPointer:set(rightbarndoor,0,0,0)
                        >12 liqTokenPointer:set(intensity,0,0,0)
                        >12 liqTokenPointer:set(lightcolor,4,0,0)
                        >12 liqTokenPointer:set(coneangle,0,0,0)
                        >12 liqTokenPointer:set(penumbraangle,0,0,0)
                        >12 liqTokenPointer:set(dropoff,0,0,0)
                        >12 liqTokenPointer:set(decay,0,0,0)
                        >12 liqTokenPointer:set(barndoors,0,0,0)
                        >12 liqTokenPointer:set(leftbarndoor,0,0,0)
                        >12 liqTokenPointer:set(rightbarndoor,0,0,0)
                        >12 liqTokenPointer:set(,0,0,0)
                        >12 liqTokenPointer:set(topbarndoor,0,0,0)
                        >12 liqTokenPointer:set(,0,0,0)
                        >12 liqTokenPointer:set(bottombarndoor,0,0,0)
                        >12 liqTokenPointer:set(,0,0,0)
                        >12 liqTokenPointer:set(decayRegions,0,0,0)
                        >12 liqTokenPointer:set(,0,0,0)
                        >12 liqTokenPointer:set(startDistance1,0,0,0)
                        >12 liqTokenPointer:set(intensity,0,0,0)
                        >12 liqTokenPointer:set(lightcolor,4,0,0)
                        >12 liqTokenPointer:set(coneangle,0,0,0)
                        >12 liqTokenPointer:set(penumbraangle,0,0,0)
                        >12 liqTokenPointer:set(dropoff,0,0,0)
                        >12 liqTokenPointer:set(decay,0,0,0)
                        >12 liqTokenPointer:set(barndoors,0,0,0)
                        >12 liqTokenPointer:set(leftbarndoor,0,0,0)
                        >12 liqTokenPointer:set(rightbarndoor,0,0,0)
                        >12 liqTokenPointer:set(topbarndoor,0,0,0)
                        >12 liqTokenPointer:set(bottombarndoor,0,0,0)
                        >12 liqTokenPointer:set(decayRegions,0,0,0)
                        >12 liqTokenPointer:set(startDistance1,0,0,0)
                        >12 liqTokenPointer:set(,0,0,0)
                        >12 liqTokenPointer:set(endDistance1,0,0,0)
                        >12 liqTokenPointer:set(,0,0,0)
                        >12 liqTokenPointer:set(startDistance2,0,0,0)
                        >12 liqTokenPointer:set(,0,0,0)
                        >12 liqTokenPointer:set(endDistance2,0,0,0)
                        >12 liqTokenPointer:set(,0,0,0)
                        >12 liqTokenPointer:set(startDistance3,0,0,0)
                        >12 liqTokenPointer:set(,0,0,0)
                        >12 liqTokenPointer:set(endDistance3,0,0,0)
                        >12 liqTokenPointer:set(,0,0,0)
                        >12 liqTokenPointer:set(startDistanceIntensity1,0,0,0)
                        >12 liqTokenPointer:set(intensity,0,0,0)
                        >12 liqTokenPointer:set(lightcolor,4,0,0)
                        >12 liqTokenPointer:set(coneangle,0,0,0)
                        >12 liqTokenPointer:set(penumbraangle,0,0,0)
                        >12 liqTokenPointer:set(dropoff,0,0,0)
                        >12 liqTokenPointer:set(decay,0,0,0)
                        >12 liqTokenPointer:set(barndoors,0,0,0)
                        >12 liqTokenPointer:set(leftbarndoor,0,0,0)
                        >12 liqTokenPointer:set(rightbarndoor,0,0,0)
                        >12 liqTokenPointer:set(topbarndoor,0,0,0)
                        >12 liqTokenPointer:set(bottombarndoor,0,0,0)
                        >12 liqTokenPointer:set(decayRegions,0,0,0)
                        >12 liqTokenPointer:set(startDistance1,0,0,0)
                        >12 liqTokenPointer:set(endDistance1,0,0,0)
                        >12 liqTokenPointer:set(startDistance2,0,0,0)
                        >12 liqTokenPointer:set(endDistance2,0,0,0)
                        >12 liqTokenPointer:set(startDistance3,0,0,0)
                        >12 liqTokenPointer:set(endDistance3,0,0,0)
                        >12 liqTokenPointer:set(startDistanceIntensity1,0,0,0)
                        >12 liqTokenPointer:set(,0,0,0)
                        >12 liqTokenPointer:set(endDistanceIntensity1,0,0,0)
                        >12 liqTokenPointer:set(,0,0,0)
                        >12 liqTokenPointer:set(startDistanceIntensity2,0,0,0)
                        >12 liqTokenPointer:set(,0,0,0)
                        >12 liqTokenPointer:set(endDistanceIntensity2,0,0,0)
                        >12 liqTokenPointer:set(,0,0,0)
                        >12 liqTokenPointer:set(startDistanceIntensity3,0,0,0)
                        >12 liqTokenPointer:set(,0,0,0)
                        >12 liqTokenPointer:set(endDistanceIntensity3,0,0,0)
                        >12 liqTokenPointer:set(,0,0,0)
                        >12 liqTokenPointer:set(shadowbias,0,0,0)
                        >12 liqTokenPointer:set(,0,0,0)
                        >12 liqTokenPointer:set(shadowblur,0,0,0)
                        >12 liqTokenPointer:set(,0,0,0)
                        >12 liqTokenPointer:set(shadowsamples,0,0,0)
                        >12 liqTokenPointer:set(,0,0,0)
                        >12 liqTokenPointer:set(shadowfiltersize,0,0,0)
                        >12 liqTokenPointer:set(intensity,0,0,0)
                        >12 liqTokenPointer:set(lightcolor,4,0,0)
                        >12 liqTokenPointer:set(coneangle,0,0,0)
                        >12 liqTokenPointer:set(penumbraangle,0,0,0)
                        >12 liqTokenPointer:set(dropoff,0,0,0)
                        >12 liqTokenPointer:set(decay,0,0,0)
                        >12 liqTokenPointer:set(barndoors,0,0,0)
                        >12 liqTokenPointer:set(leftbarndoor,0,0,0)
                        >12 liqTokenPointer:set(rightbarndoor,0,0,0)
                        >12 liqTokenPointer:set(topbarndoor,0,0,0)
                        >12 liqTokenPointer:set(bottombarndoor,0,0,0)
                        >12 liqTokenPointer:set(decayRegions,0,0,0)
                        >12 liqTokenPointer:set(startDistance1,0,0,0)
                        >12 liqTokenPointer:set(endDistance1,0,0,0)
                        >12 liqTokenPointer:set(startDistance2,0,0,0)
                        >12 liqTokenPointer:set(endDistance2,0,0,0)
                        >12 liqTokenPointer:set(startDistance3,0,0,0)
                        >12 liqTokenPointer:set(endDistance3,0,0,0)
                        >12 liqTokenPointer:set(startDistanceIntensity1,0,0,0)
                        >12 liqTokenPointer:set(endDistanceIntensity1,0,0,0)
                        >12 liqTokenPointer:set(startDistanceIntensity2,0,0,0)
                        >12 liqTokenPointer:set(endDistanceIntensity2,0,0,0)
                        >12 liqTokenPointer:set(startDistanceIntensity3,0,0,0)
                        >12 liqTokenPointer:set(endDistanceIntensity3,0,0,0)
                        >12 liqTokenPointer:set(shadowbias,0,0,0)
                        >12 liqTokenPointer:set(shadowblur,0,0,0)
                        >12 liqTokenPointer:set(shadowsamples,0,0,0)
                        >12 liqTokenPointer:set(shadowfiltersize,0,0,0)
                        >12 liqTokenPointer:set(,0,0,0)
                        >12 liqShader::liqShaderParseVectorAttr(liquidLight1,shadowcolor,4)
                          >13 liqTokenPointer:set(shadowcolor,4,0,0)
                        >12 liqTokenPointer:set(,0,0,0)
                        >12 liqShader::liqShaderParseVectorAttr(liquidLight1,shadowcolorSurf,4)
                          >13 liqTokenPointer:set(shadowcolorSurf,4,0,0)
                        >12 liqTokenPointer:set(,0,0,0)
                        >12 liqTokenPointer:set(shadowcolorMix,0,0,0)
                        >12 liqTokenPointer:set(,0,0,0)
                        >12 liqTokenPointer:set(lightID,0,0,0)
                        >12 liqTokenPointer:set(,0,0,0)
                    >10 liqTokenPointer:set(intensity,0,0,0)
                    >10 liqTokenPointer:set(lightcolor,4,0,0)
                    >10 liqTokenPointer:set(coneangle,0,0,0)
                    >10 liqTokenPointer:set(penumbraangle,0,0,0)
                    >10 liqTokenPointer:set(dropoff,0,0,0)
                    >10 liqTokenPointer:set(decay,0,0,0)
                    >10 liqTokenPointer:set(barndoors,0,0,0)
                    >10 liqTokenPointer:set(leftbarndoor,0,0,0)
                    >10 liqTokenPointer:set(rightbarndoor,0,0,0)
                    >10 liqTokenPointer:set(topbarndoor,0,0,0)
                    >10 liqTokenPointer:set(bottombarndoor,0,0,0)
                    >10 liqTokenPointer:set(decayRegions,0,0,0)
                    >10 liqTokenPointer:set(startDistance1,0,0,0)
                    >10 liqTokenPointer:set(endDistance1,0,0,0)
                    >10 liqTokenPointer:set(startDistance2,0,0,0)
                    >10 liqTokenPointer:set(endDistance2,0,0,0)
                    >10 liqTokenPointer:set(startDistance3,0,0,0)
                    >10 liqTokenPointer:set(endDistance3,0,0,0)
                    >10 liqTokenPointer:set(startDistanceIntensity1,0,0,0)
                    >10 liqTokenPointer:set(endDistanceIntensity1,0,0,0)
                    >10 liqTokenPointer:set(startDistanceIntensity2,0,0,0)
                    >10 liqTokenPointer:set(endDistanceIntensity2,0,0,0)
                    >10 liqTokenPointer:set(startDistanceIntensity3,0,0,0)
                    >10 liqTokenPointer:set(endDistanceIntensity3,0,0,0)
                    >10 liqTokenPointer:set(shadowbias,0,0,0)
                    >10 liqTokenPointer:set(shadowblur,0,0,0)
                    >10 liqTokenPointer:set(shadowsamples,0,0,0)
                    >10 liqTokenPointer:set(shadowfiltersize,0,0,0)
                    >10 liqTokenPointer:set(shadowcolor,4,0,0)
                    >10 liqTokenPointer:set(shadowcolorSurf,4,0,0)
                    >10 liqTokenPointer:set(shadowcolorMix,0,0,0)
                    >10 liqTokenPointer:set(lightID,0,0,0)
                    >10 liqTokenPointer:set(,0,0,0)
                    >10 liqRibData::addAdditionalSurfaceParameters(spotLightShape2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 liqRibClipPlaneData::insert(|pointLight1|pointLightShape1,lframe,0,3,2,matrix,,-1)
              >7 liqRibHT::hash(|pointLight1|pointLightShape1,2)
              >7 liqRibClipPlaneData::find(|pointLight1|pointLightShape1,|pointLight1|pointLightShape1,3)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|pointLight1|pointLightShape1,0,3,-1)
                >8 liqRibNode::parseVectorAttributes(pointLight1,[],2)
                >8 liqRibNode::parseVectorAttributes(pointLight1,[],3)
                >8 liqRibNode::parseVectorAttributes(pointLight1,[],4)
                >8 liqRibNode::findShadingGroup(|pointLight1|pointLightShape1,3)
                >8 liqRibObj::liqRibObj(|pointLight1|pointLightShape1,3)
                  >9 liqShader::liqShader()
                    >10 liqTokenPointer:set(,0,0,0)
                    >10 liqShaderFactory::getUniqueShaderHandler()
                  >9 liqRibLightData::liqRibLightData(|pointLight1|pointLightShape1)
                    >10 liqRibData::addAdditionalSurfaceParameters(pointLightShape1)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
          >5 tLocatorMgr::scanScene(1,0,htable__,count__,returnStatus__)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibClipPlaneData::insert(|pPlane1|pPlaneShape1,lframe,0,0,3,matrix,,-1)
              >7 liqRibHT::hash(|pPlane1|pPlaneShape1,3)
              >7 liqRibClipPlaneData::find(|pPlane1|pPlaneShape1,|pPlane1|pPlaneShape1,0)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|pPlane1|pPlaneShape1,0,0,-1)
                >8 liqRibNode::parseVectorAttributes(pPlane1,[],2)
                >8 liqRibNode::parseVectorAttributes(pPlane1,[],3)
                >8 liqRibNode::parseVectorAttributes(pPlane1,[],4)
                >8 liqRibNode::findShadingGroup(|pPlane1|pPlaneShape1,0)
                >8 liqRibNode::findShader(liquidDisplacement1SG)
                >8 liqRibNode::findDisp(liquidDisplacement1SG)
                >8 liqRibNode::findVolume(liquidDisplacement1SG)
                >8 liqRibNode::getColor(&shader,&color)
                >8 liqRibNode::getOpacity(&shader,&color)
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|pPlane1|pPlaneShape1,0)
                  >9 liqRibMeshData::liqRibMeshData(|pPlane1|pPlaneShape1)
                    >10 liqTokenPointer:set(P,1,4,0)
                    >10 liqTokenPointer:set(N,3,4,0)
                    >10 liqTokenPointer:set(st,0,4,2)
                    >10 liqTokenPointer:set(st,0,4,2)
                    >10 liqTokenPointer:set(P,1,4,0)
                    >10 liqTokenPointer:set(P,1,4,0)
                    >10 liqTokenPointer:set(N,3,4,0)
                    >10 liqTokenPointer:set(P,1,4,0)
                    >10 liqTokenPointer:set(N,3,4,0)
                    >10 liqTokenPointer:set(st,0,4,2)
                    >10 liqRibData::addAdditionalSurfaceParameters(pPlaneShape1)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibClipPlaneData::insert(|pPlane3|pPlaneShape3,lframe,0,0,4,matrix,,-1)
              >7 liqRibHT::hash(|pPlane3|pPlaneShape3,4)
              >7 liqRibClipPlaneData::find(|pPlane3|pPlaneShape3,|pPlane3|pPlaneShape3,0)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|pPlane3|pPlaneShape3,0,0,-1)
                >8 liqRibNode::parseVectorAttributes(pPlane3,[],2)
                >8 liqRibNode::parseVectorAttributes(pPlane3,[],3)
                >8 liqRibNode::parseVectorAttributes(pPlane3,[],4)
                >8 liqRibNode::findShadingGroup(|pPlane3|pPlaneShape3,0)
                >8 liqRibNode::findShader(initialShadingGroup)
                >8 liqRibNode::findDisp(initialShadingGroup)
                >8 liqRibNode::findVolume(initialShadingGroup)
                >8 liqRibNode::getColor(&shader,&color)
                >8 liqRibNode::getOpacity(&shader,&color)
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|pPlane3|pPlaneShape3,0)
                  >9 liqRibMeshData::liqRibMeshData(|pPlane3|pPlaneShape3)
                    >10 liqTokenPointer:set(P,1,4,0)
                    >10 liqTokenPointer:set(N,3,4,0)
                    >10 liqTokenPointer:set(st,0,4,2)
                    >10 liqTokenPointer:set(st,0,4,2)
                    >10 liqTokenPointer:set(P,1,4,0)
                    >10 liqTokenPointer:set(P,1,4,0)
                    >10 liqTokenPointer:set(N,3,4,0)
                    >10 liqTokenPointer:set(P,1,4,0)
                    >10 liqTokenPointer:set(N,3,4,0)
                    >10 liqTokenPointer:set(st,0,4,2)
                    >10 liqRibData::addAdditionalSurfaceParameters(pPlaneShape3)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslatorNew::dealwithParticleInstancedObjects(0,1,5)
          >5 liqRibTranslatorNew::getCameraData(iter__,0)
            >6 liqRibTranslator::getCameraInfo(,&cam)
              >7 liqRibTranslator::portFieldOfView(768,576,&horizontal,&vertical,&fnCamera)
                >8 liqRibTranslator::computeViewingFrustum(1.33333,,&left,&right,&bottom,&top,&cam)
        >4 liqRibTranslatorNew::doTextures(size=0)
          >5 rm::Renderer::doTextures(txtList.size()=0)
        >4 liqRibTranslatorNew::doShadows(size=0)
          >5 rm::Renderer::doShadows(shadowList_.size()=0)
        >4 Renderer::setRenderScriptFormatAndCompress(0,0)
          >5 Renderer::_RiOption_format_compress(0,0)
        >4 Renderer::isHeroPassReady(perspShape)
        >4 Renderer::HeroPassBegin(perspShape)
        >4 tHeroRibWriterMgr::write(liqglo___,perspShape,1,0)
          >5 liqRibTranslatorNew::ribPrologue__(perspShape)
            >6 Renderer::ribPrologue_begin(perspShape)
              >7 RiBegin_liq(E:/MyDocuments/maya/projects/default/rib/rm_spotlight_perspShape.0001.rib(strlen=73)
            >6 Renderer::ribPrologue_comment(2.3.5 (buildtime=23:33:44.28),E:/MyDocuments/maya/projects/default/rm_spotlight,yaoyansi,time)
            >6 Renderer::ribPrologue_options(perspShape)
              >7 Renderer::ribPrologue_writeSearthPath()
              >7 tHeroRibWriterMgr::ribPrologue_hider(0)
              >7 tHeroRibWriterMgr::ribPrologue_samples(4,4)
              >7 tHeroRibWriterMgr::ribPrologue_shadingrate(1)
              >7 tHeroRibWriterMgr::ribPrologue_filter(0,2,2)
              >7 tHeroRibWriterMgr::ribPrologue_pass(beauty)
          >5 liqRibTranslatorNew::framePrologue__(1,perspShape)
            >6 Renderer::framePrologue(1,perspShape)
              >7 tHeroRibWriterMgr::framePrologue_display(perspShape)
              >7 Renderer::framePrologue_camera(1,perspShape)
                >8 tRibCameraMgr::framePrologue_camera(1,job.title=perspShape)
          >5 ShaderMgr::exportShaderGraph()
            >6 ConvertShadingNetwork::exportShaderGraph()
              >7 ConvertShadingNetwork::beforeExport()
              >7 ConvertShadingNetwork::__export()
                >8 ConvertShadingNetwork::canShadingGroupExported(liquidDisplacement1SG)
                >8 Renderer::getValidShaderPlugsInShadingGroup()
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(pPlaneShape1,liquidDisplacement1SG,surfaceShader)
                  >9 ConvertShadingNetwork::canShaderExported(lambert1)
                  >9 ConvertShadingNetwork::exportShaderBegin(lambert1)
                  >9 ConvertShadingNetwork::convertShadingNetworkToRSL(lambert1,pPlaneShape1,surfaceShader)
                    >10 Visitor::initShaderData(lambert1,surfaceShader)
                    >10 ConvertShadingNetwork::getUpstreamConvertibleNodes(lambert1, nodes, numConnections)
                      >11 ConvertShadingNetwork::nodeIsConvertible(lambert1)
                        >12 ShaderMgr::hasShaderType(lambert)
                      >11 ShaderMgr::getValidConnectionRef(lambert)
                      >11 ConvertShadingNetwork::convertibleConnection(lambert1.color)
                        >12 ConvertShadingNetwork::ensurePlugExists(lambert1.color)
                      >11 ConvertShadingNetwork::convertibleConnection(lambert1.transparency)
                        >12 ConvertShadingNetwork::ensurePlugExists(lambert1.transparency)
                      >11 ConvertShadingNetwork::convertibleConnection(lambert1.ambientColor)
                        >12 ConvertShadingNetwork::ensurePlugExists(lambert1.ambientColor)
                      >11 ConvertShadingNetwork::convertibleConnection(lambert1.incandescence)
                        >12 ConvertShadingNetwork::ensurePlugExists(lambert1.incandescence)
                      >11 ConvertShadingNetwork::convertibleConnection(lambert1.diffuse)
                        >12 ConvertShadingNetwork::ensurePlugExists(lambert1.diffuse)
                      >11 ConvertShadingNetwork::convertibleConnection(lambert1.outColor)
                        >12 ConvertShadingNetwork::ensurePlugExists(lambert1.outColor)
                        >12 ConvertShadingNetwork::nodeIsConvertible(initialParticleSE)
                          >13 ShaderMgr::hasShaderType(shadingEngine)
                        >12 ConvertShadingNetwork::nodeIsConvertible(initialShadingGroup)
                          >13 ShaderMgr::hasShaderType(shadingEngine)
                        >12 ConvertShadingNetwork::nodeIsConvertible(liquidDisplacement1SG)
                          >13 ShaderMgr::hasShaderType(shadingEngine)
                        >12 ConvertShadingNetwork::nodeIsConvertible(liquidSurface1SG)
                          >13 ShaderMgr::hasShaderType(shadingEngine)
                      >11 ConvertShadingNetwork::convertibleConnection(lambert1.outTransparency)
                        >12 ConvertShadingNetwork::ensurePlugExists(lambert1.outTransparency)
                    >10 Visitor::preOutput(lambert1)
                    >10 Visitor::outputBegin(lambert1), open shader file
                      >11 getShaderFilePath_SRC(lambert1)
                        >12 getShaderFilePath_NoExt(lambert1)
                    >10 ConvertShadingNetwork::traverseGraphAndOutputNodeFunctions( nodes, numConnections)
                      >11 Visitor::outputUpstreamShader(lambert1)
                        >12 ShaderOutputVisitor::_outputUpstreamShader(lambert1,lambert)
                          >13 Visitor::visitLambert(lambert1)
                            >14 OutputHelper::beginRSL(lambert1)
                              >15 getShaderName(lambert1)
                            >14 ShaderMgr::convertibleConnection(lambert1.color)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert1.color)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert1.color)
                            >14 ShaderMgr::convertibleConnection(lambert1.transparency)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert1.transparency)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert1.transparency)
                            >14 ShaderMgr::convertibleConnection(lambert1.ambientColor)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert1.ambientColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert1.ambientColor)
                            >14 ShaderMgr::convertibleConnection(lambert1.incandescence)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert1.incandescence)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert1.incandescence)
                            >14 ShaderMgr::convertibleConnection(lambert1.diffuse)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert1.diffuse)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert1.diffuse)
                            >14 ShaderMgr::convertibleConnection(lambert1.outColor)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert1.outColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert1.outColor)
                                >16 ConvertShadingNetwork::nodeIsConvertible(initialParticleSE)
                                  >17 ShaderMgr::hasShaderType(shadingEngine)
                                >16 ConvertShadingNetwork::nodeIsConvertible(initialShadingGroup)
                                  >17 ShaderMgr::hasShaderType(shadingEngine)
                                >16 ConvertShadingNetwork::nodeIsConvertible(liquidDisplacement1SG)
                                  >17 ShaderMgr::hasShaderType(shadingEngine)
                                >16 ConvertShadingNetwork::nodeIsConvertible(liquidSurface1SG)
                                  >17 ShaderMgr::hasShaderType(shadingEngine)
                            >14 ShaderMgr::convertibleConnection(lambert1.outTransparency)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert1.outTransparency)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert1.outTransparency)
                            >14 OutputHelper::endRSL()
                      >11 ShaderMgr::getValidConnectionRef(lambert)
                      >11 ConvertShadingNetwork::decrementDownstreamConnections(lambert1, nodes, numConnections, validConnections)
                      >11 ConvertShadingNetwork::getNodeVariables(lambert1, validConnections, inputVars, outputVars)
                        >12 ConvertShadingNetwork::convertibleConnection(lambert1.color)
                          >13 ConvertShadingNetwork::ensurePlugExists(lambert1.color)
                        >12 ConvertShadingNetwork::convertibleConnection(lambert1.transparency)
                          >13 ConvertShadingNetwork::ensurePlugExists(lambert1.transparency)
                        >12 ConvertShadingNetwork::convertibleConnection(lambert1.ambientColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(lambert1.ambientColor)
                        >12 ConvertShadingNetwork::convertibleConnection(lambert1.incandescence)
                          >13 ConvertShadingNetwork::ensurePlugExists(lambert1.incandescence)
                        >12 ConvertShadingNetwork::convertibleConnection(lambert1.diffuse)
                          >13 ConvertShadingNetwork::ensurePlugExists(lambert1.diffuse)
                        >12 ConvertShadingNetwork::convertibleConnection(lambert1.outColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(lambert1.outColor)
                          >13 ConvertShadingNetwork::nodeIsConvertible(initialParticleSE)
                            >14 ShaderMgr::hasShaderType(shadingEngine)
                          >13 ConvertShadingNetwork::nodeIsConvertible(initialShadingGroup)
                            >14 ShaderMgr::hasShaderType(shadingEngine)
                          >13 ConvertShadingNetwork::nodeIsConvertible(liquidDisplacement1SG)
                            >14 ShaderMgr::hasShaderType(shadingEngine)
                          >13 ConvertShadingNetwork::nodeIsConvertible(liquidSurface1SG)
                            >14 ShaderMgr::hasShaderType(shadingEngine)
                        >12 ConvertShadingNetwork::convertibleConnection(lambert1.outTransparency)
                          >13 ConvertShadingNetwork::ensurePlugExists(lambert1.outTransparency)
                      >11 Visitor::addShaderMethodBody(lambert1,[],[])
                        >12 getShaderName(lambert1)
                    >10 ConvertShadingNetwork::outputShaderMethod()
                      >11 Visitor::outputShaderMethod()
                        >12 getShaderName(lambert1)
                    >10 Visitor::outputEnd(), close shader file
                    >10 Visitor::postOutput()
                      >11 getShaderFilePath_SLO(lambert1)
                        >12 getShaderFilePath_NoExt(lambert1)
                      >11 getShaderFilePath_SRC(lambert1)
                        >12 getShaderFilePath_NoExt(lambert1)
                  >9 ConvertShadingNetwork::exportShaderEnd(lambert1)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(pPlaneShape1,liquidDisplacement1SG,displacementShader)
                  >9 ConvertShadingNetwork::canShaderExported(liquidDisplacement1)
                  >9 ConvertShadingNetwork::exportShaderBegin(liquidDisplacement1)
                  >9 liqShaderFactory::getShader(liquidDisplacement1)
                    >10 liqShader::liqShader(liquidDisplacement1)
                      >11 liqShaderFactory::getUniqueShaderHandler()
                      >11 liqTokenPointer:set(,0,0,0)
                      >11 liqGetSloInfo::setShaderNode(liquidDisplacement1)
                      >11 liqTokenPointer:set(amplitude,0,0,0)
                      >11 liqTokenPointer:set(amplitude,0,0,0)
                      >11 liqTokenPointer:set(,0,0,0)
                      >11 liqTokenPointer:set(frequency,0,0,0)
                      >11 liqTokenPointer:set(amplitude,0,0,0)
                      >11 liqTokenPointer:set(frequency,0,0,0)
                      >11 liqTokenPointer:set(,0,0,0)
                      >11 liqTokenPointer:set(details,0,0,0)
                      >11 liqTokenPointer:set(amplitude,0,0,0)
                      >11 liqTokenPointer:set(frequency,0,0,0)
                      >11 liqTokenPointer:set(details,0,0,0)
                      >11 liqTokenPointer:set(,0,0,0)
                  >9 liqShader::write()
                    >10 liqShader::getName()
                    >10 Renderer::shader_UserDefinedShader(liquidDisplacement1)
                      >11 liqShader::getShaderFileName()
                      >11 liqShader::getName()
                      >11 Renderer::shader_displacement(liquidDisplacement1, tokenPointerArray)
                        >12 liqShader::getShaderFileName()
                  >9 ConvertShadingNetwork::exportShaderEnd(liquidDisplacement1)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(pPlaneShape1,liquidDisplacement1SG,volumeShader)
                >8 ConvertShadingNetwork::exportShadingGroupBegin(liquidDisplacement1SG)
                >8 ConvertShadingNetwork::outputShadingGroup(liquidDisplacement1SG)
                  >9 Visitor::outputShadingGroup(liquidDisplacement1SG)
                    >10 Visitor::outputShadingGroup(liquidDisplacement1SG,0)
                >8 ConvertShadingNetwork::exportShadingGroupEnd(liquidDisplacement1SG)
                >8 ConvertShadingNetwork::canShadingGroupExported(initialShadingGroup)
                >8 Renderer::getValidShaderPlugsInShadingGroup()
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(pPlaneShape3,initialShadingGroup,surfaceShader)
                  >9 ConvertShadingNetwork::canShaderExported(lambert1)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(pPlaneShape3,initialShadingGroup,displacementShader)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(pPlaneShape3,initialShadingGroup,volumeShader)
                >8 ConvertShadingNetwork::exportShadingGroupBegin(initialShadingGroup)
                >8 ConvertShadingNetwork::outputShadingGroup(initialShadingGroup)
                  >9 Visitor::outputShadingGroup(initialShadingGroup)
                    >10 Visitor::outputShadingGroup(initialShadingGroup,0)
                >8 ConvertShadingNetwork::exportShadingGroupEnd(initialShadingGroup)
              >7  ConvertShadingNetwork::afterExport()
          >5 liqRibTranslatorNew::worldPrologue__(perspShape)
            >6 Renderer::worldPrologue(perspShape)
          >5 liqRibTranslatorNew::lightBlock__(perspShape)
            >6 Renderer::writeLight_pre(|spotLight1|spotLightShape1,perspShape)
            >6 liqRibObj::writeObject(,perspShape,0)
              >7 liqRibLightData::write(,job=perspShape,0)
                >8 Helper::RiBeginRef()
                >8 liqRibLightData::_write(job=perspShape)
                  >9 Renderer::exportSpotLight(spotlight,spotLightShape1,...)
                >8 Helper::RiEndRef()
            >6 Renderer::writeLight_post(|spotLight1|spotLightShape1,perspShape)
            >6 Renderer::writeLight_pre(|spotLight2|spotLightShape2,perspShape)
            >6 liqRibObj::writeObject(,perspShape,0)
              >7 liqRibLightData::write(,job=perspShape,0)
                >8 Helper::RiBeginRef()
                >8 liqRibLightData::_write(job=perspShape)
                  >9 liqShader::write()
                    >10 liqShader::getName()
                    >10 Renderer::shader_UserDefinedShader(liquidLight1)
                      >11 liqShader::getShaderFileName()
                      >11 liqShader::getName()
                      >11 Renderer::shader_light(liquidLight1, tokenPointerArray)
                        >12 liqShader::getShaderFileName()
                >8 Helper::RiEndRef()
            >6 Renderer::writeLight_post(|spotLight2|spotLightShape2,perspShape)
            >6 Renderer::writeLight_pre(|pointLight1|pointLightShape1,perspShape)
            >6 liqRibObj::writeObject(,perspShape,0)
              >7 liqRibLightData::write(,job=perspShape,0)
                >8 Helper::RiBeginRef()
                >8 liqRibLightData::_write(job=perspShape)
                  >9 Renderer::exportPointLight(pointlight,pointLightShape1,...)
                >8 Helper::RiEndRef()
            >6 Renderer::writeLight_post(|pointLight1|pointLightShape1,perspShape)
          >5 liqRibTranslatorNew::coordSysBlock__(perspShape)
          >5 liqRibTranslatorNew::objectBlock__(perspShape)
            >6 liqRibTranslatorNew::objectBlock_data(perspShape)
              >7 liqRibTranslatorNew::getShadowSetObject(perspShape)
              >7 liqRibTranslatorNew::oneObjectBlock_data(|pPlane1|pPlaneShape1,perspShape)
                >8 Renderer::exportOneObject_data(|pPlane1|pPlaneShape1,perspShape)
                  >9 Renderer::_writeObject(|pPlane1|pPlaneShape1,perspShape,0,0,0)
                    >10 liqRibObj::writeObject(E:/MyDocuments/maya/projects/default/rib/_pPlane1_pPlaneShape1.1.rib,perspShape,0)
                      >11 liqRibMeshData::write(E:/MyDocuments/maya/projects/default/rib/_pPlane1_pPlaneShape1.1.rib,job=perspShape,0)
                        >12 liqRibData::getFullPathName()
                        >12 Renderer::write(|pPlane1|pPlaneShape1,E:/MyDocuments/maya/projects/default/rib/_pPlane1_pPlaneShape1.1.rib,perspShape,ref=0)
              >7 liqRibTranslatorNew::oneObjectBlock_data(|pPlane3|pPlaneShape3,perspShape)
                >8 Renderer::exportOneObject_data(|pPlane3|pPlaneShape3,perspShape)
                  >9 Renderer::_writeObject(|pPlane3|pPlaneShape3,perspShape,0,0,0)
                    >10 liqRibObj::writeObject(E:/MyDocuments/maya/projects/default/rib/_pPlane3_pPlaneShape3.1.rib,perspShape,0)
                      >11 liqRibMeshData::write(E:/MyDocuments/maya/projects/default/rib/_pPlane3_pPlaneShape3.1.rib,job=perspShape,0)
                        >12 liqRibData::getFullPathName()
                        >12 Renderer::write(|pPlane3|pPlaneShape3,E:/MyDocuments/maya/projects/default/rib/_pPlane3_pPlaneShape3.1.rib,perspShape,ref=0)
            >6 liqRibTranslatorNew::objectBlock_reference(perspShape)
              >7 liqRibTranslatorNew::preGeometryMel()
              >7 liqRibTranslatorNew::getShadowSetObject(perspShape)
              >7 liqRibTranslatorNew::oneObjectBlock_reference(|pPlane1|pPlaneShape1,perspShape)
                >8 Renderer::oneObjectBlock_reference_attribute_begin(|pPlane1|pPlaneShape1,perspShape)
                >8 Renderer::oneObjectBlock_reference_attribute_block0(|pPlane1|pPlaneShape1,perspShape)
                >8 liqRibTranslatorNew::tRiIlluminate(perspShape,|pPlane1|pPlaneShape1)
                  >9 Renderer::exportLightLinks(perspShape,|pPlane1|pPlaneShape1,lightedByWhichLightShapes.size=3)
                >8 liqRibTranslatorNew::checkSurfaceShader(|pPlane1|pPlaneShape1,|pPlane1|pPlaneShape1,,,)
                >8 liqRibTranslatorNew::checkDisplacementShader(|pPlane1|pPlaneShape1,|pPlane1|pPlaneShape1,,,)
                >8 liqRibTranslatorNew::checkVolumeShader(|pPlane1|pPlaneShape1,|pPlane1|pPlaneShape1,,,)
                >8 Renderer::oneObjectBlock_reference_attribute_block1(|pPlane1|pPlaneShape1,perspShape)
                  >9 liqRibTranslatorNew::displacementBounds(|pPlane1|pPlaneShape1)
                  >9 liqRibTranslatorNew::objectNonShadowAttribute(|pPlane1|pPlaneShape1)
                    >10 liqRibNode::writeUserAttributes()
                >8 liqRibTranslatorNew::writeShader_(1,|pPlane1|pPlaneShape1,v=0,s=0,c=0,,|pPlane1|pPlaneShape1,perspShape)
                  >9 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|pPlane1|pPlaneShape1,|pPlane1|pPlaneShape1,0)
                    >10 liqRibTranslatorNew::F2(0,|pPlane1|pPlaneShape1)
                    >10 liqRibNode::findShader(liquidDisplacement1SG)
                >8 liqShaderFactory::getShader(liquidDisplacement1)
                >8 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|pPlane1|pPlaneShape1)
                  >9 Visitor::outputShadingGroup(liquidDisplacement1SG,1)
                    >10 _outputShadingGroup(liquidDisplacement1SG)
                      >11 getShaderFilePath_NoExt(lambert1)
                      >11 liqShaderFactory::getShader(liquidDisplacement1)
                      >11 liqShader::write()
                        >12 liqShader::getName()
                        >12 Renderer::shader_UserDefinedShader(liquidDisplacement1)
                          >13 liqShader::getShaderFileName()
                          >13 liqShader::getName()
                          >13 Renderer::shader_displacement(liquidDisplacement1, tokenPointerArray)
                            >14 liqShader::getShaderFileName()
                >8 Renderer::exportOneObject_reference(|pPlane1|pPlaneShape1,perspShape)
                  >9 liqRibTranslatorNew::preTransformMel
                  >9 liqRibTranslatorNew::MaxtrixMotionBlur(|pPlane1|pPlaneShape1,|pPlane1|pPlaneShape1,0)
                  >9 liqRibTranslatorNew::postTransformMel(kTransform)
                  >9 liqRibTranslatorNew::preShapeMel(kTransform)
                  >9 Renderer::_writeObject(|pPlane1|pPlaneShape1,perspShape,0,0,1)
                    >10 liqRibObj::writeObject(E:/MyDocuments/maya/projects/default/rib/_pPlane1_pPlaneShape1.1.rib,perspShape,1)
                      >11 liqRibMeshData::write(E:/MyDocuments/maya/projects/default/rib/_pPlane1_pPlaneShape1.1.rib,job=perspShape,1)
                        >12 liqRibData::getFullPathName()
                        >12 Renderer::write(|pPlane1|pPlaneShape1,E:/MyDocuments/maya/projects/default/rib/_pPlane1_pPlaneShape1.1.rib,perspShape,ref=1)
                          >13 liqRibData::getFullPathName()
                          >13 _write(|pPlane1|pPlaneShape1,perspShape)
                  >9 liqRibTranslatorNew::postShapeMel(kTransform)
                >8 Renderer::oneObjectBlock_reference_attribute_end(|pPlane1|pPlaneShape1,perspShape)
              >7 liqRibTranslatorNew::oneObjectBlock_reference(|pPlane3|pPlaneShape3,perspShape)
                >8 Renderer::oneObjectBlock_reference_attribute_begin(|pPlane3|pPlaneShape3,perspShape)
                >8 Renderer::oneObjectBlock_reference_attribute_block0(|pPlane3|pPlaneShape3,perspShape)
                >8 liqRibTranslatorNew::tRiIlluminate(perspShape,|pPlane3|pPlaneShape3)
                  >9 Renderer::exportLightLinks(perspShape,|pPlane3|pPlaneShape3,lightedByWhichLightShapes.size=3)
                >8 liqRibTranslatorNew::checkSurfaceShader(|pPlane3|pPlaneShape3,|pPlane3|pPlaneShape3,,,)
                >8 liqRibTranslatorNew::checkDisplacementShader(|pPlane3|pPlaneShape3,|pPlane3|pPlaneShape3,,,)
                >8 liqRibTranslatorNew::checkVolumeShader(|pPlane3|pPlaneShape3,|pPlane3|pPlaneShape3,,,)
                >8 Renderer::oneObjectBlock_reference_attribute_block1(|pPlane3|pPlaneShape3,perspShape)
                  >9 liqRibTranslatorNew::displacementBounds(|pPlane3|pPlaneShape3)
                  >9 liqRibTranslatorNew::objectNonShadowAttribute(|pPlane3|pPlaneShape3)
                    >10 liqRibNode::writeUserAttributes()
                >8 liqRibTranslatorNew::writeShader_(1,|pPlane3|pPlaneShape3,v=0,s=0,c=0,,|pPlane3|pPlaneShape3,perspShape)
                  >9 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|pPlane3|pPlaneShape3,|pPlane3|pPlaneShape3,0)
                    >10 liqRibTranslatorNew::F2(0,|pPlane3|pPlaneShape3)
                    >10 liqRibNode::findShader(initialShadingGroup)
                >8 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|pPlane3|pPlaneShape3)
                  >9 Visitor::outputShadingGroup(initialShadingGroup,1)
                    >10 _outputShadingGroup(initialShadingGroup)
                      >11 getShaderFilePath_NoExt(lambert1)
                >8 Renderer::exportOneObject_reference(|pPlane3|pPlaneShape3,perspShape)
                  >9 liqRibTranslatorNew::preTransformMel
                  >9 liqRibTranslatorNew::MaxtrixMotionBlur(|pPlane3|pPlaneShape3,|pPlane3|pPlaneShape3,0)
                  >9 liqRibTranslatorNew::postTransformMel(kTransform)
                  >9 liqRibTranslatorNew::preShapeMel(kTransform)
                  >9 Renderer::_writeObject(|pPlane3|pPlaneShape3,perspShape,0,0,1)
                    >10 liqRibObj::writeObject(E:/MyDocuments/maya/projects/default/rib/_pPlane3_pPlaneShape3.1.rib,perspShape,1)
                      >11 liqRibMeshData::write(E:/MyDocuments/maya/projects/default/rib/_pPlane3_pPlaneShape3.1.rib,job=perspShape,1)
                        >12 liqRibData::getFullPathName()
                        >12 Renderer::write(|pPlane3|pPlaneShape3,E:/MyDocuments/maya/projects/default/rib/_pPlane3_pPlaneShape3.1.rib,perspShape,ref=1)
                          >13 liqRibData::getFullPathName()
                          >13 _write(|pPlane3|pPlaneShape3,perspShape)
                  >9 liqRibTranslatorNew::postShapeMel(kTransform)
                >8 Renderer::oneObjectBlock_reference_attribute_end(|pPlane3|pPlaneShape3,perspShape)
          >5 liqRibTranslatorNew::worldEpilogue__()
            >6 liqRibTranslator::worldEpilogue()
              >7 Renderer::worldEpilogue()
          >5 liqRibTranslatorNew::frameEpilogue__(1)
            >6 Renderer::frameEpilogue(1)
          >5 liqRibTranslatorNew::ribEpilogue__(perspShape)
            >6 Renderer::ribPrologue_end(perspShape)
        >4 Renderer::HeroPassEnd(perspShape)
          >5 rm::Renderer::renderAll_local(E:/MyDocuments/maya/projects/default/rib/rm_spotlight_perspShape.0001.rib)
            >6 liqProcessLauncher::_execute(prman,   "E:/MyDocuments/maya/projects/default/rib/rm_spotlight_perspShape.0001.rib","E:/MyDocuments/maya/projects/default/", wait=0)
      >3 liqRenderScript::addJob(job.title=rm_spotlightFrame0,0)
        >4 liqRenderScript::popNextJobID()
      >3 liqRibTranslatorNew::postActions(defaultRenderLayer)
  >1 RendererMgr::test()
  >1 RendererMgr::epilogue()
    >2 Renderer::closeLog()(but do nothing now)
  >1 RendererMgr::uninstall()
  >1 RendererMgr::deleteFactory()
