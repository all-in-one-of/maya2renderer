

////create liquidLight node//////////////////////////////////////////////////////
shadingNode -asShader liquidLight;
// Result: liquidLight3 // 
sets -renderable true -noSurfaceShader true -empty -name liquidLight3SG;
// Result: liquidLight3SG // 
connectAttr -f liquidLight3.outColor liquidLight3SG.surfaceShader;
// Result: Connected liquidLight3.outColor to liquidLight3SG.surfaceShader. // 
>liquidCheckGlobals()
>liquidGlobalsExists()
>liquidGlobalsAvailable()
>liquidPreviewSwatchReplace(liquidLight3.message)
>liquidShaderPickerReplace(liquidLight3.rmanShaderLong)
>liquidGlobalsExists()
>liquidShaderNodesParamsReplace(liquidLight3.rmanShaderLong)
>liquidAE_getShaderLayoutName(liquidLight,)
>liquidAE_setCacheLayout(liquidLight,,MayaWindow)
    >liquidAE_getShaderLayoutName(liquidLight,)
>liquidFluidGetPreviewDir()
>liquidGlobalsExists()
>liquidAE_showCachedLayout(liquidLight,,MayaWindow)
>liquidAE_getShaderLayoutName(liquidLight,)
>liquidAE_LifStringOverrideDisplayAll()
>liquidFluidGetPreviewDir()
>liquidGlobalsExists()
>liquidFluidGetPreviewDir()
>liquidGlobalsExists()



/////assign liquidpoint.sdl////////////////////////////////////////////////////////////////////////////
>2011/liquidChangeTextFileAttrPlus(...)
>liquidShaderNodes_initParams(liquidLight3)
    >liquidGetShaderNodeExpectedType(liquidLight3)
        >liquidGetShaderNodeType(liquidLight3)
    >liquidShaderNodes_initParams_pl(liquidLight3,E:/dev/Autodesk/maya/myplugin/project/liquid_/2.3.3/lib/shaders/liquidpoint.sdl)
        >liquidGlobalsExists()
        >liquidSlInfoReset()
        >liquidSlSetShader(E:/dev/Autodesk/maya/myplugin/project/liquid_/2.3.3/lib/shaders/liquidpoint.sdl)
            >liquidSlParseSdl(E:/dev/Autodesk/maya/myplugin/project/liquid_/2.3.3/lib/shaders/liquidpoint.sdl)
                >liquidSl_getShaderType(3)
                    >liquidSl_setShaderName(liquidpoint)
            >[liquidSlParseSdl] liquid node expecting "", shader type is: "light"

            >[liquidSlParseSdl] found methods: 
                >getSdlLine(3)
                >liquidSl_getParamName(    "intensity" "parameter uniform float"
)
                >liquidSl_getParamDetail(    "intensity" "parameter uniform float"
)
                >liquidSl_isOutputParam(    "intensity" "parameter uniform float"
)
                >liquidSl_getParamType(    "intensity" "parameter uniform float"
)
                >liquidSl_getParamArraySize(    "intensity" "parameter uniform float"
)
                >getSdlLine(3)
                >liquidSl_getParamDefault(...)
                    >liquidSl_getParamDefaultF(1)
                >getSdlLine(3)
            >param 0
            >{
            >      Name:intensity
            >      Details:uniform
            >      Type:float
            >      IsOutput:0
            >      Defaults:1.0
            >      ArraySizes:-1
            >}//intensity|uniform|float|0|1.0|-1
                >liquidSl_getParamName(    "lightcolor" "parameter uniform color"
)
                >liquidSl_getParamDetail(    "lightcolor" "parameter uniform color"
)
                >liquidSl_isOutputParam(    "lightcolor" "parameter uniform color"
)
                >liquidSl_getParamType(    "lightcolor" "parameter uniform color"
)
                >liquidSl_getParamArraySize(    "lightcolor" "parameter uniform color"
)
                >getSdlLine(3)
                >liquidSl_getParamDefault(...)
                    >liquidSl_getParamDefaultV("rgb" [1 1 1])
                    >getSdlLine(3)
                >param 1
                >{
                >      Name:lightcolor
                >      Details:uniform
                >      Type:color
                >      IsOutput:0
                >      Defaults:<<1, 1, 1>>
                >      ArraySizes:-1
                >}//lightcolor|uniform|color|0|<<1, 1, 1>>|-1
                    >liquidSl_getParamName(    "decay" "parameter uniform float"
)
                    >liquidSl_getParamDetail(    "decay" "parameter uniform float"
)
                    >liquidSl_isOutputParam(    "decay" "parameter uniform float"
)
                    >liquidSl_getParamType(    "decay" "parameter uniform float"
)
                    >liquidSl_getParamArraySize(    "decay" "parameter uniform float"
)
                    >getSdlLine(3)
                    >liquidSl_getParamDefault(...)
                        >liquidSl_getParamDefaultF(0)
                    >getSdlLine(3)
                >param 2
                >{
                >      Name:decay
                >      Details:uniform
                >      Type:float
                >      IsOutput:0
                >      Defaults:0.0
                >      ArraySizes:-1
                >}//decay|uniform|float|0|0.0|-1
                    >liquidSl_getParamName(    "shadownamepx" "parameter uniform string"
)
                    >liquidSl_getParamDetail(    "shadownamepx" "parameter uniform string"
)
                    >liquidSl_isOutputParam(    "shadownamepx" "parameter uniform string"
)
                    >liquidSl_getParamType(    "shadownamepx" "parameter uniform string"
)
                    >liquidSl_getParamArraySize(    "shadownamepx" "parameter uniform string"
)
                    >getSdlLine(3)
                    >liquidSl_getParamDefault(...)
                        >liquidSl_getParamDefaultS("")
                    >getSdlLine(3)
                >param 3
                >{
                >      Name:shadownamepx
                >      Details:uniform
                >      Type:string
                >      IsOutput:0
                >      Defaults:""
                >      ArraySizes:-1
                >}//shadownamepx|uniform|string|0|""|-1
                    >liquidSl_getParamName(    "shadownamenx" "parameter uniform string"
)
                    >liquidSl_getParamDetail(    "shadownamenx" "parameter uniform string"
)
                    >liquidSl_isOutputParam(    "shadownamenx" "parameter uniform string"
)
                    >liquidSl_getParamType(    "shadownamenx" "parameter uniform string"
)
                    >liquidSl_getParamArraySize(    "shadownamenx" "parameter uniform string"
)
                    >getSdlLine(3)
                    >liquidSl_getParamDefault(...)
                        >liquidSl_getParamDefaultS("")
                    >getSdlLine(3)
                >param 4
                >{
                >      Name:shadownamenx
                >      Details:uniform
                >      Type:string
                >      IsOutput:0
                >      Defaults:""
                >      ArraySizes:-1
                >}//shadownamenx|uniform|string|0|""|-1
                    >liquidSl_getParamName(    "shadownamepy" "parameter uniform string"
)
                    >liquidSl_getParamDetail(    "shadownamepy" "parameter uniform string"
)
                    >liquidSl_isOutputParam(    "shadownamepy" "parameter uniform string"
)
                    >liquidSl_getParamType(    "shadownamepy" "parameter uniform string"
)
                    >liquidSl_getParamArraySize(    "shadownamepy" "parameter uniform string"
)
                    >getSdlLine(3)
                    >liquidSl_getParamDefault(...)
                        >liquidSl_getParamDefaultS("")
                    >getSdlLine(3)
                >param 5
                >{
                >      Name:shadownamepy
                >      Details:uniform
                >      Type:string
                >      IsOutput:0
                >      Defaults:""
                >      ArraySizes:-1
                >}//shadownamepy|uniform|string|0|""|-1
                    >liquidSl_getParamName(    "shadownameny" "parameter uniform string"
)
                    >liquidSl_getParamDetail(    "shadownameny" "parameter uniform string"
)
                    >liquidSl_isOutputParam(    "shadownameny" "parameter uniform string"
)
                    >liquidSl_getParamType(    "shadownameny" "parameter uniform string"
)
                    >liquidSl_getParamArraySize(    "shadownameny" "parameter uniform string"
)
                    >getSdlLine(3)
                    >liquidSl_getParamDefault(...)
                        >liquidSl_getParamDefaultS("")
                    >getSdlLine(3)
                >param 6
                >{
                >      Name:shadownameny
                >      Details:uniform
                >      Type:string
                >      IsOutput:0
                >      Defaults:""
                >      ArraySizes:-1
                >}//shadownameny|uniform|string|0|""|-1
                    >liquidSl_getParamName(    "shadownamepz" "parameter uniform string"
)
                    >liquidSl_getParamDetail(    "shadownamepz" "parameter uniform string"
)
                    >liquidSl_isOutputParam(    "shadownamepz" "parameter uniform string"
)
                    >liquidSl_getParamType(    "shadownamepz" "parameter uniform string"
)
                    >liquidSl_getParamArraySize(    "shadownamepz" "parameter uniform string"
)
                    >getSdlLine(3)
                    >liquidSl_getParamDefault(...)
                        >liquidSl_getParamDefaultS("")
                    >getSdlLine(3)
                >param 7
                >{
                >      Name:shadownamepz
                >      Details:uniform
                >      Type:string
                >      IsOutput:0
                >      Defaults:""
                >      ArraySizes:-1
                >}//shadownamepz|uniform|string|0|""|-1
                    >liquidSl_getParamName(    "shadownamenz" "parameter uniform string"
)
                    >liquidSl_getParamDetail(    "shadownamenz" "parameter uniform string"
)
                    >liquidSl_isOutputParam(    "shadownamenz" "parameter uniform string"
)
                    >liquidSl_getParamType(    "shadownamenz" "parameter uniform string"
)
                    >liquidSl_getParamArraySize(    "shadownamenz" "parameter uniform string"
)
                    >getSdlLine(3)
                    >liquidSl_getParamDefault(...)
                        >liquidSl_getParamDefaultS("")
                    >getSdlLine(3)
                >param 8
                >{
                >      Name:shadownamenz
                >      Details:uniform
                >      Type:string
                >      IsOutput:0
                >      Defaults:""
                >      ArraySizes:-1
                >}//shadownamenz|uniform|string|0|""|-1
                    >liquidSl_getParamName(    "shadowbias" "parameter uniform float"
)
                    >liquidSl_getParamDetail(    "shadowbias" "parameter uniform float"
)
                    >liquidSl_isOutputParam(    "shadowbias" "parameter uniform float"
)
                    >liquidSl_getParamType(    "shadowbias" "parameter uniform float"
)
                    >liquidSl_getParamArraySize(    "shadowbias" "parameter uniform float"
)
                    >getSdlLine(3)
                    >liquidSl_getParamDefault(...)
                        >liquidSl_getParamDefaultF(0.01)
                    >getSdlLine(3)
                >param 9
                >{
                >      Name:shadowbias
                >      Details:uniform
                >      Type:float
                >      IsOutput:0
                >      Defaults:0.01
                >      ArraySizes:-1
                >}//shadowbias|uniform|float|0|0.01|-1
                    >liquidSl_getParamName(    "shadowblur" "parameter uniform float"
)
                    >liquidSl_getParamDetail(    "shadowblur" "parameter uniform float"
)
                    >liquidSl_isOutputParam(    "shadowblur" "parameter uniform float"
)
                    >liquidSl_getParamType(    "shadowblur" "parameter uniform float"
)
                    >liquidSl_getParamArraySize(    "shadowblur" "parameter uniform float"
)
                    >getSdlLine(3)
                    >liquidSl_getParamDefault(...)
                        >liquidSl_getParamDefaultF(0)
                    >getSdlLine(3)
                >param 10
                >{
                >      Name:shadowblur
                >      Details:uniform
                >      Type:float
                >      IsOutput:0
                >      Defaults:0.0
                >      ArraySizes:-1
                >}//shadowblur|uniform|float|0|0.0|-1
                    >liquidSl_getParamName(    "shadowsamples" "parameter uniform float"
)
                    >liquidSl_getParamDetail(    "shadowsamples" "parameter uniform float"
)
                    >liquidSl_isOutputParam(    "shadowsamples" "parameter uniform float"
)
                    >liquidSl_getParamType(    "shadowsamples" "parameter uniform float"
)
                    >liquidSl_getParamArraySize(    "shadowsamples" "parameter uniform float"
)
                    >getSdlLine(3)
                    >liquidSl_getParamDefault(...)
                        >liquidSl_getParamDefaultF(16)
                    >getSdlLine(3)
                >param 11
                >{
                >      Name:shadowsamples
                >      Details:uniform
                >      Type:float
                >      IsOutput:0
                >      Defaults:16.0
                >      ArraySizes:-1
                >}//shadowsamples|uniform|float|0|16.0|-1
                    >liquidSl_getParamName(    "shadowfiltersize" "parameter uniform float"
)
                    >liquidSl_getParamDetail(    "shadowfiltersize" "parameter uniform float"
)
                    >liquidSl_isOutputParam(    "shadowfiltersize" "parameter uniform float"
)
                    >liquidSl_getParamType(    "shadowfiltersize" "parameter uniform float"
)
                    >liquidSl_getParamArraySize(    "shadowfiltersize" "parameter uniform float"
)
                    >getSdlLine(3)
                    >liquidSl_getParamDefault(...)
                        >liquidSl_getParamDefaultF(1)
                    >getSdlLine(3)
                >param 12
                >{
                >      Name:shadowfiltersize
                >      Details:uniform
                >      Type:float
                >      IsOutput:0
                >      Defaults:1.0
                >      ArraySizes:-1
                >}//shadowfiltersize|uniform|float|0|1.0|-1
                    >liquidSl_getParamName(    "shadowcolor" "parameter uniform color"
)
                    >liquidSl_getParamDetail(    "shadowcolor" "parameter uniform color"
)
                    >liquidSl_isOutputParam(    "shadowcolor" "parameter uniform color"
)
                    >liquidSl_getParamType(    "shadowcolor" "parameter uniform color"
)
                    >liquidSl_getParamArraySize(    "shadowcolor" "parameter uniform color"
)
                    >getSdlLine(3)
                    >liquidSl_getParamDefault(...)
                        >liquidSl_getParamDefaultV("rgb" [0 0 0])
                        >getSdlLine(3)
                    >param 13
                    >{
                    >      Name:shadowcolor
                    >      Details:uniform
                    >      Type:color
                    >      IsOutput:0
                    >      Defaults:<<0, 0, 0>>
                    >      ArraySizes:-1
                    >}//shadowcolor|uniform|color|0|<<0, 0, 0>>|-1
                        >liquidSl_getParamName(    "lightID" "parameter uniform float"
)
                        >liquidSl_getParamDetail(    "lightID" "parameter uniform float"
)
                        >liquidSl_isOutputParam(    "lightID" "parameter uniform float"
)
                        >liquidSl_getParamType(    "lightID" "parameter uniform float"
)
                        >liquidSl_getParamArraySize(    "lightID" "parameter uniform float"
)
                        >getSdlLine(3)
                        >liquidSl_getParamDefault(...)
                            >liquidSl_getParamDefaultF(0)
                        >getSdlLine(3)
                    >param 14
                    >{
                    >      Name:lightID
                    >      Details:uniform
                    >      Type:float
                    >      IsOutput:0
                    >      Defaults:0.0
                    >      ArraySizes:-1
                    >}//lightID|uniform|float|0|0.0|-1
                        >liquidSl_getParamName(    "__category" "parameter uniform string"
)
                        >liquidSl_getParamDetail(    "__category" "parameter uniform string"
)
                        >liquidSl_isOutputParam(    "__category" "parameter uniform string"
)
                        >liquidSl_getParamType(    "__category" "parameter uniform string"
)
                        >liquidSl_getParamArraySize(    "__category" "parameter uniform string"
)
                        >getSdlLine(3)
                        >liquidSl_getParamDefault(...)
                            >liquidSl_getParamDefaultS("")
                        >getSdlLine(3)
                    >param 15
                    >{
                    >      Name:__category
                    >      Details:uniform
                    >      Type:string
                    >      IsOutput:0
                    >      Defaults:""
                    >      ArraySizes:-1
                    >}//__category|uniform|string|0|""|-1
                        >liquidSl_getParamName(    "__shadowF" "output parameter varying float"
)
                        >liquidSl_getParamDetail(    "__shadowF" "output parameter varying float"
)
                        >liquidSl_isOutputParam(    "__shadowF" "output parameter varying float"
)
                        >liquidSl_getParamType(    "__shadowF" "output parameter varying float"
)
                        >liquidSl_getParamArraySize(    "__shadowF" "output parameter varying float"
)
                        >getSdlLine(3)
                        >liquidSl_getParamDefault(...)
                            >liquidSl_getParamDefaultF(0)
                        >getSdlLine(3)
                    >param 16
                    >{
                    >      Name:__shadowF
                    >      Details:varying
                    >      Type:float
                    >      IsOutput:1
                    >      Defaults:0.0
                    >      ArraySizes:-1
                    >}//__shadowF|varying|float|1|0.0|-1
                        >liquidSl_getParamName(    "__shadowC" "output parameter varying color"
)
                        >liquidSl_getParamDetail(    "__shadowC" "output parameter varying color"
)
                        >liquidSl_isOutputParam(    "__shadowC" "output parameter varying color"
)
                        >liquidSl_getParamType(    "__shadowC" "output parameter varying color"
)
                        >liquidSl_getParamArraySize(    "__shadowC" "output parameter varying color"
)
                        >getSdlLine(3)
                        >liquidSl_getParamDefault(...)
                            >liquidSl_getParamDefaultV("rgb" [1 1 1])
                            >getSdlLine(3)
                        >param 17
                        >{
                        >      Name:__shadowC
                        >      Details:varying
                        >      Type:color
                        >      IsOutput:1
                        >      Defaults:<<1, 1, 1>>
                        >      ArraySizes:-1
                        >}//__shadowC|varying|color|1|<<1, 1, 1>>|-1
                            >liquidSl_getParamName(    "__unshadowed_Cl" "output parameter varying color"
)
                            >liquidSl_getParamDetail(    "__unshadowed_Cl" "output parameter varying color"
)
                            >liquidSl_isOutputParam(    "__unshadowed_Cl" "output parameter varying color"
)
                            >liquidSl_getParamType(    "__unshadowed_Cl" "output parameter varying color"
)
                            >liquidSl_getParamArraySize(    "__unshadowed_Cl" "output parameter varying color"
)
                            >getSdlLine(3)
                            >liquidSl_getParamDefault(...)
                                >liquidSl_getParamDefaultV("rgb" [0 0 0])
                                >getSdlLine(3)
                            >param 18
                            >{
                            >      Name:__unshadowed_Cl
                            >      Details:varying
                            >      Type:color
                            >      IsOutput:1
                            >      Defaults:<<0, 0, 0>>
                            >      ArraySizes:-1
                            >}//__unshadowed_Cl|varying|color|1|<<0, 0, 0>>|-1
                                >liquidSl_getParamName(    "__nondiffuse" "output parameter varying float"
)
                                >liquidSl_getParamDetail(    "__nondiffuse" "output parameter varying float"
)
                                >liquidSl_isOutputParam(    "__nondiffuse" "output parameter varying float"
)
                                >liquidSl_getParamType(    "__nondiffuse" "output parameter varying float"
)
                                >liquidSl_getParamArraySize(    "__nondiffuse" "output parameter varying float"
)
                                >getSdlLine(3)
                                >liquidSl_getParamDefault(...)
                                    >liquidSl_getParamDefaultF(0)
                                >getSdlLine(3)
                            >param 19
                            >{
                            >      Name:__nondiffuse
                            >      Details:varying
                            >      Type:float
                            >      IsOutput:1
                            >      Defaults:0.0
                            >      ArraySizes:-1
                            >}//__nondiffuse|varying|float|1|0.0|-1
                                >liquidSl_getParamName(    "__nonspecular" "output parameter varying float"
)
                                >liquidSl_getParamDetail(    "__nonspecular" "output parameter varying float"
)
                                >liquidSl_isOutputParam(    "__nonspecular" "output parameter varying float"
)
                                >liquidSl_getParamType(    "__nonspecular" "output parameter varying float"
)
                                >liquidSl_getParamArraySize(    "__nonspecular" "output parameter varying float"
)
                                >getSdlLine(3)
                                >liquidSl_getParamDefault(...)
                                    >liquidSl_getParamDefaultF(0)
                                >getSdlLine(3)
                            >param 20
                            >{
                            >      Name:__nonspecular
                            >      Details:varying
                            >      Type:float
                            >      IsOutput:1
                            >      Defaults:0.0
                            >      ArraySizes:-1
                            >}//__nonspecular|varying|float|1|0.0|-1
                            >liquidSlParseLifInitGlobals()
                            >liquidSlGetLifFile(E:/dev/Autodesk/maya/myplugin/project/liquid_/2.3.3/lib/shaders/liquidpoint.sdl)
                            >liquidSlParseLif(E:/dev/Autodesk/maya/myplugin/project/liquid_/2.3.3/lib/shaders/liquidpoint.lif)
                                >liquidSlReadLifFromDisk(E:/dev/Autodesk/maya/myplugin/project/liquid_/2.3.3/lib/shaders/liquidpoint.lif)
                                    >liquidSlReadLifFromBuffer( lines[](110 lines) )
                                        >fetchKeyword(light "liquidpoint";)
                                            >isValidShaderTypeForPL(light)
                                                >isValidShaderTypeForPL_renderman(light)
                                                    >isSurfaceShader_renderman(light)
                                        >fetchKeyword(desc "Standard Maya-Like Point Light\nPart of Liquid.\n";)
                                            >isValidShaderTypeForPL(desc)
                                                >isValidShaderTypeForPL_renderman(desc)
                                                    >isSurfaceShader_renderman(desc)
                                        >fetchKeyword(desc "Standard Maya-Like Point Light\nPart of Liquid.\n";)
                                            >isValidShaderTypeForPL(desc)
                                                >isValidShaderTypeForPL_renderman(desc)
                                                    >isSurfaceShader_renderman(desc)
                                        >fetchKeyword(param "__category";)
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword(param "__category";)
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword(name "__category";)
                                            >isValidShaderTypeForPL(name)
                                                >isValidShaderTypeForPL_renderman(name)
                                                    >isSurfaceShader_renderman(name)
                                        >fetchKeyword(name "__category";)
                                            >isValidShaderTypeForPL(name)
                                                >isValidShaderTypeForPL_renderman(name)
                                                    >isSurfaceShader_renderman(name)
                                        >fetchKeyword(param "intensity";)
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword(param "intensity";)
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword(name "Intensity";)
                                            >isValidShaderTypeForPL(name)
                                                >isValidShaderTypeForPL_renderman(name)
                                                    >isSurfaceShader_renderman(name)
                                        >fetchKeyword(name "Intensity";)
                                            >isValidShaderTypeForPL(name)
                                                >isValidShaderTypeForPL_renderman(name)
                                                    >isSurfaceShader_renderman(name)
                                        >fetchKeyword(type "slider";)
                                            >isValidShaderTypeForPL(type)
                                                >isValidShaderTypeForPL_renderman(type)
                                                    >isSurfaceShader_renderman(type)
                                        >fetchKeyword(type "slider";)
                                            >isValidShaderTypeForPL(type)
                                                >isValidShaderTypeForPL_renderman(type)
                                                    >isSurfaceShader_renderman(type)
                                        >fetchKeyword(param "lightcolor";)
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword(param "lightcolor";)
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword(name "Light Color";)
                                            >isValidShaderTypeForPL(name)
                                                >isValidShaderTypeForPL_renderman(name)
                                                    >isSurfaceShader_renderman(name)
                                        >fetchKeyword(name "Light Color";)
                                            >isValidShaderTypeForPL(name)
                                                >isValidShaderTypeForPL_renderman(name)
                                                    >isSurfaceShader_renderman(name)
                                        >fetchKeyword(desc "";)
                                            >isValidShaderTypeForPL(desc)
                                                >isValidShaderTypeForPL_renderman(desc)
                                                    >isSurfaceShader_renderman(desc)
                                        >fetchKeyword(desc "";)
                                            >isValidShaderTypeForPL(desc)
                                                >isValidShaderTypeForPL_renderman(desc)
                                                    >isSurfaceShader_renderman(desc)
                                        >fetchKeyword(param "__nondiffuse";)
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword(param "__nondiffuse";)
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword(name "Non Diffuse";)
                                            >isValidShaderTypeForPL(name)
                                                >isValidShaderTypeForPL_renderman(name)
                                                    >isSurfaceShader_renderman(name)
                                        >fetchKeyword(name "Non Diffuse";)
                                            >isValidShaderTypeForPL(name)
                                                >isValidShaderTypeForPL_renderman(name)
                                                    >isSurfaceShader_renderman(name)
                                        >fetchKeyword(type "bool";)
                                            >isValidShaderTypeForPL(type)
                                                >isValidShaderTypeForPL_renderman(type)
                                                    >isSurfaceShader_renderman(type)
                                        >fetchKeyword(type "bool";)
                                            >isValidShaderTypeForPL(type)
                                                >isValidShaderTypeForPL_renderman(type)
                                                    >isSurfaceShader_renderman(type)
                                        >fetchKeyword(param "__nonspecular";)
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword(param "__nonspecular";)
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword(name "Non Specular";)
                                            >isValidShaderTypeForPL(name)
                                                >isValidShaderTypeForPL_renderman(name)
                                                    >isSurfaceShader_renderman(name)
                                        >fetchKeyword(name "Non Specular";)
                                            >isValidShaderTypeForPL(name)
                                                >isValidShaderTypeForPL_renderman(name)
                                                    >isSurfaceShader_renderman(name)
                                        >fetchKeyword(type "bool";)
                                            >isValidShaderTypeForPL(type)
                                                >isValidShaderTypeForPL_renderman(type)
                                                    >isSurfaceShader_renderman(type)
                                        >fetchKeyword(type "bool";)
                                            >isValidShaderTypeForPL(type)
                                                >isValidShaderTypeForPL_renderman(type)
                                                    >isSurfaceShader_renderman(type)
                                        >fetchKeyword(param "decay";)
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword(param "decay";)
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword(name "Decay";)
                                            >isValidShaderTypeForPL(name)
                                                >isValidShaderTypeForPL_renderman(name)
                                                    >isSurfaceShader_renderman(name)
                                        >fetchKeyword(name "Decay";)
                                            >isValidShaderTypeForPL(name)
                                                >isValidShaderTypeForPL_renderman(name)
                                                    >isSurfaceShader_renderman(name)
                                        >fetchKeyword(desc "";)
                                            >isValidShaderTypeForPL(desc)
                                                >isValidShaderTypeForPL_renderman(desc)
                                                    >isSurfaceShader_renderman(desc)
                                        >fetchKeyword(desc "";)
                                            >isValidShaderTypeForPL(desc)
                                                >isValidShaderTypeForPL_renderman(desc)
                                                    >isSurfaceShader_renderman(desc)
                                        >fetchKeyword(type "selector";)
                                            >isValidShaderTypeForPL(type)
                                                >isValidShaderTypeForPL_renderman(type)
                                                    >isSurfaceShader_renderman(type)
                                        >fetchKeyword(type "selector";)
                                            >isValidShaderTypeForPL(type)
                                                >isValidShaderTypeForPL_renderman(type)
                                                    >isSurfaceShader_renderman(type)
                                        >fetchKeyword(range [ "None" 0 "Linear" 1 "Quadratic" 2 "Cubic" 3 ];)
                                            >isValidShaderTypeForPL(range)
                                                >isValidShaderTypeForPL_renderman(range)
                                                    >isSurfaceShader_renderman(range)
                                        >fetchKeyword(range [ "None" 0 "Linear" 1 "Quadratic" 2 "Cubic" 3 ];)
                                            >isValidShaderTypeForPL(range)
                                                >isValidShaderTypeForPL_renderman(range)
                                                    >isSurfaceShader_renderman(range)
                                        >fetchKeyword(param "lightID";)
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword(param "lightID";)
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword(name "lightID";)
                                            >isValidShaderTypeForPL(name)
                                                >isValidShaderTypeForPL_renderman(name)
                                                    >isSurfaceShader_renderman(name)
                                        >fetchKeyword(name "lightID";)
                                            >isValidShaderTypeForPL(name)
                                                >isValidShaderTypeForPL_renderman(name)
                                                    >isSurfaceShader_renderman(name)
                                        >fetchKeyword(group "Shadows";)
                                            >isValidShaderTypeForPL(group)
                                                >isValidShaderTypeForPL_renderman(group)
                                                    >isSurfaceShader_renderman(group)
                                        >fetchKeyword(group "Shadows";)
                                            >isValidShaderTypeForPL(group)
                                                >isValidShaderTypeForPL_renderman(group)
                                                    >isSurfaceShader_renderman(group)
                                        >fetchKeyword(group "Maps" "close";)
                                            >isValidShaderTypeForPL(group)
                                                >isValidShaderTypeForPL_renderman(group)
                                                    >isSurfaceShader_renderman(group)
                                        >fetchKeyword(group "Maps" "close";)
                                            >isValidShaderTypeForPL(group)
                                                >isValidShaderTypeForPL_renderman(group)
                                                    >isSurfaceShader_renderman(group)
                                        >fetchKeyword(param "shadownamepx";)
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword(param "shadownamepx";)
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword(name "shadownamepx";)
                                            >isValidShaderTypeForPL(name)
                                                >isValidShaderTypeForPL_renderman(name)
                                                    >isSurfaceShader_renderman(name)
                                        >fetchKeyword(name "shadownamepx";)
                                            >isValidShaderTypeForPL(name)
                                                >isValidShaderTypeForPL_renderman(name)
                                                    >isSurfaceShader_renderman(name)
                                        >fetchKeyword(type "shadow";)
                                            >isValidShaderTypeForPL(type)
                                                >isValidShaderTypeForPL_renderman(type)
                                                    >isSurfaceShader_renderman(type)
                                        >fetchKeyword(type "shadow";)
                                            >isValidShaderTypeForPL(type)
                                                >isValidShaderTypeForPL_renderman(type)
                                                    >isSurfaceShader_renderman(type)
                                        >fetchKeyword(param "shadownamenx";)
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword(param "shadownamenx";)
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword(name "shadownamenx";)
                                            >isValidShaderTypeForPL(name)
                                                >isValidShaderTypeForPL_renderman(name)
                                                    >isSurfaceShader_renderman(name)
                                        >fetchKeyword(name "shadownamenx";)
                                            >isValidShaderTypeForPL(name)
                                                >isValidShaderTypeForPL_renderman(name)
                                                    >isSurfaceShader_renderman(name)
                                        >fetchKeyword(type "shadow";)
                                            >isValidShaderTypeForPL(type)
                                                >isValidShaderTypeForPL_renderman(type)
                                                    >isSurfaceShader_renderman(type)
                                        >fetchKeyword(type "shadow";)
                                            >isValidShaderTypeForPL(type)
                                                >isValidShaderTypeForPL_renderman(type)
                                                    >isSurfaceShader_renderman(type)
                                        >fetchKeyword(param "shadownamepy";)
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword(param "shadownamepy";)
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword(name "shadownamepy";)
                                            >isValidShaderTypeForPL(name)
                                                >isValidShaderTypeForPL_renderman(name)
                                                    >isSurfaceShader_renderman(name)
                                        >fetchKeyword(name "shadownamepy";)
                                            >isValidShaderTypeForPL(name)
                                                >isValidShaderTypeForPL_renderman(name)
                                                    >isSurfaceShader_renderman(name)
                                        >fetchKeyword(type "shadow";)
                                            >isValidShaderTypeForPL(type)
                                                >isValidShaderTypeForPL_renderman(type)
                                                    >isSurfaceShader_renderman(type)
                                        >fetchKeyword(type "shadow";)
                                            >isValidShaderTypeForPL(type)
                                                >isValidShaderTypeForPL_renderman(type)
                                                    >isSurfaceShader_renderman(type)
                                        >fetchKeyword(param "shadownameny";)
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword(param "shadownameny";)
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword(name "shadownameny";)
                                            >isValidShaderTypeForPL(name)
                                                >isValidShaderTypeForPL_renderman(name)
                                                    >isSurfaceShader_renderman(name)
                                        >fetchKeyword(name "shadownameny";)
                                            >isValidShaderTypeForPL(name)
                                                >isValidShaderTypeForPL_renderman(name)
                                                    >isSurfaceShader_renderman(name)
                                        >fetchKeyword(type "shadow";)
                                            >isValidShaderTypeForPL(type)
                                                >isValidShaderTypeForPL_renderman(type)
                                                    >isSurfaceShader_renderman(type)
                                        >fetchKeyword(type "shadow";)
                                            >isValidShaderTypeForPL(type)
                                                >isValidShaderTypeForPL_renderman(type)
                                                    >isSurfaceShader_renderman(type)
                                        >fetchKeyword(param "shadownamepz";)
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword(param "shadownamepz";)
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword(name "shadownamepz";)
                                            >isValidShaderTypeForPL(name)
                                                >isValidShaderTypeForPL_renderman(name)
                                                    >isSurfaceShader_renderman(name)
                                        >fetchKeyword(name "shadownamepz";)
                                            >isValidShaderTypeForPL(name)
                                                >isValidShaderTypeForPL_renderman(name)
                                                    >isSurfaceShader_renderman(name)
                                        >fetchKeyword(type "shadow";)
                                            >isValidShaderTypeForPL(type)
                                                >isValidShaderTypeForPL_renderman(type)
                                                    >isSurfaceShader_renderman(type)
                                        >fetchKeyword(type "shadow";)
                                            >isValidShaderTypeForPL(type)
                                                >isValidShaderTypeForPL_renderman(type)
                                                    >isSurfaceShader_renderman(type)
                                        >fetchKeyword(param "shadownamenz";)
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword(param "shadownamenz";)
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword(name "shadownamenz";)
                                            >isValidShaderTypeForPL(name)
                                                >isValidShaderTypeForPL_renderman(name)
                                                    >isSurfaceShader_renderman(name)
                                        >fetchKeyword(name "shadownamenz";)
                                            >isValidShaderTypeForPL(name)
                                                >isValidShaderTypeForPL_renderman(name)
                                                    >isSurfaceShader_renderman(name)
                                        >fetchKeyword(type "shadow";)
                                            >isValidShaderTypeForPL(type)
                                                >isValidShaderTypeForPL_renderman(type)
                                                    >isSurfaceShader_renderman(type)
                                        >fetchKeyword(type "shadow";)
                                            >isValidShaderTypeForPL(type)
                                                >isValidShaderTypeForPL_renderman(type)
                                                    >isSurfaceShader_renderman(type)
                                        >fetchKeyword(group "end";)
                                            >isValidShaderTypeForPL(group)
                                                >isValidShaderTypeForPL_renderman(group)
                                                    >isSurfaceShader_renderman(group)
                                        >fetchKeyword(group "end";)
                                            >isValidShaderTypeForPL(group)
                                                >isValidShaderTypeForPL_renderman(group)
                                                    >isSurfaceShader_renderman(group)
                                        >fetchKeyword(param "shadowbias";)
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword(param "shadowbias";)
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword(name "Bias";)
                                            >isValidShaderTypeForPL(name)
                                                >isValidShaderTypeForPL_renderman(name)
                                                    >isSurfaceShader_renderman(name)
                                        >fetchKeyword(name "Bias";)
                                            >isValidShaderTypeForPL(name)
                                                >isValidShaderTypeForPL_renderman(name)
                                                    >isSurfaceShader_renderman(name)
                                        >fetchKeyword(desc "";)
                                            >isValidShaderTypeForPL(desc)
                                                >isValidShaderTypeForPL_renderman(desc)
                                                    >isSurfaceShader_renderman(desc)
                                        >fetchKeyword(desc "";)
                                            >isValidShaderTypeForPL(desc)
                                                >isValidShaderTypeForPL_renderman(desc)
                                                    >isSurfaceShader_renderman(desc)
                                        >fetchKeyword(type "slider";)
                                            >isValidShaderTypeForPL(type)
                                                >isValidShaderTypeForPL_renderman(type)
                                                    >isSurfaceShader_renderman(type)
                                        >fetchKeyword(type "slider";)
                                            >isValidShaderTypeForPL(type)
                                                >isValidShaderTypeForPL_renderman(type)
                                                    >isSurfaceShader_renderman(type)
                                        >fetchKeyword(range [ 0 1 ];)
                                            >isValidShaderTypeForPL(range)
                                                >isValidShaderTypeForPL_renderman(range)
                                                    >isSurfaceShader_renderman(range)
                                        >fetchKeyword(range [ 0 1 ];)
                                            >isValidShaderTypeForPL(range)
                                                >isValidShaderTypeForPL_renderman(range)
                                                    >isSurfaceShader_renderman(range)
                                        >fetchKeyword(param "shadowblur";)
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword(param "shadowblur";)
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword(name "Blur";)
                                            >isValidShaderTypeForPL(name)
                                                >isValidShaderTypeForPL_renderman(name)
                                                    >isSurfaceShader_renderman(name)
                                        >fetchKeyword(name "Blur";)
                                            >isValidShaderTypeForPL(name)
                                                >isValidShaderTypeForPL_renderman(name)
                                                    >isSurfaceShader_renderman(name)
                                        >fetchKeyword(desc "";)
                                            >isValidShaderTypeForPL(desc)
                                                >isValidShaderTypeForPL_renderman(desc)
                                                    >isSurfaceShader_renderman(desc)
                                        >fetchKeyword(desc "";)
                                            >isValidShaderTypeForPL(desc)
                                                >isValidShaderTypeForPL_renderman(desc)
                                                    >isSurfaceShader_renderman(desc)
                                        >fetchKeyword(type "slider";)
                                            >isValidShaderTypeForPL(type)
                                                >isValidShaderTypeForPL_renderman(type)
                                                    >isSurfaceShader_renderman(type)
                                        >fetchKeyword(type "slider";)
                                            >isValidShaderTypeForPL(type)
                                                >isValidShaderTypeForPL_renderman(type)
                                                    >isSurfaceShader_renderman(type)
                                        >fetchKeyword(range [ 0 1 ];)
                                            >isValidShaderTypeForPL(range)
                                                >isValidShaderTypeForPL_renderman(range)
                                                    >isSurfaceShader_renderman(range)
                                        >fetchKeyword(range [ 0 1 ];)
                                            >isValidShaderTypeForPL(range)
                                                >isValidShaderTypeForPL_renderman(range)
                                                    >isSurfaceShader_renderman(range)
                                        >fetchKeyword(param "shadowsamples";)
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword(param "shadowsamples";)
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword(name "Samples";)
                                            >isValidShaderTypeForPL(name)
                                                >isValidShaderTypeForPL_renderman(name)
                                                    >isSurfaceShader_renderman(name)
                                        >fetchKeyword(name "Samples";)
                                            >isValidShaderTypeForPL(name)
                                                >isValidShaderTypeForPL_renderman(name)
                                                    >isSurfaceShader_renderman(name)
                                        >fetchKeyword(desc "";)
                                            >isValidShaderTypeForPL(desc)
                                                >isValidShaderTypeForPL_renderman(desc)
                                                    >isSurfaceShader_renderman(desc)
                                        >fetchKeyword(desc "";)
                                            >isValidShaderTypeForPL(desc)
                                                >isValidShaderTypeForPL_renderman(desc)
                                                    >isSurfaceShader_renderman(desc)
                                        >fetchKeyword(type "slider";)
                                            >isValidShaderTypeForPL(type)
                                                >isValidShaderTypeForPL_renderman(type)
                                                    >isSurfaceShader_renderman(type)
                                        >fetchKeyword(type "slider";)
                                            >isValidShaderTypeForPL(type)
                                                >isValidShaderTypeForPL_renderman(type)
                                                    >isSurfaceShader_renderman(type)
                                        >fetchKeyword(range [ 0 1 ];)
                                            >isValidShaderTypeForPL(range)
                                                >isValidShaderTypeForPL_renderman(range)
                                                    >isSurfaceShader_renderman(range)
                                        >fetchKeyword(range [ 0 1 ];)
                                            >isValidShaderTypeForPL(range)
                                                >isValidShaderTypeForPL_renderman(range)
                                                    >isSurfaceShader_renderman(range)
                                        >fetchKeyword(param "shadowfiltersize";)
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword(param "shadowfiltersize";)
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword(name "Filter Size";)
                                            >isValidShaderTypeForPL(name)
                                                >isValidShaderTypeForPL_renderman(name)
                                                    >isSurfaceShader_renderman(name)
                                        >fetchKeyword(name "Filter Size";)
                                            >isValidShaderTypeForPL(name)
                                                >isValidShaderTypeForPL_renderman(name)
                                                    >isSurfaceShader_renderman(name)
                                        >fetchKeyword(desc "";)
                                            >isValidShaderTypeForPL(desc)
                                                >isValidShaderTypeForPL_renderman(desc)
                                                    >isSurfaceShader_renderman(desc)
                                        >fetchKeyword(desc "";)
                                            >isValidShaderTypeForPL(desc)
                                                >isValidShaderTypeForPL_renderman(desc)
                                                    >isSurfaceShader_renderman(desc)
                                        >fetchKeyword(type "slider";)
                                            >isValidShaderTypeForPL(type)
                                                >isValidShaderTypeForPL_renderman(type)
                                                    >isSurfaceShader_renderman(type)
                                        >fetchKeyword(type "slider";)
                                            >isValidShaderTypeForPL(type)
                                                >isValidShaderTypeForPL_renderman(type)
                                                    >isSurfaceShader_renderman(type)
                                        >fetchKeyword(range [ 0 1 ];)
                                            >isValidShaderTypeForPL(range)
                                                >isValidShaderTypeForPL_renderman(range)
                                                    >isSurfaceShader_renderman(range)
                                        >fetchKeyword(range [ 0 1 ];)
                                            >isValidShaderTypeForPL(range)
                                                >isValidShaderTypeForPL_renderman(range)
                                                    >isSurfaceShader_renderman(range)
                                        >fetchKeyword(param "shadowcolor";)
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword(param "shadowcolor";)
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword(name "Color";)
                                            >isValidShaderTypeForPL(name)
                                                >isValidShaderTypeForPL_renderman(name)
                                                    >isSurfaceShader_renderman(name)
                                        >fetchKeyword(name "Color";)
                                            >isValidShaderTypeForPL(name)
                                                >isValidShaderTypeForPL_renderman(name)
                                                    >isSurfaceShader_renderman(name)
                                        >fetchKeyword(desc "";)
                                            >isValidShaderTypeForPL(desc)
                                                >isValidShaderTypeForPL_renderman(desc)
                                                    >isSurfaceShader_renderman(desc)
                                        >fetchKeyword(desc "";)
                                            >isValidShaderTypeForPL(desc)
                                                >isValidShaderTypeForPL_renderman(desc)
                                                    >isSurfaceShader_renderman(desc)
                                        >fetchKeyword(group "AOVs" "close";)
                                            >isValidShaderTypeForPL(group)
                                                >isValidShaderTypeForPL_renderman(group)
                                                    >isSurfaceShader_renderman(group)
                                        >fetchKeyword(group "AOVs" "close";)
                                            >isValidShaderTypeForPL(group)
                                                >isValidShaderTypeForPL_renderman(group)
                                                    >isSurfaceShader_renderman(group)
                                        >fetchKeyword(param "__shadowF";)
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword(param "__shadowF";)
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword(name "__shadowF";)
                                            >isValidShaderTypeForPL(name)
                                                >isValidShaderTypeForPL_renderman(name)
                                                    >isSurfaceShader_renderman(name)
                                        >fetchKeyword(name "__shadowF";)
                                            >isValidShaderTypeForPL(name)
                                                >isValidShaderTypeForPL_renderman(name)
                                                    >isSurfaceShader_renderman(name)
                                        >fetchKeyword(desc "shadow fraction";)
                                            >isValidShaderTypeForPL(desc)
                                                >isValidShaderTypeForPL_renderman(desc)
                                                    >isSurfaceShader_renderman(desc)
                                        >fetchKeyword(desc "shadow fraction";)
                                            >isValidShaderTypeForPL(desc)
                                                >isValidShaderTypeForPL_renderman(desc)
                                                    >isSurfaceShader_renderman(desc)
                                        >fetchKeyword(param "__shadowC";)
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword(param "__shadowC";)
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword(name "__shadowC";)
                                            >isValidShaderTypeForPL(name)
                                                >isValidShaderTypeForPL_renderman(name)
                                                    >isSurfaceShader_renderman(name)
                                        >fetchKeyword(name "__shadowC";)
                                            >isValidShaderTypeForPL(name)
                                                >isValidShaderTypeForPL_renderman(name)
                                                    >isSurfaceShader_renderman(name)
                                        >fetchKeyword(desc "";)
                                            >isValidShaderTypeForPL(desc)
                                                >isValidShaderTypeForPL_renderman(desc)
                                                    >isSurfaceShader_renderman(desc)
                                        >fetchKeyword(desc "";)
                                            >isValidShaderTypeForPL(desc)
                                                >isValidShaderTypeForPL_renderman(desc)
                                                    >isSurfaceShader_renderman(desc)
                                        >fetchKeyword(param "__unshadowed_Cl";)
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword(param "__unshadowed_Cl";)
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword(name "__unshadowed_Cl";)
                                            >isValidShaderTypeForPL(name)
                                                >isValidShaderTypeForPL_renderman(name)
                                                    >isSurfaceShader_renderman(name)
                                        >fetchKeyword(name "__unshadowed_Cl";)
                                            >isValidShaderTypeForPL(name)
                                                >isValidShaderTypeForPL_renderman(name)
                                                    >isSurfaceShader_renderman(name)
                                        >fetchKeyword(desc "";)
                                            >isValidShaderTypeForPL(desc)
                                                >isValidShaderTypeForPL_renderman(desc)
                                                    >isSurfaceShader_renderman(desc)
                                        >fetchKeyword(desc "";)
                                            >isValidShaderTypeForPL(desc)
                                                >isValidShaderTypeForPL_renderman(desc)
                                                    >isSurfaceShader_renderman(desc)
                                        >fetchKeyword(group "end";)
                                            >isValidShaderTypeForPL(group)
                                                >isValidShaderTypeForPL_renderman(group)
                                                    >isSurfaceShader_renderman(group)
                                        >fetchKeyword(group "end";)
                                            >isValidShaderTypeForPL(group)
                                                >isValidShaderTypeForPL_renderman(group)
                                                    >isSurfaceShader_renderman(group)
                                        >fetchKeyword(group "end";)
                                            >isValidShaderTypeForPL(group)
                                                >isValidShaderTypeForPL_renderman(group)
                                                    >isSurfaceShader_renderman(group)
                                        >fetchKeyword(group "end";)
                                            >isValidShaderTypeForPL(group)
                                                >isValidShaderTypeForPL_renderman(group)
                                                    >isSurfaceShader_renderman(group)
                                >[liquidSlReadLifFromDisk] E:/dev/Autodesk/maya/myplugin/project/liquid_/2.3.3/lib/shaders/liquidpoint.lif, 79 lines, in 1.72 sec.
                                >liquidSlParseReadLif()
                                    >padString(1, ,3,0)
                                >[liquidSlParseLif]   1: >light "liquidpoint"< (start)
                                    >getKeyAndArgs(light "liquidpoint",[)
                                        >fetchKeyword(light "liquidpoint")
                                            >isValidShaderTypeForPL(light)
                                                >isValidShaderTypeForPL_renderman(light)
                                                    >isSurfaceShader_renderman(light)
                                        >fetchKeyword("liquidpoint")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("liquidpoint")
                                        >fetchVectorList("liquidpoint")
                                        >fetchString("liquidpoint")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'light', arguments: "liquidpoint" (start)
                                    >isValidShaderTypeForPL(light)
                                        >isValidShaderTypeForPL_renderman(light)
                                            >isSurfaceShader_renderman(light)
                                    >getValidArgs(1,string,["liquidpoint"], [], [])
                                        >getString("liquidpoint")
                                            >fetchString("liquidpoint")
                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "liquidpoint" reported 0 errors, got 1 results: liquidpoint
                                >[liquidSlParseLif] found shader name: liquidpoint (start)
                                    >padString(2, ,3,0)
                                >[liquidSlParseLif]   2: >desc "Standard Maya-Like Point Light\nPart of Liquid.\n"< (shaderDescription)
                                    >getKeyAndArgs(desc "Standard Maya-Like Point Light\nPart of Liquid.\n",[)
                                        >fetchKeyword(desc "Standard Maya-Like Point Light\nPart of Liquid.\n")
                                            >isValidShaderTypeForPL(desc)
                                                >isValidShaderTypeForPL_renderman(desc)
                                                    >isSurfaceShader_renderman(desc)
                                        >fetchKeyword("Standard Maya-Like Point Light\nPart of Liquid.\n")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("Standard Maya-Like Point Light\nPart of Liquid.\n")
                                        >fetchVectorList("Standard Maya-Like Point Light\nPart of Liquid.\n")
                                        >fetchString("Standard Maya-Like Point Light\nPart of Liquid.\n")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'desc', arguments: "Standard Maya-Like Point Light\nPart of Liquid.\n" (shaderDescription)
                                    >getValidArgs(1,string,["Standard Maya-Like Point Light\nPart of Liquid.\n"], [ ], [])
                                        >getString("Standard Maya-Like Point Light\nPart of Liquid.\n")
                                            >fetchString("Standard Maya-Like Point Light\nPart of Liquid.\n")
                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "Standard Maya-Like Point Light\nPart of Liquid.\n" reported 0 errors, got 1 results: Standard Maya-Like Point Light\nPart of Liquid.\n
                                    >padString(4, ,3,0)
                                >[liquidSlParseLif]   4: >param "__category"< (shaderDescription)
                                    >getKeyAndArgs(param "__category",[)
                                        >fetchKeyword(param "__category")
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword("__category")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("__category")
                                        >fetchVectorList("__category")
                                        >fetchString("__category")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "__category" (shaderDescription)
                                    >getValidArgs(1,string,["__category"], [], [])
                                        >getString("__category")
                                            >fetchString("__category")
                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "__category" reported 0 errors, got 1 results: __category
                                    >getParamIndex(__category)
                                    >padString(5, ,3,0)
                                >[liquidSlParseLif]   5: >name "__category"< (parameterDescription)
                                    >getKeyAndArgs(name "__category",[)
                                        >fetchKeyword(name "__category")
                                            >isValidShaderTypeForPL(name)
                                                >isValidShaderTypeForPL_renderman(name)
                                                    >isSurfaceShader_renderman(name)
                                        >fetchKeyword("__category")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("__category")
                                        >fetchVectorList("__category")
                                        >fetchString("__category")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'name', arguments: "__category" (parameterDescription)
                                    >getValidArgs(-1,string,["__category"], [], [])
                                        >getString("__category")
                                            >fetchString("__category")
                                    >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "__category" reported 0 errors, got 1 results: __category
                                    >padString(7, ,3,0)
                                >[liquidSlParseLif]   7: >param "intensity"< (parameterDescription)
                                    >getKeyAndArgs(param "intensity",[)
                                        >fetchKeyword(param "intensity")
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword("intensity")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("intensity")
                                        >fetchVectorList("intensity")
                                        >fetchString("intensity")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "intensity" (parameterDescription)
                                    >getKeyAndArgs(param "intensity",[)
                                        >fetchKeyword(param "intensity")
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword("intensity")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("intensity")
                                        >fetchVectorList("intensity")
                                        >fetchString("intensity")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "intensity" (shaderDescription)
                                    >getValidArgs(1,string,["intensity"], [], [])
                                        >getString("intensity")
                                            >fetchString("intensity")
                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "intensity" reported 0 errors, got 1 results: intensity
                                    >getParamIndex(intensity)
                                    >padString(8, ,3,0)
                                >[liquidSlParseLif]   8: >name "Intensity"< (parameterDescription)
                                    >getKeyAndArgs(name "Intensity",[)
                                        >fetchKeyword(name "Intensity")
                                            >isValidShaderTypeForPL(name)
                                                >isValidShaderTypeForPL_renderman(name)
                                                    >isSurfaceShader_renderman(name)
                                        >fetchKeyword("Intensity")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("Intensity")
                                        >fetchVectorList("Intensity")
                                        >fetchString("Intensity")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'name', arguments: "Intensity" (parameterDescription)
                                    >getValidArgs(-1,string,["Intensity"], [], [])
                                        >getString("Intensity")
                                            >fetchString("Intensity")
                                    >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "Intensity" reported 0 errors, got 1 results: Intensity
                                    >padString(9, ,3,0)
                                >[liquidSlParseLif]   9: >type "slider"< (parameterDescription)
                                    >getKeyAndArgs(type "slider",[)
                                        >fetchKeyword(type "slider")
                                            >isValidShaderTypeForPL(type)
                                                >isValidShaderTypeForPL_renderman(type)
                                                    >isSurfaceShader_renderman(type)
                                        >fetchKeyword("slider")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("slider")
                                        >fetchVectorList("slider")
                                        >fetchString("slider")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'type', arguments: "slider" (parameterDescription)
                                    >getTypeNames(["slider"], [])
                                        >getValidArgs(-1,string,["slider"], [], [])
                                            >getString("slider")
                                                >fetchString("slider")
                                        >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "slider" reported 0 errors, got 1 results: slider
                                        >liquidGetLifParamTypes()
                                    >padString(11, ,3,0)
                                >[liquidSlParseLif]  11: >param "lightcolor"< (parameterDescription)
                                    >getKeyAndArgs(param "lightcolor",[)
                                        >fetchKeyword(param "lightcolor")
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword("lightcolor")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("lightcolor")
                                        >fetchVectorList("lightcolor")
                                        >fetchString("lightcolor")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "lightcolor" (parameterDescription)
                                    >getKeyAndArgs(param "lightcolor",[)
                                        >fetchKeyword(param "lightcolor")
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword("lightcolor")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("lightcolor")
                                        >fetchVectorList("lightcolor")
                                        >fetchString("lightcolor")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "lightcolor" (shaderDescription)
                                    >getValidArgs(1,string,["lightcolor"], [], [])
                                        >getString("lightcolor")
                                            >fetchString("lightcolor")
                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "lightcolor" reported 0 errors, got 1 results: lightcolor
                                    >getParamIndex(lightcolor)
                                    >padString(12, ,3,0)
                                >[liquidSlParseLif]  12: >name "Light Color"< (parameterDescription)
                                    >getKeyAndArgs(name "Light Color",[)
                                        >fetchKeyword(name "Light Color")
                                            >isValidShaderTypeForPL(name)
                                                >isValidShaderTypeForPL_renderman(name)
                                                    >isSurfaceShader_renderman(name)
                                        >fetchKeyword("Light Color")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("Light Color")
                                        >fetchVectorList("Light Color")
                                        >fetchString("Light Color")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'name', arguments: "Light Color" (parameterDescription)
                                    >getValidArgs(-1,string,["Light Color"], [], [])
                                        >getString("Light Color")
                                            >fetchString("Light Color")
                                    >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "Light Color" reported 0 errors, got 1 results: Light Color
                                    >padString(13, ,3,0)
                                >[liquidSlParseLif]  13: >desc ""< (parameterDescription)
                                    >getKeyAndArgs(desc "",[)
                                        >fetchKeyword(desc "")
                                            >isValidShaderTypeForPL(desc)
                                                >isValidShaderTypeForPL_renderman(desc)
                                                    >isSurfaceShader_renderman(desc)
                                        >fetchKeyword("")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("")
                                        >fetchVectorList("")
                                        >fetchString("")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'desc', arguments: "" (parameterDescription)
                                    >getValidArgs(1,string,[""], [], [])
                                        >getString("")
                                            >fetchString("")
// Warning: file: E:/dev/autodesk/maya/myplugin/project/liquid_/2.3.3/mel/liquidSlParseLif.mel line 557: Starting position (2) is greater than ending position (1) in substring command.  An empty string will be returned. // 
                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "" reported 0 errors, got 1 results: 
                                    >padString(15, ,3,0)
                                >[liquidSlParseLif]  15: >param "__nondiffuse"< (parameterDescription)
                                    >getKeyAndArgs(param "__nondiffuse",[)
                                        >fetchKeyword(param "__nondiffuse")
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword("__nondiffuse")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("__nondiffuse")
                                        >fetchVectorList("__nondiffuse")
                                        >fetchString("__nondiffuse")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "__nondiffuse" (parameterDescription)
                                    >getKeyAndArgs(param "__nondiffuse",[)
                                        >fetchKeyword(param "__nondiffuse")
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword("__nondiffuse")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("__nondiffuse")
                                        >fetchVectorList("__nondiffuse")
                                        >fetchString("__nondiffuse")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "__nondiffuse" (shaderDescription)
                                    >getValidArgs(1,string,["__nondiffuse"], [], [])
                                        >getString("__nondiffuse")
                                            >fetchString("__nondiffuse")
                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "__nondiffuse" reported 0 errors, got 1 results: __nondiffuse
                                    >getParamIndex(__nondiffuse)
                                    >padString(16, ,3,0)
                                >[liquidSlParseLif]  16: >name "Non Diffuse"< (parameterDescription)
                                    >getKeyAndArgs(name "Non Diffuse",[)
                                        >fetchKeyword(name "Non Diffuse")
                                            >isValidShaderTypeForPL(name)
                                                >isValidShaderTypeForPL_renderman(name)
                                                    >isSurfaceShader_renderman(name)
                                        >fetchKeyword("Non Diffuse")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("Non Diffuse")
                                        >fetchVectorList("Non Diffuse")
                                        >fetchString("Non Diffuse")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'name', arguments: "Non Diffuse" (parameterDescription)
                                    >getValidArgs(-1,string,["Non Diffuse"], [], [])
                                        >getString("Non Diffuse")
                                            >fetchString("Non Diffuse")
                                    >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "Non Diffuse" reported 0 errors, got 1 results: Non Diffuse
                                    >padString(17, ,3,0)
                                >[liquidSlParseLif]  17: >type "bool"< (parameterDescription)
                                    >getKeyAndArgs(type "bool",[)
                                        >fetchKeyword(type "bool")
                                            >isValidShaderTypeForPL(type)
                                                >isValidShaderTypeForPL_renderman(type)
                                                    >isSurfaceShader_renderman(type)
                                        >fetchKeyword("bool")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("bool")
                                        >fetchVectorList("bool")
                                        >fetchString("bool")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'type', arguments: "bool" (parameterDescription)
                                    >getTypeNames(["bool"], [])
                                        >getValidArgs(-1,string,["bool"], [], [])
                                            >getString("bool")
                                                >fetchString("bool")
                                        >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "bool" reported 0 errors, got 1 results: bool
                                        >liquidGetLifParamTypes()
                                    >padString(19, ,3,0)
                                >[liquidSlParseLif]  19: >param "__nonspecular"< (parameterDescription)
                                    >getKeyAndArgs(param "__nonspecular",[)
                                        >fetchKeyword(param "__nonspecular")
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword("__nonspecular")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("__nonspecular")
                                        >fetchVectorList("__nonspecular")
                                        >fetchString("__nonspecular")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "__nonspecular" (parameterDescription)
                                    >getKeyAndArgs(param "__nonspecular",[)
                                        >fetchKeyword(param "__nonspecular")
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword("__nonspecular")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("__nonspecular")
                                        >fetchVectorList("__nonspecular")
                                        >fetchString("__nonspecular")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "__nonspecular" (shaderDescription)
                                    >getValidArgs(1,string,["__nonspecular"], [], [])
                                        >getString("__nonspecular")
                                            >fetchString("__nonspecular")
                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "__nonspecular" reported 0 errors, got 1 results: __nonspecular
                                    >getParamIndex(__nonspecular)
                                    >padString(20, ,3,0)
                                >[liquidSlParseLif]  20: >name "Non Specular"< (parameterDescription)
                                    >getKeyAndArgs(name "Non Specular",[)
                                        >fetchKeyword(name "Non Specular")
                                            >isValidShaderTypeForPL(name)
                                                >isValidShaderTypeForPL_renderman(name)
                                                    >isSurfaceShader_renderman(name)
                                        >fetchKeyword("Non Specular")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("Non Specular")
                                        >fetchVectorList("Non Specular")
                                        >fetchString("Non Specular")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'name', arguments: "Non Specular" (parameterDescription)
                                    >getValidArgs(-1,string,["Non Specular"], [], [])
                                        >getString("Non Specular")
                                            >fetchString("Non Specular")
                                    >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "Non Specular" reported 0 errors, got 1 results: Non Specular
                                    >padString(21, ,3,0)
                                >[liquidSlParseLif]  21: >type "bool"< (parameterDescription)
                                    >getKeyAndArgs(type "bool",[)
                                        >fetchKeyword(type "bool")
                                            >isValidShaderTypeForPL(type)
                                                >isValidShaderTypeForPL_renderman(type)
                                                    >isSurfaceShader_renderman(type)
                                        >fetchKeyword("bool")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("bool")
                                        >fetchVectorList("bool")
                                        >fetchString("bool")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'type', arguments: "bool" (parameterDescription)
                                    >getTypeNames(["bool"], [])
                                        >getValidArgs(-1,string,["bool"], [], [])
                                            >getString("bool")
                                                >fetchString("bool")
                                        >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "bool" reported 0 errors, got 1 results: bool
                                        >liquidGetLifParamTypes()
                                    >padString(24, ,3,0)
                                >[liquidSlParseLif]  24: >param "decay"< (parameterDescription)
                                    >getKeyAndArgs(param "decay",[)
                                        >fetchKeyword(param "decay")
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword("decay")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("decay")
                                        >fetchVectorList("decay")
                                        >fetchString("decay")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "decay" (parameterDescription)
                                    >getKeyAndArgs(param "decay",[)
                                        >fetchKeyword(param "decay")
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword("decay")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("decay")
                                        >fetchVectorList("decay")
                                        >fetchString("decay")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "decay" (shaderDescription)
                                    >getValidArgs(1,string,["decay"], [], [])
                                        >getString("decay")
                                            >fetchString("decay")
                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "decay" reported 0 errors, got 1 results: decay
                                    >getParamIndex(decay)
                                    >padString(25, ,3,0)
                                >[liquidSlParseLif]  25: >name "Decay"< (parameterDescription)
                                    >getKeyAndArgs(name "Decay",[)
                                        >fetchKeyword(name "Decay")
                                            >isValidShaderTypeForPL(name)
                                                >isValidShaderTypeForPL_renderman(name)
                                                    >isSurfaceShader_renderman(name)
                                        >fetchKeyword("Decay")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("Decay")
                                        >fetchVectorList("Decay")
                                        >fetchString("Decay")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'name', arguments: "Decay" (parameterDescription)
                                    >getValidArgs(-1,string,["Decay"], [], [])
                                        >getString("Decay")
                                            >fetchString("Decay")
                                    >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "Decay" reported 0 errors, got 1 results: Decay
                                    >padString(26, ,3,0)
                                >[liquidSlParseLif]  26: >desc ""< (parameterDescription)
                                    >getKeyAndArgs(desc "",[)
                                        >fetchKeyword(desc "")
                                            >isValidShaderTypeForPL(desc)
                                                >isValidShaderTypeForPL_renderman(desc)
                                                    >isSurfaceShader_renderman(desc)
                                        >fetchKeyword("")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("")
                                        >fetchVectorList("")
                                        >fetchString("")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'desc', arguments: "" (parameterDescription)
                                    >getValidArgs(1,string,[""], [], [])
                                        >getString("")
                                            >fetchString("")
// Warning: file: E:/dev/autodesk/maya/myplugin/project/liquid_/2.3.3/mel/liquidSlParseLif.mel line 557: Starting position (2) is greater than ending position (1) in substring command.  An empty string will be returned. // 
                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "" reported 0 errors, got 1 results: 
                                    >padString(27, ,3,0)
                                >[liquidSlParseLif]  27: >type "selector"< (parameterDescription)
                                    >getKeyAndArgs(type "selector",[)
                                        >fetchKeyword(type "selector")
                                            >isValidShaderTypeForPL(type)
                                                >isValidShaderTypeForPL_renderman(type)
                                                    >isSurfaceShader_renderman(type)
                                        >fetchKeyword("selector")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("selector")
                                        >fetchVectorList("selector")
                                        >fetchString("selector")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'type', arguments: "selector" (parameterDescription)
                                    >getTypeNames(["selector"], [])
                                        >getValidArgs(-1,string,["selector"], [], [])
                                            >getString("selector")
                                                >fetchString("selector")
                                        >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "selector" reported 0 errors, got 1 results: selector
                                        >liquidGetLifParamTypes()
                                    >padString(28, ,3,0)
                                >[liquidSlParseLif]  28: >range [ "None" 0 "Linear" 1 "Quadratic" 2 "Cubic" 3 ]< (parameterDescription)
                                    >getKeyAndArgs(range [ "None" 0 "Linear" 1 "Quadratic" 2 "Cubic" 3 ],[)
                                        >fetchKeyword(range [ "None" 0 "Linear" 1 "Quadratic" 2 "Cubic" 3 ])
                                            >isValidShaderTypeForPL(range)
                                                >isValidShaderTypeForPL_renderman(range)
                                                    >isSurfaceShader_renderman(range)
                                        >fetchKeyword([ "None" 0 "Linear" 1 "Quadratic" 2 "Cubic" 3 ])
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList([ "None" 0 "Linear" 1 "Quadratic" 2 "Cubic" 3 ])
                                            >fetchString( "None" 0 "Linear" 1 "Quadratic" 2 "Cubic" 3 ])
                                            >fetchVectorList( "None" 0 "Linear" 1 "Quadratic" 2 "Cubic" 3 ])
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'range', arguments: [ "None" 0 "Linear" 1 "Quadratic" 2 "Cubic" 3 ] (parameterDescription)
                                    >getSelectorRange([[ "None" 0 "Linear" 1 "Quadratic" 2 "Cubic" 3 ]], float, [])
                                        >getRange([[ "None" 0 "Linear" 1 "Quadratic" 2 "Cubic" 3 ]], [])
                                            >fetchVectorList("None" 0 "Linear" 1 "Quadratic" 2 "Cubic" 3)
                                            >fetchString("None" 0 "Linear" 1 "Quadratic" 2 "Cubic" 3)
                                            >fetchVectorList(0 "Linear" 1 "Quadratic" 2 "Cubic" 3)
                                            >fetchString(0 "Linear" 1 "Quadratic" 2 "Cubic" 3)
                                            >fetchVectorList("Linear" 1 "Quadratic" 2 "Cubic" 3)
                                            >fetchString("Linear" 1 "Quadratic" 2 "Cubic" 3)
                                            >fetchVectorList(1 "Quadratic" 2 "Cubic" 3)
                                            >fetchString(1 "Quadratic" 2 "Cubic" 3)
                                            >fetchVectorList("Quadratic" 2 "Cubic" 3)
                                            >fetchString("Quadratic" 2 "Cubic" 3)
                                            >fetchVectorList(2 "Cubic" 3)
                                            >fetchString(2 "Cubic" 3)
                                            >fetchVectorList("Cubic" 3)
                                            >fetchString("Cubic" 3)
                                            >fetchVectorList(3)
                                            >fetchString(3)
                                        >[liquidSlParseLif.getRange] parsed range arguments [ "None" 0 "Linear" 1 "Quadratic" 2 "Cubic" 3 ] into: "None"|0|"Linear"|1|"Quadratic"|2|"Cubic"|3
                                        >getString("None")
                                            >fetchString("None")
                                        >getFloat(0)
                                            >liquidSlValidFloatString(0)
                                                >isValidIntPart(0)
                                                >isNonEmptyIntPart(0)
                                                    >isValidIntPart(0)
                                                >isValidExpPart()
                                        >getString("Linear")
                                            >fetchString("Linear")
                                        >getFloat(1)
                                            >liquidSlValidFloatString(1)
                                                >isValidIntPart(1)
                                                >isNonEmptyIntPart(1)
                                                    >isValidIntPart(1)
                                                >isValidExpPart()
                                        >getString("Quadratic")
                                            >fetchString("Quadratic")
                                        >getFloat(2)
                                            >liquidSlValidFloatString(2)
                                                >isValidIntPart(2)
                                                >isNonEmptyIntPart(2)
                                                    >isValidIntPart(2)
                                                >isValidExpPart()
                                        >getString("Cubic")
                                            >fetchString("Cubic")
                                        >getFloat(3)
                                            >liquidSlValidFloatString(3)
                                                >isValidIntPart(3)
                                                >isNonEmptyIntPart(3)
                                                    >isValidIntPart(3)
                                                >isValidExpPart()
                                    >[liquidSlParseLif.getSliderRange] got 8 valid entries (pairs) out of 4 elements
                                    >padString(30, ,3,0)
                                >[liquidSlParseLif]  30: >param "lightID"< (parameterDescription)
                                    >getKeyAndArgs(param "lightID",[)
                                        >fetchKeyword(param "lightID")
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword("lightID")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("lightID")
                                        >fetchVectorList("lightID")
                                        >fetchString("lightID")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "lightID" (parameterDescription)
                                    >getKeyAndArgs(param "lightID",[)
                                        >fetchKeyword(param "lightID")
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword("lightID")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("lightID")
                                        >fetchVectorList("lightID")
                                        >fetchString("lightID")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "lightID" (shaderDescription)
                                    >getValidArgs(1,string,["lightID"], [], [])
                                        >getString("lightID")
                                            >fetchString("lightID")
                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "lightID" reported 0 errors, got 1 results: lightID
                                    >getParamIndex(lightID)
                                    >padString(31, ,3,0)
                                >[liquidSlParseLif]  31: >name "lightID"< (parameterDescription)
                                    >getKeyAndArgs(name "lightID",[)
                                        >fetchKeyword(name "lightID")
                                            >isValidShaderTypeForPL(name)
                                                >isValidShaderTypeForPL_renderman(name)
                                                    >isSurfaceShader_renderman(name)
                                        >fetchKeyword("lightID")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("lightID")
                                        >fetchVectorList("lightID")
                                        >fetchString("lightID")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'name', arguments: "lightID" (parameterDescription)
                                    >getValidArgs(-1,string,["lightID"], [], [])
                                        >getString("lightID")
                                            >fetchString("lightID")
                                    >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "lightID" reported 0 errors, got 1 results: lightID
                                    >padString(33, ,3,0)
                                >[liquidSlParseLif]  33: >group "Shadows"< (parameterDescription)
                                    >getKeyAndArgs(group "Shadows",[)
                                        >fetchKeyword(group "Shadows")
                                            >isValidShaderTypeForPL(group)
                                                >isValidShaderTypeForPL_renderman(group)
                                                    >isSurfaceShader_renderman(group)
                                        >fetchKeyword("Shadows")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("Shadows")
                                        >fetchVectorList("Shadows")
                                        >fetchString("Shadows")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'group', arguments: "Shadows" (parameterDescription)
                                    >getKeyAndArgs(group "Shadows",[)
                                        >fetchKeyword(group "Shadows")
                                            >isValidShaderTypeForPL(group)
                                                >isValidShaderTypeForPL_renderman(group)
                                                    >isSurfaceShader_renderman(group)
                                        >fetchKeyword("Shadows")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("Shadows")
                                        >fetchVectorList("Shadows")
                                        >fetchString("Shadows")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'group', arguments: "Shadows" (shaderDescription)
                                    >getValidArgs(1,string,["Shadows"], [group0], [])
                                        >getString("Shadows")
                                            >fetchString("Shadows")
                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "Shadows" reported 0 errors, got 1 results: Shadows
                                    >padString(35, ,3,0)
                                >[liquidSlParseLif]  35: >group "Maps" "close"< (groupDescription)
                                    >getKeyAndArgs(group "Maps" "close",[)
                                        >fetchKeyword(group "Maps" "close")
                                            >isValidShaderTypeForPL(group)
                                                >isValidShaderTypeForPL_renderman(group)
                                                    >isSurfaceShader_renderman(group)
                                        >fetchKeyword("Maps" "close")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("Maps" "close")
                                        >fetchVectorList("Maps" "close")
                                        >fetchString("Maps" "close")
                                        >fetchKeyword("close")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("close")
                                        >fetchVectorList("close")
                                        >fetchString("close")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'group', arguments: "Maps" "close" (groupDescription)
                                    >getKeyAndArgs(group "Maps" "close",[)
                                        >fetchKeyword(group "Maps" "close")
                                            >isValidShaderTypeForPL(group)
                                                >isValidShaderTypeForPL_renderman(group)
                                                    >isSurfaceShader_renderman(group)
                                        >fetchKeyword("Maps" "close")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("Maps" "close")
                                        >fetchVectorList("Maps" "close")
                                        >fetchString("Maps" "close")
                                        >fetchKeyword("close")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("close")
                                        >fetchVectorList("close")
                                        >fetchString("close")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'group', arguments: "Maps" "close" (shaderDescription)
                                    >getValidArgs(1,string,["Maps" "close"], [group1], [])
                                        >getString("Maps")
                                            >fetchString("Maps")
                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "Maps" "close" reported 1 errors, got 1 results: Maps
                                    >padString(35,0,3,0)
// Error: file: E:/dev/autodesk/maya/myplugin/project/liquid_/2.3.3/mel/liquidSlParseLif.mel line 2003: [liquidSlParseLif] 035: >group "Maps" "close"< (groupDescription) // 
// Error: file: E:/dev/autodesk/maya/myplugin/project/liquid_/2.3.3/mel/liquidSlParseLif.mel line 2007: [liquidSlParseLif] group: only requests 1 string argument(s), rest were ignored // 
                                >[liquidSlParseLif] group: only requests 1 string argument(s), rest were ignored
                                >[liquidSlParseLif] total of 1 errors in line 35 of E:/dev/Autodesk/maya/myplugin/project/liquid_/2.3.3/lib/shaders/liquidpoint.lif (groupDescription)
                                    >padString(37, ,3,0)
                                >[liquidSlParseLif]  37: >param "shadownamepx"< (groupDescription)
                                    >getKeyAndArgs(param "shadownamepx",[)
                                        >fetchKeyword(param "shadownamepx")
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword("shadownamepx")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("shadownamepx")
                                        >fetchVectorList("shadownamepx")
                                        >fetchString("shadownamepx")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "shadownamepx" (groupDescription)
                                    >getKeyAndArgs(param "shadownamepx",[)
                                        >fetchKeyword(param "shadownamepx")
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword("shadownamepx")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("shadownamepx")
                                        >fetchVectorList("shadownamepx")
                                        >fetchString("shadownamepx")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "shadownamepx" (shaderDescription)
                                    >getValidArgs(1,string,["shadownamepx"], [], [])
                                        >getString("shadownamepx")
                                            >fetchString("shadownamepx")
                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "shadownamepx" reported 0 errors, got 1 results: shadownamepx
                                    >getParamIndex(shadownamepx)
                                    >padString(38, ,3,0)
                                >[liquidSlParseLif]  38: >name "shadownamepx"< (parameterDescription)
                                    >getKeyAndArgs(name "shadownamepx",[)
                                        >fetchKeyword(name "shadownamepx")
                                            >isValidShaderTypeForPL(name)
                                                >isValidShaderTypeForPL_renderman(name)
                                                    >isSurfaceShader_renderman(name)
                                        >fetchKeyword("shadownamepx")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("shadownamepx")
                                        >fetchVectorList("shadownamepx")
                                        >fetchString("shadownamepx")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'name', arguments: "shadownamepx" (parameterDescription)
                                    >getValidArgs(-1,string,["shadownamepx"], [], [])
                                        >getString("shadownamepx")
                                            >fetchString("shadownamepx")
                                    >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "shadownamepx" reported 0 errors, got 1 results: shadownamepx
                                    >padString(39, ,3,0)
                                >[liquidSlParseLif]  39: >type "shadow"< (parameterDescription)
                                    >getKeyAndArgs(type "shadow",[)
                                        >fetchKeyword(type "shadow")
                                            >isValidShaderTypeForPL(type)
                                                >isValidShaderTypeForPL_renderman(type)
                                                    >isSurfaceShader_renderman(type)
                                        >fetchKeyword("shadow")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("shadow")
                                        >fetchVectorList("shadow")
                                        >fetchString("shadow")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'type', arguments: "shadow" (parameterDescription)
                                    >getTypeNames(["shadow"], [])
                                        >getValidArgs(-1,string,["shadow"], [], [])
                                            >getString("shadow")
                                                >fetchString("shadow")
                                        >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "shadow" reported 0 errors, got 1 results: shadow
                                        >liquidGetLifParamTypes()
                                    >padString(41, ,3,0)
                                >[liquidSlParseLif]  41: >param "shadownamenx"< (parameterDescription)
                                    >getKeyAndArgs(param "shadownamenx",[)
                                        >fetchKeyword(param "shadownamenx")
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword("shadownamenx")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("shadownamenx")
                                        >fetchVectorList("shadownamenx")
                                        >fetchString("shadownamenx")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "shadownamenx" (parameterDescription)
                                    >getKeyAndArgs(param "shadownamenx",[)
                                        >fetchKeyword(param "shadownamenx")
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword("shadownamenx")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("shadownamenx")
                                        >fetchVectorList("shadownamenx")
                                        >fetchString("shadownamenx")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "shadownamenx" (shaderDescription)
                                    >getValidArgs(1,string,["shadownamenx"], [], [])
                                        >getString("shadownamenx")
                                            >fetchString("shadownamenx")
                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "shadownamenx" reported 0 errors, got 1 results: shadownamenx
                                    >getParamIndex(shadownamenx)
                                    >padString(42, ,3,0)
                                >[liquidSlParseLif]  42: >name "shadownamenx"< (parameterDescription)
                                    >getKeyAndArgs(name "shadownamenx",[)
                                        >fetchKeyword(name "shadownamenx")
                                            >isValidShaderTypeForPL(name)
                                                >isValidShaderTypeForPL_renderman(name)
                                                    >isSurfaceShader_renderman(name)
                                        >fetchKeyword("shadownamenx")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("shadownamenx")
                                        >fetchVectorList("shadownamenx")
                                        >fetchString("shadownamenx")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'name', arguments: "shadownamenx" (parameterDescription)
                                    >getValidArgs(-1,string,["shadownamenx"], [], [])
                                        >getString("shadownamenx")
                                            >fetchString("shadownamenx")
                                    >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "shadownamenx" reported 0 errors, got 1 results: shadownamenx
                                    >padString(43, ,3,0)
                                >[liquidSlParseLif]  43: >type "shadow"< (parameterDescription)
                                    >getKeyAndArgs(type "shadow",[)
                                        >fetchKeyword(type "shadow")
                                            >isValidShaderTypeForPL(type)
                                                >isValidShaderTypeForPL_renderman(type)
                                                    >isSurfaceShader_renderman(type)
                                        >fetchKeyword("shadow")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("shadow")
                                        >fetchVectorList("shadow")
                                        >fetchString("shadow")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'type', arguments: "shadow" (parameterDescription)
                                    >getTypeNames(["shadow"], [])
                                        >getValidArgs(-1,string,["shadow"], [], [])
                                            >getString("shadow")
                                                >fetchString("shadow")
                                        >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "shadow" reported 0 errors, got 1 results: shadow
                                        >liquidGetLifParamTypes()
                                    >padString(45, ,3,0)
                                >[liquidSlParseLif]  45: >param "shadownamepy"< (parameterDescription)
                                    >getKeyAndArgs(param "shadownamepy",[)
                                        >fetchKeyword(param "shadownamepy")
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword("shadownamepy")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("shadownamepy")
                                        >fetchVectorList("shadownamepy")
                                        >fetchString("shadownamepy")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "shadownamepy" (parameterDescription)
                                    >getKeyAndArgs(param "shadownamepy",[)
                                        >fetchKeyword(param "shadownamepy")
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword("shadownamepy")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("shadownamepy")
                                        >fetchVectorList("shadownamepy")
                                        >fetchString("shadownamepy")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "shadownamepy" (shaderDescription)
                                    >getValidArgs(1,string,["shadownamepy"], [], [])
                                        >getString("shadownamepy")
                                            >fetchString("shadownamepy")
                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "shadownamepy" reported 0 errors, got 1 results: shadownamepy
                                    >getParamIndex(shadownamepy)
                                    >padString(46, ,3,0)
                                >[liquidSlParseLif]  46: >name "shadownamepy"< (parameterDescription)
                                    >getKeyAndArgs(name "shadownamepy",[)
                                        >fetchKeyword(name "shadownamepy")
                                            >isValidShaderTypeForPL(name)
                                                >isValidShaderTypeForPL_renderman(name)
                                                    >isSurfaceShader_renderman(name)
                                        >fetchKeyword("shadownamepy")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("shadownamepy")
                                        >fetchVectorList("shadownamepy")
                                        >fetchString("shadownamepy")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'name', arguments: "shadownamepy" (parameterDescription)
                                    >getValidArgs(-1,string,["shadownamepy"], [], [])
                                        >getString("shadownamepy")
                                            >fetchString("shadownamepy")
                                    >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "shadownamepy" reported 0 errors, got 1 results: shadownamepy
                                    >padString(47, ,3,0)
                                >[liquidSlParseLif]  47: >type "shadow"< (parameterDescription)
                                    >getKeyAndArgs(type "shadow",[)
                                        >fetchKeyword(type "shadow")
                                            >isValidShaderTypeForPL(type)
                                                >isValidShaderTypeForPL_renderman(type)
                                                    >isSurfaceShader_renderman(type)
                                        >fetchKeyword("shadow")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("shadow")
                                        >fetchVectorList("shadow")
                                        >fetchString("shadow")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'type', arguments: "shadow" (parameterDescription)
                                    >getTypeNames(["shadow"], [])
                                        >getValidArgs(-1,string,["shadow"], [], [])
                                            >getString("shadow")
                                                >fetchString("shadow")
                                        >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "shadow" reported 0 errors, got 1 results: shadow
                                        >liquidGetLifParamTypes()
                                    >padString(49, ,3,0)
                                >[liquidSlParseLif]  49: >param "shadownameny"< (parameterDescription)
                                    >getKeyAndArgs(param "shadownameny",[)
                                        >fetchKeyword(param "shadownameny")
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword("shadownameny")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("shadownameny")
                                        >fetchVectorList("shadownameny")
                                        >fetchString("shadownameny")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "shadownameny" (parameterDescription)
                                    >getKeyAndArgs(param "shadownameny",[)
                                        >fetchKeyword(param "shadownameny")
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword("shadownameny")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("shadownameny")
                                        >fetchVectorList("shadownameny")
                                        >fetchString("shadownameny")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "shadownameny" (shaderDescription)
                                    >getValidArgs(1,string,["shadownameny"], [], [])
                                        >getString("shadownameny")
                                            >fetchString("shadownameny")
                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "shadownameny" reported 0 errors, got 1 results: shadownameny
                                    >getParamIndex(shadownameny)
                                    >padString(50, ,3,0)
                                >[liquidSlParseLif]  50: >name "shadownameny"< (parameterDescription)
                                    >getKeyAndArgs(name "shadownameny",[)
                                        >fetchKeyword(name "shadownameny")
                                            >isValidShaderTypeForPL(name)
                                                >isValidShaderTypeForPL_renderman(name)
                                                    >isSurfaceShader_renderman(name)
                                        >fetchKeyword("shadownameny")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("shadownameny")
                                        >fetchVectorList("shadownameny")
                                        >fetchString("shadownameny")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'name', arguments: "shadownameny" (parameterDescription)
                                    >getValidArgs(-1,string,["shadownameny"], [], [])
                                        >getString("shadownameny")
                                            >fetchString("shadownameny")
                                    >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "shadownameny" reported 0 errors, got 1 results: shadownameny
                                    >padString(51, ,3,0)
                                >[liquidSlParseLif]  51: >type "shadow"< (parameterDescription)
                                    >getKeyAndArgs(type "shadow",[)
                                        >fetchKeyword(type "shadow")
                                            >isValidShaderTypeForPL(type)
                                                >isValidShaderTypeForPL_renderman(type)
                                                    >isSurfaceShader_renderman(type)
                                        >fetchKeyword("shadow")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("shadow")
                                        >fetchVectorList("shadow")
                                        >fetchString("shadow")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'type', arguments: "shadow" (parameterDescription)
                                    >getTypeNames(["shadow"], [])
                                        >getValidArgs(-1,string,["shadow"], [], [])
                                            >getString("shadow")
                                                >fetchString("shadow")
                                        >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "shadow" reported 0 errors, got 1 results: shadow
                                        >liquidGetLifParamTypes()
                                    >padString(53, ,3,0)
                                >[liquidSlParseLif]  53: >param "shadownamepz"< (parameterDescription)
                                    >getKeyAndArgs(param "shadownamepz",[)
                                        >fetchKeyword(param "shadownamepz")
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword("shadownamepz")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("shadownamepz")
                                        >fetchVectorList("shadownamepz")
                                        >fetchString("shadownamepz")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "shadownamepz" (parameterDescription)
                                    >getKeyAndArgs(param "shadownamepz",[)
                                        >fetchKeyword(param "shadownamepz")
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword("shadownamepz")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("shadownamepz")
                                        >fetchVectorList("shadownamepz")
                                        >fetchString("shadownamepz")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "shadownamepz" (shaderDescription)
                                    >getValidArgs(1,string,["shadownamepz"], [], [])
                                        >getString("shadownamepz")
                                            >fetchString("shadownamepz")
                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "shadownamepz" reported 0 errors, got 1 results: shadownamepz
                                    >getParamIndex(shadownamepz)
                                    >padString(54, ,3,0)
                                >[liquidSlParseLif]  54: >name "shadownamepz"< (parameterDescription)
                                    >getKeyAndArgs(name "shadownamepz",[)
                                        >fetchKeyword(name "shadownamepz")
                                            >isValidShaderTypeForPL(name)
                                                >isValidShaderTypeForPL_renderman(name)
                                                    >isSurfaceShader_renderman(name)
                                        >fetchKeyword("shadownamepz")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("shadownamepz")
                                        >fetchVectorList("shadownamepz")
                                        >fetchString("shadownamepz")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'name', arguments: "shadownamepz" (parameterDescription)
                                    >getValidArgs(-1,string,["shadownamepz"], [], [])
                                        >getString("shadownamepz")
                                            >fetchString("shadownamepz")
                                    >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "shadownamepz" reported 0 errors, got 1 results: shadownamepz
                                    >padString(55, ,3,0)
                                >[liquidSlParseLif]  55: >type "shadow"< (parameterDescription)
                                    >getKeyAndArgs(type "shadow",[)
                                        >fetchKeyword(type "shadow")
                                            >isValidShaderTypeForPL(type)
                                                >isValidShaderTypeForPL_renderman(type)
                                                    >isSurfaceShader_renderman(type)
                                        >fetchKeyword("shadow")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("shadow")
                                        >fetchVectorList("shadow")
                                        >fetchString("shadow")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'type', arguments: "shadow" (parameterDescription)
                                    >getTypeNames(["shadow"], [])
                                        >getValidArgs(-1,string,["shadow"], [], [])
                                            >getString("shadow")
                                                >fetchString("shadow")
                                        >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "shadow" reported 0 errors, got 1 results: shadow
                                        >liquidGetLifParamTypes()
                                    >padString(57, ,3,0)
                                >[liquidSlParseLif]  57: >param "shadownamenz"< (parameterDescription)
                                    >getKeyAndArgs(param "shadownamenz",[)
                                        >fetchKeyword(param "shadownamenz")
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword("shadownamenz")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("shadownamenz")
                                        >fetchVectorList("shadownamenz")
                                        >fetchString("shadownamenz")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "shadownamenz" (parameterDescription)
                                    >getKeyAndArgs(param "shadownamenz",[)
                                        >fetchKeyword(param "shadownamenz")
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword("shadownamenz")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("shadownamenz")
                                        >fetchVectorList("shadownamenz")
                                        >fetchString("shadownamenz")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "shadownamenz" (shaderDescription)
                                    >getValidArgs(1,string,["shadownamenz"], [], [])
                                        >getString("shadownamenz")
                                            >fetchString("shadownamenz")
                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "shadownamenz" reported 0 errors, got 1 results: shadownamenz
                                    >getParamIndex(shadownamenz)
                                    >padString(58, ,3,0)
                                >[liquidSlParseLif]  58: >name "shadownamenz"< (parameterDescription)
                                    >getKeyAndArgs(name "shadownamenz",[)
                                        >fetchKeyword(name "shadownamenz")
                                            >isValidShaderTypeForPL(name)
                                                >isValidShaderTypeForPL_renderman(name)
                                                    >isSurfaceShader_renderman(name)
                                        >fetchKeyword("shadownamenz")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("shadownamenz")
                                        >fetchVectorList("shadownamenz")
                                        >fetchString("shadownamenz")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'name', arguments: "shadownamenz" (parameterDescription)
                                    >getValidArgs(-1,string,["shadownamenz"], [], [])
                                        >getString("shadownamenz")
                                            >fetchString("shadownamenz")
                                    >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "shadownamenz" reported 0 errors, got 1 results: shadownamenz
                                    >padString(59, ,3,0)
                                >[liquidSlParseLif]  59: >type "shadow"< (parameterDescription)
                                    >getKeyAndArgs(type "shadow",[)
                                        >fetchKeyword(type "shadow")
                                            >isValidShaderTypeForPL(type)
                                                >isValidShaderTypeForPL_renderman(type)
                                                    >isSurfaceShader_renderman(type)
                                        >fetchKeyword("shadow")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("shadow")
                                        >fetchVectorList("shadow")
                                        >fetchString("shadow")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'type', arguments: "shadow" (parameterDescription)
                                    >getTypeNames(["shadow"], [])
                                        >getValidArgs(-1,string,["shadow"], [], [])
                                            >getString("shadow")
                                                >fetchString("shadow")
                                        >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "shadow" reported 0 errors, got 1 results: shadow
                                        >liquidGetLifParamTypes()
                                    >padString(61, ,3,0)
                                >[liquidSlParseLif]  61: >group "end"< (parameterDescription)
                                    >getKeyAndArgs(group "end",[)
                                        >fetchKeyword(group "end")
                                            >isValidShaderTypeForPL(group)
                                                >isValidShaderTypeForPL_renderman(group)
                                                    >isSurfaceShader_renderman(group)
                                        >fetchKeyword("end")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("end")
                                        >fetchVectorList("end")
                                        >fetchString("end")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'group', arguments: "end" (parameterDescription)
                                    >getKeyAndArgs(group "end",[)
                                        >fetchKeyword(group "end")
                                            >isValidShaderTypeForPL(group)
                                                >isValidShaderTypeForPL_renderman(group)
                                                    >isSurfaceShader_renderman(group)
                                        >fetchKeyword("end")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("end")
                                        >fetchVectorList("end")
                                        >fetchString("end")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'group', arguments: "end" (shaderDescription)
                                    >getValidArgs(1,string,["end"], [group2], [])
                                        >getString("end")
                                            >fetchString("end")
                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "end" reported 0 errors, got 1 results: end
                                    >padString(63, ,3,0)
                                >[liquidSlParseLif]  63: >param "shadowbias"< (groupDescription)
                                    >getKeyAndArgs(param "shadowbias",[)
                                        >fetchKeyword(param "shadowbias")
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword("shadowbias")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("shadowbias")
                                        >fetchVectorList("shadowbias")
                                        >fetchString("shadowbias")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "shadowbias" (groupDescription)
                                    >getKeyAndArgs(param "shadowbias",[)
                                        >fetchKeyword(param "shadowbias")
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword("shadowbias")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("shadowbias")
                                        >fetchVectorList("shadowbias")
                                        >fetchString("shadowbias")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "shadowbias" (shaderDescription)
                                    >getValidArgs(1,string,["shadowbias"], [], [])
                                        >getString("shadowbias")
                                            >fetchString("shadowbias")
                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "shadowbias" reported 0 errors, got 1 results: shadowbias
                                    >getParamIndex(shadowbias)
                                    >padString(64, ,3,0)
                                >[liquidSlParseLif]  64: >name "Bias"< (parameterDescription)
                                    >getKeyAndArgs(name "Bias",[)
                                        >fetchKeyword(name "Bias")
                                            >isValidShaderTypeForPL(name)
                                                >isValidShaderTypeForPL_renderman(name)
                                                    >isSurfaceShader_renderman(name)
                                        >fetchKeyword("Bias")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("Bias")
                                        >fetchVectorList("Bias")
                                        >fetchString("Bias")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'name', arguments: "Bias" (parameterDescription)
                                    >getValidArgs(-1,string,["Bias"], [], [])
                                        >getString("Bias")
                                            >fetchString("Bias")
                                    >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "Bias" reported 0 errors, got 1 results: Bias
                                    >padString(65, ,3,0)
                                >[liquidSlParseLif]  65: >desc ""< (parameterDescription)
                                    >getKeyAndArgs(desc "",[)
                                        >fetchKeyword(desc "")
                                            >isValidShaderTypeForPL(desc)
                                                >isValidShaderTypeForPL_renderman(desc)
                                                    >isSurfaceShader_renderman(desc)
                                        >fetchKeyword("")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("")
                                        >fetchVectorList("")
                                        >fetchString("")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'desc', arguments: "" (parameterDescription)
                                    >getValidArgs(1,string,[""], [], [])
                                        >getString("")
                                            >fetchString("")
// Warning: file: E:/dev/autodesk/maya/myplugin/project/liquid_/2.3.3/mel/liquidSlParseLif.mel line 557: Starting position (2) is greater than ending position (1) in substring command.  An empty string will be returned. // 
                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "" reported 0 errors, got 1 results: 
                                    >padString(66, ,3,0)
                                >[liquidSlParseLif]  66: >type "slider"< (parameterDescription)
                                    >getKeyAndArgs(type "slider",[)
                                        >fetchKeyword(type "slider")
                                            >isValidShaderTypeForPL(type)
                                                >isValidShaderTypeForPL_renderman(type)
                                                    >isSurfaceShader_renderman(type)
                                        >fetchKeyword("slider")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("slider")
                                        >fetchVectorList("slider")
                                        >fetchString("slider")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'type', arguments: "slider" (parameterDescription)
                                    >getTypeNames(["slider"], [])
                                        >getValidArgs(-1,string,["slider"], [], [])
                                            >getString("slider")
                                                >fetchString("slider")
                                        >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "slider" reported 0 errors, got 1 results: slider
                                        >liquidGetLifParamTypes()
                                    >padString(67, ,3,0)
                                >[liquidSlParseLif]  67: >range [ 0 1 ]< (parameterDescription)
                                    >getKeyAndArgs(range [ 0 1 ],[)
                                        >fetchKeyword(range [ 0 1 ])
                                            >isValidShaderTypeForPL(range)
                                                >isValidShaderTypeForPL_renderman(range)
                                                    >isSurfaceShader_renderman(range)
                                        >fetchKeyword([ 0 1 ])
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList([ 0 1 ])
                                            >fetchString( 0 1 ])
                                            >fetchVectorList( 0 1 ])
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'range', arguments: [ 0 1 ] (parameterDescription)
                                    >getSliderRange([[ 0 1 ]], [])
                                        >getRange([[ 0 1 ]], [])
                                            >fetchVectorList(0 1)
                                            >fetchString(0 1)
                                            >fetchVectorList(1)
                                            >fetchString(1)
                                        >[liquidSlParseLif.getRange] parsed range arguments [ 0 1 ] into: 0|1
                                        >liquidSlValidFloatString(0)
                                            >isValidIntPart(0)
                                            >isNonEmptyIntPart(0)
                                                >isValidIntPart(0)
                                            >isValidExpPart()
                                        >liquidSlValidFloatString(1)
                                            >isValidIntPart(1)
                                            >isNonEmptyIntPart(1)
                                                >isValidIntPart(1)
                                            >isValidExpPart()
                                    >[liquidSlParseLif.getSliderRange] got 2 valid elements out of 2
                                    >padString(69, ,3,0)
                                >[liquidSlParseLif]  69: >param "shadowblur"< (parameterDescription)
                                    >getKeyAndArgs(param "shadowblur",[)
                                        >fetchKeyword(param "shadowblur")
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword("shadowblur")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("shadowblur")
                                        >fetchVectorList("shadowblur")
                                        >fetchString("shadowblur")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "shadowblur" (parameterDescription)
                                    >getKeyAndArgs(param "shadowblur",[)
                                        >fetchKeyword(param "shadowblur")
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword("shadowblur")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("shadowblur")
                                        >fetchVectorList("shadowblur")
                                        >fetchString("shadowblur")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "shadowblur" (shaderDescription)
                                    >getValidArgs(1,string,["shadowblur"], [], [])
                                        >getString("shadowblur")
                                            >fetchString("shadowblur")
                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "shadowblur" reported 0 errors, got 1 results: shadowblur
                                    >getParamIndex(shadowblur)
                                    >padString(70, ,3,0)
                                >[liquidSlParseLif]  70: >name "Blur"< (parameterDescription)
                                    >getKeyAndArgs(name "Blur",[)
                                        >fetchKeyword(name "Blur")
                                            >isValidShaderTypeForPL(name)
                                                >isValidShaderTypeForPL_renderman(name)
                                                    >isSurfaceShader_renderman(name)
                                        >fetchKeyword("Blur")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("Blur")
                                        >fetchVectorList("Blur")
                                        >fetchString("Blur")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'name', arguments: "Blur" (parameterDescription)
                                    >getValidArgs(-1,string,["Blur"], [], [])
                                        >getString("Blur")
                                            >fetchString("Blur")
                                    >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "Blur" reported 0 errors, got 1 results: Blur
                                    >padString(71, ,3,0)
                                >[liquidSlParseLif]  71: >desc ""< (parameterDescription)
                                    >getKeyAndArgs(desc "",[)
                                        >fetchKeyword(desc "")
                                            >isValidShaderTypeForPL(desc)
                                                >isValidShaderTypeForPL_renderman(desc)
                                                    >isSurfaceShader_renderman(desc)
                                        >fetchKeyword("")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("")
                                        >fetchVectorList("")
                                        >fetchString("")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'desc', arguments: "" (parameterDescription)
                                    >getValidArgs(1,string,[""], [], [])
                                        >getString("")
                                            >fetchString("")
// Warning: file: E:/dev/autodesk/maya/myplugin/project/liquid_/2.3.3/mel/liquidSlParseLif.mel line 557: Starting position (2) is greater than ending position (1) in substring command.  An empty string will be returned. // 
                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "" reported 0 errors, got 1 results: 
                                    >padString(72, ,3,0)
                                >[liquidSlParseLif]  72: >type "slider"< (parameterDescription)
                                    >getKeyAndArgs(type "slider",[)
                                        >fetchKeyword(type "slider")
                                            >isValidShaderTypeForPL(type)
                                                >isValidShaderTypeForPL_renderman(type)
                                                    >isSurfaceShader_renderman(type)
                                        >fetchKeyword("slider")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("slider")
                                        >fetchVectorList("slider")
                                        >fetchString("slider")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'type', arguments: "slider" (parameterDescription)
                                    >getTypeNames(["slider"], [])
                                        >getValidArgs(-1,string,["slider"], [], [])
                                            >getString("slider")
                                                >fetchString("slider")
                                        >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "slider" reported 0 errors, got 1 results: slider
                                        >liquidGetLifParamTypes()
                                    >padString(73, ,3,0)
                                >[liquidSlParseLif]  73: >range [ 0 1 ]< (parameterDescription)
                                    >getKeyAndArgs(range [ 0 1 ],[)
                                        >fetchKeyword(range [ 0 1 ])
                                            >isValidShaderTypeForPL(range)
                                                >isValidShaderTypeForPL_renderman(range)
                                                    >isSurfaceShader_renderman(range)
                                        >fetchKeyword([ 0 1 ])
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList([ 0 1 ])
                                            >fetchString( 0 1 ])
                                            >fetchVectorList( 0 1 ])
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'range', arguments: [ 0 1 ] (parameterDescription)
                                    >getSliderRange([[ 0 1 ]], [])
                                        >getRange([[ 0 1 ]], [])
                                            >fetchVectorList(0 1)
                                            >fetchString(0 1)
                                            >fetchVectorList(1)
                                            >fetchString(1)
                                        >[liquidSlParseLif.getRange] parsed range arguments [ 0 1 ] into: 0|1
                                        >liquidSlValidFloatString(0)
                                            >isValidIntPart(0)
                                            >isNonEmptyIntPart(0)
                                                >isValidIntPart(0)
                                            >isValidExpPart()
                                        >liquidSlValidFloatString(1)
                                            >isValidIntPart(1)
                                            >isNonEmptyIntPart(1)
                                                >isValidIntPart(1)
                                            >isValidExpPart()
                                    >[liquidSlParseLif.getSliderRange] got 2 valid elements out of 2
                                    >padString(75, ,3,0)
                                >[liquidSlParseLif]  75: >param "shadowsamples"< (parameterDescription)
                                    >getKeyAndArgs(param "shadowsamples",[)
                                        >fetchKeyword(param "shadowsamples")
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword("shadowsamples")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("shadowsamples")
                                        >fetchVectorList("shadowsamples")
                                        >fetchString("shadowsamples")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "shadowsamples" (parameterDescription)
                                    >getKeyAndArgs(param "shadowsamples",[)
                                        >fetchKeyword(param "shadowsamples")
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword("shadowsamples")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("shadowsamples")
                                        >fetchVectorList("shadowsamples")
                                        >fetchString("shadowsamples")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "shadowsamples" (shaderDescription)
                                    >getValidArgs(1,string,["shadowsamples"], [], [])
                                        >getString("shadowsamples")
                                            >fetchString("shadowsamples")
                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "shadowsamples" reported 0 errors, got 1 results: shadowsamples
                                    >getParamIndex(shadowsamples)
                                    >padString(76, ,3,0)
                                >[liquidSlParseLif]  76: >name "Samples"< (parameterDescription)
                                    >getKeyAndArgs(name "Samples",[)
                                        >fetchKeyword(name "Samples")
                                            >isValidShaderTypeForPL(name)
                                                >isValidShaderTypeForPL_renderman(name)
                                                    >isSurfaceShader_renderman(name)
                                        >fetchKeyword("Samples")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("Samples")
                                        >fetchVectorList("Samples")
                                        >fetchString("Samples")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'name', arguments: "Samples" (parameterDescription)
                                    >getValidArgs(-1,string,["Samples"], [], [])
                                        >getString("Samples")
                                            >fetchString("Samples")
                                    >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "Samples" reported 0 errors, got 1 results: Samples
                                    >padString(77, ,3,0)
                                >[liquidSlParseLif]  77: >desc ""< (parameterDescription)
                                    >getKeyAndArgs(desc "",[)
                                        >fetchKeyword(desc "")
                                            >isValidShaderTypeForPL(desc)
                                                >isValidShaderTypeForPL_renderman(desc)
                                                    >isSurfaceShader_renderman(desc)
                                        >fetchKeyword("")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("")
                                        >fetchVectorList("")
                                        >fetchString("")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'desc', arguments: "" (parameterDescription)
                                    >getValidArgs(1,string,[""], [], [])
                                        >getString("")
                                            >fetchString("")
// Warning: file: E:/dev/autodesk/maya/myplugin/project/liquid_/2.3.3/mel/liquidSlParseLif.mel line 557: Starting position (2) is greater than ending position (1) in substring command.  An empty string will be returned. // 
                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "" reported 0 errors, got 1 results: 
                                    >padString(78, ,3,0)
                                >[liquidSlParseLif]  78: >type "slider"< (parameterDescription)
                                    >getKeyAndArgs(type "slider",[)
                                        >fetchKeyword(type "slider")
                                            >isValidShaderTypeForPL(type)
                                                >isValidShaderTypeForPL_renderman(type)
                                                    >isSurfaceShader_renderman(type)
                                        >fetchKeyword("slider")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("slider")
                                        >fetchVectorList("slider")
                                        >fetchString("slider")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'type', arguments: "slider" (parameterDescription)
                                    >getTypeNames(["slider"], [])
                                        >getValidArgs(-1,string,["slider"], [], [])
                                            >getString("slider")
                                                >fetchString("slider")
                                        >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "slider" reported 0 errors, got 1 results: slider
                                        >liquidGetLifParamTypes()
                                    >padString(79, ,3,0)
                                >[liquidSlParseLif]  79: >range [ 0 1 ]< (parameterDescription)
                                    >getKeyAndArgs(range [ 0 1 ],[)
                                        >fetchKeyword(range [ 0 1 ])
                                            >isValidShaderTypeForPL(range)
                                                >isValidShaderTypeForPL_renderman(range)
                                                    >isSurfaceShader_renderman(range)
                                        >fetchKeyword([ 0 1 ])
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList([ 0 1 ])
                                            >fetchString( 0 1 ])
                                            >fetchVectorList( 0 1 ])
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'range', arguments: [ 0 1 ] (parameterDescription)
                                    >getSliderRange([[ 0 1 ]], [])
                                        >getRange([[ 0 1 ]], [])
                                            >fetchVectorList(0 1)
                                            >fetchString(0 1)
                                            >fetchVectorList(1)
                                            >fetchString(1)
                                        >[liquidSlParseLif.getRange] parsed range arguments [ 0 1 ] into: 0|1
                                        >liquidSlValidFloatString(0)
                                            >isValidIntPart(0)
                                            >isNonEmptyIntPart(0)
                                                >isValidIntPart(0)
                                            >isValidExpPart()
                                        >liquidSlValidFloatString(1)
                                            >isValidIntPart(1)
                                            >isNonEmptyIntPart(1)
                                                >isValidIntPart(1)
                                            >isValidExpPart()
                                    >[liquidSlParseLif.getSliderRange] got 2 valid elements out of 2
                                    >padString(81, ,3,0)
                                >[liquidSlParseLif]  81: >param "shadowfiltersize"< (parameterDescription)
                                    >getKeyAndArgs(param "shadowfiltersize",[)
                                        >fetchKeyword(param "shadowfiltersize")
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword("shadowfiltersize")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("shadowfiltersize")
                                        >fetchVectorList("shadowfiltersize")
                                        >fetchString("shadowfiltersize")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "shadowfiltersize" (parameterDescription)
                                    >getKeyAndArgs(param "shadowfiltersize",[)
                                        >fetchKeyword(param "shadowfiltersize")
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword("shadowfiltersize")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("shadowfiltersize")
                                        >fetchVectorList("shadowfiltersize")
                                        >fetchString("shadowfiltersize")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "shadowfiltersize" (shaderDescription)
                                    >getValidArgs(1,string,["shadowfiltersize"], [], [])
                                        >getString("shadowfiltersize")
                                            >fetchString("shadowfiltersize")
                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "shadowfiltersize" reported 0 errors, got 1 results: shadowfiltersize
                                    >getParamIndex(shadowfiltersize)
                                    >padString(82, ,3,0)
                                >[liquidSlParseLif]  82: >name "Filter Size"< (parameterDescription)
                                    >getKeyAndArgs(name "Filter Size",[)
                                        >fetchKeyword(name "Filter Size")
                                            >isValidShaderTypeForPL(name)
                                                >isValidShaderTypeForPL_renderman(name)
                                                    >isSurfaceShader_renderman(name)
                                        >fetchKeyword("Filter Size")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("Filter Size")
                                        >fetchVectorList("Filter Size")
                                        >fetchString("Filter Size")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'name', arguments: "Filter Size" (parameterDescription)
                                    >getValidArgs(-1,string,["Filter Size"], [], [])
                                        >getString("Filter Size")
                                            >fetchString("Filter Size")
                                    >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "Filter Size" reported 0 errors, got 1 results: Filter Size
                                    >padString(83, ,3,0)
                                >[liquidSlParseLif]  83: >desc ""< (parameterDescription)
                                    >getKeyAndArgs(desc "",[)
                                        >fetchKeyword(desc "")
                                            >isValidShaderTypeForPL(desc)
                                                >isValidShaderTypeForPL_renderman(desc)
                                                    >isSurfaceShader_renderman(desc)
                                        >fetchKeyword("")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("")
                                        >fetchVectorList("")
                                        >fetchString("")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'desc', arguments: "" (parameterDescription)
                                    >getValidArgs(1,string,[""], [], [])
                                        >getString("")
                                            >fetchString("")
// Warning: file: E:/dev/autodesk/maya/myplugin/project/liquid_/2.3.3/mel/liquidSlParseLif.mel line 557: Starting position (2) is greater than ending position (1) in substring command.  An empty string will be returned. // 
                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "" reported 0 errors, got 1 results: 
                                    >padString(84, ,3,0)
                                >[liquidSlParseLif]  84: >type "slider"< (parameterDescription)
                                    >getKeyAndArgs(type "slider",[)
                                        >fetchKeyword(type "slider")
                                            >isValidShaderTypeForPL(type)
                                                >isValidShaderTypeForPL_renderman(type)
                                                    >isSurfaceShader_renderman(type)
                                        >fetchKeyword("slider")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("slider")
                                        >fetchVectorList("slider")
                                        >fetchString("slider")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'type', arguments: "slider" (parameterDescription)
                                    >getTypeNames(["slider"], [])
                                        >getValidArgs(-1,string,["slider"], [], [])
                                            >getString("slider")
                                                >fetchString("slider")
                                        >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "slider" reported 0 errors, got 1 results: slider
                                        >liquidGetLifParamTypes()
                                    >padString(85, ,3,0)
                                >[liquidSlParseLif]  85: >range [ 0 1 ]< (parameterDescription)
                                    >getKeyAndArgs(range [ 0 1 ],[)
                                        >fetchKeyword(range [ 0 1 ])
                                            >isValidShaderTypeForPL(range)
                                                >isValidShaderTypeForPL_renderman(range)
                                                    >isSurfaceShader_renderman(range)
                                        >fetchKeyword([ 0 1 ])
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList([ 0 1 ])
                                            >fetchString( 0 1 ])
                                            >fetchVectorList( 0 1 ])
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'range', arguments: [ 0 1 ] (parameterDescription)
                                    >getSliderRange([[ 0 1 ]], [])
                                        >getRange([[ 0 1 ]], [])
                                            >fetchVectorList(0 1)
                                            >fetchString(0 1)
                                            >fetchVectorList(1)
                                            >fetchString(1)
                                        >[liquidSlParseLif.getRange] parsed range arguments [ 0 1 ] into: 0|1
                                        >liquidSlValidFloatString(0)
                                            >isValidIntPart(0)
                                            >isNonEmptyIntPart(0)
                                                >isValidIntPart(0)
                                            >isValidExpPart()
                                        >liquidSlValidFloatString(1)
                                            >isValidIntPart(1)
                                            >isNonEmptyIntPart(1)
                                                >isValidIntPart(1)
                                            >isValidExpPart()
                                    >[liquidSlParseLif.getSliderRange] got 2 valid elements out of 2
                                    >padString(87, ,3,0)
                                >[liquidSlParseLif]  87: >param "shadowcolor"< (parameterDescription)
                                    >getKeyAndArgs(param "shadowcolor",[)
                                        >fetchKeyword(param "shadowcolor")
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword("shadowcolor")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("shadowcolor")
                                        >fetchVectorList("shadowcolor")
                                        >fetchString("shadowcolor")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "shadowcolor" (parameterDescription)
                                    >getKeyAndArgs(param "shadowcolor",[)
                                        >fetchKeyword(param "shadowcolor")
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword("shadowcolor")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("shadowcolor")
                                        >fetchVectorList("shadowcolor")
                                        >fetchString("shadowcolor")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "shadowcolor" (shaderDescription)
                                    >getValidArgs(1,string,["shadowcolor"], [], [])
                                        >getString("shadowcolor")
                                            >fetchString("shadowcolor")
                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "shadowcolor" reported 0 errors, got 1 results: shadowcolor
                                    >getParamIndex(shadowcolor)
                                    >padString(88, ,3,0)
                                >[liquidSlParseLif]  88: >name "Color"< (parameterDescription)
                                    >getKeyAndArgs(name "Color",[)
                                        >fetchKeyword(name "Color")
                                            >isValidShaderTypeForPL(name)
                                                >isValidShaderTypeForPL_renderman(name)
                                                    >isSurfaceShader_renderman(name)
                                        >fetchKeyword("Color")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("Color")
                                        >fetchVectorList("Color")
                                        >fetchString("Color")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'name', arguments: "Color" (parameterDescription)
                                    >getValidArgs(-1,string,["Color"], [], [])
                                        >getString("Color")
                                            >fetchString("Color")
                                    >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "Color" reported 0 errors, got 1 results: Color
                                    >padString(89, ,3,0)
                                >[liquidSlParseLif]  89: >desc ""< (parameterDescription)
                                    >getKeyAndArgs(desc "",[)
                                        >fetchKeyword(desc "")
                                            >isValidShaderTypeForPL(desc)
                                                >isValidShaderTypeForPL_renderman(desc)
                                                    >isSurfaceShader_renderman(desc)
                                        >fetchKeyword("")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("")
                                        >fetchVectorList("")
                                        >fetchString("")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'desc', arguments: "" (parameterDescription)
                                    >getValidArgs(1,string,[""], [], [])
                                        >getString("")
                                            >fetchString("")
// Warning: file: E:/dev/autodesk/maya/myplugin/project/liquid_/2.3.3/mel/liquidSlParseLif.mel line 557: Starting position (2) is greater than ending position (1) in substring command.  An empty string will be returned. // 
                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "" reported 0 errors, got 1 results: 
                                    >padString(91, ,3,0)
                                >[liquidSlParseLif]  91: >group "AOVs" "close"< (parameterDescription)
                                    >getKeyAndArgs(group "AOVs" "close",[)
                                        >fetchKeyword(group "AOVs" "close")
                                            >isValidShaderTypeForPL(group)
                                                >isValidShaderTypeForPL_renderman(group)
                                                    >isSurfaceShader_renderman(group)
                                        >fetchKeyword("AOVs" "close")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("AOVs" "close")
                                        >fetchVectorList("AOVs" "close")
                                        >fetchString("AOVs" "close")
                                        >fetchKeyword("close")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("close")
                                        >fetchVectorList("close")
                                        >fetchString("close")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'group', arguments: "AOVs" "close" (parameterDescription)
                                    >getKeyAndArgs(group "AOVs" "close",[)
                                        >fetchKeyword(group "AOVs" "close")
                                            >isValidShaderTypeForPL(group)
                                                >isValidShaderTypeForPL_renderman(group)
                                                    >isSurfaceShader_renderman(group)
                                        >fetchKeyword("AOVs" "close")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("AOVs" "close")
                                        >fetchVectorList("AOVs" "close")
                                        >fetchString("AOVs" "close")
                                        >fetchKeyword("close")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("close")
                                        >fetchVectorList("close")
                                        >fetchString("close")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'group', arguments: "AOVs" "close" (shaderDescription)
                                    >getValidArgs(1,string,["AOVs" "close"], [group3], [])
                                        >getString("AOVs")
                                            >fetchString("AOVs")
                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "AOVs" "close" reported 1 errors, got 1 results: AOVs
                                    >padString(91,0,3,0)
// Error: file: E:/dev/autodesk/maya/myplugin/project/liquid_/2.3.3/mel/liquidSlParseLif.mel line 2003: [liquidSlParseLif] 091: >group "AOVs" "close"< (groupDescription) // 
// Error: file: E:/dev/autodesk/maya/myplugin/project/liquid_/2.3.3/mel/liquidSlParseLif.mel line 2007: [liquidSlParseLif] group: only requests 1 string argument(s), rest were ignored // 
                                >[liquidSlParseLif] group: only requests 1 string argument(s), rest were ignored
                                >[liquidSlParseLif] total of 1 errors in line 91 of E:/dev/Autodesk/maya/myplugin/project/liquid_/2.3.3/lib/shaders/liquidpoint.lif (groupDescription)
                                    >padString(93, ,3,0)
                                >[liquidSlParseLif]  93: >param "__shadowF"< (groupDescription)
                                    >getKeyAndArgs(param "__shadowF",[)
                                        >fetchKeyword(param "__shadowF")
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword("__shadowF")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("__shadowF")
                                        >fetchVectorList("__shadowF")
                                        >fetchString("__shadowF")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "__shadowF" (groupDescription)
                                    >getKeyAndArgs(param "__shadowF",[)
                                        >fetchKeyword(param "__shadowF")
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword("__shadowF")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("__shadowF")
                                        >fetchVectorList("__shadowF")
                                        >fetchString("__shadowF")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "__shadowF" (shaderDescription)
                                    >getValidArgs(1,string,["__shadowF"], [], [])
                                        >getString("__shadowF")
                                            >fetchString("__shadowF")
                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "__shadowF" reported 0 errors, got 1 results: __shadowF
                                    >getParamIndex(__shadowF)
                                    >padString(94, ,3,0)
                                >[liquidSlParseLif]  94: >name "__shadowF"< (parameterDescription)
                                    >getKeyAndArgs(name "__shadowF",[)
                                        >fetchKeyword(name "__shadowF")
                                            >isValidShaderTypeForPL(name)
                                                >isValidShaderTypeForPL_renderman(name)
                                                    >isSurfaceShader_renderman(name)
                                        >fetchKeyword("__shadowF")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("__shadowF")
                                        >fetchVectorList("__shadowF")
                                        >fetchString("__shadowF")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'name', arguments: "__shadowF" (parameterDescription)
                                    >getValidArgs(-1,string,["__shadowF"], [], [])
                                        >getString("__shadowF")
                                            >fetchString("__shadowF")
                                    >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "__shadowF" reported 0 errors, got 1 results: __shadowF
                                    >padString(95, ,3,0)
                                >[liquidSlParseLif]  95: >desc "shadow fraction"< (parameterDescription)
                                    >getKeyAndArgs(desc "shadow fraction",[)
                                        >fetchKeyword(desc "shadow fraction")
                                            >isValidShaderTypeForPL(desc)
                                                >isValidShaderTypeForPL_renderman(desc)
                                                    >isSurfaceShader_renderman(desc)
                                        >fetchKeyword("shadow fraction")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("shadow fraction")
                                        >fetchVectorList("shadow fraction")
                                        >fetchString("shadow fraction")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'desc', arguments: "shadow fraction" (parameterDescription)
                                    >getValidArgs(1,string,["shadow fraction"], [], [])
                                        >getString("shadow fraction")
                                            >fetchString("shadow fraction")
                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "shadow fraction" reported 0 errors, got 1 results: shadow fraction
                                    >padString(97, ,3,0)
                                >[liquidSlParseLif]  97: >param "__shadowC"< (parameterDescription)
                                    >getKeyAndArgs(param "__shadowC",[)
                                        >fetchKeyword(param "__shadowC")
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword("__shadowC")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("__shadowC")
                                        >fetchVectorList("__shadowC")
                                        >fetchString("__shadowC")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "__shadowC" (parameterDescription)
                                    >getKeyAndArgs(param "__shadowC",[)
                                        >fetchKeyword(param "__shadowC")
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword("__shadowC")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("__shadowC")
                                        >fetchVectorList("__shadowC")
                                        >fetchString("__shadowC")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "__shadowC" (shaderDescription)
                                    >getValidArgs(1,string,["__shadowC"], [], [])
                                        >getString("__shadowC")
                                            >fetchString("__shadowC")
                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "__shadowC" reported 0 errors, got 1 results: __shadowC
                                    >getParamIndex(__shadowC)
                                    >padString(98, ,3,0)
                                >[liquidSlParseLif]  98: >name "__shadowC"< (parameterDescription)
                                    >getKeyAndArgs(name "__shadowC",[)
                                        >fetchKeyword(name "__shadowC")
                                            >isValidShaderTypeForPL(name)
                                                >isValidShaderTypeForPL_renderman(name)
                                                    >isSurfaceShader_renderman(name)
                                        >fetchKeyword("__shadowC")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("__shadowC")
                                        >fetchVectorList("__shadowC")
                                        >fetchString("__shadowC")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'name', arguments: "__shadowC" (parameterDescription)
                                    >getValidArgs(-1,string,["__shadowC"], [], [])
                                        >getString("__shadowC")
                                            >fetchString("__shadowC")
                                    >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "__shadowC" reported 0 errors, got 1 results: __shadowC
                                    >padString(99, ,3,0)
                                >[liquidSlParseLif]  99: >desc ""< (parameterDescription)
                                    >getKeyAndArgs(desc "",[)
                                        >fetchKeyword(desc "")
                                            >isValidShaderTypeForPL(desc)
                                                >isValidShaderTypeForPL_renderman(desc)
                                                    >isSurfaceShader_renderman(desc)
                                        >fetchKeyword("")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("")
                                        >fetchVectorList("")
                                        >fetchString("")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'desc', arguments: "" (parameterDescription)
                                    >getValidArgs(1,string,[""], [], [])
                                        >getString("")
                                            >fetchString("")
// Warning: file: E:/dev/autodesk/maya/myplugin/project/liquid_/2.3.3/mel/liquidSlParseLif.mel line 557: Starting position (2) is greater than ending position (1) in substring command.  An empty string will be returned. // 
                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "" reported 0 errors, got 1 results: 
                                    >padString(101, ,3,0)
                                >[liquidSlParseLif] 101: >param "__unshadowed_Cl"< (parameterDescription)
                                    >getKeyAndArgs(param "__unshadowed_Cl",[)
                                        >fetchKeyword(param "__unshadowed_Cl")
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword("__unshadowed_Cl")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("__unshadowed_Cl")
                                        >fetchVectorList("__unshadowed_Cl")
                                        >fetchString("__unshadowed_Cl")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "__unshadowed_Cl" (parameterDescription)
                                    >getKeyAndArgs(param "__unshadowed_Cl",[)
                                        >fetchKeyword(param "__unshadowed_Cl")
                                            >isValidShaderTypeForPL(param)
                                                >isValidShaderTypeForPL_renderman(param)
                                                    >isSurfaceShader_renderman(param)
                                        >fetchKeyword("__unshadowed_Cl")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("__unshadowed_Cl")
                                        >fetchVectorList("__unshadowed_Cl")
                                        >fetchString("__unshadowed_Cl")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "__unshadowed_Cl" (shaderDescription)
                                    >getValidArgs(1,string,["__unshadowed_Cl"], [], [])
                                        >getString("__unshadowed_Cl")
                                            >fetchString("__unshadowed_Cl")
                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "__unshadowed_Cl" reported 0 errors, got 1 results: __unshadowed_Cl
                                    >getParamIndex(__unshadowed_Cl)
                                    >padString(102, ,3,0)
                                >[liquidSlParseLif] 102: >name "__unshadowed_Cl"< (parameterDescription)
                                    >getKeyAndArgs(name "__unshadowed_Cl",[)
                                        >fetchKeyword(name "__unshadowed_Cl")
                                            >isValidShaderTypeForPL(name)
                                                >isValidShaderTypeForPL_renderman(name)
                                                    >isSurfaceShader_renderman(name)
                                        >fetchKeyword("__unshadowed_Cl")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("__unshadowed_Cl")
                                        >fetchVectorList("__unshadowed_Cl")
                                        >fetchString("__unshadowed_Cl")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'name', arguments: "__unshadowed_Cl" (parameterDescription)
                                    >getValidArgs(-1,string,["__unshadowed_Cl"], [], [])
                                        >getString("__unshadowed_Cl")
                                            >fetchString("__unshadowed_Cl")
                                    >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "__unshadowed_Cl" reported 0 errors, got 1 results: __unshadowed_Cl
                                    >padString(103, ,3,0)
                                >[liquidSlParseLif] 103: >desc ""< (parameterDescription)
                                    >getKeyAndArgs(desc "",[)
                                        >fetchKeyword(desc "")
                                            >isValidShaderTypeForPL(desc)
                                                >isValidShaderTypeForPL_renderman(desc)
                                                    >isSurfaceShader_renderman(desc)
                                        >fetchKeyword("")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("")
                                        >fetchVectorList("")
                                        >fetchString("")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'desc', arguments: "" (parameterDescription)
                                    >getValidArgs(1,string,[""], [], [])
                                        >getString("")
                                            >fetchString("")
// Warning: file: E:/dev/autodesk/maya/myplugin/project/liquid_/2.3.3/mel/liquidSlParseLif.mel line 557: Starting position (2) is greater than ending position (1) in substring command.  An empty string will be returned. // 
                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "" reported 0 errors, got 1 results: 
                                    >padString(105, ,3,0)
                                >[liquidSlParseLif] 105: >group "end"< (parameterDescription)
                                    >getKeyAndArgs(group "end",[)
                                        >fetchKeyword(group "end")
                                            >isValidShaderTypeForPL(group)
                                                >isValidShaderTypeForPL_renderman(group)
                                                    >isSurfaceShader_renderman(group)
                                        >fetchKeyword("end")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("end")
                                        >fetchVectorList("end")
                                        >fetchString("end")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'group', arguments: "end" (parameterDescription)
                                    >getKeyAndArgs(group "end",[)
                                        >fetchKeyword(group "end")
                                            >isValidShaderTypeForPL(group)
                                                >isValidShaderTypeForPL_renderman(group)
                                                    >isSurfaceShader_renderman(group)
                                        >fetchKeyword("end")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("end")
                                        >fetchVectorList("end")
                                        >fetchString("end")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'group', arguments: "end" (shaderDescription)
                                    >getValidArgs(1,string,["end"], [group4], [])
                                        >getString("end")
                                            >fetchString("end")
                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "end" reported 0 errors, got 1 results: end
                                    >padString(107, ,3,0)
                                >[liquidSlParseLif] 107: >group "end"< (groupDescription)
                                    >getKeyAndArgs(group "end",[)
                                        >fetchKeyword(group "end")
                                            >isValidShaderTypeForPL(group)
                                                >isValidShaderTypeForPL_renderman(group)
                                                    >isSurfaceShader_renderman(group)
                                        >fetchKeyword("end")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("end")
                                        >fetchVectorList("end")
                                        >fetchString("end")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'group', arguments: "end" (groupDescription)
                                    >getKeyAndArgs(group "end",[)
                                        >fetchKeyword(group "end")
                                            >isValidShaderTypeForPL(group)
                                                >isValidShaderTypeForPL_renderman(group)
                                                    >isSurfaceShader_renderman(group)
                                        >fetchKeyword("end")
                                            >isValidShaderTypeForPL()
                                                >isValidShaderTypeForPL_renderman()
                                                    >isSurfaceShader_renderman()
                                        >fetchBracketList("end")
                                        >fetchVectorList("end")
                                        >fetchString("end")
                                >[liquidSlParseLif.getKeyAndArgs] keyword 'group', arguments: "end" (shaderDescription)
                                    >getValidArgs(1,string,["end"], [group5], [])
                                        >getString("end")
                                            >fetchString("end")
                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "end" reported 0 errors, got 1 results: end
// Error: file: E:/dev/autodesk/maya/myplugin/project/liquid_/2.3.3/mel/liquidSlParseLif.mel line 2026: [liquidSlParseLif] group "26" has no matching end statement in "E:/dev/Autodesk/maya/myplugin/project/liquid_/2.3.3/lib/shaders/liquidpoint.lif" // 
                                    >liquidSlBuildLifCmdList()
                                        >liquidSlShaderType()
                                        >liquidLifParamName(0)
                                            >liquidSlNumParams()
                                            >liquidSlNumParams(15)
                                        >liquidLifParamType(0)
                                            >liquidSlNumParams()
                                            >liquidSlParamType(15)
                                        >liquidLifParamArraySize(0)
                                            >liquidSlNumParams()
                                            >liquidSlParamArraySize(15)
                                        >liquidLifParamAccept(0)
                                            >liquidSlNumParams()
                                        >liquidLifParamGuiType(0)
                                        >liquidLifParamLabel(0)
                                        >liquidLifParamGuiRange(0)
                                        >liquidLifParamDescription(0)
                                        >liquidLifState(0)
                                        >liquidLifParamIsOutput(0)
                                            >liquidSlNumParams()
                                            >liquidSlParamIsOutput(15)
                                    >[liquidSlBuildLifCmdList] for param: __category, type: string (string), UI label: __category:
liquidAE_LifParameter( "__category", "-1", "string", "string", "__category", {""}, "", 14 );
                                        >liquidLifSetParamAccept(0, )
                                            >liquidSlNumParams()
                                            >liquidSlSetParamAccept(15, )
                                        >liquidLifParamName(1)
                                            >liquidSlNumParams()
                                            >liquidSlNumParams(0)
                                        >liquidLifParamType(1)
                                            >liquidSlNumParams()
                                            >liquidSlParamType(0)
                                        >liquidLifParamArraySize(1)
                                            >liquidSlNumParams()
                                            >liquidSlParamArraySize(0)
                                        >liquidLifParamAccept(1)
                                            >liquidSlNumParams()
                                        >liquidLifParamGuiType(1)
                                        >liquidLifParamLabel(1)
                                        >liquidLifParamGuiRange(1)
                                        >liquidLifParamDescription(1)
                                        >liquidLifState(1)
                                        >liquidLifParamIsOutput(1)
                                            >liquidSlNumParams()
                                            >liquidSlParamIsOutput(0)
                                    >[liquidSlBuildLifCmdList] for param: intensity, type: float (slider), UI label: Intensity:
liquidAE_LifParameter( "intensity", "-1", "float", "slider", "Intensity", {""}, "", 14 );
                                        >liquidLifSetParamAccept(1, )
                                            >liquidSlNumParams()
                                            >liquidSlSetParamAccept(0, )
                                        >liquidLifParamName(2)
                                            >liquidSlNumParams()
                                            >liquidSlNumParams(1)
                                        >liquidLifParamType(2)
                                            >liquidSlNumParams()
                                            >liquidSlParamType(1)
                                        >liquidLifParamArraySize(2)
                                            >liquidSlNumParams()
                                            >liquidSlParamArraySize(1)
                                        >liquidLifParamAccept(2)
                                            >liquidSlNumParams()
                                        >liquidLifParamGuiType(2)
                                        >liquidLifParamLabel(2)
                                        >liquidLifParamGuiRange(2)
                                        >liquidLifParamDescription(2)
                                        >liquidLifState(2)
                                        >liquidLifParamIsOutput(2)
                                            >liquidSlNumParams()
                                            >liquidSlParamIsOutput(1)
                                    >[liquidSlBuildLifCmdList] for param: lightcolor, type: color (color), UI label: Light Color:
liquidAE_LifParameter( "lightcolor", "-1", "color", "color", "Light Color", {""}, "", 14 );
                                        >liquidLifSetParamAccept(2, )
                                            >liquidSlNumParams()
                                            >liquidSlSetParamAccept(1, )
                                        >liquidLifParamName(3)
                                            >liquidSlNumParams()
                                            >liquidSlNumParams(19)
                                        >liquidLifParamType(3)
                                            >liquidSlNumParams()
                                            >liquidSlParamType(19)
                                        >liquidLifParamArraySize(3)
                                            >liquidSlNumParams()
                                            >liquidSlParamArraySize(19)
                                        >liquidLifParamAccept(3)
                                            >liquidSlNumParams()
                                        >liquidLifParamGuiType(3)
                                        >liquidLifParamLabel(3)
                                        >liquidLifParamGuiRange(3)
                                        >liquidLifParamDescription(3)
                                        >liquidLifState(3)
                                        >liquidLifParamIsOutput(3)
                                            >liquidSlNumParams()
                                            >liquidSlParamIsOutput(19)
                                    >[liquidSlBuildLifCmdList] for param: __nondiffuse, type: float (bool), UI label: Non Diffuse:
liquidAE_LifParameter( "__nondiffuse", "-1", "float", "bool", "Non Diffuse", {""}, "", 14 );
                                        >liquidLifSetParamAccept(3, )
                                            >liquidSlNumParams()
                                            >liquidSlSetParamAccept(19, )
                                        >liquidLifParamName(4)
                                            >liquidSlNumParams()
                                            >liquidSlNumParams(20)
                                        >liquidLifParamType(4)
                                            >liquidSlNumParams()
                                            >liquidSlParamType(20)
                                        >liquidLifParamArraySize(4)
                                            >liquidSlNumParams()
                                            >liquidSlParamArraySize(20)
                                        >liquidLifParamAccept(4)
                                            >liquidSlNumParams()
                                        >liquidLifParamGuiType(4)
                                        >liquidLifParamLabel(4)
                                        >liquidLifParamGuiRange(4)
                                        >liquidLifParamDescription(4)
                                        >liquidLifState(4)
                                        >liquidLifParamIsOutput(4)
                                            >liquidSlNumParams()
                                            >liquidSlParamIsOutput(20)
                                    >[liquidSlBuildLifCmdList] for param: __nonspecular, type: float (bool), UI label: Non Specular:
liquidAE_LifParameter( "__nonspecular", "-1", "float", "bool", "Non Specular", {""}, "", 14 );
                                        >liquidLifSetParamAccept(4, )
                                            >liquidSlNumParams()
                                            >liquidSlSetParamAccept(20, )
                                        >liquidLifParamName(5)
                                            >liquidSlNumParams()
                                            >liquidSlNumParams(2)
                                        >liquidLifParamType(5)
                                            >liquidSlNumParams()
                                            >liquidSlParamType(2)
                                        >liquidLifParamArraySize(5)
                                            >liquidSlNumParams()
                                            >liquidSlParamArraySize(2)
                                        >liquidLifParamAccept(5)
                                            >liquidSlNumParams()
                                        >liquidLifParamGuiType(5)
                                        >liquidLifParamLabel(5)
                                        >liquidLifParamGuiRange(5)
                                        >liquidLifParamDescription(5)
                                        >liquidLifState(5)
                                        >liquidLifParamIsOutput(5)
                                            >liquidSlNumParams()
                                            >liquidSlParamIsOutput(2)
                                    >[liquidSlBuildLifCmdList] for param: decay, type: float (selector), UI label: Decay:
liquidAE_LifParameter( "decay", "-1", "float", "selector", "Decay", {"None", "0", "Linear", "1", "Quadratic", "2", "Cubic", "3"}, "", 14 );
                                        >liquidLifSetParamAccept(5, )
                                            >liquidSlNumParams()
                                            >liquidSlSetParamAccept(2, )
                                        >liquidLifParamName(6)
                                            >liquidSlNumParams()
                                            >liquidSlNumParams(14)
                                        >liquidLifParamType(6)
                                            >liquidSlNumParams()
                                            >liquidSlParamType(14)
                                        >liquidLifParamArraySize(6)
                                            >liquidSlNumParams()
                                            >liquidSlParamArraySize(14)
                                        >liquidLifParamAccept(6)
                                            >liquidSlNumParams()
                                        >liquidLifParamGuiType(6)
                                        >liquidLifParamLabel(6)
                                        >liquidLifParamGuiRange(6)
                                        >liquidLifParamDescription(6)
                                        >liquidLifState(6)
                                        >liquidLifParamIsOutput(6)
                                            >liquidSlNumParams()
                                            >liquidSlParamIsOutput(14)
                                    >[liquidSlBuildLifCmdList] for param: lightID, type: float (float), UI label: lightID:
liquidAE_LifParameter( "lightID", "-1", "float", "float", "lightID", {""}, "", 14 );
                                        >liquidLifSetParamAccept(6, )
                                            >liquidSlNumParams()
                                            >liquidSlSetParamAccept(14, )
                                        >liquidLifParamName(7)
                                            >liquidSlNumParams()
                                        >liquidLifParamType(7)
                                            >liquidSlNumParams()
                                        >liquidLifParamArraySize(7)
                                            >liquidSlNumParams()
                                        >liquidLifParamAccept(7)
                                            >liquidSlNumParams()
                                        >liquidLifParamGuiType(7)
                                        >liquidLifParamLabel(7)
                                        >liquidLifParamGuiRange(7)
                                        >liquidLifParamDescription(7)
                                        >liquidLifState(7)
                                        >liquidLifParamIsOutput(7)
                                            >liquidSlNumParams()
                                    >	[liquidSlBuildLifCmdList] group: liquidAE_LifGrp( "Shadows", 14 );
                                        >liquidLifParamName(8)
                                            >liquidSlNumParams()
                                        >liquidLifParamType(8)
                                            >liquidSlNumParams()
                                        >liquidLifParamArraySize(8)
                                            >liquidSlNumParams()
                                        >liquidLifParamAccept(8)
                                            >liquidSlNumParams()
                                        >liquidLifParamGuiType(8)
                                        >liquidLifParamLabel(8)
                                        >liquidLifParamGuiRange(8)
                                        >liquidLifParamDescription(8)
                                        >liquidLifState(8)
                                        >liquidLifParamIsOutput(8)
                                            >liquidSlNumParams()
                                    >	[liquidSlBuildLifCmdList] group: liquidAE_LifGrp( "Maps", 14 );
                                        >liquidLifParamName(9)
                                            >liquidSlNumParams()
                                            >liquidSlNumParams(3)
                                        >liquidLifParamType(9)
                                            >liquidSlNumParams()
                                            >liquidSlParamType(3)
                                        >liquidLifParamArraySize(9)
                                            >liquidSlNumParams()
                                            >liquidSlParamArraySize(3)
                                        >liquidLifParamAccept(9)
                                            >liquidSlNumParams()
                                        >liquidLifParamGuiType(9)
                                        >liquidLifParamLabel(9)
                                        >liquidLifParamGuiRange(9)
                                        >liquidLifParamDescription(9)
                                        >liquidLifState(9)
                                        >liquidLifParamIsOutput(9)
                                            >liquidSlNumParams()
                                            >liquidSlParamIsOutput(3)
                                    >[liquidSlBuildLifCmdList] for param: shadownamepx, type: string (shadow), UI label: shadownamepx:
liquidAE_LifParameter( "shadownamepx", "-1", "string", "shadow", "shadownamepx", {""}, "", 14 );
                                        >liquidLifSetParamAccept(9, )
                                            >liquidSlNumParams()
                                            >liquidSlSetParamAccept(3, )
                                        >liquidLifParamName(10)
                                            >liquidSlNumParams()
                                            >liquidSlNumParams(4)
                                        >liquidLifParamType(10)
                                            >liquidSlNumParams()
                                            >liquidSlParamType(4)
                                        >liquidLifParamArraySize(10)
                                            >liquidSlNumParams()
                                            >liquidSlParamArraySize(4)
                                        >liquidLifParamAccept(10)
                                            >liquidSlNumParams()
                                        >liquidLifParamGuiType(10)
                                        >liquidLifParamLabel(10)
                                        >liquidLifParamGuiRange(10)
                                        >liquidLifParamDescription(10)
                                        >liquidLifState(10)
                                        >liquidLifParamIsOutput(10)
                                            >liquidSlNumParams()
                                            >liquidSlParamIsOutput(4)
                                    >[liquidSlBuildLifCmdList] for param: shadownamenx, type: string (shadow), UI label: shadownamenx:
liquidAE_LifParameter( "shadownamenx", "-1", "string", "shadow", "shadownamenx", {""}, "", 14 );
                                        >liquidLifSetParamAccept(10, )
                                            >liquidSlNumParams()
                                            >liquidSlSetParamAccept(4, )
                                        >liquidLifParamName(11)
                                            >liquidSlNumParams()
                                            >liquidSlNumParams(5)
                                        >liquidLifParamType(11)
                                            >liquidSlNumParams()
                                            >liquidSlParamType(5)
                                        >liquidLifParamArraySize(11)
                                            >liquidSlNumParams()
                                            >liquidSlParamArraySize(5)
                                        >liquidLifParamAccept(11)
                                            >liquidSlNumParams()
                                        >liquidLifParamGuiType(11)
                                        >liquidLifParamLabel(11)
                                        >liquidLifParamGuiRange(11)
                                        >liquidLifParamDescription(11)
                                        >liquidLifState(11)
                                        >liquidLifParamIsOutput(11)
                                            >liquidSlNumParams()
                                            >liquidSlParamIsOutput(5)
                                    >[liquidSlBuildLifCmdList] for param: shadownamepy, type: string (shadow), UI label: shadownamepy:
liquidAE_LifParameter( "shadownamepy", "-1", "string", "shadow", "shadownamepy", {""}, "", 14 );
                                        >liquidLifSetParamAccept(11, )
                                            >liquidSlNumParams()
                                            >liquidSlSetParamAccept(5, )
                                        >liquidLifParamName(12)
                                            >liquidSlNumParams()
                                            >liquidSlNumParams(6)
                                        >liquidLifParamType(12)
                                            >liquidSlNumParams()
                                            >liquidSlParamType(6)
                                        >liquidLifParamArraySize(12)
                                            >liquidSlNumParams()
                                            >liquidSlParamArraySize(6)
                                        >liquidLifParamAccept(12)
                                            >liquidSlNumParams()
                                        >liquidLifParamGuiType(12)
                                        >liquidLifParamLabel(12)
                                        >liquidLifParamGuiRange(12)
                                        >liquidLifParamDescription(12)
                                        >liquidLifState(12)
                                        >liquidLifParamIsOutput(12)
                                            >liquidSlNumParams()
                                            >liquidSlParamIsOutput(6)
                                    >[liquidSlBuildLifCmdList] for param: shadownameny, type: string (shadow), UI label: shadownameny:
liquidAE_LifParameter( "shadownameny", "-1", "string", "shadow", "shadownameny", {""}, "", 14 );
                                        >liquidLifSetParamAccept(12, )
                                            >liquidSlNumParams()
                                            >liquidSlSetParamAccept(6, )
                                        >liquidLifParamName(13)
                                            >liquidSlNumParams()
                                            >liquidSlNumParams(7)
                                        >liquidLifParamType(13)
                                            >liquidSlNumParams()
                                            >liquidSlParamType(7)
                                        >liquidLifParamArraySize(13)
                                            >liquidSlNumParams()
                                            >liquidSlParamArraySize(7)
                                        >liquidLifParamAccept(13)
                                            >liquidSlNumParams()
                                        >liquidLifParamGuiType(13)
                                        >liquidLifParamLabel(13)
                                        >liquidLifParamGuiRange(13)
                                        >liquidLifParamDescription(13)
                                        >liquidLifState(13)
                                        >liquidLifParamIsOutput(13)
                                            >liquidSlNumParams()
                                            >liquidSlParamIsOutput(7)
                                    >[liquidSlBuildLifCmdList] for param: shadownamepz, type: string (shadow), UI label: shadownamepz:
liquidAE_LifParameter( "shadownamepz", "-1", "string", "shadow", "shadownamepz", {""}, "", 14 );
                                        >liquidLifSetParamAccept(13, )
                                            >liquidSlNumParams()
                                            >liquidSlSetParamAccept(7, )
                                        >liquidLifParamName(14)
                                            >liquidSlNumParams()
                                            >liquidSlNumParams(8)
                                        >liquidLifParamType(14)
                                            >liquidSlNumParams()
                                            >liquidSlParamType(8)
                                        >liquidLifParamArraySize(14)
                                            >liquidSlNumParams()
                                            >liquidSlParamArraySize(8)
                                        >liquidLifParamAccept(14)
                                            >liquidSlNumParams()
                                        >liquidLifParamGuiType(14)
                                        >liquidLifParamLabel(14)
                                        >liquidLifParamGuiRange(14)
                                        >liquidLifParamDescription(14)
                                        >liquidLifState(14)
                                        >liquidLifParamIsOutput(14)
                                            >liquidSlNumParams()
                                            >liquidSlParamIsOutput(8)
                                    >[liquidSlBuildLifCmdList] for param: shadownamenz, type: string (shadow), UI label: shadownamenz:
liquidAE_LifParameter( "shadownamenz", "-1", "string", "shadow", "shadownamenz", {""}, "", 14 );
                                        >liquidLifSetParamAccept(14, )
                                            >liquidSlNumParams()
                                            >liquidSlSetParamAccept(8, )
                                        >liquidLifParamName(15)
                                            >liquidSlNumParams()
                                        >liquidLifParamType(15)
                                            >liquidSlNumParams()
                                        >liquidLifParamArraySize(15)
                                            >liquidSlNumParams()
                                        >liquidLifParamAccept(15)
                                            >liquidSlNumParams()
                                        >liquidLifParamGuiType(15)
                                        >liquidLifParamLabel(15)
                                        >liquidLifParamGuiRange(15)
                                        >liquidLifParamDescription(15)
                                        >liquidLifState(15)
                                        >liquidLifParamIsOutput(15)
                                            >liquidSlNumParams()
                                    >	[liquidSlBuildLifCmdList] group: liquidAE_LifGrp( "end", 14 );
                                        >liquidLifParamName(16)
                                            >liquidSlNumParams()
                                            >liquidSlNumParams(9)
                                        >liquidLifParamType(16)
                                            >liquidSlNumParams()
                                            >liquidSlParamType(9)
                                        >liquidLifParamArraySize(16)
                                            >liquidSlNumParams()
                                            >liquidSlParamArraySize(9)
                                        >liquidLifParamAccept(16)
                                            >liquidSlNumParams()
                                        >liquidLifParamGuiType(16)
                                        >liquidLifParamLabel(16)
                                        >liquidLifParamGuiRange(16)
                                        >liquidLifParamDescription(16)
                                        >liquidLifState(16)
                                        >liquidLifParamIsOutput(16)
                                            >liquidSlNumParams()
                                            >liquidSlParamIsOutput(9)
                                    >[liquidSlBuildLifCmdList] for param: shadowbias, type: float (slider), UI label: Bias:
liquidAE_LifParameter( "shadowbias", "-1", "float", "slider", "Bias", {"0", "1"}, "", 14 );
                                        >liquidLifSetParamAccept(16, )
                                            >liquidSlNumParams()
                                            >liquidSlSetParamAccept(9, )
                                        >liquidLifParamName(17)
                                            >liquidSlNumParams()
                                            >liquidSlNumParams(10)
                                        >liquidLifParamType(17)
                                            >liquidSlNumParams()
                                            >liquidSlParamType(10)
                                        >liquidLifParamArraySize(17)
                                            >liquidSlNumParams()
                                            >liquidSlParamArraySize(10)
                                        >liquidLifParamAccept(17)
                                            >liquidSlNumParams()
                                        >liquidLifParamGuiType(17)
                                        >liquidLifParamLabel(17)
                                        >liquidLifParamGuiRange(17)
                                        >liquidLifParamDescription(17)
                                        >liquidLifState(17)
                                        >liquidLifParamIsOutput(17)
                                            >liquidSlNumParams()
                                            >liquidSlParamIsOutput(10)
                                    >[liquidSlBuildLifCmdList] for param: shadowblur, type: float (slider), UI label: Blur:
liquidAE_LifParameter( "shadowblur", "-1", "float", "slider", "Blur", {"0", "1"}, "", 14 );
                                        >liquidLifSetParamAccept(17, )
                                            >liquidSlNumParams()
                                            >liquidSlSetParamAccept(10, )
                                        >liquidLifParamName(18)
                                            >liquidSlNumParams()
                                            >liquidSlNumParams(11)
                                        >liquidLifParamType(18)
                                            >liquidSlNumParams()
                                            >liquidSlParamType(11)
                                        >liquidLifParamArraySize(18)
                                            >liquidSlNumParams()
                                            >liquidSlParamArraySize(11)
                                        >liquidLifParamAccept(18)
                                            >liquidSlNumParams()
                                        >liquidLifParamGuiType(18)
                                        >liquidLifParamLabel(18)
                                        >liquidLifParamGuiRange(18)
                                        >liquidLifParamDescription(18)
                                        >liquidLifState(18)
                                        >liquidLifParamIsOutput(18)
                                            >liquidSlNumParams()
                                            >liquidSlParamIsOutput(11)
                                    >[liquidSlBuildLifCmdList] for param: shadowsamples, type: float (slider), UI label: Samples:
liquidAE_LifParameter( "shadowsamples", "-1", "float", "slider", "Samples", {"0", "1"}, "", 14 );
                                        >liquidLifSetParamAccept(18, )
                                            >liquidSlNumParams()
                                            >liquidSlSetParamAccept(11, )
                                        >liquidLifParamName(19)
                                            >liquidSlNumParams()
                                            >liquidSlNumParams(12)
                                        >liquidLifParamType(19)
                                            >liquidSlNumParams()
                                            >liquidSlParamType(12)
                                        >liquidLifParamArraySize(19)
                                            >liquidSlNumParams()
                                            >liquidSlParamArraySize(12)
                                        >liquidLifParamAccept(19)
                                            >liquidSlNumParams()
                                        >liquidLifParamGuiType(19)
                                        >liquidLifParamLabel(19)
                                        >liquidLifParamGuiRange(19)
                                        >liquidLifParamDescription(19)
                                        >liquidLifState(19)
                                        >liquidLifParamIsOutput(19)
                                            >liquidSlNumParams()
                                            >liquidSlParamIsOutput(12)
                                    >[liquidSlBuildLifCmdList] for param: shadowfiltersize, type: float (slider), UI label: Filter Size:
liquidAE_LifParameter( "shadowfiltersize", "-1", "float", "slider", "Filter Size", {"0", "1"}, "", 14 );
                                        >liquidLifSetParamAccept(19, )
                                            >liquidSlNumParams()
                                            >liquidSlSetParamAccept(12, )
                                        >liquidLifParamName(20)
                                            >liquidSlNumParams()
                                            >liquidSlNumParams(13)
                                        >liquidLifParamType(20)
                                            >liquidSlNumParams()
                                            >liquidSlParamType(13)
                                        >liquidLifParamArraySize(20)
                                            >liquidSlNumParams()
                                            >liquidSlParamArraySize(13)
                                        >liquidLifParamAccept(20)
                                            >liquidSlNumParams()
                                        >liquidLifParamGuiType(20)
                                        >liquidLifParamLabel(20)
                                        >liquidLifParamGuiRange(20)
                                        >liquidLifParamDescription(20)
                                        >liquidLifState(20)
                                        >liquidLifParamIsOutput(20)
                                            >liquidSlNumParams()
                                            >liquidSlParamIsOutput(13)
                                    >[liquidSlBuildLifCmdList] for param: shadowcolor, type: color (color), UI label: Color:
liquidAE_LifParameter( "shadowcolor", "-1", "color", "color", "Color", {""}, "", 14 );
                                        >liquidLifSetParamAccept(20, )
                                            >liquidSlNumParams()
                                            >liquidSlSetParamAccept(13, )
                                        >liquidLifParamName(21)
                                            >liquidSlNumParams()
                                        >liquidLifParamType(21)
                                            >liquidSlNumParams()
                                        >liquidLifParamArraySize(21)
                                            >liquidSlNumParams()
                                        >liquidLifParamAccept(21)
                                            >liquidSlNumParams()
                                        >liquidLifParamGuiType(21)
                                        >liquidLifParamLabel(21)
                                        >liquidLifParamGuiRange(21)
                                        >liquidLifParamDescription(21)
                                        >liquidLifState(21)
                                        >liquidLifParamIsOutput(21)
                                            >liquidSlNumParams()
                                    >	[liquidSlBuildLifCmdList] group: liquidAE_LifGrp( "AOVs", 14 );
                                        >liquidLifParamName(22)
                                            >liquidSlNumParams()
                                            >liquidSlNumParams(16)
                                        >liquidLifParamType(22)
                                            >liquidSlNumParams()
                                            >liquidSlParamType(16)
                                        >liquidLifParamArraySize(22)
                                            >liquidSlNumParams()
                                            >liquidSlParamArraySize(16)
                                        >liquidLifParamAccept(22)
                                            >liquidSlNumParams()
                                        >liquidLifParamGuiType(22)
                                        >liquidLifParamLabel(22)
                                        >liquidLifParamGuiRange(22)
                                        >liquidLifParamDescription(22)
                                        >liquidLifState(22)
                                        >liquidLifParamIsOutput(22)
                                            >liquidSlNumParams()
                                            >liquidSlParamIsOutput(16)
                                    >[liquidSlBuildLifCmdList] for param: __shadowF, type: float (float), UI label: __shadowF:
liquidAE_LifParameter( "__shadowF", "-1", "float", "float", "__shadowF", {""}, "shadow fraction", 14 );
                                        >liquidLifSetParamAccept(22, )
                                            >liquidSlNumParams()
                                            >liquidSlSetParamAccept(16, )
                                        >liquidLifParamName(23)
                                            >liquidSlNumParams()
                                            >liquidSlNumParams(17)
                                        >liquidLifParamType(23)
                                            >liquidSlNumParams()
                                            >liquidSlParamType(17)
                                        >liquidLifParamArraySize(23)
                                            >liquidSlNumParams()
                                            >liquidSlParamArraySize(17)
                                        >liquidLifParamAccept(23)
                                            >liquidSlNumParams()
                                        >liquidLifParamGuiType(23)
                                        >liquidLifParamLabel(23)
                                        >liquidLifParamGuiRange(23)
                                        >liquidLifParamDescription(23)
                                        >liquidLifState(23)
                                        >liquidLifParamIsOutput(23)
                                            >liquidSlNumParams()
                                            >liquidSlParamIsOutput(17)
                                    >[liquidSlBuildLifCmdList] for param: __shadowC, type: color (color), UI label: __shadowC:
liquidAE_LifParameter( "__shadowC", "-1", "color", "color", "__shadowC", {""}, "", 14 );
                                        >liquidLifSetParamAccept(23, )
                                            >liquidSlNumParams()
                                            >liquidSlSetParamAccept(17, )
                                        >liquidLifParamName(24)
                                            >liquidSlNumParams()
                                            >liquidSlNumParams(18)
                                        >liquidLifParamType(24)
                                            >liquidSlNumParams()
                                            >liquidSlParamType(18)
                                        >liquidLifParamArraySize(24)
                                            >liquidSlNumParams()
                                            >liquidSlParamArraySize(18)
                                        >liquidLifParamAccept(24)
                                            >liquidSlNumParams()
                                        >liquidLifParamGuiType(24)
                                        >liquidLifParamLabel(24)
                                        >liquidLifParamGuiRange(24)
                                        >liquidLifParamDescription(24)
                                        >liquidLifState(24)
                                        >liquidLifParamIsOutput(24)
                                            >liquidSlNumParams()
                                            >liquidSlParamIsOutput(18)
                                    >[liquidSlBuildLifCmdList] for param: __unshadowed_Cl, type: color (color), UI label: __unshadowed_Cl:
liquidAE_LifParameter( "__unshadowed_Cl", "-1", "color", "color", "__unshadowed_Cl", {""}, "", 14 );
                                        >liquidLifSetParamAccept(24, )
                                            >liquidSlNumParams()
                                            >liquidSlSetParamAccept(18, )
                                        >liquidLifParamName(25)
                                            >liquidSlNumParams()
                                        >liquidLifParamType(25)
                                            >liquidSlNumParams()
                                        >liquidLifParamArraySize(25)
                                            >liquidSlNumParams()
                                        >liquidLifParamAccept(25)
                                            >liquidSlNumParams()
                                        >liquidLifParamGuiType(25)
                                        >liquidLifParamLabel(25)
                                        >liquidLifParamGuiRange(25)
                                        >liquidLifParamDescription(25)
                                        >liquidLifState(25)
                                        >liquidLifParamIsOutput(25)
                                            >liquidSlNumParams()
                                    >	[liquidSlBuildLifCmdList] group: liquidAE_LifGrp( "end", 14 );
                                        >liquidLifParamName(26)
                                            >liquidSlNumParams()
                                        >liquidLifParamType(26)
                                            >liquidSlNumParams()
                                        >liquidLifParamArraySize(26)
                                            >liquidSlNumParams()
                                        >liquidLifParamAccept(26)
                                            >liquidSlNumParams()
                                        >liquidLifParamGuiType(26)
                                        >liquidLifParamLabel(26)
                                        >liquidLifParamGuiRange(26)
                                        >liquidLifParamDescription(26)
                                        >liquidLifState(26)
                                        >liquidLifParamIsOutput(26)
                                            >liquidSlNumParams()
                                    >	[liquidSlBuildLifCmdList] group: liquidAE_LifGrp( "end", 14 );
                                    >[liquidSlBuildLifCmdList] generated 27 commands in 1.36 sec.
                                >[liquidSlParseLif] 7.54 sec.
                        >liquidSlShaderType()
nodeType = liquidlight
shadertype = light
                        >checkParamsDefinition(liquidLight3)
                            >liquidSlNumParams()
                            >liquidSlNumParams(0)
                            >liquidSlParamType(0)
                            >liquidSlParamArraySize(0)
                            >liquidSlNumParams(1)
                            >liquidSlParamType(1)
                            >liquidSlParamArraySize(1)
                            >liquidSlNumParams(2)
                            >liquidSlParamType(2)
                            >liquidSlParamArraySize(2)
                            >liquidSlNumParams(3)
                            >liquidSlParamType(3)
                            >liquidSlParamArraySize(3)
                            >liquidSlNumParams(4)
                            >liquidSlParamType(4)
                            >liquidSlParamArraySize(4)
                            >liquidSlNumParams(5)
                            >liquidSlParamType(5)
                            >liquidSlParamArraySize(5)
                            >liquidSlNumParams(6)
                            >liquidSlParamType(6)
                            >liquidSlParamArraySize(6)
                            >liquidSlNumParams(7)
                            >liquidSlParamType(7)
                            >liquidSlParamArraySize(7)
                            >liquidSlNumParams(8)
                            >liquidSlParamType(8)
                            >liquidSlParamArraySize(8)
                            >liquidSlNumParams(9)
                            >liquidSlParamType(9)
                            >liquidSlParamArraySize(9)
                            >liquidSlNumParams(10)
                            >liquidSlParamType(10)
                            >liquidSlParamArraySize(10)
                            >liquidSlNumParams(11)
                            >liquidSlParamType(11)
                            >liquidSlParamArraySize(11)
                            >liquidSlNumParams(12)
                            >liquidSlParamType(12)
                            >liquidSlParamArraySize(12)
                            >liquidSlNumParams(13)
                            >liquidSlParamType(13)
                            >liquidSlParamArraySize(13)
                            >liquidSlNumParams(14)
                            >liquidSlParamType(14)
                            >liquidSlParamArraySize(14)
                            >liquidSlNumParams(15)
                            >liquidSlParamType(15)
                            >liquidSlParamArraySize(15)
                            >liquidSlNumParams(16)
                            >liquidSlParamType(16)
                            >liquidSlParamArraySize(16)
                            >liquidSlNumParams(17)
                            >liquidSlParamType(17)
                            >liquidSlParamArraySize(17)
                            >liquidSlNumParams(18)
                            >liquidSlParamType(18)
                            >liquidSlParamArraySize(18)
                            >liquidSlNumParams(19)
                            >liquidSlParamType(19)
                            >liquidSlParamArraySize(19)
                            >liquidSlNumParams(20)
                            >liquidSlParamType(20)
                            >liquidSlParamArraySize(20)
                        >liquidAttachShaderParams( liquidLight3, E:/dev/Autodesk/maya/myplugin/project/liquid_/2.3.3/lib/shaders/liquidpoint.sdl )
                            >liquidSlSetShader(E:/dev/Autodesk/maya/myplugin/project/liquid_/2.3.3/lib/shaders/liquidpoint.sdl)
                            >liquidSlNumParams()
                        >0/21-----------------
                            >liquidSlNumParams(0)
                            >liquidSlParamIsOutput(0)
                        >attach : intensity ( "^_*" )
                            >liquidSlParamType(0)
                            >liquidSlParamArraySize(0)
                            >liquidSlParamDefault(0)
                        >for param: float intensity = 1.0
                        >objExists(liquidLight3.intensity)=0
                        >1/21-----------------
                            >liquidSlNumParams(1)
                            >liquidSlParamIsOutput(1)
                        >attach : lightcolor ( "^_*" )
                            >liquidSlParamType(1)
                            >liquidSlParamArraySize(1)
                            >liquidSlParamDefault(1)
                        >for param: color lightcolor = <<1, 1, 1>>
                        >objExists(liquidLight3.lightcolor)=0
                        >2/21-----------------
                            >liquidSlNumParams(2)
                            >liquidSlParamIsOutput(2)
                        >attach : decay ( "^_*" )
                            >liquidSlParamType(2)
                            >liquidSlParamArraySize(2)
                            >liquidSlParamDefault(2)
                        >for param: float decay = 0.0
                        >objExists(liquidLight3.decay)=0
                        >3/21-----------------
                            >liquidSlNumParams(3)
                            >liquidSlParamIsOutput(3)
                        >attach : shadownamepx ( "^_*" )
                            >liquidSlParamType(3)
                            >liquidSlParamArraySize(3)
                            >liquidSlParamDefault(3)
                        >for param: string shadownamepx = ""
                        >objExists(liquidLight3.shadownamepx)=0
                            >liquidSlDefaultToString("")
                        >4/21-----------------
                            >liquidSlNumParams(4)
                            >liquidSlParamIsOutput(4)
                        >attach : shadownamenx ( "^_*" )
                            >liquidSlParamType(4)
                            >liquidSlParamArraySize(4)
                            >liquidSlParamDefault(4)
                        >for param: string shadownamenx = ""
                        >objExists(liquidLight3.shadownamenx)=0
                            >liquidSlDefaultToString("")
                        >5/21-----------------
                            >liquidSlNumParams(5)
                            >liquidSlParamIsOutput(5)
                        >attach : shadownamepy ( "^_*" )
                            >liquidSlParamType(5)
                            >liquidSlParamArraySize(5)
                            >liquidSlParamDefault(5)
                        >for param: string shadownamepy = ""
                        >objExists(liquidLight3.shadownamepy)=0
                            >liquidSlDefaultToString("")
                        >6/21-----------------
                            >liquidSlNumParams(6)
                            >liquidSlParamIsOutput(6)
                        >attach : shadownameny ( "^_*" )
                            >liquidSlParamType(6)
                            >liquidSlParamArraySize(6)
                            >liquidSlParamDefault(6)
                        >for param: string shadownameny = ""
                        >objExists(liquidLight3.shadownameny)=0
                            >liquidSlDefaultToString("")
                        >7/21-----------------
                            >liquidSlNumParams(7)
                            >liquidSlParamIsOutput(7)
                        >attach : shadownamepz ( "^_*" )
                            >liquidSlParamType(7)
                            >liquidSlParamArraySize(7)
                            >liquidSlParamDefault(7)
                        >for param: string shadownamepz = ""
                        >objExists(liquidLight3.shadownamepz)=0
                            >liquidSlDefaultToString("")
                        >8/21-----------------
                            >liquidSlNumParams(8)
                            >liquidSlParamIsOutput(8)
                        >attach : shadownamenz ( "^_*" )
                            >liquidSlParamType(8)
                            >liquidSlParamArraySize(8)
                            >liquidSlParamDefault(8)
                        >for param: string shadownamenz = ""
                        >objExists(liquidLight3.shadownamenz)=0
                            >liquidSlDefaultToString("")
                        >9/21-----------------
                            >liquidSlNumParams(9)
                            >liquidSlParamIsOutput(9)
                        >attach : shadowbias ( "^_*" )
                            >liquidSlParamType(9)
                            >liquidSlParamArraySize(9)
                            >liquidSlParamDefault(9)
                        >for param: float shadowbias = 0.01
                        >objExists(liquidLight3.shadowbias)=0
                        >10/21-----------------
                            >liquidSlNumParams(10)
                            >liquidSlParamIsOutput(10)
                        >attach : shadowblur ( "^_*" )
                            >liquidSlParamType(10)
                            >liquidSlParamArraySize(10)
                            >liquidSlParamDefault(10)
                        >for param: float shadowblur = 0.0
                        >objExists(liquidLight3.shadowblur)=0
                        >11/21-----------------
                            >liquidSlNumParams(11)
                            >liquidSlParamIsOutput(11)
                        >attach : shadowsamples ( "^_*" )
                            >liquidSlParamType(11)
                            >liquidSlParamArraySize(11)
                            >liquidSlParamDefault(11)
                        >for param: float shadowsamples = 16.0
                        >objExists(liquidLight3.shadowsamples)=0
                        >12/21-----------------
                            >liquidSlNumParams(12)
                            >liquidSlParamIsOutput(12)
                        >attach : shadowfiltersize ( "^_*" )
                            >liquidSlParamType(12)
                            >liquidSlParamArraySize(12)
                            >liquidSlParamDefault(12)
                        >for param: float shadowfiltersize = 1.0
                        >objExists(liquidLight3.shadowfiltersize)=0
                        >13/21-----------------
                            >liquidSlNumParams(13)
                            >liquidSlParamIsOutput(13)
                        >attach : shadowcolor ( "^_*" )
                            >liquidSlParamType(13)
                            >liquidSlParamArraySize(13)
                            >liquidSlParamDefault(13)
                        >for param: color shadowcolor = <<0, 0, 0>>
                        >objExists(liquidLight3.shadowcolor)=0
                        >14/21-----------------
                            >liquidSlNumParams(14)
                            >liquidSlParamIsOutput(14)
                        >attach : lightID ( "^_*" )
                            >liquidSlParamType(14)
                            >liquidSlParamArraySize(14)
                            >liquidSlParamDefault(14)
                        >for param: float lightID = 0.0
                        >objExists(liquidLight3.lightID)=0
                        >15/21-----------------
                            >liquidSlNumParams(15)
                            >liquidSlParamIsOutput(15)
                        >attach : __category ( "^_*" )
                            >liquidSlParamType(15)
                            >liquidSlParamArraySize(15)
                            >liquidSlParamDefault(15)
                        >for param: string __category = ""
                        >objExists(liquidLight3.__category)=0
                            >liquidSlDefaultToString("")
                        >16/21-----------------
                            >liquidSlNumParams(16)
                            >liquidSlParamIsOutput(16)
                        >attach : __shadowF ( "^_*" )
                            >liquidSlParamType(16)
                            >liquidSlParamArraySize(16)
                            >liquidSlParamDefault(16)
                        >for param: float __shadowF = 0.0
                        >objExists(liquidLight3.__shadowF)=0
                        >17/21-----------------
                            >liquidSlNumParams(17)
                            >liquidSlParamIsOutput(17)
                        >attach : __shadowC ( "^_*" )
                            >liquidSlParamType(17)
                            >liquidSlParamArraySize(17)
                            >liquidSlParamDefault(17)
                        >for param: color __shadowC = <<1, 1, 1>>
                        >objExists(liquidLight3.__shadowC)=0
                        >18/21-----------------
                            >liquidSlNumParams(18)
                            >liquidSlParamIsOutput(18)
                        >attach : __unshadowed_Cl ( "^_*" )
                            >liquidSlParamType(18)
                            >liquidSlParamArraySize(18)
                            >liquidSlParamDefault(18)
                        >for param: color __unshadowed_Cl = <<0, 0, 0>>
                        >objExists(liquidLight3.__unshadowed_Cl)=0
                        >19/21-----------------
                            >liquidSlNumParams(19)
                            >liquidSlParamIsOutput(19)
                        >attach : __nondiffuse ( "^_*" )
                            >liquidSlParamType(19)
                            >liquidSlParamArraySize(19)
                            >liquidSlParamDefault(19)
                        >for param: float __nondiffuse = 0.0
                        >objExists(liquidLight3.__nondiffuse)=0
                        >20/21-----------------
                            >liquidSlNumParams(20)
                            >liquidSlParamIsOutput(20)
                        >attach : __nonspecular ( "^_*" )
                            >liquidSlParamType(20)
                            >liquidSlParamArraySize(20)
                            >liquidSlParamDefault(20)
                        >for param: float __nonspecular = 0.0
                        >objExists(liquidLight3.__nonspecular)=0
                        >rmanParams_create(liquidLight3,0)
                            >liquidSlShaderName()
                            >liquidSlShaderType()
                            >liquidSlNumParams()
                            >liquidSlNumParams()
                            >liquidSlParamIsOutput(0)
                            >liquidSlNumParams()
                            >liquidSlParamIsOutput(1)
                            >liquidSlNumParams()
                            >liquidSlParamIsOutput(2)
                            >liquidSlNumParams()
                            >liquidSlParamIsOutput(3)
                            >liquidSlNumParams()
                            >liquidSlParamIsOutput(4)
                            >liquidSlNumParams()
                            >liquidSlParamIsOutput(5)
                            >liquidSlNumParams()
                            >liquidSlParamIsOutput(6)
                            >liquidSlNumParams()
                            >liquidSlParamIsOutput(7)
                            >liquidSlNumParams()
                            >liquidSlParamIsOutput(8)
                            >liquidSlNumParams()
                            >liquidSlParamIsOutput(9)
                            >liquidSlNumParams()
                            >liquidSlParamIsOutput(10)
                            >liquidSlNumParams()
                            >liquidSlParamIsOutput(11)
                            >liquidSlNumParams()
                            >liquidSlParamIsOutput(12)
                            >liquidSlNumParams()
                            >liquidSlParamIsOutput(13)
                            >liquidSlNumParams()
                            >liquidSlParamIsOutput(14)
                            >liquidSlNumParams()
                            >liquidSlParamIsOutput(15)
                            >liquidSlNumParams()
                            >liquidSlParamIsOutput(16)
                            >liquidSlNumParams()
                            >liquidSlParamIsOutput(17)
                            >liquidSlNumParams()
                            >liquidSlParamIsOutput(18)
                            >liquidSlNumParams()
                            >liquidSlParamIsOutput(19)
                            >liquidSlNumParams()
                            >liquidSlParamIsOutput(20)
                            >liquidSlNumParams()
                        >setAttr -type Int32Array liquidLight3.rmanIsOutput 21 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
                            >liquidSlNumMethods()
                            >liquidSlNumMethods()
                        >setAttr -type stringArray liquidLight3.rmanMethods 0 
                            >liquidSlNumParams()
                            >liquidSlNumParams()
                            >liquidSlNumParams(0)
                            >liquidSlNumParams()
                            >liquidSlNumParams(1)
                            >liquidSlNumParams()
                            >liquidSlNumParams(2)
                            >liquidSlNumParams()
                            >liquidSlNumParams(3)
                            >liquidSlNumParams()
                            >liquidSlNumParams(4)
                            >liquidSlNumParams()
                            >liquidSlNumParams(5)
                            >liquidSlNumParams()
                            >liquidSlNumParams(6)
                            >liquidSlNumParams()
                            >liquidSlNumParams(7)
                            >liquidSlNumParams()
                            >liquidSlNumParams(8)
                            >liquidSlNumParams()
                            >liquidSlNumParams(9)
                            >liquidSlNumParams()
                            >liquidSlNumParams(10)
                            >liquidSlNumParams()
                            >liquidSlNumParams(11)
                            >liquidSlNumParams()
                            >liquidSlNumParams(12)
                            >liquidSlNumParams()
                            >liquidSlNumParams(13)
                            >liquidSlNumParams()
                            >liquidSlNumParams(14)
                            >liquidSlNumParams()
                            >liquidSlNumParams(15)
                            >liquidSlNumParams()
                            >liquidSlNumParams(16)
                            >liquidSlNumParams()
                            >liquidSlNumParams(17)
                            >liquidSlNumParams()
                            >liquidSlNumParams(18)
                            >liquidSlNumParams()
                            >liquidSlNumParams(19)
                            >liquidSlNumParams()
                            >liquidSlNumParams(20)
                            >liquidSlNumParams()
                        >setAttr -type stringArray liquidLight3.rmanParams 21 "intensity" "lightcolor" "decay" "shadownamepx" "shadownamenx" "shadownamepy" "shadownameny" "shadownamepz" "shadownamenz" "shadowbias" "shadowblur" "shadowsamples" "shadowfiltersize" "shadowcolor" "lightID" "__category" "__shadowF" "__shadowC" "__unshadowed_Cl" "__nondiffuse" "__nonspecular" 
                            >liquidSlNumParams()
                            >liquidSlNumParams()
                            >liquidSlParamDetail(0)
                            >liquidSlNumParams()
                            >liquidSlParamDetail(1)
                            >liquidSlNumParams()
                            >liquidSlParamDetail(2)
                            >liquidSlNumParams()
                            >liquidSlParamDetail(3)
                            >liquidSlNumParams()
                            >liquidSlParamDetail(4)
                            >liquidSlNumParams()
                            >liquidSlParamDetail(5)
                            >liquidSlNumParams()
                            >liquidSlParamDetail(6)
                            >liquidSlNumParams()
                            >liquidSlParamDetail(7)
                            >liquidSlNumParams()
                            >liquidSlParamDetail(8)
                            >liquidSlNumParams()
                            >liquidSlParamDetail(9)
                            >liquidSlNumParams()
                            >liquidSlParamDetail(10)
                            >liquidSlNumParams()
                            >liquidSlParamDetail(11)
                            >liquidSlNumParams()
                            >liquidSlParamDetail(12)
                            >liquidSlNumParams()
                            >liquidSlParamDetail(13)
                            >liquidSlNumParams()
                            >liquidSlParamDetail(14)
                            >liquidSlNumParams()
                            >liquidSlParamDetail(15)
                            >liquidSlNumParams()
                            >liquidSlParamDetail(16)
                            >liquidSlNumParams()
                            >liquidSlParamDetail(17)
                            >liquidSlNumParams()
                            >liquidSlParamDetail(18)
                            >liquidSlNumParams()
                            >liquidSlParamDetail(19)
                            >liquidSlNumParams()
                            >liquidSlParamDetail(20)
                            >liquidSlNumParams()
                        >setAttr -type stringArray liquidLight3.rmanDetails 21 uniform uniform uniform uniform uniform uniform uniform uniform uniform uniform uniform uniform uniform uniform uniform uniform varying varying varying varying varying 
                            >liquidSlNumParams()
                            >liquidSlNumParams()
                            >liquidSlParamType(0)
                            >liquidSlNumParams()
                            >liquidSlParamType(1)
                            >liquidSlNumParams()
                            >liquidSlParamType(2)
                            >liquidSlNumParams()
                            >liquidSlParamType(3)
                            >liquidSlNumParams()
                            >liquidSlParamType(4)
                            >liquidSlNumParams()
                            >liquidSlParamType(5)
                            >liquidSlNumParams()
                            >liquidSlParamType(6)
                            >liquidSlNumParams()
                            >liquidSlParamType(7)
                            >liquidSlNumParams()
                            >liquidSlParamType(8)
                            >liquidSlNumParams()
                            >liquidSlParamType(9)
                            >liquidSlNumParams()
                            >liquidSlParamType(10)
                            >liquidSlNumParams()
                            >liquidSlParamType(11)
                            >liquidSlNumParams()
                            >liquidSlParamType(12)
                            >liquidSlNumParams()
                            >liquidSlParamType(13)
                            >liquidSlNumParams()
                            >liquidSlParamType(14)
                            >liquidSlNumParams()
                            >liquidSlParamType(15)
                            >liquidSlNumParams()
                            >liquidSlParamType(16)
                            >liquidSlNumParams()
                            >liquidSlParamType(17)
                            >liquidSlNumParams()
                            >liquidSlParamType(18)
                            >liquidSlNumParams()
                            >liquidSlParamType(19)
                            >liquidSlNumParams()
                            >liquidSlParamType(20)
                            >liquidSlNumParams()
                        >setAttr -type stringArray liquidLight3.rmanTypes 21 "float" "color" "float" "string" "string" "string" "string" "string" "string" "float" "float" "float" "float" "color" "float" "string" "float" "color" "color" "float" "float" 
                            >liquidSlNumParams()
                            >liquidSlNumParams()
                            >liquidSlParamType(0)
                            >liquidSlParamDefaultRaw(0)
                            >liquidSlNumParams()
                            >liquidSlParamType(1)
                            >liquidSlParamDefaultRaw(1)
                            >liquidSlNumParams()
                            >liquidSlParamType(2)
                            >liquidSlParamDefaultRaw(2)
                            >liquidSlNumParams()
                            >liquidSlParamType(3)
                            >liquidSlParamDefaultRaw(3)
                            >liquidSlNumParams()
                            >liquidSlParamType(4)
                            >liquidSlParamDefaultRaw(4)
                            >liquidSlNumParams()
                            >liquidSlParamType(5)
                            >liquidSlParamDefaultRaw(5)
                            >liquidSlNumParams()
                            >liquidSlParamType(6)
                            >liquidSlParamDefaultRaw(6)
                            >liquidSlNumParams()
                            >liquidSlParamType(7)
                            >liquidSlParamDefaultRaw(7)
                            >liquidSlNumParams()
                            >liquidSlParamType(8)
                            >liquidSlParamDefaultRaw(8)
                            >liquidSlNumParams()
                            >liquidSlParamType(9)
                            >liquidSlParamDefaultRaw(9)
                            >liquidSlNumParams()
                            >liquidSlParamType(10)
                            >liquidSlParamDefaultRaw(10)
                            >liquidSlNumParams()
                            >liquidSlParamType(11)
                            >liquidSlParamDefaultRaw(11)
                            >liquidSlNumParams()
                            >liquidSlParamType(12)
                            >liquidSlParamDefaultRaw(12)
                            >liquidSlNumParams()
                            >liquidSlParamType(13)
                            >liquidSlParamDefaultRaw(13)
                            >liquidSlNumParams()
                            >liquidSlParamType(14)
                            >liquidSlParamDefaultRaw(14)
                            >liquidSlNumParams()
                            >liquidSlParamType(15)
                            >liquidSlParamDefaultRaw(15)
                            >liquidSlNumParams()
                            >liquidSlParamType(16)
                            >liquidSlParamDefaultRaw(16)
                            >liquidSlNumParams()
                            >liquidSlParamType(17)
                            >liquidSlParamDefaultRaw(17)
                            >liquidSlNumParams()
                            >liquidSlParamType(18)
                            >liquidSlParamDefaultRaw(18)
                            >liquidSlNumParams()
                            >liquidSlParamType(19)
                            >liquidSlParamDefaultRaw(19)
                            >liquidSlNumParams()
                            >liquidSlParamType(20)
                            >liquidSlParamDefaultRaw(20)
                            >liquidSlNumParams()
                        >setAttr -type stringArray liquidLight3.rmanDefaults 21 "1.0" "1:1:1" "0.0" "" "" "" "" "" "" "0.01" "0.0" "16.0" "1.0" "0:0:0" "0.0" "" "0.0" "1:1:1" "0:0:0" "0.0" "0.0" 
                            >liquidSlNumParams()
                            >liquidSlNumParams()
                            >liquidSlParamArraySize(0)
                            >liquidSlNumParams()
                            >liquidSlParamArraySize(1)
                            >liquidSlNumParams()
                            >liquidSlParamArraySize(2)
                            >liquidSlNumParams()
                            >liquidSlParamArraySize(3)
                            >liquidSlNumParams()
                            >liquidSlParamArraySize(4)
                            >liquidSlNumParams()
                            >liquidSlParamArraySize(5)
                            >liquidSlNumParams()
                            >liquidSlParamArraySize(6)
                            >liquidSlNumParams()
                            >liquidSlParamArraySize(7)
                            >liquidSlNumParams()
                            >liquidSlParamArraySize(8)
                            >liquidSlNumParams()
                            >liquidSlParamArraySize(9)
                            >liquidSlNumParams()
                            >liquidSlParamArraySize(10)
                            >liquidSlNumParams()
                            >liquidSlParamArraySize(11)
                            >liquidSlNumParams()
                            >liquidSlParamArraySize(12)
                            >liquidSlNumParams()
                            >liquidSlParamArraySize(13)
                            >liquidSlNumParams()
                            >liquidSlParamArraySize(14)
                            >liquidSlNumParams()
                            >liquidSlParamArraySize(15)
                            >liquidSlNumParams()
                            >liquidSlParamArraySize(16)
                            >liquidSlNumParams()
                            >liquidSlParamArraySize(17)
                            >liquidSlNumParams()
                            >liquidSlParamArraySize(18)
                            >liquidSlNumParams()
                            >liquidSlParamArraySize(19)
                            >liquidSlNumParams()
                            >liquidSlParamArraySize(20)
                            >liquidSlNumParams()
                        >setAttr -type Int32Array liquidLight3.rmanArraySizes 21 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 
                            >liquidSlNumParams()
                            >liquidSlNumParams()
                            >liquidSlParamAccept(0)
                            >liquidSlNumParams()
                            >liquidSlParamAccept(1)
                            >liquidSlNumParams()
                            >liquidSlParamAccept(2)
                            >liquidSlNumParams()
                            >liquidSlParamAccept(3)
                            >liquidSlNumParams()
                            >liquidSlParamAccept(4)
                            >liquidSlNumParams()
                            >liquidSlParamAccept(5)
                            >liquidSlNumParams()
                            >liquidSlParamAccept(6)
                            >liquidSlNumParams()
                            >liquidSlParamAccept(7)
                            >liquidSlNumParams()
                            >liquidSlParamAccept(8)
                            >liquidSlNumParams()
                            >liquidSlParamAccept(9)
                            >liquidSlNumParams()
                            >liquidSlParamAccept(10)
                            >liquidSlNumParams()
                            >liquidSlParamAccept(11)
                            >liquidSlNumParams()
                            >liquidSlParamAccept(12)
                            >liquidSlNumParams()
                            >liquidSlParamAccept(13)
                            >liquidSlNumParams()
                            >liquidSlParamAccept(14)
                            >liquidSlNumParams()
                            >liquidSlParamAccept(15)
                            >liquidSlNumParams()
                            >liquidSlParamAccept(16)
                            >liquidSlNumParams()
                            >liquidSlParamAccept(17)
                            >liquidSlNumParams()
                            >liquidSlParamAccept(18)
                            >liquidSlNumParams()
                            >liquidSlParamAccept(19)
                            >liquidSlNumParams()
                            >liquidSlParamAccept(20)
                            >liquidSlNumParams()
                        >[rmanParams_create] setAttr -type stringArray liquidLight3.rmanAccept 21 "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" 
                        >setAttr -type stringArray liquidLight3.rmanLifCmds 27 "liquidAE_LifParameter( \"__category\", \"-1\", \"string\", \"string\", \"__category\", {\"\"}, \"\", 14 );" "liquidAE_LifParameter( \"intensity\", \"-1\", \"float\", \"slider\", \"Intensity\", {\"\"}, \"\", 14 );" "liquidAE_LifParameter( \"lightcolor\", \"-1\", \"color\", \"color\", \"Light Color\", {\"\"}, \"\", 14 );" "liquidAE_LifParameter( \"__nondiffuse\", \"-1\", \"float\", \"bool\", \"Non Diffuse\", {\"\"}, \"\", 14 );" "liquidAE_LifParameter( \"__nonspecular\", \"-1\", \"float\", \"bool\", \"Non Specular\", {\"\"}, \"\", 14 );" "liquidAE_LifParameter( \"decay\", \"-1\", \"float\", \"selector\", \"Decay\", {\"None\", \"0\", \"Linear\", \"1\", \"Quadratic\", \"2\", \"Cubic\", \"3\"}, \"\", 14 );" "liquidAE_LifParameter( \"lightID\", \"-1\", \"float\", \"float\", \"lightID\", {\"\"}, \"\", 14 );" "liquidAE_LifGrp( \"Shadows\", 14 );" "liquidAE_LifGrp( \"Maps\", 14 );" "liquidAE_LifParameter( \"shadownamepx\", \"-1\", \"string\", \"shadow\", \"shadownamepx\", {\"\"}, \"\", 14 );" "liquidAE_LifParameter( \"shadownamenx\", \"-1\", \"string\", \"shadow\", \"shadownamenx\", {\"\"}, \"\", 14 );" "liquidAE_LifParameter( \"shadownamepy\", \"-1\", \"string\", \"shadow\", \"shadownamepy\", {\"\"}, \"\", 14 );" "liquidAE_LifParameter( \"shadownameny\", \"-1\", \"string\", \"shadow\", \"shadownameny\", {\"\"}, \"\", 14 );" "liquidAE_LifParameter( \"shadownamepz\", \"-1\", \"string\", \"shadow\", \"shadownamepz\", {\"\"}, \"\", 14 );" "liquidAE_LifParameter( \"shadownamenz\", \"-1\", \"string\", \"shadow\", \"shadownamenz\", {\"\"}, \"\", 14 );" "liquidAE_LifGrp( \"end\", 14 );" "liquidAE_LifParameter( \"shadowbias\", \"-1\", \"float\", \"slider\", \"Bias\", {\"0\", \"1\"}, \"\", 14 );" "liquidAE_LifParameter( \"shadowblur\", \"-1\", \"float\", \"slider\", \"Blur\", {\"0\", \"1\"}, \"\", 14 );" "liquidAE_LifParameter( \"shadowsamples\", \"-1\", \"float\", \"slider\", \"Samples\", {\"0\", \"1\"}, \"\", 14 );" "liquidAE_LifParameter( \"shadowfiltersize\", \"-1\", \"float\", \"slider\", \"Filter Size\", {\"0\", \"1\"}, \"\", 14 );" "liquidAE_LifParameter( \"shadowcolor\", \"-1\", \"color\", \"color\", \"Color\", {\"\"}, \"\", 14 );" "liquidAE_LifGrp( \"AOVs\", 14 );" "liquidAE_LifParameter( \"__shadowF\", \"-1\", \"float\", \"float\", \"__shadowF\", {\"\"}, \"shadow fraction\", 14 );" "liquidAE_LifParameter( \"__shadowC\", \"-1\", \"color\", \"color\", \"__shadowC\", {\"\"}, \"\", 14 );" "liquidAE_LifParameter( \"__unshadowed_Cl\", \"-1\", \"color\", \"color\", \"__unshadowed_Cl\", {\"\"}, \"\", 14 );" "liquidAE_LifGrp( \"end\", 14 );" "liquidAE_LifGrp( \"end\", 14 );" 
                            >liquidSlNumParams()
                        >[rmanParams_create] adding attribute liquidLight3.rmanParamLifCmdId
                        >[rmanParams_create] setAttr -type Int32Array liquidLight3.rmanParamLifCmdId 21 1 2 5 9 10 11 12 13 14 16 17 18 19 20 6 0 22 23 24 3 4 
                        >[rmanParams_create] adding attribute liquidLight3.rmanGroups
                        >[rmanParams_create] setAttr -type stringArray liquidLight3.rmanGroups 0 
                        >[rmanParams_create] adding attribute liquidLight3.rmanGroupLifCmdId
                        >[rmanParams_create] setAttr -type Int32Array liquidLight3.rmanGroupLifCmdId 0 
                        >[rmanParams_create] adding attribute liquidLight3.rmanLifCtrls
            >liquidPreviewSwatchReplace(liquidLight3.message)
            >liquidShaderPickerReplace(liquidLight3.rmanShaderLong)
                >liquidGlobalsExists()
            >liquidShaderNodesParamsReplace(liquidLight3.rmanShaderLong)
                >liquidAE_getShaderLayoutName(liquidLight,E:/dev/Autodesk/maya/myplugin/project/liquid_/2.3.3/lib/shaders/liquidpoint.sdl)
                >liquidAE_setCacheLayout(liquidLight,E:/dev/Autodesk/maya/myplugin/project/liquid_/2.3.3/lib/shaders/liquidpoint.sdl,MayaWindow)
                    >liquidAE_getShaderLayoutName(liquidLight,E:/dev/Autodesk/maya/myplugin/project/liquid_/2.3.3/lib/shaders/liquidpoint.sdl)
            >rmanLifCmds: liquidAE_LifParameter( "__category", "-1", "string", "string", "__category", {""}, "", 14 );
                >liquidAE_LifParameter( __category,-1,string, ui type:string,__category,[],,14)
                    >liquidAE_LifString( __category,__category, ui type:string,__category,[],,14)
                        >liquidAE_LifString_field( __category,__category,__category,[],,14)
                            >liquidAE_LifStringOverride( __category,liquidLightE__dev_Autodesk_maya_myplugin_project_liquid__2_3_3_lib_shaders_liquidpoint_sdl_MayaWindow___category_LIF)
            >rmanLifCmds: liquidAE_LifParameter( "intensity", "-1", "float", "slider", "Intensity", {""}, "", 14 );
                >liquidAE_LifParameter( intensity,-1,float, ui type:slider,Intensity,[],,14)
                    >liquidAE_LifFloat( intensity,intensity,UI type:slider,Intensity,[],,14)
                        >liquidAE_LifFloat_slider(intensity,intensity,Intensity,[],,14
            >rmanLifCmds: liquidAE_LifParameter( "lightcolor", "-1", "color", "color", "Light Color", {""}, "", 14 );
                >liquidAE_LifParameter( lightcolor,-1,color, ui type:color,Light Color,[],,14)
                    >liquidAE_LifColor( lightcolor,lightcolor, ui type:color,Light Color,[],,14)
                        >liquidAE_LifFloat( lightcolor,lightcolor,Light Color,[],,14)
            >rmanLifCmds: liquidAE_LifParameter( "__nondiffuse", "-1", "float", "bool", "Non Diffuse", {""}, "", 14 );
                >liquidAE_LifParameter( __nondiffuse,-1,float, ui type:bool,Non Diffuse,[],,14)
                    >liquidAE_LifFloat( __nondiffuse,__nondiffuse,UI type:bool,Non Diffuse,[],,14)
                        >liquidAE_LifFloat_bool( __nondiffuse,__nondiffuse,Non Diffuse,[],,14)
            >rmanLifCmds: liquidAE_LifParameter( "__nonspecular", "-1", "float", "bool", "Non Specular", {""}, "", 14 );
                >liquidAE_LifParameter( __nonspecular,-1,float, ui type:bool,Non Specular,[],,14)
                    >liquidAE_LifFloat( __nonspecular,__nonspecular,UI type:bool,Non Specular,[],,14)
                        >liquidAE_LifFloat_bool( __nonspecular,__nonspecular,Non Specular,[],,14)
            >rmanLifCmds: liquidAE_LifParameter( "decay", "-1", "float", "selector", "Decay", {"None", "0", "Linear", "1", "Quadratic", "2", "Cubic", "3"}, "", 14 );
                >liquidAE_LifParameter( decay,-1,float, ui type:selector,Decay,[None 0 Linear 1 Quadratic 2 Cubic 3],,14)
                    >liquidAE_LifFloat( decay,decay,UI type:selector,Decay,[None 0 Linear 1 Quadratic 2 Cubic 3],,14)
                        >liquidAE_Lif_selector(decay,float,decay,Decay,[None 0 Linear 1 Quadratic 2 Cubic 3,,14)
                            >liquidSlValidIntString(0)
                                >liquidSlValidFloatString(0)
                                    >isValidIntPart(0)
                                    >isNonEmptyIntPart(0)
                                        >isValidIntPart(0)
                                    >isValidExpPart()
                            >liquidSlValidIntString(1)
                                >liquidSlValidFloatString(1)
                                    >isValidIntPart(1)
                                    >isNonEmptyIntPart(1)
                                        >isValidIntPart(1)
                                    >isValidExpPart()
                            >liquidSlValidIntString(2)
                                >liquidSlValidFloatString(2)
                                    >isValidIntPart(2)
                                    >isNonEmptyIntPart(2)
                                        >isValidIntPart(2)
                                    >isValidExpPart()
                            >liquidSlValidIntString(3)
                                >liquidSlValidFloatString(3)
                                    >isValidIntPart(3)
                                    >isNonEmptyIntPart(3)
                                        >isValidIntPart(3)
                                    >isValidExpPart()
                            >liquidSlConformStrings(float, [0 1 2 3])
                                >liquidSlValidFloatString(0)
                                    >isValidIntPart(0)
                                    >isNonEmptyIntPart(0)
                                        >isValidIntPart(0)
                                    >isValidExpPart()
                                >liquidSlValidFloatString(1)
                                    >isValidIntPart(1)
                                    >isNonEmptyIntPart(1)
                                        >isValidIntPart(1)
                                    >isValidExpPart()
                                >liquidSlValidFloatString(2)
                                    >isValidIntPart(2)
                                    >isNonEmptyIntPart(2)
                                        >isValidIntPart(2)
                                    >isValidExpPart()
                                >liquidSlValidFloatString(3)
                                    >isValidIntPart(3)
                                    >isNonEmptyIntPart(3)
                                        >isValidIntPart(3)
                                    >isValidExpPart()
                        >		[liquidAE_Lif_selector] using int enum method for values: 0.0|1.0|2.0|3.0
            >rmanLifCmds: liquidAE_LifParameter( "lightID", "-1", "float", "float", "lightID", {""}, "", 14 );
                >liquidAE_LifParameter( lightID,-1,float, ui type:float,lightID,[],,14)
                    >liquidAE_LifFloat( lightID,lightID,UI type:float,lightID,[],,14)
                        >liquidAE_LifFloat_slider(lightID,lightID,lightID,[],,14
            >rmanLifCmds: liquidAE_LifGrp( "Shadows", 14 );
                >liquidAE_LifGrp( Shadows,14). liquidLight3,liquidLightE:_dev_Autodesk_maya_myplugin_project_liquid__2_3_3_lib_shaders_liquidpoint_sdl_MayaWindow
            >rmanLifCmds: liquidAE_LifGrp( "Maps", 14 );
                >liquidAE_LifGrp( Maps,14). liquidLight3,liquidLightE:_dev_Autodesk_maya_myplugin_project_liquid__2_3_3_lib_shaders_liquidpoint_sdl_MayaWindow
            >rmanLifCmds: liquidAE_LifParameter( "shadownamepx", "-1", "string", "shadow", "shadownamepx", {""}, "", 14 );
                >liquidAE_LifParameter( shadownamepx,-1,string, ui type:shadow,shadownamepx,[],,14)
                    >liquidAE_LifString( shadownamepx,shadownamepx, ui type:shadow,shadownamepx,[],,14)
                        >liquidAE_LifString_browser( shadownamepx,shadownamepx, ui type:shadow,shadownamepx,[],,14)
                            >liquidAE_LifStringOverride( shadownamepx,liquidLightE__dev_Autodesk_maya_myplugin_project_liquid__2_3_3_lib_shaders_liquidpoint_sdl_MayaWindow_shadownamepx_LIF)
            >rmanLifCmds: liquidAE_LifParameter( "shadownamenx", "-1", "string", "shadow", "shadownamenx", {""}, "", 14 );
                >liquidAE_LifParameter( shadownamenx,-1,string, ui type:shadow,shadownamenx,[],,14)
                    >liquidAE_LifString( shadownamenx,shadownamenx, ui type:shadow,shadownamenx,[],,14)
                        >liquidAE_LifString_browser( shadownamenx,shadownamenx, ui type:shadow,shadownamenx,[],,14)
                            >liquidAE_LifStringOverride( shadownamenx,liquidLightE__dev_Autodesk_maya_myplugin_project_liquid__2_3_3_lib_shaders_liquidpoint_sdl_MayaWindow_shadownamenx_LIF)
            >rmanLifCmds: liquidAE_LifParameter( "shadownamepy", "-1", "string", "shadow", "shadownamepy", {""}, "", 14 );
                >liquidAE_LifParameter( shadownamepy,-1,string, ui type:shadow,shadownamepy,[],,14)
                    >liquidAE_LifString( shadownamepy,shadownamepy, ui type:shadow,shadownamepy,[],,14)
                        >liquidAE_LifString_browser( shadownamepy,shadownamepy, ui type:shadow,shadownamepy,[],,14)
                            >liquidAE_LifStringOverride( shadownamepy,liquidLightE__dev_Autodesk_maya_myplugin_project_liquid__2_3_3_lib_shaders_liquidpoint_sdl_MayaWindow_shadownamepy_LIF)
            >rmanLifCmds: liquidAE_LifParameter( "shadownameny", "-1", "string", "shadow", "shadownameny", {""}, "", 14 );
                >liquidAE_LifParameter( shadownameny,-1,string, ui type:shadow,shadownameny,[],,14)
                    >liquidAE_LifString( shadownameny,shadownameny, ui type:shadow,shadownameny,[],,14)
                        >liquidAE_LifString_browser( shadownameny,shadownameny, ui type:shadow,shadownameny,[],,14)
                            >liquidAE_LifStringOverride( shadownameny,liquidLightE__dev_Autodesk_maya_myplugin_project_liquid__2_3_3_lib_shaders_liquidpoint_sdl_MayaWindow_shadownameny_LIF)
            >rmanLifCmds: liquidAE_LifParameter( "shadownamepz", "-1", "string", "shadow", "shadownamepz", {""}, "", 14 );
                >liquidAE_LifParameter( shadownamepz,-1,string, ui type:shadow,shadownamepz,[],,14)
                    >liquidAE_LifString( shadownamepz,shadownamepz, ui type:shadow,shadownamepz,[],,14)
                        >liquidAE_LifString_browser( shadownamepz,shadownamepz, ui type:shadow,shadownamepz,[],,14)
                            >liquidAE_LifStringOverride( shadownamepz,liquidLightE__dev_Autodesk_maya_myplugin_project_liquid__2_3_3_lib_shaders_liquidpoint_sdl_MayaWindow_shadownamepz_LIF)
            >rmanLifCmds: liquidAE_LifParameter( "shadownamenz", "-1", "string", "shadow", "shadownamenz", {""}, "", 14 );
                >liquidAE_LifParameter( shadownamenz,-1,string, ui type:shadow,shadownamenz,[],,14)
                    >liquidAE_LifString( shadownamenz,shadownamenz, ui type:shadow,shadownamenz,[],,14)
                        >liquidAE_LifString_browser( shadownamenz,shadownamenz, ui type:shadow,shadownamenz,[],,14)
                            >liquidAE_LifStringOverride( shadownamenz,liquidLightE__dev_Autodesk_maya_myplugin_project_liquid__2_3_3_lib_shaders_liquidpoint_sdl_MayaWindow_shadownamenz_LIF)
            >rmanLifCmds: liquidAE_LifGrp( "end", 14 );
                >liquidAE_LifGrp( end,14). liquidLight3,liquidLightE:_dev_Autodesk_maya_myplugin_project_liquid__2_3_3_lib_shaders_liquidpoint_sdl_MayaWindow
            >rmanLifCmds: liquidAE_LifParameter( "shadowbias", "-1", "float", "slider", "Bias", {"0", "1"}, "", 14 );
                >liquidAE_LifParameter( shadowbias,-1,float, ui type:slider,Bias,[0 1],,14)
                    >liquidAE_LifFloat( shadowbias,shadowbias,UI type:slider,Bias,[0 1],,14)
                        >liquidAE_LifFloat_slider(shadowbias,shadowbias,Bias,[0 1],,14
            >rmanLifCmds: liquidAE_LifParameter( "shadowblur", "-1", "float", "slider", "Blur", {"0", "1"}, "", 14 );
                >liquidAE_LifParameter( shadowblur,-1,float, ui type:slider,Blur,[0 1],,14)
                    >liquidAE_LifFloat( shadowblur,shadowblur,UI type:slider,Blur,[0 1],,14)
                        >liquidAE_LifFloat_slider(shadowblur,shadowblur,Blur,[0 1],,14
            >rmanLifCmds: liquidAE_LifParameter( "shadowsamples", "-1", "float", "slider", "Samples", {"0", "1"}, "", 14 );
                >liquidAE_LifParameter( shadowsamples,-1,float, ui type:slider,Samples,[0 1],,14)
                    >liquidAE_LifFloat( shadowsamples,shadowsamples,UI type:slider,Samples,[0 1],,14)
                        >liquidAE_LifFloat_slider(shadowsamples,shadowsamples,Samples,[0 1],,14
            >rmanLifCmds: liquidAE_LifParameter( "shadowfiltersize", "-1", "float", "slider", "Filter Size", {"0", "1"}, "", 14 );
                >liquidAE_LifParameter( shadowfiltersize,-1,float, ui type:slider,Filter Size,[0 1],,14)
                    >liquidAE_LifFloat( shadowfiltersize,shadowfiltersize,UI type:slider,Filter Size,[0 1],,14)
                        >liquidAE_LifFloat_slider(shadowfiltersize,shadowfiltersize,Filter Size,[0 1],,14
            >rmanLifCmds: liquidAE_LifParameter( "shadowcolor", "-1", "color", "color", "Color", {""}, "", 14 );
                >liquidAE_LifParameter( shadowcolor,-1,color, ui type:color,Color,[],,14)
                    >liquidAE_LifColor( shadowcolor,shadowcolor, ui type:color,Color,[],,14)
                        >liquidAE_LifFloat( shadowcolor,shadowcolor,Color,[],,14)
            >rmanLifCmds: liquidAE_LifGrp( "AOVs", 14 );
                >liquidAE_LifGrp( AOVs,14). liquidLight3,liquidLightE:_dev_Autodesk_maya_myplugin_project_liquid__2_3_3_lib_shaders_liquidpoint_sdl_MayaWindow
            >rmanLifCmds: liquidAE_LifParameter( "__shadowF", "-1", "float", "float", "__shadowF", {""}, "shadow fraction", 14 );
                >liquidAE_LifParameter( __shadowF,-1,float, ui type:float,__shadowF,[],shadow fraction,14)
                    >liquidAE_LifFloat( __shadowF,__shadowF,UI type:float,__shadowF,[],shadow fraction,14)
                        >liquidAE_LifFloat_slider(__shadowF,__shadowF,__shadowF,[],shadow fraction,14
            >rmanLifCmds: liquidAE_LifParameter( "__shadowC", "-1", "color", "color", "__shadowC", {""}, "", 14 );
                >liquidAE_LifParameter( __shadowC,-1,color, ui type:color,__shadowC,[],,14)
                    >liquidAE_LifColor( __shadowC,__shadowC, ui type:color,__shadowC,[],,14)
                        >liquidAE_LifFloat( __shadowC,__shadowC,__shadowC,[],,14)
            >rmanLifCmds: liquidAE_LifParameter( "__unshadowed_Cl", "-1", "color", "color", "__unshadowed_Cl", {""}, "", 14 );
                >liquidAE_LifParameter( __unshadowed_Cl,-1,color, ui type:color,__unshadowed_Cl,[],,14)
                    >liquidAE_LifColor( __unshadowed_Cl,__unshadowed_Cl, ui type:color,__unshadowed_Cl,[],,14)
                        >liquidAE_LifFloat( __unshadowed_Cl,__unshadowed_Cl,__unshadowed_Cl,[],,14)
            >rmanLifCmds: liquidAE_LifGrp( "end", 14 );
                >liquidAE_LifGrp( end,14). liquidLight3,liquidLightE:_dev_Autodesk_maya_myplugin_project_liquid__2_3_3_lib_shaders_liquidpoint_sdl_MayaWindow
            >rmanLifCmds: liquidAE_LifGrp( "end", 14 );
                >liquidAE_LifGrp( end,14). liquidLight3,liquidLightE:_dev_Autodesk_maya_myplugin_project_liquid__2_3_3_lib_shaders_liquidpoint_sdl_MayaWindow
            >liquidFluidGetPreviewDir()
                >liquidGlobalsExists()
            >liquidShaderNodes_reloadAndRefresh(liquidLight3)
                >liquidShaderNodes_initParams(liquidLight3)
                    >liquidGetShaderNodeExpectedType(liquidLight3)
                        >liquidGetShaderNodeType(liquidLight3)
                    >liquidShaderNodes_initParams_pl(liquidLight3,E:/dev/Autodesk/maya/myplugin/project/liquid_/2.3.3/lib/shaders/liquidpoint.sdl)
                        >liquidGlobalsExists()
                        >liquidSlInfoReset()
                        >liquidSlSetShader(E:/dev/Autodesk/maya/myplugin/project/liquid_/2.3.3/lib/shaders/liquidpoint.sdl)
                            >liquidSlParseSdl(E:/dev/Autodesk/maya/myplugin/project/liquid_/2.3.3/lib/shaders/liquidpoint.sdl)
                                >liquidSl_getShaderType(3)
                                    >liquidSl_setShaderName(liquidpoint)
                            >[liquidSlParseSdl] liquid node expecting "", shader type is: "light"

                            >[liquidSlParseSdl] found methods: 
                                >getSdlLine(3)
                                >liquidSl_getParamName(    "intensity" "parameter uniform float"
)
                                >liquidSl_getParamDetail(    "intensity" "parameter uniform float"
)
                                >liquidSl_isOutputParam(    "intensity" "parameter uniform float"
)
                                >liquidSl_getParamType(    "intensity" "parameter uniform float"
)
                                >liquidSl_getParamArraySize(    "intensity" "parameter uniform float"
)
                                >getSdlLine(3)
                                >liquidSl_getParamDefault(...)
                                    >liquidSl_getParamDefaultF(1)
                                >getSdlLine(3)
                            >param 0
                            >{
                            >      Name:intensity
                            >      Details:uniform
                            >      Type:float
                            >      IsOutput:0
                            >      Defaults:1.0
                            >      ArraySizes:-1
                            >}//intensity|uniform|float|0|1.0|-1
                                >liquidSl_getParamName(    "lightcolor" "parameter uniform color"
)
                                >liquidSl_getParamDetail(    "lightcolor" "parameter uniform color"
)
                                >liquidSl_isOutputParam(    "lightcolor" "parameter uniform color"
)
                                >liquidSl_getParamType(    "lightcolor" "parameter uniform color"
)
                                >liquidSl_getParamArraySize(    "lightcolor" "parameter uniform color"
)
                                >getSdlLine(3)
                                >liquidSl_getParamDefault(...)
                                    >liquidSl_getParamDefaultV("rgb" [1 1 1])
                                    >getSdlLine(3)
                                >param 1
                                >{
                                >      Name:lightcolor
                                >      Details:uniform
                                >      Type:color
                                >      IsOutput:0
                                >      Defaults:<<1, 1, 1>>
                                >      ArraySizes:-1
                                >}//lightcolor|uniform|color|0|<<1, 1, 1>>|-1
                                    >liquidSl_getParamName(    "decay" "parameter uniform float"
)
                                    >liquidSl_getParamDetail(    "decay" "parameter uniform float"
)
                                    >liquidSl_isOutputParam(    "decay" "parameter uniform float"
)
                                    >liquidSl_getParamType(    "decay" "parameter uniform float"
)
                                    >liquidSl_getParamArraySize(    "decay" "parameter uniform float"
)
                                    >getSdlLine(3)
                                    >liquidSl_getParamDefault(...)
                                        >liquidSl_getParamDefaultF(0)
                                    >getSdlLine(3)
                                >param 2
                                >{
                                >      Name:decay
                                >      Details:uniform
                                >      Type:float
                                >      IsOutput:0
                                >      Defaults:0.0
                                >      ArraySizes:-1
                                >}//decay|uniform|float|0|0.0|-1
                                    >liquidSl_getParamName(    "shadownamepx" "parameter uniform string"
)
                                    >liquidSl_getParamDetail(    "shadownamepx" "parameter uniform string"
)
                                    >liquidSl_isOutputParam(    "shadownamepx" "parameter uniform string"
)
                                    >liquidSl_getParamType(    "shadownamepx" "parameter uniform string"
)
                                    >liquidSl_getParamArraySize(    "shadownamepx" "parameter uniform string"
)
                                    >getSdlLine(3)
                                    >liquidSl_getParamDefault(...)
                                        >liquidSl_getParamDefaultS("")
                                    >getSdlLine(3)
                                >param 3
                                >{
                                >      Name:shadownamepx
                                >      Details:uniform
                                >      Type:string
                                >      IsOutput:0
                                >      Defaults:""
                                >      ArraySizes:-1
                                >}//shadownamepx|uniform|string|0|""|-1
                                    >liquidSl_getParamName(    "shadownamenx" "parameter uniform string"
)
                                    >liquidSl_getParamDetail(    "shadownamenx" "parameter uniform string"
)
                                    >liquidSl_isOutputParam(    "shadownamenx" "parameter uniform string"
)
                                    >liquidSl_getParamType(    "shadownamenx" "parameter uniform string"
)
                                    >liquidSl_getParamArraySize(    "shadownamenx" "parameter uniform string"
)
                                    >getSdlLine(3)
                                    >liquidSl_getParamDefault(...)
                                        >liquidSl_getParamDefaultS("")
                                    >getSdlLine(3)
                                >param 4
                                >{
                                >      Name:shadownamenx
                                >      Details:uniform
                                >      Type:string
                                >      IsOutput:0
                                >      Defaults:""
                                >      ArraySizes:-1
                                >}//shadownamenx|uniform|string|0|""|-1
                                    >liquidSl_getParamName(    "shadownamepy" "parameter uniform string"
)
                                    >liquidSl_getParamDetail(    "shadownamepy" "parameter uniform string"
)
                                    >liquidSl_isOutputParam(    "shadownamepy" "parameter uniform string"
)
                                    >liquidSl_getParamType(    "shadownamepy" "parameter uniform string"
)
                                    >liquidSl_getParamArraySize(    "shadownamepy" "parameter uniform string"
)
                                    >getSdlLine(3)
                                    >liquidSl_getParamDefault(...)
                                        >liquidSl_getParamDefaultS("")
                                    >getSdlLine(3)
                                >param 5
                                >{
                                >      Name:shadownamepy
                                >      Details:uniform
                                >      Type:string
                                >      IsOutput:0
                                >      Defaults:""
                                >      ArraySizes:-1
                                >}//shadownamepy|uniform|string|0|""|-1
                                    >liquidSl_getParamName(    "shadownameny" "parameter uniform string"
)
                                    >liquidSl_getParamDetail(    "shadownameny" "parameter uniform string"
)
                                    >liquidSl_isOutputParam(    "shadownameny" "parameter uniform string"
)
                                    >liquidSl_getParamType(    "shadownameny" "parameter uniform string"
)
                                    >liquidSl_getParamArraySize(    "shadownameny" "parameter uniform string"
)
                                    >getSdlLine(3)
                                    >liquidSl_getParamDefault(...)
                                        >liquidSl_getParamDefaultS("")
                                    >getSdlLine(3)
                                >param 6
                                >{
                                >      Name:shadownameny
                                >      Details:uniform
                                >      Type:string
                                >      IsOutput:0
                                >      Defaults:""
                                >      ArraySizes:-1
                                >}//shadownameny|uniform|string|0|""|-1
                                    >liquidSl_getParamName(    "shadownamepz" "parameter uniform string"
)
                                    >liquidSl_getParamDetail(    "shadownamepz" "parameter uniform string"
)
                                    >liquidSl_isOutputParam(    "shadownamepz" "parameter uniform string"
)
                                    >liquidSl_getParamType(    "shadownamepz" "parameter uniform string"
)
                                    >liquidSl_getParamArraySize(    "shadownamepz" "parameter uniform string"
)
                                    >getSdlLine(3)
                                    >liquidSl_getParamDefault(...)
                                        >liquidSl_getParamDefaultS("")
                                    >getSdlLine(3)
                                >param 7
                                >{
                                >      Name:shadownamepz
                                >      Details:uniform
                                >      Type:string
                                >      IsOutput:0
                                >      Defaults:""
                                >      ArraySizes:-1
                                >}//shadownamepz|uniform|string|0|""|-1
                                    >liquidSl_getParamName(    "shadownamenz" "parameter uniform string"
)
                                    >liquidSl_getParamDetail(    "shadownamenz" "parameter uniform string"
)
                                    >liquidSl_isOutputParam(    "shadownamenz" "parameter uniform string"
)
                                    >liquidSl_getParamType(    "shadownamenz" "parameter uniform string"
)
                                    >liquidSl_getParamArraySize(    "shadownamenz" "parameter uniform string"
)
                                    >getSdlLine(3)
                                    >liquidSl_getParamDefault(...)
                                        >liquidSl_getParamDefaultS("")
                                    >getSdlLine(3)
                                >param 8
                                >{
                                >      Name:shadownamenz
                                >      Details:uniform
                                >      Type:string
                                >      IsOutput:0
                                >      Defaults:""
                                >      ArraySizes:-1
                                >}//shadownamenz|uniform|string|0|""|-1
                                    >liquidSl_getParamName(    "shadowbias" "parameter uniform float"
)
                                    >liquidSl_getParamDetail(    "shadowbias" "parameter uniform float"
)
                                    >liquidSl_isOutputParam(    "shadowbias" "parameter uniform float"
)
                                    >liquidSl_getParamType(    "shadowbias" "parameter uniform float"
)
                                    >liquidSl_getParamArraySize(    "shadowbias" "parameter uniform float"
)
                                    >getSdlLine(3)
                                    >liquidSl_getParamDefault(...)
                                        >liquidSl_getParamDefaultF(0.01)
                                    >getSdlLine(3)
                                >param 9
                                >{
                                >      Name:shadowbias
                                >      Details:uniform
                                >      Type:float
                                >      IsOutput:0
                                >      Defaults:0.01
                                >      ArraySizes:-1
                                >}//shadowbias|uniform|float|0|0.01|-1
                                    >liquidSl_getParamName(    "shadowblur" "parameter uniform float"
)
                                    >liquidSl_getParamDetail(    "shadowblur" "parameter uniform float"
)
                                    >liquidSl_isOutputParam(    "shadowblur" "parameter uniform float"
)
                                    >liquidSl_getParamType(    "shadowblur" "parameter uniform float"
)
                                    >liquidSl_getParamArraySize(    "shadowblur" "parameter uniform float"
)
                                    >getSdlLine(3)
                                    >liquidSl_getParamDefault(...)
                                        >liquidSl_getParamDefaultF(0)
                                    >getSdlLine(3)
                                >param 10
                                >{
                                >      Name:shadowblur
                                >      Details:uniform
                                >      Type:float
                                >      IsOutput:0
                                >      Defaults:0.0
                                >      ArraySizes:-1
                                >}//shadowblur|uniform|float|0|0.0|-1
                                    >liquidSl_getParamName(    "shadowsamples" "parameter uniform float"
)
                                    >liquidSl_getParamDetail(    "shadowsamples" "parameter uniform float"
)
                                    >liquidSl_isOutputParam(    "shadowsamples" "parameter uniform float"
)
                                    >liquidSl_getParamType(    "shadowsamples" "parameter uniform float"
)
                                    >liquidSl_getParamArraySize(    "shadowsamples" "parameter uniform float"
)
                                    >getSdlLine(3)
                                    >liquidSl_getParamDefault(...)
                                        >liquidSl_getParamDefaultF(16)
                                    >getSdlLine(3)
                                >param 11
                                >{
                                >      Name:shadowsamples
                                >      Details:uniform
                                >      Type:float
                                >      IsOutput:0
                                >      Defaults:16.0
                                >      ArraySizes:-1
                                >}//shadowsamples|uniform|float|0|16.0|-1
                                    >liquidSl_getParamName(    "shadowfiltersize" "parameter uniform float"
)
                                    >liquidSl_getParamDetail(    "shadowfiltersize" "parameter uniform float"
)
                                    >liquidSl_isOutputParam(    "shadowfiltersize" "parameter uniform float"
)
                                    >liquidSl_getParamType(    "shadowfiltersize" "parameter uniform float"
)
                                    >liquidSl_getParamArraySize(    "shadowfiltersize" "parameter uniform float"
)
                                    >getSdlLine(3)
                                    >liquidSl_getParamDefault(...)
                                        >liquidSl_getParamDefaultF(1)
                                    >getSdlLine(3)
                                >param 12
                                >{
                                >      Name:shadowfiltersize
                                >      Details:uniform
                                >      Type:float
                                >      IsOutput:0
                                >      Defaults:1.0
                                >      ArraySizes:-1
                                >}//shadowfiltersize|uniform|float|0|1.0|-1
                                    >liquidSl_getParamName(    "shadowcolor" "parameter uniform color"
)
                                    >liquidSl_getParamDetail(    "shadowcolor" "parameter uniform color"
)
                                    >liquidSl_isOutputParam(    "shadowcolor" "parameter uniform color"
)
                                    >liquidSl_getParamType(    "shadowcolor" "parameter uniform color"
)
                                    >liquidSl_getParamArraySize(    "shadowcolor" "parameter uniform color"
)
                                    >getSdlLine(3)
                                    >liquidSl_getParamDefault(...)
                                        >liquidSl_getParamDefaultV("rgb" [0 0 0])
                                        >getSdlLine(3)
                                    >param 13
                                    >{
                                    >      Name:shadowcolor
                                    >      Details:uniform
                                    >      Type:color
                                    >      IsOutput:0
                                    >      Defaults:<<0, 0, 0>>
                                    >      ArraySizes:-1
                                    >}//shadowcolor|uniform|color|0|<<0, 0, 0>>|-1
                                        >liquidSl_getParamName(    "lightID" "parameter uniform float"
)
                                        >liquidSl_getParamDetail(    "lightID" "parameter uniform float"
)
                                        >liquidSl_isOutputParam(    "lightID" "parameter uniform float"
)
                                        >liquidSl_getParamType(    "lightID" "parameter uniform float"
)
                                        >liquidSl_getParamArraySize(    "lightID" "parameter uniform float"
)
                                        >getSdlLine(3)
                                        >liquidSl_getParamDefault(...)
                                            >liquidSl_getParamDefaultF(0)
                                        >getSdlLine(3)
                                    >param 14
                                    >{
                                    >      Name:lightID
                                    >      Details:uniform
                                    >      Type:float
                                    >      IsOutput:0
                                    >      Defaults:0.0
                                    >      ArraySizes:-1
                                    >}//lightID|uniform|float|0|0.0|-1
                                        >liquidSl_getParamName(    "__category" "parameter uniform string"
)
                                        >liquidSl_getParamDetail(    "__category" "parameter uniform string"
)
                                        >liquidSl_isOutputParam(    "__category" "parameter uniform string"
)
                                        >liquidSl_getParamType(    "__category" "parameter uniform string"
)
                                        >liquidSl_getParamArraySize(    "__category" "parameter uniform string"
)
                                        >getSdlLine(3)
                                        >liquidSl_getParamDefault(...)
                                            >liquidSl_getParamDefaultS("")
                                        >getSdlLine(3)
                                    >param 15
                                    >{
                                    >      Name:__category
                                    >      Details:uniform
                                    >      Type:string
                                    >      IsOutput:0
                                    >      Defaults:""
                                    >      ArraySizes:-1
                                    >}//__category|uniform|string|0|""|-1
                                        >liquidSl_getParamName(    "__shadowF" "output parameter varying float"
)
                                        >liquidSl_getParamDetail(    "__shadowF" "output parameter varying float"
)
                                        >liquidSl_isOutputParam(    "__shadowF" "output parameter varying float"
)
                                        >liquidSl_getParamType(    "__shadowF" "output parameter varying float"
)
                                        >liquidSl_getParamArraySize(    "__shadowF" "output parameter varying float"
)
                                        >getSdlLine(3)
                                        >liquidSl_getParamDefault(...)
                                            >liquidSl_getParamDefaultF(0)
                                        >getSdlLine(3)
                                    >param 16
                                    >{
                                    >      Name:__shadowF
                                    >      Details:varying
                                    >      Type:float
                                    >      IsOutput:1
                                    >      Defaults:0.0
                                    >      ArraySizes:-1
                                    >}//__shadowF|varying|float|1|0.0|-1
                                        >liquidSl_getParamName(    "__shadowC" "output parameter varying color"
)
                                        >liquidSl_getParamDetail(    "__shadowC" "output parameter varying color"
)
                                        >liquidSl_isOutputParam(    "__shadowC" "output parameter varying color"
)
                                        >liquidSl_getParamType(    "__shadowC" "output parameter varying color"
)
                                        >liquidSl_getParamArraySize(    "__shadowC" "output parameter varying color"
)
                                        >getSdlLine(3)
                                        >liquidSl_getParamDefault(...)
                                            >liquidSl_getParamDefaultV("rgb" [1 1 1])
                                            >getSdlLine(3)
                                        >param 17
                                        >{
                                        >      Name:__shadowC
                                        >      Details:varying
                                        >      Type:color
                                        >      IsOutput:1
                                        >      Defaults:<<1, 1, 1>>
                                        >      ArraySizes:-1
                                        >}//__shadowC|varying|color|1|<<1, 1, 1>>|-1
                                            >liquidSl_getParamName(    "__unshadowed_Cl" "output parameter varying color"
)
                                            >liquidSl_getParamDetail(    "__unshadowed_Cl" "output parameter varying color"
)
                                            >liquidSl_isOutputParam(    "__unshadowed_Cl" "output parameter varying color"
)
                                            >liquidSl_getParamType(    "__unshadowed_Cl" "output parameter varying color"
)
                                            >liquidSl_getParamArraySize(    "__unshadowed_Cl" "output parameter varying color"
)
                                            >getSdlLine(3)
                                            >liquidSl_getParamDefault(...)
                                                >liquidSl_getParamDefaultV("rgb" [0 0 0])
                                                >getSdlLine(3)
                                            >param 18
                                            >{
                                            >      Name:__unshadowed_Cl
                                            >      Details:varying
                                            >      Type:color
                                            >      IsOutput:1
                                            >      Defaults:<<0, 0, 0>>
                                            >      ArraySizes:-1
                                            >}//__unshadowed_Cl|varying|color|1|<<0, 0, 0>>|-1
                                                >liquidSl_getParamName(    "__nondiffuse" "output parameter varying float"
)
                                                >liquidSl_getParamDetail(    "__nondiffuse" "output parameter varying float"
)
                                                >liquidSl_isOutputParam(    "__nondiffuse" "output parameter varying float"
)
                                                >liquidSl_getParamType(    "__nondiffuse" "output parameter varying float"
)
                                                >liquidSl_getParamArraySize(    "__nondiffuse" "output parameter varying float"
)
                                                >getSdlLine(3)
                                                >liquidSl_getParamDefault(...)
                                                    >liquidSl_getParamDefaultF(0)
                                                >getSdlLine(3)
                                            >param 19
                                            >{
                                            >      Name:__nondiffuse
                                            >      Details:varying
                                            >      Type:float
                                            >      IsOutput:1
                                            >      Defaults:0.0
                                            >      ArraySizes:-1
                                            >}//__nondiffuse|varying|float|1|0.0|-1
                                                >liquidSl_getParamName(    "__nonspecular" "output parameter varying float"
)
                                                >liquidSl_getParamDetail(    "__nonspecular" "output parameter varying float"
)
                                                >liquidSl_isOutputParam(    "__nonspecular" "output parameter varying float"
)
                                                >liquidSl_getParamType(    "__nonspecular" "output parameter varying float"
)
                                                >liquidSl_getParamArraySize(    "__nonspecular" "output parameter varying float"
)
                                                >getSdlLine(3)
                                                >liquidSl_getParamDefault(...)
                                                    >liquidSl_getParamDefaultF(0)
                                                >getSdlLine(3)
                                            >param 20
                                            >{
                                            >      Name:__nonspecular
                                            >      Details:varying
                                            >      Type:float
                                            >      IsOutput:1
                                            >      Defaults:0.0
                                            >      ArraySizes:-1
                                            >}//__nonspecular|varying|float|1|0.0|-1
                                            >liquidSlParseLifInitGlobals()
                                            >liquidSlGetLifFile(E:/dev/Autodesk/maya/myplugin/project/liquid_/2.3.3/lib/shaders/liquidpoint.sdl)
                                            >liquidSlParseLif(E:/dev/Autodesk/maya/myplugin/project/liquid_/2.3.3/lib/shaders/liquidpoint.lif)
                                                >liquidSlReadLifFromDisk(E:/dev/Autodesk/maya/myplugin/project/liquid_/2.3.3/lib/shaders/liquidpoint.lif)
                                                    >liquidSlReadLifFromBuffer( lines[](110 lines) )
                                                        >fetchKeyword(light "liquidpoint";)
                                                            >isValidShaderTypeForPL(light)
                                                                >isValidShaderTypeForPL_renderman(light)
                                                                    >isSurfaceShader_renderman(light)
                                                        >fetchKeyword(desc "Standard Maya-Like Point Light\nPart of Liquid.\n";)
                                                            >isValidShaderTypeForPL(desc)
                                                                >isValidShaderTypeForPL_renderman(desc)
                                                                    >isSurfaceShader_renderman(desc)
                                                        >fetchKeyword(desc "Standard Maya-Like Point Light\nPart of Liquid.\n";)
                                                            >isValidShaderTypeForPL(desc)
                                                                >isValidShaderTypeForPL_renderman(desc)
                                                                    >isSurfaceShader_renderman(desc)
                                                        >fetchKeyword(param "__category";)
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword(param "__category";)
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword(name "__category";)
                                                            >isValidShaderTypeForPL(name)
                                                                >isValidShaderTypeForPL_renderman(name)
                                                                    >isSurfaceShader_renderman(name)
                                                        >fetchKeyword(name "__category";)
                                                            >isValidShaderTypeForPL(name)
                                                                >isValidShaderTypeForPL_renderman(name)
                                                                    >isSurfaceShader_renderman(name)
                                                        >fetchKeyword(param "intensity";)
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword(param "intensity";)
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword(name "Intensity";)
                                                            >isValidShaderTypeForPL(name)
                                                                >isValidShaderTypeForPL_renderman(name)
                                                                    >isSurfaceShader_renderman(name)
                                                        >fetchKeyword(name "Intensity";)
                                                            >isValidShaderTypeForPL(name)
                                                                >isValidShaderTypeForPL_renderman(name)
                                                                    >isSurfaceShader_renderman(name)
                                                        >fetchKeyword(type "slider";)
                                                            >isValidShaderTypeForPL(type)
                                                                >isValidShaderTypeForPL_renderman(type)
                                                                    >isSurfaceShader_renderman(type)
                                                        >fetchKeyword(type "slider";)
                                                            >isValidShaderTypeForPL(type)
                                                                >isValidShaderTypeForPL_renderman(type)
                                                                    >isSurfaceShader_renderman(type)
                                                        >fetchKeyword(param "lightcolor";)
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword(param "lightcolor";)
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword(name "Light Color";)
                                                            >isValidShaderTypeForPL(name)
                                                                >isValidShaderTypeForPL_renderman(name)
                                                                    >isSurfaceShader_renderman(name)
                                                        >fetchKeyword(name "Light Color";)
                                                            >isValidShaderTypeForPL(name)
                                                                >isValidShaderTypeForPL_renderman(name)
                                                                    >isSurfaceShader_renderman(name)
                                                        >fetchKeyword(desc "";)
                                                            >isValidShaderTypeForPL(desc)
                                                                >isValidShaderTypeForPL_renderman(desc)
                                                                    >isSurfaceShader_renderman(desc)
                                                        >fetchKeyword(desc "";)
                                                            >isValidShaderTypeForPL(desc)
                                                                >isValidShaderTypeForPL_renderman(desc)
                                                                    >isSurfaceShader_renderman(desc)
                                                        >fetchKeyword(param "__nondiffuse";)
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword(param "__nondiffuse";)
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword(name "Non Diffuse";)
                                                            >isValidShaderTypeForPL(name)
                                                                >isValidShaderTypeForPL_renderman(name)
                                                                    >isSurfaceShader_renderman(name)
                                                        >fetchKeyword(name "Non Diffuse";)
                                                            >isValidShaderTypeForPL(name)
                                                                >isValidShaderTypeForPL_renderman(name)
                                                                    >isSurfaceShader_renderman(name)
                                                        >fetchKeyword(type "bool";)
                                                            >isValidShaderTypeForPL(type)
                                                                >isValidShaderTypeForPL_renderman(type)
                                                                    >isSurfaceShader_renderman(type)
                                                        >fetchKeyword(type "bool";)
                                                            >isValidShaderTypeForPL(type)
                                                                >isValidShaderTypeForPL_renderman(type)
                                                                    >isSurfaceShader_renderman(type)
                                                        >fetchKeyword(param "__nonspecular";)
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword(param "__nonspecular";)
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword(name "Non Specular";)
                                                            >isValidShaderTypeForPL(name)
                                                                >isValidShaderTypeForPL_renderman(name)
                                                                    >isSurfaceShader_renderman(name)
                                                        >fetchKeyword(name "Non Specular";)
                                                            >isValidShaderTypeForPL(name)
                                                                >isValidShaderTypeForPL_renderman(name)
                                                                    >isSurfaceShader_renderman(name)
                                                        >fetchKeyword(type "bool";)
                                                            >isValidShaderTypeForPL(type)
                                                                >isValidShaderTypeForPL_renderman(type)
                                                                    >isSurfaceShader_renderman(type)
                                                        >fetchKeyword(type "bool";)
                                                            >isValidShaderTypeForPL(type)
                                                                >isValidShaderTypeForPL_renderman(type)
                                                                    >isSurfaceShader_renderman(type)
                                                        >fetchKeyword(param "decay";)
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword(param "decay";)
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword(name "Decay";)
                                                            >isValidShaderTypeForPL(name)
                                                                >isValidShaderTypeForPL_renderman(name)
                                                                    >isSurfaceShader_renderman(name)
                                                        >fetchKeyword(name "Decay";)
                                                            >isValidShaderTypeForPL(name)
                                                                >isValidShaderTypeForPL_renderman(name)
                                                                    >isSurfaceShader_renderman(name)
                                                        >fetchKeyword(desc "";)
                                                            >isValidShaderTypeForPL(desc)
                                                                >isValidShaderTypeForPL_renderman(desc)
                                                                    >isSurfaceShader_renderman(desc)
                                                        >fetchKeyword(desc "";)
                                                            >isValidShaderTypeForPL(desc)
                                                                >isValidShaderTypeForPL_renderman(desc)
                                                                    >isSurfaceShader_renderman(desc)
                                                        >fetchKeyword(type "selector";)
                                                            >isValidShaderTypeForPL(type)
                                                                >isValidShaderTypeForPL_renderman(type)
                                                                    >isSurfaceShader_renderman(type)
                                                        >fetchKeyword(type "selector";)
                                                            >isValidShaderTypeForPL(type)
                                                                >isValidShaderTypeForPL_renderman(type)
                                                                    >isSurfaceShader_renderman(type)
                                                        >fetchKeyword(range [ "None" 0 "Linear" 1 "Quadratic" 2 "Cubic" 3 ];)
                                                            >isValidShaderTypeForPL(range)
                                                                >isValidShaderTypeForPL_renderman(range)
                                                                    >isSurfaceShader_renderman(range)
                                                        >fetchKeyword(range [ "None" 0 "Linear" 1 "Quadratic" 2 "Cubic" 3 ];)
                                                            >isValidShaderTypeForPL(range)
                                                                >isValidShaderTypeForPL_renderman(range)
                                                                    >isSurfaceShader_renderman(range)
                                                        >fetchKeyword(param "lightID";)
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword(param "lightID";)
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword(name "lightID";)
                                                            >isValidShaderTypeForPL(name)
                                                                >isValidShaderTypeForPL_renderman(name)
                                                                    >isSurfaceShader_renderman(name)
                                                        >fetchKeyword(name "lightID";)
                                                            >isValidShaderTypeForPL(name)
                                                                >isValidShaderTypeForPL_renderman(name)
                                                                    >isSurfaceShader_renderman(name)
                                                        >fetchKeyword(group "Shadows";)
                                                            >isValidShaderTypeForPL(group)
                                                                >isValidShaderTypeForPL_renderman(group)
                                                                    >isSurfaceShader_renderman(group)
                                                        >fetchKeyword(group "Shadows";)
                                                            >isValidShaderTypeForPL(group)
                                                                >isValidShaderTypeForPL_renderman(group)
                                                                    >isSurfaceShader_renderman(group)
                                                        >fetchKeyword(group "Maps" "close";)
                                                            >isValidShaderTypeForPL(group)
                                                                >isValidShaderTypeForPL_renderman(group)
                                                                    >isSurfaceShader_renderman(group)
                                                        >fetchKeyword(group "Maps" "close";)
                                                            >isValidShaderTypeForPL(group)
                                                                >isValidShaderTypeForPL_renderman(group)
                                                                    >isSurfaceShader_renderman(group)
                                                        >fetchKeyword(param "shadownamepx";)
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword(param "shadownamepx";)
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword(name "shadownamepx";)
                                                            >isValidShaderTypeForPL(name)
                                                                >isValidShaderTypeForPL_renderman(name)
                                                                    >isSurfaceShader_renderman(name)
                                                        >fetchKeyword(name "shadownamepx";)
                                                            >isValidShaderTypeForPL(name)
                                                                >isValidShaderTypeForPL_renderman(name)
                                                                    >isSurfaceShader_renderman(name)
                                                        >fetchKeyword(type "shadow";)
                                                            >isValidShaderTypeForPL(type)
                                                                >isValidShaderTypeForPL_renderman(type)
                                                                    >isSurfaceShader_renderman(type)
                                                        >fetchKeyword(type "shadow";)
                                                            >isValidShaderTypeForPL(type)
                                                                >isValidShaderTypeForPL_renderman(type)
                                                                    >isSurfaceShader_renderman(type)
                                                        >fetchKeyword(param "shadownamenx";)
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword(param "shadownamenx";)
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword(name "shadownamenx";)
                                                            >isValidShaderTypeForPL(name)
                                                                >isValidShaderTypeForPL_renderman(name)
                                                                    >isSurfaceShader_renderman(name)
                                                        >fetchKeyword(name "shadownamenx";)
                                                            >isValidShaderTypeForPL(name)
                                                                >isValidShaderTypeForPL_renderman(name)
                                                                    >isSurfaceShader_renderman(name)
                                                        >fetchKeyword(type "shadow";)
                                                            >isValidShaderTypeForPL(type)
                                                                >isValidShaderTypeForPL_renderman(type)
                                                                    >isSurfaceShader_renderman(type)
                                                        >fetchKeyword(type "shadow";)
                                                            >isValidShaderTypeForPL(type)
                                                                >isValidShaderTypeForPL_renderman(type)
                                                                    >isSurfaceShader_renderman(type)
                                                        >fetchKeyword(param "shadownamepy";)
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword(param "shadownamepy";)
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword(name "shadownamepy";)
                                                            >isValidShaderTypeForPL(name)
                                                                >isValidShaderTypeForPL_renderman(name)
                                                                    >isSurfaceShader_renderman(name)
                                                        >fetchKeyword(name "shadownamepy";)
                                                            >isValidShaderTypeForPL(name)
                                                                >isValidShaderTypeForPL_renderman(name)
                                                                    >isSurfaceShader_renderman(name)
                                                        >fetchKeyword(type "shadow";)
                                                            >isValidShaderTypeForPL(type)
                                                                >isValidShaderTypeForPL_renderman(type)
                                                                    >isSurfaceShader_renderman(type)
                                                        >fetchKeyword(type "shadow";)
                                                            >isValidShaderTypeForPL(type)
                                                                >isValidShaderTypeForPL_renderman(type)
                                                                    >isSurfaceShader_renderman(type)
                                                        >fetchKeyword(param "shadownameny";)
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword(param "shadownameny";)
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword(name "shadownameny";)
                                                            >isValidShaderTypeForPL(name)
                                                                >isValidShaderTypeForPL_renderman(name)
                                                                    >isSurfaceShader_renderman(name)
                                                        >fetchKeyword(name "shadownameny";)
                                                            >isValidShaderTypeForPL(name)
                                                                >isValidShaderTypeForPL_renderman(name)
                                                                    >isSurfaceShader_renderman(name)
                                                        >fetchKeyword(type "shadow";)
                                                            >isValidShaderTypeForPL(type)
                                                                >isValidShaderTypeForPL_renderman(type)
                                                                    >isSurfaceShader_renderman(type)
                                                        >fetchKeyword(type "shadow";)
                                                            >isValidShaderTypeForPL(type)
                                                                >isValidShaderTypeForPL_renderman(type)
                                                                    >isSurfaceShader_renderman(type)
                                                        >fetchKeyword(param "shadownamepz";)
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword(param "shadownamepz";)
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword(name "shadownamepz";)
                                                            >isValidShaderTypeForPL(name)
                                                                >isValidShaderTypeForPL_renderman(name)
                                                                    >isSurfaceShader_renderman(name)
                                                        >fetchKeyword(name "shadownamepz";)
                                                            >isValidShaderTypeForPL(name)
                                                                >isValidShaderTypeForPL_renderman(name)
                                                                    >isSurfaceShader_renderman(name)
                                                        >fetchKeyword(type "shadow";)
                                                            >isValidShaderTypeForPL(type)
                                                                >isValidShaderTypeForPL_renderman(type)
                                                                    >isSurfaceShader_renderman(type)
                                                        >fetchKeyword(type "shadow";)
                                                            >isValidShaderTypeForPL(type)
                                                                >isValidShaderTypeForPL_renderman(type)
                                                                    >isSurfaceShader_renderman(type)
                                                        >fetchKeyword(param "shadownamenz";)
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword(param "shadownamenz";)
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword(name "shadownamenz";)
                                                            >isValidShaderTypeForPL(name)
                                                                >isValidShaderTypeForPL_renderman(name)
                                                                    >isSurfaceShader_renderman(name)
                                                        >fetchKeyword(name "shadownamenz";)
                                                            >isValidShaderTypeForPL(name)
                                                                >isValidShaderTypeForPL_renderman(name)
                                                                    >isSurfaceShader_renderman(name)
                                                        >fetchKeyword(type "shadow";)
                                                            >isValidShaderTypeForPL(type)
                                                                >isValidShaderTypeForPL_renderman(type)
                                                                    >isSurfaceShader_renderman(type)
                                                        >fetchKeyword(type "shadow";)
                                                            >isValidShaderTypeForPL(type)
                                                                >isValidShaderTypeForPL_renderman(type)
                                                                    >isSurfaceShader_renderman(type)
                                                        >fetchKeyword(group "end";)
                                                            >isValidShaderTypeForPL(group)
                                                                >isValidShaderTypeForPL_renderman(group)
                                                                    >isSurfaceShader_renderman(group)
                                                        >fetchKeyword(group "end";)
                                                            >isValidShaderTypeForPL(group)
                                                                >isValidShaderTypeForPL_renderman(group)
                                                                    >isSurfaceShader_renderman(group)
                                                        >fetchKeyword(param "shadowbias";)
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword(param "shadowbias";)
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword(name "Bias";)
                                                            >isValidShaderTypeForPL(name)
                                                                >isValidShaderTypeForPL_renderman(name)
                                                                    >isSurfaceShader_renderman(name)
                                                        >fetchKeyword(name "Bias";)
                                                            >isValidShaderTypeForPL(name)
                                                                >isValidShaderTypeForPL_renderman(name)
                                                                    >isSurfaceShader_renderman(name)
                                                        >fetchKeyword(desc "";)
                                                            >isValidShaderTypeForPL(desc)
                                                                >isValidShaderTypeForPL_renderman(desc)
                                                                    >isSurfaceShader_renderman(desc)
                                                        >fetchKeyword(desc "";)
                                                            >isValidShaderTypeForPL(desc)
                                                                >isValidShaderTypeForPL_renderman(desc)
                                                                    >isSurfaceShader_renderman(desc)
                                                        >fetchKeyword(type "slider";)
                                                            >isValidShaderTypeForPL(type)
                                                                >isValidShaderTypeForPL_renderman(type)
                                                                    >isSurfaceShader_renderman(type)
                                                        >fetchKeyword(type "slider";)
                                                            >isValidShaderTypeForPL(type)
                                                                >isValidShaderTypeForPL_renderman(type)
                                                                    >isSurfaceShader_renderman(type)
                                                        >fetchKeyword(range [ 0 1 ];)
                                                            >isValidShaderTypeForPL(range)
                                                                >isValidShaderTypeForPL_renderman(range)
                                                                    >isSurfaceShader_renderman(range)
                                                        >fetchKeyword(range [ 0 1 ];)
                                                            >isValidShaderTypeForPL(range)
                                                                >isValidShaderTypeForPL_renderman(range)
                                                                    >isSurfaceShader_renderman(range)
                                                        >fetchKeyword(param "shadowblur";)
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword(param "shadowblur";)
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword(name "Blur";)
                                                            >isValidShaderTypeForPL(name)
                                                                >isValidShaderTypeForPL_renderman(name)
                                                                    >isSurfaceShader_renderman(name)
                                                        >fetchKeyword(name "Blur";)
                                                            >isValidShaderTypeForPL(name)
                                                                >isValidShaderTypeForPL_renderman(name)
                                                                    >isSurfaceShader_renderman(name)
                                                        >fetchKeyword(desc "";)
                                                            >isValidShaderTypeForPL(desc)
                                                                >isValidShaderTypeForPL_renderman(desc)
                                                                    >isSurfaceShader_renderman(desc)
                                                        >fetchKeyword(desc "";)
                                                            >isValidShaderTypeForPL(desc)
                                                                >isValidShaderTypeForPL_renderman(desc)
                                                                    >isSurfaceShader_renderman(desc)
                                                        >fetchKeyword(type "slider";)
                                                            >isValidShaderTypeForPL(type)
                                                                >isValidShaderTypeForPL_renderman(type)
                                                                    >isSurfaceShader_renderman(type)
                                                        >fetchKeyword(type "slider";)
                                                            >isValidShaderTypeForPL(type)
                                                                >isValidShaderTypeForPL_renderman(type)
                                                                    >isSurfaceShader_renderman(type)
                                                        >fetchKeyword(range [ 0 1 ];)
                                                            >isValidShaderTypeForPL(range)
                                                                >isValidShaderTypeForPL_renderman(range)
                                                                    >isSurfaceShader_renderman(range)
                                                        >fetchKeyword(range [ 0 1 ];)
                                                            >isValidShaderTypeForPL(range)
                                                                >isValidShaderTypeForPL_renderman(range)
                                                                    >isSurfaceShader_renderman(range)
                                                        >fetchKeyword(param "shadowsamples";)
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword(param "shadowsamples";)
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword(name "Samples";)
                                                            >isValidShaderTypeForPL(name)
                                                                >isValidShaderTypeForPL_renderman(name)
                                                                    >isSurfaceShader_renderman(name)
                                                        >fetchKeyword(name "Samples";)
                                                            >isValidShaderTypeForPL(name)
                                                                >isValidShaderTypeForPL_renderman(name)
                                                                    >isSurfaceShader_renderman(name)
                                                        >fetchKeyword(desc "";)
                                                            >isValidShaderTypeForPL(desc)
                                                                >isValidShaderTypeForPL_renderman(desc)
                                                                    >isSurfaceShader_renderman(desc)
                                                        >fetchKeyword(desc "";)
                                                            >isValidShaderTypeForPL(desc)
                                                                >isValidShaderTypeForPL_renderman(desc)
                                                                    >isSurfaceShader_renderman(desc)
                                                        >fetchKeyword(type "slider";)
                                                            >isValidShaderTypeForPL(type)
                                                                >isValidShaderTypeForPL_renderman(type)
                                                                    >isSurfaceShader_renderman(type)
                                                        >fetchKeyword(type "slider";)
                                                            >isValidShaderTypeForPL(type)
                                                                >isValidShaderTypeForPL_renderman(type)
                                                                    >isSurfaceShader_renderman(type)
                                                        >fetchKeyword(range [ 0 1 ];)
                                                            >isValidShaderTypeForPL(range)
                                                                >isValidShaderTypeForPL_renderman(range)
                                                                    >isSurfaceShader_renderman(range)
                                                        >fetchKeyword(range [ 0 1 ];)
                                                            >isValidShaderTypeForPL(range)
                                                                >isValidShaderTypeForPL_renderman(range)
                                                                    >isSurfaceShader_renderman(range)
                                                        >fetchKeyword(param "shadowfiltersize";)
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword(param "shadowfiltersize";)
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword(name "Filter Size";)
                                                            >isValidShaderTypeForPL(name)
                                                                >isValidShaderTypeForPL_renderman(name)
                                                                    >isSurfaceShader_renderman(name)
                                                        >fetchKeyword(name "Filter Size";)
                                                            >isValidShaderTypeForPL(name)
                                                                >isValidShaderTypeForPL_renderman(name)
                                                                    >isSurfaceShader_renderman(name)
                                                        >fetchKeyword(desc "";)
                                                            >isValidShaderTypeForPL(desc)
                                                                >isValidShaderTypeForPL_renderman(desc)
                                                                    >isSurfaceShader_renderman(desc)
                                                        >fetchKeyword(desc "";)
                                                            >isValidShaderTypeForPL(desc)
                                                                >isValidShaderTypeForPL_renderman(desc)
                                                                    >isSurfaceShader_renderman(desc)
                                                        >fetchKeyword(type "slider";)
                                                            >isValidShaderTypeForPL(type)
                                                                >isValidShaderTypeForPL_renderman(type)
                                                                    >isSurfaceShader_renderman(type)
                                                        >fetchKeyword(type "slider";)
                                                            >isValidShaderTypeForPL(type)
                                                                >isValidShaderTypeForPL_renderman(type)
                                                                    >isSurfaceShader_renderman(type)
                                                        >fetchKeyword(range [ 0 1 ];)
                                                            >isValidShaderTypeForPL(range)
                                                                >isValidShaderTypeForPL_renderman(range)
                                                                    >isSurfaceShader_renderman(range)
                                                        >fetchKeyword(range [ 0 1 ];)
                                                            >isValidShaderTypeForPL(range)
                                                                >isValidShaderTypeForPL_renderman(range)
                                                                    >isSurfaceShader_renderman(range)
                                                        >fetchKeyword(param "shadowcolor";)
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword(param "shadowcolor";)
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword(name "Color";)
                                                            >isValidShaderTypeForPL(name)
                                                                >isValidShaderTypeForPL_renderman(name)
                                                                    >isSurfaceShader_renderman(name)
                                                        >fetchKeyword(name "Color";)
                                                            >isValidShaderTypeForPL(name)
                                                                >isValidShaderTypeForPL_renderman(name)
                                                                    >isSurfaceShader_renderman(name)
                                                        >fetchKeyword(desc "";)
                                                            >isValidShaderTypeForPL(desc)
                                                                >isValidShaderTypeForPL_renderman(desc)
                                                                    >isSurfaceShader_renderman(desc)
                                                        >fetchKeyword(desc "";)
                                                            >isValidShaderTypeForPL(desc)
                                                                >isValidShaderTypeForPL_renderman(desc)
                                                                    >isSurfaceShader_renderman(desc)
                                                        >fetchKeyword(group "AOVs" "close";)
                                                            >isValidShaderTypeForPL(group)
                                                                >isValidShaderTypeForPL_renderman(group)
                                                                    >isSurfaceShader_renderman(group)
                                                        >fetchKeyword(group "AOVs" "close";)
                                                            >isValidShaderTypeForPL(group)
                                                                >isValidShaderTypeForPL_renderman(group)
                                                                    >isSurfaceShader_renderman(group)
                                                        >fetchKeyword(param "__shadowF";)
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword(param "__shadowF";)
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword(name "__shadowF";)
                                                            >isValidShaderTypeForPL(name)
                                                                >isValidShaderTypeForPL_renderman(name)
                                                                    >isSurfaceShader_renderman(name)
                                                        >fetchKeyword(name "__shadowF";)
                                                            >isValidShaderTypeForPL(name)
                                                                >isValidShaderTypeForPL_renderman(name)
                                                                    >isSurfaceShader_renderman(name)
                                                        >fetchKeyword(desc "shadow fraction";)
                                                            >isValidShaderTypeForPL(desc)
                                                                >isValidShaderTypeForPL_renderman(desc)
                                                                    >isSurfaceShader_renderman(desc)
                                                        >fetchKeyword(desc "shadow fraction";)
                                                            >isValidShaderTypeForPL(desc)
                                                                >isValidShaderTypeForPL_renderman(desc)
                                                                    >isSurfaceShader_renderman(desc)
                                                        >fetchKeyword(param "__shadowC";)
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword(param "__shadowC";)
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword(name "__shadowC";)
                                                            >isValidShaderTypeForPL(name)
                                                                >isValidShaderTypeForPL_renderman(name)
                                                                    >isSurfaceShader_renderman(name)
                                                        >fetchKeyword(name "__shadowC";)
                                                            >isValidShaderTypeForPL(name)
                                                                >isValidShaderTypeForPL_renderman(name)
                                                                    >isSurfaceShader_renderman(name)
                                                        >fetchKeyword(desc "";)
                                                            >isValidShaderTypeForPL(desc)
                                                                >isValidShaderTypeForPL_renderman(desc)
                                                                    >isSurfaceShader_renderman(desc)
                                                        >fetchKeyword(desc "";)
                                                            >isValidShaderTypeForPL(desc)
                                                                >isValidShaderTypeForPL_renderman(desc)
                                                                    >isSurfaceShader_renderman(desc)
                                                        >fetchKeyword(param "__unshadowed_Cl";)
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword(param "__unshadowed_Cl";)
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword(name "__unshadowed_Cl";)
                                                            >isValidShaderTypeForPL(name)
                                                                >isValidShaderTypeForPL_renderman(name)
                                                                    >isSurfaceShader_renderman(name)
                                                        >fetchKeyword(name "__unshadowed_Cl";)
                                                            >isValidShaderTypeForPL(name)
                                                                >isValidShaderTypeForPL_renderman(name)
                                                                    >isSurfaceShader_renderman(name)
                                                        >fetchKeyword(desc "";)
                                                            >isValidShaderTypeForPL(desc)
                                                                >isValidShaderTypeForPL_renderman(desc)
                                                                    >isSurfaceShader_renderman(desc)
                                                        >fetchKeyword(desc "";)
                                                            >isValidShaderTypeForPL(desc)
                                                                >isValidShaderTypeForPL_renderman(desc)
                                                                    >isSurfaceShader_renderman(desc)
                                                        >fetchKeyword(group "end";)
                                                            >isValidShaderTypeForPL(group)
                                                                >isValidShaderTypeForPL_renderman(group)
                                                                    >isSurfaceShader_renderman(group)
                                                        >fetchKeyword(group "end";)
                                                            >isValidShaderTypeForPL(group)
                                                                >isValidShaderTypeForPL_renderman(group)
                                                                    >isSurfaceShader_renderman(group)
                                                        >fetchKeyword(group "end";)
                                                            >isValidShaderTypeForPL(group)
                                                                >isValidShaderTypeForPL_renderman(group)
                                                                    >isSurfaceShader_renderman(group)
                                                        >fetchKeyword(group "end";)
                                                            >isValidShaderTypeForPL(group)
                                                                >isValidShaderTypeForPL_renderman(group)
                                                                    >isSurfaceShader_renderman(group)
                                                >[liquidSlReadLifFromDisk] E:/dev/Autodesk/maya/myplugin/project/liquid_/2.3.3/lib/shaders/liquidpoint.lif, 79 lines, in 1 sec.
                                                >liquidSlParseReadLif()
                                                    >padString(1, ,3,0)
                                                >[liquidSlParseLif]   1: >light "liquidpoint"< (start)
                                                    >getKeyAndArgs(light "liquidpoint",[)
                                                        >fetchKeyword(light "liquidpoint")
                                                            >isValidShaderTypeForPL(light)
                                                                >isValidShaderTypeForPL_renderman(light)
                                                                    >isSurfaceShader_renderman(light)
                                                        >fetchKeyword("liquidpoint")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("liquidpoint")
                                                        >fetchVectorList("liquidpoint")
                                                        >fetchString("liquidpoint")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'light', arguments: "liquidpoint" (start)
                                                    >isValidShaderTypeForPL(light)
                                                        >isValidShaderTypeForPL_renderman(light)
                                                            >isSurfaceShader_renderman(light)
                                                    >getValidArgs(1,string,["liquidpoint"], [], [])
                                                        >getString("liquidpoint")
                                                            >fetchString("liquidpoint")
                                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "liquidpoint" reported 0 errors, got 1 results: liquidpoint
                                                >[liquidSlParseLif] found shader name: liquidpoint (start)
                                                    >padString(2, ,3,0)
                                                >[liquidSlParseLif]   2: >desc "Standard Maya-Like Point Light\nPart of Liquid.\n"< (shaderDescription)
                                                    >getKeyAndArgs(desc "Standard Maya-Like Point Light\nPart of Liquid.\n",[)
                                                        >fetchKeyword(desc "Standard Maya-Like Point Light\nPart of Liquid.\n")
                                                            >isValidShaderTypeForPL(desc)
                                                                >isValidShaderTypeForPL_renderman(desc)
                                                                    >isSurfaceShader_renderman(desc)
                                                        >fetchKeyword("Standard Maya-Like Point Light\nPart of Liquid.\n")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("Standard Maya-Like Point Light\nPart of Liquid.\n")
                                                        >fetchVectorList("Standard Maya-Like Point Light\nPart of Liquid.\n")
                                                        >fetchString("Standard Maya-Like Point Light\nPart of Liquid.\n")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'desc', arguments: "Standard Maya-Like Point Light\nPart of Liquid.\n" (shaderDescription)
                                                    >getValidArgs(1,string,["Standard Maya-Like Point Light\nPart of Liquid.\n"], [ ], [])
                                                        >getString("Standard Maya-Like Point Light\nPart of Liquid.\n")
                                                            >fetchString("Standard Maya-Like Point Light\nPart of Liquid.\n")
                                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "Standard Maya-Like Point Light\nPart of Liquid.\n" reported 0 errors, got 1 results: Standard Maya-Like Point Light\nPart of Liquid.\n
                                                    >padString(4, ,3,0)
                                                >[liquidSlParseLif]   4: >param "__category"< (shaderDescription)
                                                    >getKeyAndArgs(param "__category",[)
                                                        >fetchKeyword(param "__category")
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword("__category")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("__category")
                                                        >fetchVectorList("__category")
                                                        >fetchString("__category")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "__category" (shaderDescription)
                                                    >getValidArgs(1,string,["__category"], [], [])
                                                        >getString("__category")
                                                            >fetchString("__category")
                                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "__category" reported 0 errors, got 1 results: __category
                                                    >getParamIndex(__category)
                                                    >padString(5, ,3,0)
                                                >[liquidSlParseLif]   5: >name "__category"< (parameterDescription)
                                                    >getKeyAndArgs(name "__category",[)
                                                        >fetchKeyword(name "__category")
                                                            >isValidShaderTypeForPL(name)
                                                                >isValidShaderTypeForPL_renderman(name)
                                                                    >isSurfaceShader_renderman(name)
                                                        >fetchKeyword("__category")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("__category")
                                                        >fetchVectorList("__category")
                                                        >fetchString("__category")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'name', arguments: "__category" (parameterDescription)
                                                    >getValidArgs(-1,string,["__category"], [], [])
                                                        >getString("__category")
                                                            >fetchString("__category")
                                                    >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "__category" reported 0 errors, got 1 results: __category
                                                    >padString(7, ,3,0)
                                                >[liquidSlParseLif]   7: >param "intensity"< (parameterDescription)
                                                    >getKeyAndArgs(param "intensity",[)
                                                        >fetchKeyword(param "intensity")
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword("intensity")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("intensity")
                                                        >fetchVectorList("intensity")
                                                        >fetchString("intensity")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "intensity" (parameterDescription)
                                                    >getKeyAndArgs(param "intensity",[)
                                                        >fetchKeyword(param "intensity")
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword("intensity")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("intensity")
                                                        >fetchVectorList("intensity")
                                                        >fetchString("intensity")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "intensity" (shaderDescription)
                                                    >getValidArgs(1,string,["intensity"], [], [])
                                                        >getString("intensity")
                                                            >fetchString("intensity")
                                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "intensity" reported 0 errors, got 1 results: intensity
                                                    >getParamIndex(intensity)
                                                    >padString(8, ,3,0)
                                                >[liquidSlParseLif]   8: >name "Intensity"< (parameterDescription)
                                                    >getKeyAndArgs(name "Intensity",[)
                                                        >fetchKeyword(name "Intensity")
                                                            >isValidShaderTypeForPL(name)
                                                                >isValidShaderTypeForPL_renderman(name)
                                                                    >isSurfaceShader_renderman(name)
                                                        >fetchKeyword("Intensity")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("Intensity")
                                                        >fetchVectorList("Intensity")
                                                        >fetchString("Intensity")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'name', arguments: "Intensity" (parameterDescription)
                                                    >getValidArgs(-1,string,["Intensity"], [], [])
                                                        >getString("Intensity")
                                                            >fetchString("Intensity")
                                                    >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "Intensity" reported 0 errors, got 1 results: Intensity
                                                    >padString(9, ,3,0)
                                                >[liquidSlParseLif]   9: >type "slider"< (parameterDescription)
                                                    >getKeyAndArgs(type "slider",[)
                                                        >fetchKeyword(type "slider")
                                                            >isValidShaderTypeForPL(type)
                                                                >isValidShaderTypeForPL_renderman(type)
                                                                    >isSurfaceShader_renderman(type)
                                                        >fetchKeyword("slider")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("slider")
                                                        >fetchVectorList("slider")
                                                        >fetchString("slider")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'type', arguments: "slider" (parameterDescription)
                                                    >getTypeNames(["slider"], [])
                                                        >getValidArgs(-1,string,["slider"], [], [])
                                                            >getString("slider")
                                                                >fetchString("slider")
                                                        >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "slider" reported 0 errors, got 1 results: slider
                                                        >liquidGetLifParamTypes()
                                                    >padString(11, ,3,0)
                                                >[liquidSlParseLif]  11: >param "lightcolor"< (parameterDescription)
                                                    >getKeyAndArgs(param "lightcolor",[)
                                                        >fetchKeyword(param "lightcolor")
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword("lightcolor")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("lightcolor")
                                                        >fetchVectorList("lightcolor")
                                                        >fetchString("lightcolor")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "lightcolor" (parameterDescription)
                                                    >getKeyAndArgs(param "lightcolor",[)
                                                        >fetchKeyword(param "lightcolor")
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword("lightcolor")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("lightcolor")
                                                        >fetchVectorList("lightcolor")
                                                        >fetchString("lightcolor")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "lightcolor" (shaderDescription)
                                                    >getValidArgs(1,string,["lightcolor"], [], [])
                                                        >getString("lightcolor")
                                                            >fetchString("lightcolor")
                                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "lightcolor" reported 0 errors, got 1 results: lightcolor
                                                    >getParamIndex(lightcolor)
                                                    >padString(12, ,3,0)
                                                >[liquidSlParseLif]  12: >name "Light Color"< (parameterDescription)
                                                    >getKeyAndArgs(name "Light Color",[)
                                                        >fetchKeyword(name "Light Color")
                                                            >isValidShaderTypeForPL(name)
                                                                >isValidShaderTypeForPL_renderman(name)
                                                                    >isSurfaceShader_renderman(name)
                                                        >fetchKeyword("Light Color")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("Light Color")
                                                        >fetchVectorList("Light Color")
                                                        >fetchString("Light Color")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'name', arguments: "Light Color" (parameterDescription)
                                                    >getValidArgs(-1,string,["Light Color"], [], [])
                                                        >getString("Light Color")
                                                            >fetchString("Light Color")
                                                    >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "Light Color" reported 0 errors, got 1 results: Light Color
                                                    >padString(13, ,3,0)
                                                >[liquidSlParseLif]  13: >desc ""< (parameterDescription)
                                                    >getKeyAndArgs(desc "",[)
                                                        >fetchKeyword(desc "")
                                                            >isValidShaderTypeForPL(desc)
                                                                >isValidShaderTypeForPL_renderman(desc)
                                                                    >isSurfaceShader_renderman(desc)
                                                        >fetchKeyword("")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("")
                                                        >fetchVectorList("")
                                                        >fetchString("")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'desc', arguments: "" (parameterDescription)
                                                    >getValidArgs(1,string,[""], [], [])
                                                        >getString("")
                                                            >fetchString("")
// Warning: file: E:/dev/autodesk/maya/myplugin/project/liquid_/2.3.3/mel/liquidSlParseLif.mel line 557: Starting position (2) is greater than ending position (1) in substring command.  An empty string will be returned. // 
                                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "" reported 0 errors, got 1 results: 
                                                    >padString(15, ,3,0)
                                                >[liquidSlParseLif]  15: >param "__nondiffuse"< (parameterDescription)
                                                    >getKeyAndArgs(param "__nondiffuse",[)
                                                        >fetchKeyword(param "__nondiffuse")
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword("__nondiffuse")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("__nondiffuse")
                                                        >fetchVectorList("__nondiffuse")
                                                        >fetchString("__nondiffuse")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "__nondiffuse" (parameterDescription)
                                                    >getKeyAndArgs(param "__nondiffuse",[)
                                                        >fetchKeyword(param "__nondiffuse")
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword("__nondiffuse")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("__nondiffuse")
                                                        >fetchVectorList("__nondiffuse")
                                                        >fetchString("__nondiffuse")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "__nondiffuse" (shaderDescription)
                                                    >getValidArgs(1,string,["__nondiffuse"], [], [])
                                                        >getString("__nondiffuse")
                                                            >fetchString("__nondiffuse")
                                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "__nondiffuse" reported 0 errors, got 1 results: __nondiffuse
                                                    >getParamIndex(__nondiffuse)
                                                    >padString(16, ,3,0)
                                                >[liquidSlParseLif]  16: >name "Non Diffuse"< (parameterDescription)
                                                    >getKeyAndArgs(name "Non Diffuse",[)
                                                        >fetchKeyword(name "Non Diffuse")
                                                            >isValidShaderTypeForPL(name)
                                                                >isValidShaderTypeForPL_renderman(name)
                                                                    >isSurfaceShader_renderman(name)
                                                        >fetchKeyword("Non Diffuse")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("Non Diffuse")
                                                        >fetchVectorList("Non Diffuse")
                                                        >fetchString("Non Diffuse")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'name', arguments: "Non Diffuse" (parameterDescription)
                                                    >getValidArgs(-1,string,["Non Diffuse"], [], [])
                                                        >getString("Non Diffuse")
                                                            >fetchString("Non Diffuse")
                                                    >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "Non Diffuse" reported 0 errors, got 1 results: Non Diffuse
                                                    >padString(17, ,3,0)
                                                >[liquidSlParseLif]  17: >type "bool"< (parameterDescription)
                                                    >getKeyAndArgs(type "bool",[)
                                                        >fetchKeyword(type "bool")
                                                            >isValidShaderTypeForPL(type)
                                                                >isValidShaderTypeForPL_renderman(type)
                                                                    >isSurfaceShader_renderman(type)
                                                        >fetchKeyword("bool")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("bool")
                                                        >fetchVectorList("bool")
                                                        >fetchString("bool")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'type', arguments: "bool" (parameterDescription)
                                                    >getTypeNames(["bool"], [])
                                                        >getValidArgs(-1,string,["bool"], [], [])
                                                            >getString("bool")
                                                                >fetchString("bool")
                                                        >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "bool" reported 0 errors, got 1 results: bool
                                                        >liquidGetLifParamTypes()
                                                    >padString(19, ,3,0)
                                                >[liquidSlParseLif]  19: >param "__nonspecular"< (parameterDescription)
                                                    >getKeyAndArgs(param "__nonspecular",[)
                                                        >fetchKeyword(param "__nonspecular")
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword("__nonspecular")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("__nonspecular")
                                                        >fetchVectorList("__nonspecular")
                                                        >fetchString("__nonspecular")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "__nonspecular" (parameterDescription)
                                                    >getKeyAndArgs(param "__nonspecular",[)
                                                        >fetchKeyword(param "__nonspecular")
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword("__nonspecular")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("__nonspecular")
                                                        >fetchVectorList("__nonspecular")
                                                        >fetchString("__nonspecular")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "__nonspecular" (shaderDescription)
                                                    >getValidArgs(1,string,["__nonspecular"], [], [])
                                                        >getString("__nonspecular")
                                                            >fetchString("__nonspecular")
                                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "__nonspecular" reported 0 errors, got 1 results: __nonspecular
                                                    >getParamIndex(__nonspecular)
                                                    >padString(20, ,3,0)
                                                >[liquidSlParseLif]  20: >name "Non Specular"< (parameterDescription)
                                                    >getKeyAndArgs(name "Non Specular",[)
                                                        >fetchKeyword(name "Non Specular")
                                                            >isValidShaderTypeForPL(name)
                                                                >isValidShaderTypeForPL_renderman(name)
                                                                    >isSurfaceShader_renderman(name)
                                                        >fetchKeyword("Non Specular")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("Non Specular")
                                                        >fetchVectorList("Non Specular")
                                                        >fetchString("Non Specular")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'name', arguments: "Non Specular" (parameterDescription)
                                                    >getValidArgs(-1,string,["Non Specular"], [], [])
                                                        >getString("Non Specular")
                                                            >fetchString("Non Specular")
                                                    >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "Non Specular" reported 0 errors, got 1 results: Non Specular
                                                    >padString(21, ,3,0)
                                                >[liquidSlParseLif]  21: >type "bool"< (parameterDescription)
                                                    >getKeyAndArgs(type "bool",[)
                                                        >fetchKeyword(type "bool")
                                                            >isValidShaderTypeForPL(type)
                                                                >isValidShaderTypeForPL_renderman(type)
                                                                    >isSurfaceShader_renderman(type)
                                                        >fetchKeyword("bool")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("bool")
                                                        >fetchVectorList("bool")
                                                        >fetchString("bool")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'type', arguments: "bool" (parameterDescription)
                                                    >getTypeNames(["bool"], [])
                                                        >getValidArgs(-1,string,["bool"], [], [])
                                                            >getString("bool")
                                                                >fetchString("bool")
                                                        >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "bool" reported 0 errors, got 1 results: bool
                                                        >liquidGetLifParamTypes()
                                                    >padString(24, ,3,0)
                                                >[liquidSlParseLif]  24: >param "decay"< (parameterDescription)
                                                    >getKeyAndArgs(param "decay",[)
                                                        >fetchKeyword(param "decay")
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword("decay")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("decay")
                                                        >fetchVectorList("decay")
                                                        >fetchString("decay")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "decay" (parameterDescription)
                                                    >getKeyAndArgs(param "decay",[)
                                                        >fetchKeyword(param "decay")
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword("decay")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("decay")
                                                        >fetchVectorList("decay")
                                                        >fetchString("decay")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "decay" (shaderDescription)
                                                    >getValidArgs(1,string,["decay"], [], [])
                                                        >getString("decay")
                                                            >fetchString("decay")
                                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "decay" reported 0 errors, got 1 results: decay
                                                    >getParamIndex(decay)
                                                    >padString(25, ,3,0)
                                                >[liquidSlParseLif]  25: >name "Decay"< (parameterDescription)
                                                    >getKeyAndArgs(name "Decay",[)
                                                        >fetchKeyword(name "Decay")
                                                            >isValidShaderTypeForPL(name)
                                                                >isValidShaderTypeForPL_renderman(name)
                                                                    >isSurfaceShader_renderman(name)
                                                        >fetchKeyword("Decay")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("Decay")
                                                        >fetchVectorList("Decay")
                                                        >fetchString("Decay")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'name', arguments: "Decay" (parameterDescription)
                                                    >getValidArgs(-1,string,["Decay"], [], [])
                                                        >getString("Decay")
                                                            >fetchString("Decay")
                                                    >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "Decay" reported 0 errors, got 1 results: Decay
                                                    >padString(26, ,3,0)
                                                >[liquidSlParseLif]  26: >desc ""< (parameterDescription)
                                                    >getKeyAndArgs(desc "",[)
                                                        >fetchKeyword(desc "")
                                                            >isValidShaderTypeForPL(desc)
                                                                >isValidShaderTypeForPL_renderman(desc)
                                                                    >isSurfaceShader_renderman(desc)
                                                        >fetchKeyword("")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("")
                                                        >fetchVectorList("")
                                                        >fetchString("")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'desc', arguments: "" (parameterDescription)
                                                    >getValidArgs(1,string,[""], [], [])
                                                        >getString("")
                                                            >fetchString("")
// Warning: file: E:/dev/autodesk/maya/myplugin/project/liquid_/2.3.3/mel/liquidSlParseLif.mel line 557: Starting position (2) is greater than ending position (1) in substring command.  An empty string will be returned. // 
                                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "" reported 0 errors, got 1 results: 
                                                    >padString(27, ,3,0)
                                                >[liquidSlParseLif]  27: >type "selector"< (parameterDescription)
                                                    >getKeyAndArgs(type "selector",[)
                                                        >fetchKeyword(type "selector")
                                                            >isValidShaderTypeForPL(type)
                                                                >isValidShaderTypeForPL_renderman(type)
                                                                    >isSurfaceShader_renderman(type)
                                                        >fetchKeyword("selector")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("selector")
                                                        >fetchVectorList("selector")
                                                        >fetchString("selector")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'type', arguments: "selector" (parameterDescription)
                                                    >getTypeNames(["selector"], [])
                                                        >getValidArgs(-1,string,["selector"], [], [])
                                                            >getString("selector")
                                                                >fetchString("selector")
                                                        >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "selector" reported 0 errors, got 1 results: selector
                                                        >liquidGetLifParamTypes()
                                                    >padString(28, ,3,0)
                                                >[liquidSlParseLif]  28: >range [ "None" 0 "Linear" 1 "Quadratic" 2 "Cubic" 3 ]< (parameterDescription)
                                                    >getKeyAndArgs(range [ "None" 0 "Linear" 1 "Quadratic" 2 "Cubic" 3 ],[)
                                                        >fetchKeyword(range [ "None" 0 "Linear" 1 "Quadratic" 2 "Cubic" 3 ])
                                                            >isValidShaderTypeForPL(range)
                                                                >isValidShaderTypeForPL_renderman(range)
                                                                    >isSurfaceShader_renderman(range)
                                                        >fetchKeyword([ "None" 0 "Linear" 1 "Quadratic" 2 "Cubic" 3 ])
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList([ "None" 0 "Linear" 1 "Quadratic" 2 "Cubic" 3 ])
                                                            >fetchString( "None" 0 "Linear" 1 "Quadratic" 2 "Cubic" 3 ])
                                                            >fetchVectorList( "None" 0 "Linear" 1 "Quadratic" 2 "Cubic" 3 ])
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'range', arguments: [ "None" 0 "Linear" 1 "Quadratic" 2 "Cubic" 3 ] (parameterDescription)
                                                    >getSelectorRange([[ "None" 0 "Linear" 1 "Quadratic" 2 "Cubic" 3 ]], float, [])
                                                        >getRange([[ "None" 0 "Linear" 1 "Quadratic" 2 "Cubic" 3 ]], [])
                                                            >fetchVectorList("None" 0 "Linear" 1 "Quadratic" 2 "Cubic" 3)
                                                            >fetchString("None" 0 "Linear" 1 "Quadratic" 2 "Cubic" 3)
                                                            >fetchVectorList(0 "Linear" 1 "Quadratic" 2 "Cubic" 3)
                                                            >fetchString(0 "Linear" 1 "Quadratic" 2 "Cubic" 3)
                                                            >fetchVectorList("Linear" 1 "Quadratic" 2 "Cubic" 3)
                                                            >fetchString("Linear" 1 "Quadratic" 2 "Cubic" 3)
                                                            >fetchVectorList(1 "Quadratic" 2 "Cubic" 3)
                                                            >fetchString(1 "Quadratic" 2 "Cubic" 3)
                                                            >fetchVectorList("Quadratic" 2 "Cubic" 3)
                                                            >fetchString("Quadratic" 2 "Cubic" 3)
                                                            >fetchVectorList(2 "Cubic" 3)
                                                            >fetchString(2 "Cubic" 3)
                                                            >fetchVectorList("Cubic" 3)
                                                            >fetchString("Cubic" 3)
                                                            >fetchVectorList(3)
                                                            >fetchString(3)
                                                        >[liquidSlParseLif.getRange] parsed range arguments [ "None" 0 "Linear" 1 "Quadratic" 2 "Cubic" 3 ] into: "None"|0|"Linear"|1|"Quadratic"|2|"Cubic"|3
                                                        >getString("None")
                                                            >fetchString("None")
                                                        >getFloat(0)
                                                            >liquidSlValidFloatString(0)
                                                                >isValidIntPart(0)
                                                                >isNonEmptyIntPart(0)
                                                                    >isValidIntPart(0)
                                                                >isValidExpPart()
                                                        >getString("Linear")
                                                            >fetchString("Linear")
                                                        >getFloat(1)
                                                            >liquidSlValidFloatString(1)
                                                                >isValidIntPart(1)
                                                                >isNonEmptyIntPart(1)
                                                                    >isValidIntPart(1)
                                                                >isValidExpPart()
                                                        >getString("Quadratic")
                                                            >fetchString("Quadratic")
                                                        >getFloat(2)
                                                            >liquidSlValidFloatString(2)
                                                                >isValidIntPart(2)
                                                                >isNonEmptyIntPart(2)
                                                                    >isValidIntPart(2)
                                                                >isValidExpPart()
                                                        >getString("Cubic")
                                                            >fetchString("Cubic")
                                                        >getFloat(3)
                                                            >liquidSlValidFloatString(3)
                                                                >isValidIntPart(3)
                                                                >isNonEmptyIntPart(3)
                                                                    >isValidIntPart(3)
                                                                >isValidExpPart()
                                                    >[liquidSlParseLif.getSliderRange] got 8 valid entries (pairs) out of 4 elements
                                                    >padString(30, ,3,0)
                                                >[liquidSlParseLif]  30: >param "lightID"< (parameterDescription)
                                                    >getKeyAndArgs(param "lightID",[)
                                                        >fetchKeyword(param "lightID")
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword("lightID")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("lightID")
                                                        >fetchVectorList("lightID")
                                                        >fetchString("lightID")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "lightID" (parameterDescription)
                                                    >getKeyAndArgs(param "lightID",[)
                                                        >fetchKeyword(param "lightID")
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword("lightID")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("lightID")
                                                        >fetchVectorList("lightID")
                                                        >fetchString("lightID")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "lightID" (shaderDescription)
                                                    >getValidArgs(1,string,["lightID"], [], [])
                                                        >getString("lightID")
                                                            >fetchString("lightID")
                                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "lightID" reported 0 errors, got 1 results: lightID
                                                    >getParamIndex(lightID)
                                                    >padString(31, ,3,0)
                                                >[liquidSlParseLif]  31: >name "lightID"< (parameterDescription)
                                                    >getKeyAndArgs(name "lightID",[)
                                                        >fetchKeyword(name "lightID")
                                                            >isValidShaderTypeForPL(name)
                                                                >isValidShaderTypeForPL_renderman(name)
                                                                    >isSurfaceShader_renderman(name)
                                                        >fetchKeyword("lightID")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("lightID")
                                                        >fetchVectorList("lightID")
                                                        >fetchString("lightID")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'name', arguments: "lightID" (parameterDescription)
                                                    >getValidArgs(-1,string,["lightID"], [], [])
                                                        >getString("lightID")
                                                            >fetchString("lightID")
                                                    >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "lightID" reported 0 errors, got 1 results: lightID
                                                    >padString(33, ,3,0)
                                                >[liquidSlParseLif]  33: >group "Shadows"< (parameterDescription)
                                                    >getKeyAndArgs(group "Shadows",[)
                                                        >fetchKeyword(group "Shadows")
                                                            >isValidShaderTypeForPL(group)
                                                                >isValidShaderTypeForPL_renderman(group)
                                                                    >isSurfaceShader_renderman(group)
                                                        >fetchKeyword("Shadows")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("Shadows")
                                                        >fetchVectorList("Shadows")
                                                        >fetchString("Shadows")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'group', arguments: "Shadows" (parameterDescription)
                                                    >getKeyAndArgs(group "Shadows",[)
                                                        >fetchKeyword(group "Shadows")
                                                            >isValidShaderTypeForPL(group)
                                                                >isValidShaderTypeForPL_renderman(group)
                                                                    >isSurfaceShader_renderman(group)
                                                        >fetchKeyword("Shadows")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("Shadows")
                                                        >fetchVectorList("Shadows")
                                                        >fetchString("Shadows")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'group', arguments: "Shadows" (shaderDescription)
                                                    >getValidArgs(1,string,["Shadows"], [group0], [])
                                                        >getString("Shadows")
                                                            >fetchString("Shadows")
                                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "Shadows" reported 0 errors, got 1 results: Shadows
                                                    >padString(35, ,3,0)
                                                >[liquidSlParseLif]  35: >group "Maps" "close"< (groupDescription)
                                                    >getKeyAndArgs(group "Maps" "close",[)
                                                        >fetchKeyword(group "Maps" "close")
                                                            >isValidShaderTypeForPL(group)
                                                                >isValidShaderTypeForPL_renderman(group)
                                                                    >isSurfaceShader_renderman(group)
                                                        >fetchKeyword("Maps" "close")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("Maps" "close")
                                                        >fetchVectorList("Maps" "close")
                                                        >fetchString("Maps" "close")
                                                        >fetchKeyword("close")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("close")
                                                        >fetchVectorList("close")
                                                        >fetchString("close")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'group', arguments: "Maps" "close" (groupDescription)
                                                    >getKeyAndArgs(group "Maps" "close",[)
                                                        >fetchKeyword(group "Maps" "close")
                                                            >isValidShaderTypeForPL(group)
                                                                >isValidShaderTypeForPL_renderman(group)
                                                                    >isSurfaceShader_renderman(group)
                                                        >fetchKeyword("Maps" "close")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("Maps" "close")
                                                        >fetchVectorList("Maps" "close")
                                                        >fetchString("Maps" "close")
                                                        >fetchKeyword("close")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("close")
                                                        >fetchVectorList("close")
                                                        >fetchString("close")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'group', arguments: "Maps" "close" (shaderDescription)
                                                    >getValidArgs(1,string,["Maps" "close"], [group1], [])
                                                        >getString("Maps")
                                                            >fetchString("Maps")
                                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "Maps" "close" reported 1 errors, got 1 results: Maps
                                                    >padString(35,0,3,0)
// Error: file: E:/dev/autodesk/maya/myplugin/project/liquid_/2.3.3/mel/liquidSlParseLif.mel line 2003: [liquidSlParseLif] 035: >group "Maps" "close"< (groupDescription) // 
// Error: file: E:/dev/autodesk/maya/myplugin/project/liquid_/2.3.3/mel/liquidSlParseLif.mel line 2007: [liquidSlParseLif] group: only requests 1 string argument(s), rest were ignored // 
                                                >[liquidSlParseLif] group: only requests 1 string argument(s), rest were ignored
                                                >[liquidSlParseLif] total of 1 errors in line 35 of E:/dev/Autodesk/maya/myplugin/project/liquid_/2.3.3/lib/shaders/liquidpoint.lif (groupDescription)
                                                    >padString(37, ,3,0)
                                                >[liquidSlParseLif]  37: >param "shadownamepx"< (groupDescription)
                                                    >getKeyAndArgs(param "shadownamepx",[)
                                                        >fetchKeyword(param "shadownamepx")
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword("shadownamepx")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("shadownamepx")
                                                        >fetchVectorList("shadownamepx")
                                                        >fetchString("shadownamepx")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "shadownamepx" (groupDescription)
                                                    >getKeyAndArgs(param "shadownamepx",[)
                                                        >fetchKeyword(param "shadownamepx")
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword("shadownamepx")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("shadownamepx")
                                                        >fetchVectorList("shadownamepx")
                                                        >fetchString("shadownamepx")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "shadownamepx" (shaderDescription)
                                                    >getValidArgs(1,string,["shadownamepx"], [], [])
                                                        >getString("shadownamepx")
                                                            >fetchString("shadownamepx")
                                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "shadownamepx" reported 0 errors, got 1 results: shadownamepx
                                                    >getParamIndex(shadownamepx)
                                                    >padString(38, ,3,0)
                                                >[liquidSlParseLif]  38: >name "shadownamepx"< (parameterDescription)
                                                    >getKeyAndArgs(name "shadownamepx",[)
                                                        >fetchKeyword(name "shadownamepx")
                                                            >isValidShaderTypeForPL(name)
                                                                >isValidShaderTypeForPL_renderman(name)
                                                                    >isSurfaceShader_renderman(name)
                                                        >fetchKeyword("shadownamepx")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("shadownamepx")
                                                        >fetchVectorList("shadownamepx")
                                                        >fetchString("shadownamepx")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'name', arguments: "shadownamepx" (parameterDescription)
                                                    >getValidArgs(-1,string,["shadownamepx"], [], [])
                                                        >getString("shadownamepx")
                                                            >fetchString("shadownamepx")
                                                    >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "shadownamepx" reported 0 errors, got 1 results: shadownamepx
                                                    >padString(39, ,3,0)
                                                >[liquidSlParseLif]  39: >type "shadow"< (parameterDescription)
                                                    >getKeyAndArgs(type "shadow",[)
                                                        >fetchKeyword(type "shadow")
                                                            >isValidShaderTypeForPL(type)
                                                                >isValidShaderTypeForPL_renderman(type)
                                                                    >isSurfaceShader_renderman(type)
                                                        >fetchKeyword("shadow")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("shadow")
                                                        >fetchVectorList("shadow")
                                                        >fetchString("shadow")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'type', arguments: "shadow" (parameterDescription)
                                                    >getTypeNames(["shadow"], [])
                                                        >getValidArgs(-1,string,["shadow"], [], [])
                                                            >getString("shadow")
                                                                >fetchString("shadow")
                                                        >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "shadow" reported 0 errors, got 1 results: shadow
                                                        >liquidGetLifParamTypes()
                                                    >padString(41, ,3,0)
                                                >[liquidSlParseLif]  41: >param "shadownamenx"< (parameterDescription)
                                                    >getKeyAndArgs(param "shadownamenx",[)
                                                        >fetchKeyword(param "shadownamenx")
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword("shadownamenx")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("shadownamenx")
                                                        >fetchVectorList("shadownamenx")
                                                        >fetchString("shadownamenx")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "shadownamenx" (parameterDescription)
                                                    >getKeyAndArgs(param "shadownamenx",[)
                                                        >fetchKeyword(param "shadownamenx")
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword("shadownamenx")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("shadownamenx")
                                                        >fetchVectorList("shadownamenx")
                                                        >fetchString("shadownamenx")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "shadownamenx" (shaderDescription)
                                                    >getValidArgs(1,string,["shadownamenx"], [], [])
                                                        >getString("shadownamenx")
                                                            >fetchString("shadownamenx")
                                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "shadownamenx" reported 0 errors, got 1 results: shadownamenx
                                                    >getParamIndex(shadownamenx)
                                                    >padString(42, ,3,0)
                                                >[liquidSlParseLif]  42: >name "shadownamenx"< (parameterDescription)
                                                    >getKeyAndArgs(name "shadownamenx",[)
                                                        >fetchKeyword(name "shadownamenx")
                                                            >isValidShaderTypeForPL(name)
                                                                >isValidShaderTypeForPL_renderman(name)
                                                                    >isSurfaceShader_renderman(name)
                                                        >fetchKeyword("shadownamenx")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("shadownamenx")
                                                        >fetchVectorList("shadownamenx")
                                                        >fetchString("shadownamenx")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'name', arguments: "shadownamenx" (parameterDescription)
                                                    >getValidArgs(-1,string,["shadownamenx"], [], [])
                                                        >getString("shadownamenx")
                                                            >fetchString("shadownamenx")
                                                    >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "shadownamenx" reported 0 errors, got 1 results: shadownamenx
                                                    >padString(43, ,3,0)
                                                >[liquidSlParseLif]  43: >type "shadow"< (parameterDescription)
                                                    >getKeyAndArgs(type "shadow",[)
                                                        >fetchKeyword(type "shadow")
                                                            >isValidShaderTypeForPL(type)
                                                                >isValidShaderTypeForPL_renderman(type)
                                                                    >isSurfaceShader_renderman(type)
                                                        >fetchKeyword("shadow")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("shadow")
                                                        >fetchVectorList("shadow")
                                                        >fetchString("shadow")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'type', arguments: "shadow" (parameterDescription)
                                                    >getTypeNames(["shadow"], [])
                                                        >getValidArgs(-1,string,["shadow"], [], [])
                                                            >getString("shadow")
                                                                >fetchString("shadow")
                                                        >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "shadow" reported 0 errors, got 1 results: shadow
                                                        >liquidGetLifParamTypes()
                                                    >padString(45, ,3,0)
                                                >[liquidSlParseLif]  45: >param "shadownamepy"< (parameterDescription)
                                                    >getKeyAndArgs(param "shadownamepy",[)
                                                        >fetchKeyword(param "shadownamepy")
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword("shadownamepy")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("shadownamepy")
                                                        >fetchVectorList("shadownamepy")
                                                        >fetchString("shadownamepy")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "shadownamepy" (parameterDescription)
                                                    >getKeyAndArgs(param "shadownamepy",[)
                                                        >fetchKeyword(param "shadownamepy")
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword("shadownamepy")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("shadownamepy")
                                                        >fetchVectorList("shadownamepy")
                                                        >fetchString("shadownamepy")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "shadownamepy" (shaderDescription)
                                                    >getValidArgs(1,string,["shadownamepy"], [], [])
                                                        >getString("shadownamepy")
                                                            >fetchString("shadownamepy")
                                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "shadownamepy" reported 0 errors, got 1 results: shadownamepy
                                                    >getParamIndex(shadownamepy)
                                                    >padString(46, ,3,0)
                                                >[liquidSlParseLif]  46: >name "shadownamepy"< (parameterDescription)
                                                    >getKeyAndArgs(name "shadownamepy",[)
                                                        >fetchKeyword(name "shadownamepy")
                                                            >isValidShaderTypeForPL(name)
                                                                >isValidShaderTypeForPL_renderman(name)
                                                                    >isSurfaceShader_renderman(name)
                                                        >fetchKeyword("shadownamepy")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("shadownamepy")
                                                        >fetchVectorList("shadownamepy")
                                                        >fetchString("shadownamepy")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'name', arguments: "shadownamepy" (parameterDescription)
                                                    >getValidArgs(-1,string,["shadownamepy"], [], [])
                                                        >getString("shadownamepy")
                                                            >fetchString("shadownamepy")
                                                    >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "shadownamepy" reported 0 errors, got 1 results: shadownamepy
                                                    >padString(47, ,3,0)
                                                >[liquidSlParseLif]  47: >type "shadow"< (parameterDescription)
                                                    >getKeyAndArgs(type "shadow",[)
                                                        >fetchKeyword(type "shadow")
                                                            >isValidShaderTypeForPL(type)
                                                                >isValidShaderTypeForPL_renderman(type)
                                                                    >isSurfaceShader_renderman(type)
                                                        >fetchKeyword("shadow")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("shadow")
                                                        >fetchVectorList("shadow")
                                                        >fetchString("shadow")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'type', arguments: "shadow" (parameterDescription)
                                                    >getTypeNames(["shadow"], [])
                                                        >getValidArgs(-1,string,["shadow"], [], [])
                                                            >getString("shadow")
                                                                >fetchString("shadow")
                                                        >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "shadow" reported 0 errors, got 1 results: shadow
                                                        >liquidGetLifParamTypes()
                                                    >padString(49, ,3,0)
                                                >[liquidSlParseLif]  49: >param "shadownameny"< (parameterDescription)
                                                    >getKeyAndArgs(param "shadownameny",[)
                                                        >fetchKeyword(param "shadownameny")
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword("shadownameny")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("shadownameny")
                                                        >fetchVectorList("shadownameny")
                                                        >fetchString("shadownameny")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "shadownameny" (parameterDescription)
                                                    >getKeyAndArgs(param "shadownameny",[)
                                                        >fetchKeyword(param "shadownameny")
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword("shadownameny")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("shadownameny")
                                                        >fetchVectorList("shadownameny")
                                                        >fetchString("shadownameny")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "shadownameny" (shaderDescription)
                                                    >getValidArgs(1,string,["shadownameny"], [], [])
                                                        >getString("shadownameny")
                                                            >fetchString("shadownameny")
                                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "shadownameny" reported 0 errors, got 1 results: shadownameny
                                                    >getParamIndex(shadownameny)
                                                    >padString(50, ,3,0)
                                                >[liquidSlParseLif]  50: >name "shadownameny"< (parameterDescription)
                                                    >getKeyAndArgs(name "shadownameny",[)
                                                        >fetchKeyword(name "shadownameny")
                                                            >isValidShaderTypeForPL(name)
                                                                >isValidShaderTypeForPL_renderman(name)
                                                                    >isSurfaceShader_renderman(name)
                                                        >fetchKeyword("shadownameny")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("shadownameny")
                                                        >fetchVectorList("shadownameny")
                                                        >fetchString("shadownameny")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'name', arguments: "shadownameny" (parameterDescription)
                                                    >getValidArgs(-1,string,["shadownameny"], [], [])
                                                        >getString("shadownameny")
                                                            >fetchString("shadownameny")
                                                    >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "shadownameny" reported 0 errors, got 1 results: shadownameny
                                                    >padString(51, ,3,0)
                                                >[liquidSlParseLif]  51: >type "shadow"< (parameterDescription)
                                                    >getKeyAndArgs(type "shadow",[)
                                                        >fetchKeyword(type "shadow")
                                                            >isValidShaderTypeForPL(type)
                                                                >isValidShaderTypeForPL_renderman(type)
                                                                    >isSurfaceShader_renderman(type)
                                                        >fetchKeyword("shadow")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("shadow")
                                                        >fetchVectorList("shadow")
                                                        >fetchString("shadow")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'type', arguments: "shadow" (parameterDescription)
                                                    >getTypeNames(["shadow"], [])
                                                        >getValidArgs(-1,string,["shadow"], [], [])
                                                            >getString("shadow")
                                                                >fetchString("shadow")
                                                        >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "shadow" reported 0 errors, got 1 results: shadow
                                                        >liquidGetLifParamTypes()
                                                    >padString(53, ,3,0)
                                                >[liquidSlParseLif]  53: >param "shadownamepz"< (parameterDescription)
                                                    >getKeyAndArgs(param "shadownamepz",[)
                                                        >fetchKeyword(param "shadownamepz")
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword("shadownamepz")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("shadownamepz")
                                                        >fetchVectorList("shadownamepz")
                                                        >fetchString("shadownamepz")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "shadownamepz" (parameterDescription)
                                                    >getKeyAndArgs(param "shadownamepz",[)
                                                        >fetchKeyword(param "shadownamepz")
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword("shadownamepz")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("shadownamepz")
                                                        >fetchVectorList("shadownamepz")
                                                        >fetchString("shadownamepz")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "shadownamepz" (shaderDescription)
                                                    >getValidArgs(1,string,["shadownamepz"], [], [])
                                                        >getString("shadownamepz")
                                                            >fetchString("shadownamepz")
                                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "shadownamepz" reported 0 errors, got 1 results: shadownamepz
                                                    >getParamIndex(shadownamepz)
                                                    >padString(54, ,3,0)
                                                >[liquidSlParseLif]  54: >name "shadownamepz"< (parameterDescription)
                                                    >getKeyAndArgs(name "shadownamepz",[)
                                                        >fetchKeyword(name "shadownamepz")
                                                            >isValidShaderTypeForPL(name)
                                                                >isValidShaderTypeForPL_renderman(name)
                                                                    >isSurfaceShader_renderman(name)
                                                        >fetchKeyword("shadownamepz")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("shadownamepz")
                                                        >fetchVectorList("shadownamepz")
                                                        >fetchString("shadownamepz")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'name', arguments: "shadownamepz" (parameterDescription)
                                                    >getValidArgs(-1,string,["shadownamepz"], [], [])
                                                        >getString("shadownamepz")
                                                            >fetchString("shadownamepz")
                                                    >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "shadownamepz" reported 0 errors, got 1 results: shadownamepz
                                                    >padString(55, ,3,0)
                                                >[liquidSlParseLif]  55: >type "shadow"< (parameterDescription)
                                                    >getKeyAndArgs(type "shadow",[)
                                                        >fetchKeyword(type "shadow")
                                                            >isValidShaderTypeForPL(type)
                                                                >isValidShaderTypeForPL_renderman(type)
                                                                    >isSurfaceShader_renderman(type)
                                                        >fetchKeyword("shadow")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("shadow")
                                                        >fetchVectorList("shadow")
                                                        >fetchString("shadow")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'type', arguments: "shadow" (parameterDescription)
                                                    >getTypeNames(["shadow"], [])
                                                        >getValidArgs(-1,string,["shadow"], [], [])
                                                            >getString("shadow")
                                                                >fetchString("shadow")
                                                        >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "shadow" reported 0 errors, got 1 results: shadow
                                                        >liquidGetLifParamTypes()
                                                    >padString(57, ,3,0)
                                                >[liquidSlParseLif]  57: >param "shadownamenz"< (parameterDescription)
                                                    >getKeyAndArgs(param "shadownamenz",[)
                                                        >fetchKeyword(param "shadownamenz")
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword("shadownamenz")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("shadownamenz")
                                                        >fetchVectorList("shadownamenz")
                                                        >fetchString("shadownamenz")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "shadownamenz" (parameterDescription)
                                                    >getKeyAndArgs(param "shadownamenz",[)
                                                        >fetchKeyword(param "shadownamenz")
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword("shadownamenz")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("shadownamenz")
                                                        >fetchVectorList("shadownamenz")
                                                        >fetchString("shadownamenz")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "shadownamenz" (shaderDescription)
                                                    >getValidArgs(1,string,["shadownamenz"], [], [])
                                                        >getString("shadownamenz")
                                                            >fetchString("shadownamenz")
                                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "shadownamenz" reported 0 errors, got 1 results: shadownamenz
                                                    >getParamIndex(shadownamenz)
                                                    >padString(58, ,3,0)
                                                >[liquidSlParseLif]  58: >name "shadownamenz"< (parameterDescription)
                                                    >getKeyAndArgs(name "shadownamenz",[)
                                                        >fetchKeyword(name "shadownamenz")
                                                            >isValidShaderTypeForPL(name)
                                                                >isValidShaderTypeForPL_renderman(name)
                                                                    >isSurfaceShader_renderman(name)
                                                        >fetchKeyword("shadownamenz")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("shadownamenz")
                                                        >fetchVectorList("shadownamenz")
                                                        >fetchString("shadownamenz")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'name', arguments: "shadownamenz" (parameterDescription)
                                                    >getValidArgs(-1,string,["shadownamenz"], [], [])
                                                        >getString("shadownamenz")
                                                            >fetchString("shadownamenz")
                                                    >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "shadownamenz" reported 0 errors, got 1 results: shadownamenz
                                                    >padString(59, ,3,0)
                                                >[liquidSlParseLif]  59: >type "shadow"< (parameterDescription)
                                                    >getKeyAndArgs(type "shadow",[)
                                                        >fetchKeyword(type "shadow")
                                                            >isValidShaderTypeForPL(type)
                                                                >isValidShaderTypeForPL_renderman(type)
                                                                    >isSurfaceShader_renderman(type)
                                                        >fetchKeyword("shadow")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("shadow")
                                                        >fetchVectorList("shadow")
                                                        >fetchString("shadow")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'type', arguments: "shadow" (parameterDescription)
                                                    >getTypeNames(["shadow"], [])
                                                        >getValidArgs(-1,string,["shadow"], [], [])
                                                            >getString("shadow")
                                                                >fetchString("shadow")
                                                        >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "shadow" reported 0 errors, got 1 results: shadow
                                                        >liquidGetLifParamTypes()
                                                    >padString(61, ,3,0)
                                                >[liquidSlParseLif]  61: >group "end"< (parameterDescription)
                                                    >getKeyAndArgs(group "end",[)
                                                        >fetchKeyword(group "end")
                                                            >isValidShaderTypeForPL(group)
                                                                >isValidShaderTypeForPL_renderman(group)
                                                                    >isSurfaceShader_renderman(group)
                                                        >fetchKeyword("end")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("end")
                                                        >fetchVectorList("end")
                                                        >fetchString("end")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'group', arguments: "end" (parameterDescription)
                                                    >getKeyAndArgs(group "end",[)
                                                        >fetchKeyword(group "end")
                                                            >isValidShaderTypeForPL(group)
                                                                >isValidShaderTypeForPL_renderman(group)
                                                                    >isSurfaceShader_renderman(group)
                                                        >fetchKeyword("end")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("end")
                                                        >fetchVectorList("end")
                                                        >fetchString("end")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'group', arguments: "end" (shaderDescription)
                                                    >getValidArgs(1,string,["end"], [group2], [])
                                                        >getString("end")
                                                            >fetchString("end")
                                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "end" reported 0 errors, got 1 results: end
                                                    >padString(63, ,3,0)
                                                >[liquidSlParseLif]  63: >param "shadowbias"< (groupDescription)
                                                    >getKeyAndArgs(param "shadowbias",[)
                                                        >fetchKeyword(param "shadowbias")
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword("shadowbias")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("shadowbias")
                                                        >fetchVectorList("shadowbias")
                                                        >fetchString("shadowbias")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "shadowbias" (groupDescription)
                                                    >getKeyAndArgs(param "shadowbias",[)
                                                        >fetchKeyword(param "shadowbias")
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword("shadowbias")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("shadowbias")
                                                        >fetchVectorList("shadowbias")
                                                        >fetchString("shadowbias")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "shadowbias" (shaderDescription)
                                                    >getValidArgs(1,string,["shadowbias"], [], [])
                                                        >getString("shadowbias")
                                                            >fetchString("shadowbias")
                                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "shadowbias" reported 0 errors, got 1 results: shadowbias
                                                    >getParamIndex(shadowbias)
                                                    >padString(64, ,3,0)
                                                >[liquidSlParseLif]  64: >name "Bias"< (parameterDescription)
                                                    >getKeyAndArgs(name "Bias",[)
                                                        >fetchKeyword(name "Bias")
                                                            >isValidShaderTypeForPL(name)
                                                                >isValidShaderTypeForPL_renderman(name)
                                                                    >isSurfaceShader_renderman(name)
                                                        >fetchKeyword("Bias")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("Bias")
                                                        >fetchVectorList("Bias")
                                                        >fetchString("Bias")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'name', arguments: "Bias" (parameterDescription)
                                                    >getValidArgs(-1,string,["Bias"], [], [])
                                                        >getString("Bias")
                                                            >fetchString("Bias")
                                                    >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "Bias" reported 0 errors, got 1 results: Bias
                                                    >padString(65, ,3,0)
                                                >[liquidSlParseLif]  65: >desc ""< (parameterDescription)
                                                    >getKeyAndArgs(desc "",[)
                                                        >fetchKeyword(desc "")
                                                            >isValidShaderTypeForPL(desc)
                                                                >isValidShaderTypeForPL_renderman(desc)
                                                                    >isSurfaceShader_renderman(desc)
                                                        >fetchKeyword("")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("")
                                                        >fetchVectorList("")
                                                        >fetchString("")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'desc', arguments: "" (parameterDescription)
                                                    >getValidArgs(1,string,[""], [], [])
                                                        >getString("")
                                                            >fetchString("")
// Warning: file: E:/dev/autodesk/maya/myplugin/project/liquid_/2.3.3/mel/liquidSlParseLif.mel line 557: Starting position (2) is greater than ending position (1) in substring command.  An empty string will be returned. // 
                                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "" reported 0 errors, got 1 results: 
                                                    >padString(66, ,3,0)
                                                >[liquidSlParseLif]  66: >type "slider"< (parameterDescription)
                                                    >getKeyAndArgs(type "slider",[)
                                                        >fetchKeyword(type "slider")
                                                            >isValidShaderTypeForPL(type)
                                                                >isValidShaderTypeForPL_renderman(type)
                                                                    >isSurfaceShader_renderman(type)
                                                        >fetchKeyword("slider")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("slider")
                                                        >fetchVectorList("slider")
                                                        >fetchString("slider")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'type', arguments: "slider" (parameterDescription)
                                                    >getTypeNames(["slider"], [])
                                                        >getValidArgs(-1,string,["slider"], [], [])
                                                            >getString("slider")
                                                                >fetchString("slider")
                                                        >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "slider" reported 0 errors, got 1 results: slider
                                                        >liquidGetLifParamTypes()
                                                    >padString(67, ,3,0)
                                                >[liquidSlParseLif]  67: >range [ 0 1 ]< (parameterDescription)
                                                    >getKeyAndArgs(range [ 0 1 ],[)
                                                        >fetchKeyword(range [ 0 1 ])
                                                            >isValidShaderTypeForPL(range)
                                                                >isValidShaderTypeForPL_renderman(range)
                                                                    >isSurfaceShader_renderman(range)
                                                        >fetchKeyword([ 0 1 ])
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList([ 0 1 ])
                                                            >fetchString( 0 1 ])
                                                            >fetchVectorList( 0 1 ])
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'range', arguments: [ 0 1 ] (parameterDescription)
                                                    >getSliderRange([[ 0 1 ]], [])
                                                        >getRange([[ 0 1 ]], [])
                                                            >fetchVectorList(0 1)
                                                            >fetchString(0 1)
                                                            >fetchVectorList(1)
                                                            >fetchString(1)
                                                        >[liquidSlParseLif.getRange] parsed range arguments [ 0 1 ] into: 0|1
                                                        >liquidSlValidFloatString(0)
                                                            >isValidIntPart(0)
                                                            >isNonEmptyIntPart(0)
                                                                >isValidIntPart(0)
                                                            >isValidExpPart()
                                                        >liquidSlValidFloatString(1)
                                                            >isValidIntPart(1)
                                                            >isNonEmptyIntPart(1)
                                                                >isValidIntPart(1)
                                                            >isValidExpPart()
                                                    >[liquidSlParseLif.getSliderRange] got 2 valid elements out of 2
                                                    >padString(69, ,3,0)
                                                >[liquidSlParseLif]  69: >param "shadowblur"< (parameterDescription)
                                                    >getKeyAndArgs(param "shadowblur",[)
                                                        >fetchKeyword(param "shadowblur")
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword("shadowblur")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("shadowblur")
                                                        >fetchVectorList("shadowblur")
                                                        >fetchString("shadowblur")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "shadowblur" (parameterDescription)
                                                    >getKeyAndArgs(param "shadowblur",[)
                                                        >fetchKeyword(param "shadowblur")
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword("shadowblur")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("shadowblur")
                                                        >fetchVectorList("shadowblur")
                                                        >fetchString("shadowblur")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "shadowblur" (shaderDescription)
                                                    >getValidArgs(1,string,["shadowblur"], [], [])
                                                        >getString("shadowblur")
                                                            >fetchString("shadowblur")
                                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "shadowblur" reported 0 errors, got 1 results: shadowblur
                                                    >getParamIndex(shadowblur)
                                                    >padString(70, ,3,0)
                                                >[liquidSlParseLif]  70: >name "Blur"< (parameterDescription)
                                                    >getKeyAndArgs(name "Blur",[)
                                                        >fetchKeyword(name "Blur")
                                                            >isValidShaderTypeForPL(name)
                                                                >isValidShaderTypeForPL_renderman(name)
                                                                    >isSurfaceShader_renderman(name)
                                                        >fetchKeyword("Blur")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("Blur")
                                                        >fetchVectorList("Blur")
                                                        >fetchString("Blur")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'name', arguments: "Blur" (parameterDescription)
                                                    >getValidArgs(-1,string,["Blur"], [], [])
                                                        >getString("Blur")
                                                            >fetchString("Blur")
                                                    >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "Blur" reported 0 errors, got 1 results: Blur
                                                    >padString(71, ,3,0)
                                                >[liquidSlParseLif]  71: >desc ""< (parameterDescription)
                                                    >getKeyAndArgs(desc "",[)
                                                        >fetchKeyword(desc "")
                                                            >isValidShaderTypeForPL(desc)
                                                                >isValidShaderTypeForPL_renderman(desc)
                                                                    >isSurfaceShader_renderman(desc)
                                                        >fetchKeyword("")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("")
                                                        >fetchVectorList("")
                                                        >fetchString("")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'desc', arguments: "" (parameterDescription)
                                                    >getValidArgs(1,string,[""], [], [])
                                                        >getString("")
                                                            >fetchString("")
// Warning: file: E:/dev/autodesk/maya/myplugin/project/liquid_/2.3.3/mel/liquidSlParseLif.mel line 557: Starting position (2) is greater than ending position (1) in substring command.  An empty string will be returned. // 
                                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "" reported 0 errors, got 1 results: 
                                                    >padString(72, ,3,0)
                                                >[liquidSlParseLif]  72: >type "slider"< (parameterDescription)
                                                    >getKeyAndArgs(type "slider",[)
                                                        >fetchKeyword(type "slider")
                                                            >isValidShaderTypeForPL(type)
                                                                >isValidShaderTypeForPL_renderman(type)
                                                                    >isSurfaceShader_renderman(type)
                                                        >fetchKeyword("slider")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("slider")
                                                        >fetchVectorList("slider")
                                                        >fetchString("slider")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'type', arguments: "slider" (parameterDescription)
                                                    >getTypeNames(["slider"], [])
                                                        >getValidArgs(-1,string,["slider"], [], [])
                                                            >getString("slider")
                                                                >fetchString("slider")
                                                        >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "slider" reported 0 errors, got 1 results: slider
                                                        >liquidGetLifParamTypes()
                                                    >padString(73, ,3,0)
                                                >[liquidSlParseLif]  73: >range [ 0 1 ]< (parameterDescription)
                                                    >getKeyAndArgs(range [ 0 1 ],[)
                                                        >fetchKeyword(range [ 0 1 ])
                                                            >isValidShaderTypeForPL(range)
                                                                >isValidShaderTypeForPL_renderman(range)
                                                                    >isSurfaceShader_renderman(range)
                                                        >fetchKeyword([ 0 1 ])
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList([ 0 1 ])
                                                            >fetchString( 0 1 ])
                                                            >fetchVectorList( 0 1 ])
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'range', arguments: [ 0 1 ] (parameterDescription)
                                                    >getSliderRange([[ 0 1 ]], [])
                                                        >getRange([[ 0 1 ]], [])
                                                            >fetchVectorList(0 1)
                                                            >fetchString(0 1)
                                                            >fetchVectorList(1)
                                                            >fetchString(1)
                                                        >[liquidSlParseLif.getRange] parsed range arguments [ 0 1 ] into: 0|1
                                                        >liquidSlValidFloatString(0)
                                                            >isValidIntPart(0)
                                                            >isNonEmptyIntPart(0)
                                                                >isValidIntPart(0)
                                                            >isValidExpPart()
                                                        >liquidSlValidFloatString(1)
                                                            >isValidIntPart(1)
                                                            >isNonEmptyIntPart(1)
                                                                >isValidIntPart(1)
                                                            >isValidExpPart()
                                                    >[liquidSlParseLif.getSliderRange] got 2 valid elements out of 2
                                                    >padString(75, ,3,0)
                                                >[liquidSlParseLif]  75: >param "shadowsamples"< (parameterDescription)
                                                    >getKeyAndArgs(param "shadowsamples",[)
                                                        >fetchKeyword(param "shadowsamples")
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword("shadowsamples")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("shadowsamples")
                                                        >fetchVectorList("shadowsamples")
                                                        >fetchString("shadowsamples")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "shadowsamples" (parameterDescription)
                                                    >getKeyAndArgs(param "shadowsamples",[)
                                                        >fetchKeyword(param "shadowsamples")
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword("shadowsamples")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("shadowsamples")
                                                        >fetchVectorList("shadowsamples")
                                                        >fetchString("shadowsamples")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "shadowsamples" (shaderDescription)
                                                    >getValidArgs(1,string,["shadowsamples"], [], [])
                                                        >getString("shadowsamples")
                                                            >fetchString("shadowsamples")
                                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "shadowsamples" reported 0 errors, got 1 results: shadowsamples
                                                    >getParamIndex(shadowsamples)
                                                    >padString(76, ,3,0)
                                                >[liquidSlParseLif]  76: >name "Samples"< (parameterDescription)
                                                    >getKeyAndArgs(name "Samples",[)
                                                        >fetchKeyword(name "Samples")
                                                            >isValidShaderTypeForPL(name)
                                                                >isValidShaderTypeForPL_renderman(name)
                                                                    >isSurfaceShader_renderman(name)
                                                        >fetchKeyword("Samples")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("Samples")
                                                        >fetchVectorList("Samples")
                                                        >fetchString("Samples")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'name', arguments: "Samples" (parameterDescription)
                                                    >getValidArgs(-1,string,["Samples"], [], [])
                                                        >getString("Samples")
                                                            >fetchString("Samples")
                                                    >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "Samples" reported 0 errors, got 1 results: Samples
                                                    >padString(77, ,3,0)
                                                >[liquidSlParseLif]  77: >desc ""< (parameterDescription)
                                                    >getKeyAndArgs(desc "",[)
                                                        >fetchKeyword(desc "")
                                                            >isValidShaderTypeForPL(desc)
                                                                >isValidShaderTypeForPL_renderman(desc)
                                                                    >isSurfaceShader_renderman(desc)
                                                        >fetchKeyword("")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("")
                                                        >fetchVectorList("")
                                                        >fetchString("")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'desc', arguments: "" (parameterDescription)
                                                    >getValidArgs(1,string,[""], [], [])
                                                        >getString("")
                                                            >fetchString("")
// Warning: file: E:/dev/autodesk/maya/myplugin/project/liquid_/2.3.3/mel/liquidSlParseLif.mel line 557: Starting position (2) is greater than ending position (1) in substring command.  An empty string will be returned. // 
                                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "" reported 0 errors, got 1 results: 
                                                    >padString(78, ,3,0)
                                                >[liquidSlParseLif]  78: >type "slider"< (parameterDescription)
                                                    >getKeyAndArgs(type "slider",[)
                                                        >fetchKeyword(type "slider")
                                                            >isValidShaderTypeForPL(type)
                                                                >isValidShaderTypeForPL_renderman(type)
                                                                    >isSurfaceShader_renderman(type)
                                                        >fetchKeyword("slider")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("slider")
                                                        >fetchVectorList("slider")
                                                        >fetchString("slider")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'type', arguments: "slider" (parameterDescription)
                                                    >getTypeNames(["slider"], [])
                                                        >getValidArgs(-1,string,["slider"], [], [])
                                                            >getString("slider")
                                                                >fetchString("slider")
                                                        >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "slider" reported 0 errors, got 1 results: slider
                                                        >liquidGetLifParamTypes()
                                                    >padString(79, ,3,0)
                                                >[liquidSlParseLif]  79: >range [ 0 1 ]< (parameterDescription)
                                                    >getKeyAndArgs(range [ 0 1 ],[)
                                                        >fetchKeyword(range [ 0 1 ])
                                                            >isValidShaderTypeForPL(range)
                                                                >isValidShaderTypeForPL_renderman(range)
                                                                    >isSurfaceShader_renderman(range)
                                                        >fetchKeyword([ 0 1 ])
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList([ 0 1 ])
                                                            >fetchString( 0 1 ])
                                                            >fetchVectorList( 0 1 ])
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'range', arguments: [ 0 1 ] (parameterDescription)
                                                    >getSliderRange([[ 0 1 ]], [])
                                                        >getRange([[ 0 1 ]], [])
                                                            >fetchVectorList(0 1)
                                                            >fetchString(0 1)
                                                            >fetchVectorList(1)
                                                            >fetchString(1)
                                                        >[liquidSlParseLif.getRange] parsed range arguments [ 0 1 ] into: 0|1
                                                        >liquidSlValidFloatString(0)
                                                            >isValidIntPart(0)
                                                            >isNonEmptyIntPart(0)
                                                                >isValidIntPart(0)
                                                            >isValidExpPart()
                                                        >liquidSlValidFloatString(1)
                                                            >isValidIntPart(1)
                                                            >isNonEmptyIntPart(1)
                                                                >isValidIntPart(1)
                                                            >isValidExpPart()
                                                    >[liquidSlParseLif.getSliderRange] got 2 valid elements out of 2
                                                    >padString(81, ,3,0)
                                                >[liquidSlParseLif]  81: >param "shadowfiltersize"< (parameterDescription)
                                                    >getKeyAndArgs(param "shadowfiltersize",[)
                                                        >fetchKeyword(param "shadowfiltersize")
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword("shadowfiltersize")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("shadowfiltersize")
                                                        >fetchVectorList("shadowfiltersize")
                                                        >fetchString("shadowfiltersize")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "shadowfiltersize" (parameterDescription)
                                                    >getKeyAndArgs(param "shadowfiltersize",[)
                                                        >fetchKeyword(param "shadowfiltersize")
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword("shadowfiltersize")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("shadowfiltersize")
                                                        >fetchVectorList("shadowfiltersize")
                                                        >fetchString("shadowfiltersize")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "shadowfiltersize" (shaderDescription)
                                                    >getValidArgs(1,string,["shadowfiltersize"], [], [])
                                                        >getString("shadowfiltersize")
                                                            >fetchString("shadowfiltersize")
                                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "shadowfiltersize" reported 0 errors, got 1 results: shadowfiltersize
                                                    >getParamIndex(shadowfiltersize)
                                                    >padString(82, ,3,0)
                                                >[liquidSlParseLif]  82: >name "Filter Size"< (parameterDescription)
                                                    >getKeyAndArgs(name "Filter Size",[)
                                                        >fetchKeyword(name "Filter Size")
                                                            >isValidShaderTypeForPL(name)
                                                                >isValidShaderTypeForPL_renderman(name)
                                                                    >isSurfaceShader_renderman(name)
                                                        >fetchKeyword("Filter Size")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("Filter Size")
                                                        >fetchVectorList("Filter Size")
                                                        >fetchString("Filter Size")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'name', arguments: "Filter Size" (parameterDescription)
                                                    >getValidArgs(-1,string,["Filter Size"], [], [])
                                                        >getString("Filter Size")
                                                            >fetchString("Filter Size")
                                                    >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "Filter Size" reported 0 errors, got 1 results: Filter Size
                                                    >padString(83, ,3,0)
                                                >[liquidSlParseLif]  83: >desc ""< (parameterDescription)
                                                    >getKeyAndArgs(desc "",[)
                                                        >fetchKeyword(desc "")
                                                            >isValidShaderTypeForPL(desc)
                                                                >isValidShaderTypeForPL_renderman(desc)
                                                                    >isSurfaceShader_renderman(desc)
                                                        >fetchKeyword("")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("")
                                                        >fetchVectorList("")
                                                        >fetchString("")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'desc', arguments: "" (parameterDescription)
                                                    >getValidArgs(1,string,[""], [], [])
                                                        >getString("")
                                                            >fetchString("")
// Warning: file: E:/dev/autodesk/maya/myplugin/project/liquid_/2.3.3/mel/liquidSlParseLif.mel line 557: Starting position (2) is greater than ending position (1) in substring command.  An empty string will be returned. // 
                                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "" reported 0 errors, got 1 results: 
                                                    >padString(84, ,3,0)
                                                >[liquidSlParseLif]  84: >type "slider"< (parameterDescription)
                                                    >getKeyAndArgs(type "slider",[)
                                                        >fetchKeyword(type "slider")
                                                            >isValidShaderTypeForPL(type)
                                                                >isValidShaderTypeForPL_renderman(type)
                                                                    >isSurfaceShader_renderman(type)
                                                        >fetchKeyword("slider")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("slider")
                                                        >fetchVectorList("slider")
                                                        >fetchString("slider")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'type', arguments: "slider" (parameterDescription)
                                                    >getTypeNames(["slider"], [])
                                                        >getValidArgs(-1,string,["slider"], [], [])
                                                            >getString("slider")
                                                                >fetchString("slider")
                                                        >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "slider" reported 0 errors, got 1 results: slider
                                                        >liquidGetLifParamTypes()
                                                    >padString(85, ,3,0)
                                                >[liquidSlParseLif]  85: >range [ 0 1 ]< (parameterDescription)
                                                    >getKeyAndArgs(range [ 0 1 ],[)
                                                        >fetchKeyword(range [ 0 1 ])
                                                            >isValidShaderTypeForPL(range)
                                                                >isValidShaderTypeForPL_renderman(range)
                                                                    >isSurfaceShader_renderman(range)
                                                        >fetchKeyword([ 0 1 ])
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList([ 0 1 ])
                                                            >fetchString( 0 1 ])
                                                            >fetchVectorList( 0 1 ])
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'range', arguments: [ 0 1 ] (parameterDescription)
                                                    >getSliderRange([[ 0 1 ]], [])
                                                        >getRange([[ 0 1 ]], [])
                                                            >fetchVectorList(0 1)
                                                            >fetchString(0 1)
                                                            >fetchVectorList(1)
                                                            >fetchString(1)
                                                        >[liquidSlParseLif.getRange] parsed range arguments [ 0 1 ] into: 0|1
                                                        >liquidSlValidFloatString(0)
                                                            >isValidIntPart(0)
                                                            >isNonEmptyIntPart(0)
                                                                >isValidIntPart(0)
                                                            >isValidExpPart()
                                                        >liquidSlValidFloatString(1)
                                                            >isValidIntPart(1)
                                                            >isNonEmptyIntPart(1)
                                                                >isValidIntPart(1)
                                                            >isValidExpPart()
                                                    >[liquidSlParseLif.getSliderRange] got 2 valid elements out of 2
                                                    >padString(87, ,3,0)
                                                >[liquidSlParseLif]  87: >param "shadowcolor"< (parameterDescription)
                                                    >getKeyAndArgs(param "shadowcolor",[)
                                                        >fetchKeyword(param "shadowcolor")
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword("shadowcolor")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("shadowcolor")
                                                        >fetchVectorList("shadowcolor")
                                                        >fetchString("shadowcolor")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "shadowcolor" (parameterDescription)
                                                    >getKeyAndArgs(param "shadowcolor",[)
                                                        >fetchKeyword(param "shadowcolor")
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword("shadowcolor")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("shadowcolor")
                                                        >fetchVectorList("shadowcolor")
                                                        >fetchString("shadowcolor")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "shadowcolor" (shaderDescription)
                                                    >getValidArgs(1,string,["shadowcolor"], [], [])
                                                        >getString("shadowcolor")
                                                            >fetchString("shadowcolor")
                                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "shadowcolor" reported 0 errors, got 1 results: shadowcolor
                                                    >getParamIndex(shadowcolor)
                                                    >padString(88, ,3,0)
                                                >[liquidSlParseLif]  88: >name "Color"< (parameterDescription)
                                                    >getKeyAndArgs(name "Color",[)
                                                        >fetchKeyword(name "Color")
                                                            >isValidShaderTypeForPL(name)
                                                                >isValidShaderTypeForPL_renderman(name)
                                                                    >isSurfaceShader_renderman(name)
                                                        >fetchKeyword("Color")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("Color")
                                                        >fetchVectorList("Color")
                                                        >fetchString("Color")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'name', arguments: "Color" (parameterDescription)
                                                    >getValidArgs(-1,string,["Color"], [], [])
                                                        >getString("Color")
                                                            >fetchString("Color")
                                                    >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "Color" reported 0 errors, got 1 results: Color
                                                    >padString(89, ,3,0)
                                                >[liquidSlParseLif]  89: >desc ""< (parameterDescription)
                                                    >getKeyAndArgs(desc "",[)
                                                        >fetchKeyword(desc "")
                                                            >isValidShaderTypeForPL(desc)
                                                                >isValidShaderTypeForPL_renderman(desc)
                                                                    >isSurfaceShader_renderman(desc)
                                                        >fetchKeyword("")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("")
                                                        >fetchVectorList("")
                                                        >fetchString("")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'desc', arguments: "" (parameterDescription)
                                                    >getValidArgs(1,string,[""], [], [])
                                                        >getString("")
                                                            >fetchString("")
// Warning: file: E:/dev/autodesk/maya/myplugin/project/liquid_/2.3.3/mel/liquidSlParseLif.mel line 557: Starting position (2) is greater than ending position (1) in substring command.  An empty string will be returned. // 
                                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "" reported 0 errors, got 1 results: 
                                                    >padString(91, ,3,0)
                                                >[liquidSlParseLif]  91: >group "AOVs" "close"< (parameterDescription)
                                                    >getKeyAndArgs(group "AOVs" "close",[)
                                                        >fetchKeyword(group "AOVs" "close")
                                                            >isValidShaderTypeForPL(group)
                                                                >isValidShaderTypeForPL_renderman(group)
                                                                    >isSurfaceShader_renderman(group)
                                                        >fetchKeyword("AOVs" "close")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("AOVs" "close")
                                                        >fetchVectorList("AOVs" "close")
                                                        >fetchString("AOVs" "close")
                                                        >fetchKeyword("close")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("close")
                                                        >fetchVectorList("close")
                                                        >fetchString("close")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'group', arguments: "AOVs" "close" (parameterDescription)
                                                    >getKeyAndArgs(group "AOVs" "close",[)
                                                        >fetchKeyword(group "AOVs" "close")
                                                            >isValidShaderTypeForPL(group)
                                                                >isValidShaderTypeForPL_renderman(group)
                                                                    >isSurfaceShader_renderman(group)
                                                        >fetchKeyword("AOVs" "close")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("AOVs" "close")
                                                        >fetchVectorList("AOVs" "close")
                                                        >fetchString("AOVs" "close")
                                                        >fetchKeyword("close")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("close")
                                                        >fetchVectorList("close")
                                                        >fetchString("close")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'group', arguments: "AOVs" "close" (shaderDescription)
                                                    >getValidArgs(1,string,["AOVs" "close"], [group3], [])
                                                        >getString("AOVs")
                                                            >fetchString("AOVs")
                                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "AOVs" "close" reported 1 errors, got 1 results: AOVs
                                                    >padString(91,0,3,0)
// Error: file: E:/dev/autodesk/maya/myplugin/project/liquid_/2.3.3/mel/liquidSlParseLif.mel line 2003: [liquidSlParseLif] 091: >group "AOVs" "close"< (groupDescription) // 
// Error: file: E:/dev/autodesk/maya/myplugin/project/liquid_/2.3.3/mel/liquidSlParseLif.mel line 2007: [liquidSlParseLif] group: only requests 1 string argument(s), rest were ignored // 
                                                >[liquidSlParseLif] group: only requests 1 string argument(s), rest were ignored
                                                >[liquidSlParseLif] total of 1 errors in line 91 of E:/dev/Autodesk/maya/myplugin/project/liquid_/2.3.3/lib/shaders/liquidpoint.lif (groupDescription)
                                                    >padString(93, ,3,0)
                                                >[liquidSlParseLif]  93: >param "__shadowF"< (groupDescription)
                                                    >getKeyAndArgs(param "__shadowF",[)
                                                        >fetchKeyword(param "__shadowF")
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword("__shadowF")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("__shadowF")
                                                        >fetchVectorList("__shadowF")
                                                        >fetchString("__shadowF")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "__shadowF" (groupDescription)
                                                    >getKeyAndArgs(param "__shadowF",[)
                                                        >fetchKeyword(param "__shadowF")
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword("__shadowF")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("__shadowF")
                                                        >fetchVectorList("__shadowF")
                                                        >fetchString("__shadowF")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "__shadowF" (shaderDescription)
                                                    >getValidArgs(1,string,["__shadowF"], [], [])
                                                        >getString("__shadowF")
                                                            >fetchString("__shadowF")
                                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "__shadowF" reported 0 errors, got 1 results: __shadowF
                                                    >getParamIndex(__shadowF)
                                                    >padString(94, ,3,0)
                                                >[liquidSlParseLif]  94: >name "__shadowF"< (parameterDescription)
                                                    >getKeyAndArgs(name "__shadowF",[)
                                                        >fetchKeyword(name "__shadowF")
                                                            >isValidShaderTypeForPL(name)
                                                                >isValidShaderTypeForPL_renderman(name)
                                                                    >isSurfaceShader_renderman(name)
                                                        >fetchKeyword("__shadowF")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("__shadowF")
                                                        >fetchVectorList("__shadowF")
                                                        >fetchString("__shadowF")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'name', arguments: "__shadowF" (parameterDescription)
                                                    >getValidArgs(-1,string,["__shadowF"], [], [])
                                                        >getString("__shadowF")
                                                            >fetchString("__shadowF")
                                                    >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "__shadowF" reported 0 errors, got 1 results: __shadowF
                                                    >padString(95, ,3,0)
                                                >[liquidSlParseLif]  95: >desc "shadow fraction"< (parameterDescription)
                                                    >getKeyAndArgs(desc "shadow fraction",[)
                                                        >fetchKeyword(desc "shadow fraction")
                                                            >isValidShaderTypeForPL(desc)
                                                                >isValidShaderTypeForPL_renderman(desc)
                                                                    >isSurfaceShader_renderman(desc)
                                                        >fetchKeyword("shadow fraction")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("shadow fraction")
                                                        >fetchVectorList("shadow fraction")
                                                        >fetchString("shadow fraction")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'desc', arguments: "shadow fraction" (parameterDescription)
                                                    >getValidArgs(1,string,["shadow fraction"], [], [])
                                                        >getString("shadow fraction")
                                                            >fetchString("shadow fraction")
                                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "shadow fraction" reported 0 errors, got 1 results: shadow fraction
                                                    >padString(97, ,3,0)
                                                >[liquidSlParseLif]  97: >param "__shadowC"< (parameterDescription)
                                                    >getKeyAndArgs(param "__shadowC",[)
                                                        >fetchKeyword(param "__shadowC")
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword("__shadowC")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("__shadowC")
                                                        >fetchVectorList("__shadowC")
                                                        >fetchString("__shadowC")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "__shadowC" (parameterDescription)
                                                    >getKeyAndArgs(param "__shadowC",[)
                                                        >fetchKeyword(param "__shadowC")
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword("__shadowC")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("__shadowC")
                                                        >fetchVectorList("__shadowC")
                                                        >fetchString("__shadowC")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "__shadowC" (shaderDescription)
                                                    >getValidArgs(1,string,["__shadowC"], [], [])
                                                        >getString("__shadowC")
                                                            >fetchString("__shadowC")
                                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "__shadowC" reported 0 errors, got 1 results: __shadowC
                                                    >getParamIndex(__shadowC)
                                                    >padString(98, ,3,0)
                                                >[liquidSlParseLif]  98: >name "__shadowC"< (parameterDescription)
                                                    >getKeyAndArgs(name "__shadowC",[)
                                                        >fetchKeyword(name "__shadowC")
                                                            >isValidShaderTypeForPL(name)
                                                                >isValidShaderTypeForPL_renderman(name)
                                                                    >isSurfaceShader_renderman(name)
                                                        >fetchKeyword("__shadowC")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("__shadowC")
                                                        >fetchVectorList("__shadowC")
                                                        >fetchString("__shadowC")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'name', arguments: "__shadowC" (parameterDescription)
                                                    >getValidArgs(-1,string,["__shadowC"], [], [])
                                                        >getString("__shadowC")
                                                            >fetchString("__shadowC")
                                                    >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "__shadowC" reported 0 errors, got 1 results: __shadowC
                                                    >padString(99, ,3,0)
                                                >[liquidSlParseLif]  99: >desc ""< (parameterDescription)
                                                    >getKeyAndArgs(desc "",[)
                                                        >fetchKeyword(desc "")
                                                            >isValidShaderTypeForPL(desc)
                                                                >isValidShaderTypeForPL_renderman(desc)
                                                                    >isSurfaceShader_renderman(desc)
                                                        >fetchKeyword("")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("")
                                                        >fetchVectorList("")
                                                        >fetchString("")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'desc', arguments: "" (parameterDescription)
                                                    >getValidArgs(1,string,[""], [], [])
                                                        >getString("")
                                                            >fetchString("")
// Warning: file: E:/dev/autodesk/maya/myplugin/project/liquid_/2.3.3/mel/liquidSlParseLif.mel line 557: Starting position (2) is greater than ending position (1) in substring command.  An empty string will be returned. // 
                                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "" reported 0 errors, got 1 results: 
                                                    >padString(101, ,3,0)
                                                >[liquidSlParseLif] 101: >param "__unshadowed_Cl"< (parameterDescription)
                                                    >getKeyAndArgs(param "__unshadowed_Cl",[)
                                                        >fetchKeyword(param "__unshadowed_Cl")
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword("__unshadowed_Cl")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("__unshadowed_Cl")
                                                        >fetchVectorList("__unshadowed_Cl")
                                                        >fetchString("__unshadowed_Cl")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "__unshadowed_Cl" (parameterDescription)
                                                    >getKeyAndArgs(param "__unshadowed_Cl",[)
                                                        >fetchKeyword(param "__unshadowed_Cl")
                                                            >isValidShaderTypeForPL(param)
                                                                >isValidShaderTypeForPL_renderman(param)
                                                                    >isSurfaceShader_renderman(param)
                                                        >fetchKeyword("__unshadowed_Cl")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("__unshadowed_Cl")
                                                        >fetchVectorList("__unshadowed_Cl")
                                                        >fetchString("__unshadowed_Cl")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'param', arguments: "__unshadowed_Cl" (shaderDescription)
                                                    >getValidArgs(1,string,["__unshadowed_Cl"], [], [])
                                                        >getString("__unshadowed_Cl")
                                                            >fetchString("__unshadowed_Cl")
                                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "__unshadowed_Cl" reported 0 errors, got 1 results: __unshadowed_Cl
                                                    >getParamIndex(__unshadowed_Cl)
                                                    >padString(102, ,3,0)
                                                >[liquidSlParseLif] 102: >name "__unshadowed_Cl"< (parameterDescription)
                                                    >getKeyAndArgs(name "__unshadowed_Cl",[)
                                                        >fetchKeyword(name "__unshadowed_Cl")
                                                            >isValidShaderTypeForPL(name)
                                                                >isValidShaderTypeForPL_renderman(name)
                                                                    >isSurfaceShader_renderman(name)
                                                        >fetchKeyword("__unshadowed_Cl")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("__unshadowed_Cl")
                                                        >fetchVectorList("__unshadowed_Cl")
                                                        >fetchString("__unshadowed_Cl")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'name', arguments: "__unshadowed_Cl" (parameterDescription)
                                                    >getValidArgs(-1,string,["__unshadowed_Cl"], [], [])
                                                        >getString("__unshadowed_Cl")
                                                            >fetchString("__unshadowed_Cl")
                                                    >[liquidSlParseLif.getValidArgs] for all argument(s) of type string on "__unshadowed_Cl" reported 0 errors, got 1 results: __unshadowed_Cl
                                                    >padString(103, ,3,0)
                                                >[liquidSlParseLif] 103: >desc ""< (parameterDescription)
                                                    >getKeyAndArgs(desc "",[)
                                                        >fetchKeyword(desc "")
                                                            >isValidShaderTypeForPL(desc)
                                                                >isValidShaderTypeForPL_renderman(desc)
                                                                    >isSurfaceShader_renderman(desc)
                                                        >fetchKeyword("")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("")
                                                        >fetchVectorList("")
                                                        >fetchString("")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'desc', arguments: "" (parameterDescription)
                                                    >getValidArgs(1,string,[""], [], [])
                                                        >getString("")
                                                            >fetchString("")
// Warning: file: E:/dev/autodesk/maya/myplugin/project/liquid_/2.3.3/mel/liquidSlParseLif.mel line 557: Starting position (2) is greater than ending position (1) in substring command.  An empty string will be returned. // 
                                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "" reported 0 errors, got 1 results: 
                                                    >padString(105, ,3,0)
                                                >[liquidSlParseLif] 105: >group "end"< (parameterDescription)
                                                    >getKeyAndArgs(group "end",[)
                                                        >fetchKeyword(group "end")
                                                            >isValidShaderTypeForPL(group)
                                                                >isValidShaderTypeForPL_renderman(group)
                                                                    >isSurfaceShader_renderman(group)
                                                        >fetchKeyword("end")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("end")
                                                        >fetchVectorList("end")
                                                        >fetchString("end")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'group', arguments: "end" (parameterDescription)
                                                    >getKeyAndArgs(group "end",[)
                                                        >fetchKeyword(group "end")
                                                            >isValidShaderTypeForPL(group)
                                                                >isValidShaderTypeForPL_renderman(group)
                                                                    >isSurfaceShader_renderman(group)
                                                        >fetchKeyword("end")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("end")
                                                        >fetchVectorList("end")
                                                        >fetchString("end")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'group', arguments: "end" (shaderDescription)
                                                    >getValidArgs(1,string,["end"], [group4], [])
                                                        >getString("end")
                                                            >fetchString("end")
                                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "end" reported 0 errors, got 1 results: end
                                                    >padString(107, ,3,0)
                                                >[liquidSlParseLif] 107: >group "end"< (groupDescription)
                                                    >getKeyAndArgs(group "end",[)
                                                        >fetchKeyword(group "end")
                                                            >isValidShaderTypeForPL(group)
                                                                >isValidShaderTypeForPL_renderman(group)
                                                                    >isSurfaceShader_renderman(group)
                                                        >fetchKeyword("end")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("end")
                                                        >fetchVectorList("end")
                                                        >fetchString("end")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'group', arguments: "end" (groupDescription)
                                                    >getKeyAndArgs(group "end",[)
                                                        >fetchKeyword(group "end")
                                                            >isValidShaderTypeForPL(group)
                                                                >isValidShaderTypeForPL_renderman(group)
                                                                    >isSurfaceShader_renderman(group)
                                                        >fetchKeyword("end")
                                                            >isValidShaderTypeForPL()
                                                                >isValidShaderTypeForPL_renderman()
                                                                    >isSurfaceShader_renderman()
                                                        >fetchBracketList("end")
                                                        >fetchVectorList("end")
                                                        >fetchString("end")
                                                >[liquidSlParseLif.getKeyAndArgs] keyword 'group', arguments: "end" (shaderDescription)
                                                    >getValidArgs(1,string,["end"], [group5], [])
                                                        >getString("end")
                                                            >fetchString("end")
                                                    >[liquidSlParseLif.getValidArgs] for 1 argument(s) of type string on "end" reported 0 errors, got 1 results: end
// Error: file: E:/dev/autodesk/maya/myplugin/project/liquid_/2.3.3/mel/liquidSlParseLif.mel line 2026: [liquidSlParseLif] group "26" has no matching end statement in "E:/dev/Autodesk/maya/myplugin/project/liquid_/2.3.3/lib/shaders/liquidpoint.lif" // 
                                                    >liquidSlBuildLifCmdList()
                                                        >liquidSlShaderType()
                                                        >liquidLifParamName(0)
                                                            >liquidSlNumParams()
                                                            >liquidSlNumParams(15)
                                                        >liquidLifParamType(0)
                                                            >liquidSlNumParams()
                                                            >liquidSlParamType(15)
                                                        >liquidLifParamArraySize(0)
                                                            >liquidSlNumParams()
                                                            >liquidSlParamArraySize(15)
                                                        >liquidLifParamAccept(0)
                                                            >liquidSlNumParams()
                                                        >liquidLifParamGuiType(0)
                                                        >liquidLifParamLabel(0)
                                                        >liquidLifParamGuiRange(0)
                                                        >liquidLifParamDescription(0)
                                                        >liquidLifState(0)
                                                        >liquidLifParamIsOutput(0)
                                                            >liquidSlNumParams()
                                                            >liquidSlParamIsOutput(15)
                                                    >[liquidSlBuildLifCmdList] for param: __category, type: string (string), UI label: __category:
liquidAE_LifParameter( "__category", "-1", "string", "string", "__category", {""}, "", 14 );
                                                        >liquidLifSetParamAccept(0, )
                                                            >liquidSlNumParams()
                                                            >liquidSlSetParamAccept(15, )
                                                        >liquidLifParamName(1)
                                                            >liquidSlNumParams()
                                                            >liquidSlNumParams(0)
                                                        >liquidLifParamType(1)
                                                            >liquidSlNumParams()
                                                            >liquidSlParamType(0)
                                                        >liquidLifParamArraySize(1)
                                                            >liquidSlNumParams()
                                                            >liquidSlParamArraySize(0)
                                                        >liquidLifParamAccept(1)
                                                            >liquidSlNumParams()
                                                        >liquidLifParamGuiType(1)
                                                        >liquidLifParamLabel(1)
                                                        >liquidLifParamGuiRange(1)
                                                        >liquidLifParamDescription(1)
                                                        >liquidLifState(1)
                                                        >liquidLifParamIsOutput(1)
                                                            >liquidSlNumParams()
                                                            >liquidSlParamIsOutput(0)
                                                    >[liquidSlBuildLifCmdList] for param: intensity, type: float (slider), UI label: Intensity:
liquidAE_LifParameter( "intensity", "-1", "float", "slider", "Intensity", {""}, "", 14 );
                                                        >liquidLifSetParamAccept(1, )
                                                            >liquidSlNumParams()
                                                            >liquidSlSetParamAccept(0, )
                                                        >liquidLifParamName(2)
                                                            >liquidSlNumParams()
                                                            >liquidSlNumParams(1)
                                                        >liquidLifParamType(2)
                                                            >liquidSlNumParams()
                                                            >liquidSlParamType(1)
                                                        >liquidLifParamArraySize(2)
                                                            >liquidSlNumParams()
                                                            >liquidSlParamArraySize(1)
                                                        >liquidLifParamAccept(2)
                                                            >liquidSlNumParams()
                                                        >liquidLifParamGuiType(2)
                                                        >liquidLifParamLabel(2)
                                                        >liquidLifParamGuiRange(2)
                                                        >liquidLifParamDescription(2)
                                                        >liquidLifState(2)
                                                        >liquidLifParamIsOutput(2)
                                                            >liquidSlNumParams()
                                                            >liquidSlParamIsOutput(1)
                                                    >[liquidSlBuildLifCmdList] for param: lightcolor, type: color (color), UI label: Light Color:
liquidAE_LifParameter( "lightcolor", "-1", "color", "color", "Light Color", {""}, "", 14 );
                                                        >liquidLifSetParamAccept(2, )
                                                            >liquidSlNumParams()
                                                            >liquidSlSetParamAccept(1, )
                                                        >liquidLifParamName(3)
                                                            >liquidSlNumParams()
                                                            >liquidSlNumParams(19)
                                                        >liquidLifParamType(3)
                                                            >liquidSlNumParams()
                                                            >liquidSlParamType(19)
                                                        >liquidLifParamArraySize(3)
                                                            >liquidSlNumParams()
                                                            >liquidSlParamArraySize(19)
                                                        >liquidLifParamAccept(3)
                                                            >liquidSlNumParams()
                                                        >liquidLifParamGuiType(3)
                                                        >liquidLifParamLabel(3)
                                                        >liquidLifParamGuiRange(3)
                                                        >liquidLifParamDescription(3)
                                                        >liquidLifState(3)
                                                        >liquidLifParamIsOutput(3)
                                                            >liquidSlNumParams()
                                                            >liquidSlParamIsOutput(19)
                                                    >[liquidSlBuildLifCmdList] for param: __nondiffuse, type: float (bool), UI label: Non Diffuse:
liquidAE_LifParameter( "__nondiffuse", "-1", "float", "bool", "Non Diffuse", {""}, "", 14 );
                                                        >liquidLifSetParamAccept(3, )
                                                            >liquidSlNumParams()
                                                            >liquidSlSetParamAccept(19, )
                                                        >liquidLifParamName(4)
                                                            >liquidSlNumParams()
                                                            >liquidSlNumParams(20)
                                                        >liquidLifParamType(4)
                                                            >liquidSlNumParams()
                                                            >liquidSlParamType(20)
                                                        >liquidLifParamArraySize(4)
                                                            >liquidSlNumParams()
                                                            >liquidSlParamArraySize(20)
                                                        >liquidLifParamAccept(4)
                                                            >liquidSlNumParams()
                                                        >liquidLifParamGuiType(4)
                                                        >liquidLifParamLabel(4)
                                                        >liquidLifParamGuiRange(4)
                                                        >liquidLifParamDescription(4)
                                                        >liquidLifState(4)
                                                        >liquidLifParamIsOutput(4)
                                                            >liquidSlNumParams()
                                                            >liquidSlParamIsOutput(20)
                                                    >[liquidSlBuildLifCmdList] for param: __nonspecular, type: float (bool), UI label: Non Specular:
liquidAE_LifParameter( "__nonspecular", "-1", "float", "bool", "Non Specular", {""}, "", 14 );
                                                        >liquidLifSetParamAccept(4, )
                                                            >liquidSlNumParams()
                                                            >liquidSlSetParamAccept(20, )
                                                        >liquidLifParamName(5)
                                                            >liquidSlNumParams()
                                                            >liquidSlNumParams(2)
                                                        >liquidLifParamType(5)
                                                            >liquidSlNumParams()
                                                            >liquidSlParamType(2)
                                                        >liquidLifParamArraySize(5)
                                                            >liquidSlNumParams()
                                                            >liquidSlParamArraySize(2)
                                                        >liquidLifParamAccept(5)
                                                            >liquidSlNumParams()
                                                        >liquidLifParamGuiType(5)
                                                        >liquidLifParamLabel(5)
                                                        >liquidLifParamGuiRange(5)
                                                        >liquidLifParamDescription(5)
                                                        >liquidLifState(5)
                                                        >liquidLifParamIsOutput(5)
                                                            >liquidSlNumParams()
                                                            >liquidSlParamIsOutput(2)
                                                    >[liquidSlBuildLifCmdList] for param: decay, type: float (selector), UI label: Decay:
liquidAE_LifParameter( "decay", "-1", "float", "selector", "Decay", {"None", "0", "Linear", "1", "Quadratic", "2", "Cubic", "3"}, "", 14 );
                                                        >liquidLifSetParamAccept(5, )
                                                            >liquidSlNumParams()
                                                            >liquidSlSetParamAccept(2, )
                                                        >liquidLifParamName(6)
                                                            >liquidSlNumParams()
                                                            >liquidSlNumParams(14)
                                                        >liquidLifParamType(6)
                                                            >liquidSlNumParams()
                                                            >liquidSlParamType(14)
                                                        >liquidLifParamArraySize(6)
                                                            >liquidSlNumParams()
                                                            >liquidSlParamArraySize(14)
                                                        >liquidLifParamAccept(6)
                                                            >liquidSlNumParams()
                                                        >liquidLifParamGuiType(6)
                                                        >liquidLifParamLabel(6)
                                                        >liquidLifParamGuiRange(6)
                                                        >liquidLifParamDescription(6)
                                                        >liquidLifState(6)
                                                        >liquidLifParamIsOutput(6)
                                                            >liquidSlNumParams()
                                                            >liquidSlParamIsOutput(14)
                                                    >[liquidSlBuildLifCmdList] for param: lightID, type: float (float), UI label: lightID:
liquidAE_LifParameter( "lightID", "-1", "float", "float", "lightID", {""}, "", 14 );
                                                        >liquidLifSetParamAccept(6, )
                                                            >liquidSlNumParams()
                                                            >liquidSlSetParamAccept(14, )
                                                        >liquidLifParamName(7)
                                                            >liquidSlNumParams()
                                                        >liquidLifParamType(7)
                                                            >liquidSlNumParams()
                                                        >liquidLifParamArraySize(7)
                                                            >liquidSlNumParams()
                                                        >liquidLifParamAccept(7)
                                                            >liquidSlNumParams()
                                                        >liquidLifParamGuiType(7)
                                                        >liquidLifParamLabel(7)
                                                        >liquidLifParamGuiRange(7)
                                                        >liquidLifParamDescription(7)
                                                        >liquidLifState(7)
                                                        >liquidLifParamIsOutput(7)
                                                            >liquidSlNumParams()
                                                    >	[liquidSlBuildLifCmdList] group: liquidAE_LifGrp( "Shadows", 14 );
                                                        >liquidLifParamName(8)
                                                            >liquidSlNumParams()
                                                        >liquidLifParamType(8)
                                                            >liquidSlNumParams()
                                                        >liquidLifParamArraySize(8)
                                                            >liquidSlNumParams()
                                                        >liquidLifParamAccept(8)
                                                            >liquidSlNumParams()
                                                        >liquidLifParamGuiType(8)
                                                        >liquidLifParamLabel(8)
                                                        >liquidLifParamGuiRange(8)
                                                        >liquidLifParamDescription(8)
                                                        >liquidLifState(8)
                                                        >liquidLifParamIsOutput(8)
                                                            >liquidSlNumParams()
                                                    >	[liquidSlBuildLifCmdList] group: liquidAE_LifGrp( "Maps", 14 );
                                                        >liquidLifParamName(9)
                                                            >liquidSlNumParams()
                                                            >liquidSlNumParams(3)
                                                        >liquidLifParamType(9)
                                                            >liquidSlNumParams()
                                                            >liquidSlParamType(3)
                                                        >liquidLifParamArraySize(9)
                                                            >liquidSlNumParams()
                                                            >liquidSlParamArraySize(3)
                                                        >liquidLifParamAccept(9)
                                                            >liquidSlNumParams()
                                                        >liquidLifParamGuiType(9)
                                                        >liquidLifParamLabel(9)
                                                        >liquidLifParamGuiRange(9)
                                                        >liquidLifParamDescription(9)
                                                        >liquidLifState(9)
                                                        >liquidLifParamIsOutput(9)
                                                            >liquidSlNumParams()
                                                            >liquidSlParamIsOutput(3)
                                                    >[liquidSlBuildLifCmdList] for param: shadownamepx, type: string (shadow), UI label: shadownamepx:
liquidAE_LifParameter( "shadownamepx", "-1", "string", "shadow", "shadownamepx", {""}, "", 14 );
                                                        >liquidLifSetParamAccept(9, )
                                                            >liquidSlNumParams()
                                                            >liquidSlSetParamAccept(3, )
                                                        >liquidLifParamName(10)
                                                            >liquidSlNumParams()
                                                            >liquidSlNumParams(4)
                                                        >liquidLifParamType(10)
                                                            >liquidSlNumParams()
                                                            >liquidSlParamType(4)
                                                        >liquidLifParamArraySize(10)
                                                            >liquidSlNumParams()
                                                            >liquidSlParamArraySize(4)
                                                        >liquidLifParamAccept(10)
                                                            >liquidSlNumParams()
                                                        >liquidLifParamGuiType(10)
                                                        >liquidLifParamLabel(10)
                                                        >liquidLifParamGuiRange(10)
                                                        >liquidLifParamDescription(10)
                                                        >liquidLifState(10)
                                                        >liquidLifParamIsOutput(10)
                                                            >liquidSlNumParams()
                                                            >liquidSlParamIsOutput(4)
                                                    >[liquidSlBuildLifCmdList] for param: shadownamenx, type: string (shadow), UI label: shadownamenx:
liquidAE_LifParameter( "shadownamenx", "-1", "string", "shadow", "shadownamenx", {""}, "", 14 );
                                                        >liquidLifSetParamAccept(10, )
                                                            >liquidSlNumParams()
                                                            >liquidSlSetParamAccept(4, )
                                                        >liquidLifParamName(11)
                                                            >liquidSlNumParams()
                                                            >liquidSlNumParams(5)
                                                        >liquidLifParamType(11)
                                                            >liquidSlNumParams()
                                                            >liquidSlParamType(5)
                                                        >liquidLifParamArraySize(11)
                                                            >liquidSlNumParams()
                                                            >liquidSlParamArraySize(5)
                                                        >liquidLifParamAccept(11)
                                                            >liquidSlNumParams()
                                                        >liquidLifParamGuiType(11)
                                                        >liquidLifParamLabel(11)
                                                        >liquidLifParamGuiRange(11)
                                                        >liquidLifParamDescription(11)
                                                        >liquidLifState(11)
                                                        >liquidLifParamIsOutput(11)
                                                            >liquidSlNumParams()
                                                            >liquidSlParamIsOutput(5)
                                                    >[liquidSlBuildLifCmdList] for param: shadownamepy, type: string (shadow), UI label: shadownamepy:
liquidAE_LifParameter( "shadownamepy", "-1", "string", "shadow", "shadownamepy", {""}, "", 14 );
                                                        >liquidLifSetParamAccept(11, )
                                                            >liquidSlNumParams()
                                                            >liquidSlSetParamAccept(5, )
                                                        >liquidLifParamName(12)
                                                            >liquidSlNumParams()
                                                            >liquidSlNumParams(6)
                                                        >liquidLifParamType(12)
                                                            >liquidSlNumParams()
                                                            >liquidSlParamType(6)
                                                        >liquidLifParamArraySize(12)
                                                            >liquidSlNumParams()
                                                            >liquidSlParamArraySize(6)
                                                        >liquidLifParamAccept(12)
                                                            >liquidSlNumParams()
                                                        >liquidLifParamGuiType(12)
                                                        >liquidLifParamLabel(12)
                                                        >liquidLifParamGuiRange(12)
                                                        >liquidLifParamDescription(12)
                                                        >liquidLifState(12)
                                                        >liquidLifParamIsOutput(12)
                                                            >liquidSlNumParams()
                                                            >liquidSlParamIsOutput(6)
                                                    >[liquidSlBuildLifCmdList] for param: shadownameny, type: string (shadow), UI label: shadownameny:
liquidAE_LifParameter( "shadownameny", "-1", "string", "shadow", "shadownameny", {""}, "", 14 );
                                                        >liquidLifSetParamAccept(12, )
                                                            >liquidSlNumParams()
                                                            >liquidSlSetParamAccept(6, )
                                                        >liquidLifParamName(13)
                                                            >liquidSlNumParams()
                                                            >liquidSlNumParams(7)
                                                        >liquidLifParamType(13)
                                                            >liquidSlNumParams()
                                                            >liquidSlParamType(7)
                                                        >liquidLifParamArraySize(13)
                                                            >liquidSlNumParams()
                                                            >liquidSlParamArraySize(7)
                                                        >liquidLifParamAccept(13)
                                                            >liquidSlNumParams()
                                                        >liquidLifParamGuiType(13)
                                                        >liquidLifParamLabel(13)
                                                        >liquidLifParamGuiRange(13)
                                                        >liquidLifParamDescription(13)
                                                        >liquidLifState(13)
                                                        >liquidLifParamIsOutput(13)
                                                            >liquidSlNumParams()
                                                            >liquidSlParamIsOutput(7)
                                                    >[liquidSlBuildLifCmdList] for param: shadownamepz, type: string (shadow), UI label: shadownamepz:
liquidAE_LifParameter( "shadownamepz", "-1", "string", "shadow", "shadownamepz", {""}, "", 14 );
                                                        >liquidLifSetParamAccept(13, )
                                                            >liquidSlNumParams()
                                                            >liquidSlSetParamAccept(7, )
                                                        >liquidLifParamName(14)
                                                            >liquidSlNumParams()
                                                            >liquidSlNumParams(8)
                                                        >liquidLifParamType(14)
                                                            >liquidSlNumParams()
                                                            >liquidSlParamType(8)
                                                        >liquidLifParamArraySize(14)
                                                            >liquidSlNumParams()
                                                            >liquidSlParamArraySize(8)
                                                        >liquidLifParamAccept(14)
                                                            >liquidSlNumParams()
                                                        >liquidLifParamGuiType(14)
                                                        >liquidLifParamLabel(14)
                                                        >liquidLifParamGuiRange(14)
                                                        >liquidLifParamDescription(14)
                                                        >liquidLifState(14)
                                                        >liquidLifParamIsOutput(14)
                                                            >liquidSlNumParams()
                                                            >liquidSlParamIsOutput(8)
                                                    >[liquidSlBuildLifCmdList] for param: shadownamenz, type: string (shadow), UI label: shadownamenz:
liquidAE_LifParameter( "shadownamenz", "-1", "string", "shadow", "shadownamenz", {""}, "", 14 );
                                                        >liquidLifSetParamAccept(14, )
                                                            >liquidSlNumParams()
                                                            >liquidSlSetParamAccept(8, )
                                                        >liquidLifParamName(15)
                                                            >liquidSlNumParams()
                                                        >liquidLifParamType(15)
                                                            >liquidSlNumParams()
                                                        >liquidLifParamArraySize(15)
                                                            >liquidSlNumParams()
                                                        >liquidLifParamAccept(15)
                                                            >liquidSlNumParams()
                                                        >liquidLifParamGuiType(15)
                                                        >liquidLifParamLabel(15)
                                                        >liquidLifParamGuiRange(15)
                                                        >liquidLifParamDescription(15)
                                                        >liquidLifState(15)
                                                        >liquidLifParamIsOutput(15)
                                                            >liquidSlNumParams()
                                                    >	[liquidSlBuildLifCmdList] group: liquidAE_LifGrp( "end", 14 );
                                                        >liquidLifParamName(16)
                                                            >liquidSlNumParams()
                                                            >liquidSlNumParams(9)
                                                        >liquidLifParamType(16)
                                                            >liquidSlNumParams()
                                                            >liquidSlParamType(9)
                                                        >liquidLifParamArraySize(16)
                                                            >liquidSlNumParams()
                                                            >liquidSlParamArraySize(9)
                                                        >liquidLifParamAccept(16)
                                                            >liquidSlNumParams()
                                                        >liquidLifParamGuiType(16)
                                                        >liquidLifParamLabel(16)
                                                        >liquidLifParamGuiRange(16)
                                                        >liquidLifParamDescription(16)
                                                        >liquidLifState(16)
                                                        >liquidLifParamIsOutput(16)
                                                            >liquidSlNumParams()
                                                            >liquidSlParamIsOutput(9)
                                                    >[liquidSlBuildLifCmdList] for param: shadowbias, type: float (slider), UI label: Bias:
liquidAE_LifParameter( "shadowbias", "-1", "float", "slider", "Bias", {"0", "1"}, "", 14 );
                                                        >liquidLifSetParamAccept(16, )
                                                            >liquidSlNumParams()
                                                            >liquidSlSetParamAccept(9, )
                                                        >liquidLifParamName(17)
                                                            >liquidSlNumParams()
                                                            >liquidSlNumParams(10)
                                                        >liquidLifParamType(17)
                                                            >liquidSlNumParams()
                                                            >liquidSlParamType(10)
                                                        >liquidLifParamArraySize(17)
                                                            >liquidSlNumParams()
                                                            >liquidSlParamArraySize(10)
                                                        >liquidLifParamAccept(17)
                                                            >liquidSlNumParams()
                                                        >liquidLifParamGuiType(17)
                                                        >liquidLifParamLabel(17)
                                                        >liquidLifParamGuiRange(17)
                                                        >liquidLifParamDescription(17)
                                                        >liquidLifState(17)
                                                        >liquidLifParamIsOutput(17)
                                                            >liquidSlNumParams()
                                                            >liquidSlParamIsOutput(10)
                                                    >[liquidSlBuildLifCmdList] for param: shadowblur, type: float (slider), UI label: Blur:
liquidAE_LifParameter( "shadowblur", "-1", "float", "slider", "Blur", {"0", "1"}, "", 14 );
                                                        >liquidLifSetParamAccept(17, )
                                                            >liquidSlNumParams()
                                                            >liquidSlSetParamAccept(10, )
                                                        >liquidLifParamName(18)
                                                            >liquidSlNumParams()
                                                            >liquidSlNumParams(11)
                                                        >liquidLifParamType(18)
                                                            >liquidSlNumParams()
                                                            >liquidSlParamType(11)
                                                        >liquidLifParamArraySize(18)
                                                            >liquidSlNumParams()
                                                            >liquidSlParamArraySize(11)
                                                        >liquidLifParamAccept(18)
                                                            >liquidSlNumParams()
                                                        >liquidLifParamGuiType(18)
                                                        >liquidLifParamLabel(18)
                                                        >liquidLifParamGuiRange(18)
                                                        >liquidLifParamDescription(18)
                                                        >liquidLifState(18)
                                                        >liquidLifParamIsOutput(18)
                                                            >liquidSlNumParams()
                                                            >liquidSlParamIsOutput(11)
                                                    >[liquidSlBuildLifCmdList] for param: shadowsamples, type: float (slider), UI label: Samples:
liquidAE_LifParameter( "shadowsamples", "-1", "float", "slider", "Samples", {"0", "1"}, "", 14 );
                                                        >liquidLifSetParamAccept(18, )
                                                            >liquidSlNumParams()
                                                            >liquidSlSetParamAccept(11, )
                                                        >liquidLifParamName(19)
                                                            >liquidSlNumParams()
                                                            >liquidSlNumParams(12)
                                                        >liquidLifParamType(19)
                                                            >liquidSlNumParams()
                                                            >liquidSlParamType(12)
                                                        >liquidLifParamArraySize(19)
                                                            >liquidSlNumParams()
                                                            >liquidSlParamArraySize(12)
                                                        >liquidLifParamAccept(19)
                                                            >liquidSlNumParams()
                                                        >liquidLifParamGuiType(19)
                                                        >liquidLifParamLabel(19)
                                                        >liquidLifParamGuiRange(19)
                                                        >liquidLifParamDescription(19)
                                                        >liquidLifState(19)
                                                        >liquidLifParamIsOutput(19)
                                                            >liquidSlNumParams()
                                                            >liquidSlParamIsOutput(12)
                                                    >[liquidSlBuildLifCmdList] for param: shadowfiltersize, type: float (slider), UI label: Filter Size:
liquidAE_LifParameter( "shadowfiltersize", "-1", "float", "slider", "Filter Size", {"0", "1"}, "", 14 );
                                                        >liquidLifSetParamAccept(19, )
                                                            >liquidSlNumParams()
                                                            >liquidSlSetParamAccept(12, )
                                                        >liquidLifParamName(20)
                                                            >liquidSlNumParams()
                                                            >liquidSlNumParams(13)
                                                        >liquidLifParamType(20)
                                                            >liquidSlNumParams()
                                                            >liquidSlParamType(13)
                                                        >liquidLifParamArraySize(20)
                                                            >liquidSlNumParams()
                                                            >liquidSlParamArraySize(13)
                                                        >liquidLifParamAccept(20)
                                                            >liquidSlNumParams()
                                                        >liquidLifParamGuiType(20)
                                                        >liquidLifParamLabel(20)
                                                        >liquidLifParamGuiRange(20)
                                                        >liquidLifParamDescription(20)
                                                        >liquidLifState(20)
                                                        >liquidLifParamIsOutput(20)
                                                            >liquidSlNumParams()
                                                            >liquidSlParamIsOutput(13)
                                                    >[liquidSlBuildLifCmdList] for param: shadowcolor, type: color (color), UI label: Color:
liquidAE_LifParameter( "shadowcolor", "-1", "color", "color", "Color", {""}, "", 14 );
                                                        >liquidLifSetParamAccept(20, )
                                                            >liquidSlNumParams()
                                                            >liquidSlSetParamAccept(13, )
                                                        >liquidLifParamName(21)
                                                            >liquidSlNumParams()
                                                        >liquidLifParamType(21)
                                                            >liquidSlNumParams()
                                                        >liquidLifParamArraySize(21)
                                                            >liquidSlNumParams()
                                                        >liquidLifParamAccept(21)
                                                            >liquidSlNumParams()
                                                        >liquidLifParamGuiType(21)
                                                        >liquidLifParamLabel(21)
                                                        >liquidLifParamGuiRange(21)
                                                        >liquidLifParamDescription(21)
                                                        >liquidLifState(21)
                                                        >liquidLifParamIsOutput(21)
                                                            >liquidSlNumParams()
                                                    >	[liquidSlBuildLifCmdList] group: liquidAE_LifGrp( "AOVs", 14 );
                                                        >liquidLifParamName(22)
                                                            >liquidSlNumParams()
                                                            >liquidSlNumParams(16)
                                                        >liquidLifParamType(22)
                                                            >liquidSlNumParams()
                                                            >liquidSlParamType(16)
                                                        >liquidLifParamArraySize(22)
                                                            >liquidSlNumParams()
                                                            >liquidSlParamArraySize(16)
                                                        >liquidLifParamAccept(22)
                                                            >liquidSlNumParams()
                                                        >liquidLifParamGuiType(22)
                                                        >liquidLifParamLabel(22)
                                                        >liquidLifParamGuiRange(22)
                                                        >liquidLifParamDescription(22)
                                                        >liquidLifState(22)
                                                        >liquidLifParamIsOutput(22)
                                                            >liquidSlNumParams()
                                                            >liquidSlParamIsOutput(16)
                                                    >[liquidSlBuildLifCmdList] for param: __shadowF, type: float (float), UI label: __shadowF:
liquidAE_LifParameter( "__shadowF", "-1", "float", "float", "__shadowF", {""}, "shadow fraction", 14 );
                                                        >liquidLifSetParamAccept(22, )
                                                            >liquidSlNumParams()
                                                            >liquidSlSetParamAccept(16, )
                                                        >liquidLifParamName(23)
                                                            >liquidSlNumParams()
                                                            >liquidSlNumParams(17)
                                                        >liquidLifParamType(23)
                                                            >liquidSlNumParams()
                                                            >liquidSlParamType(17)
                                                        >liquidLifParamArraySize(23)
                                                            >liquidSlNumParams()
                                                            >liquidSlParamArraySize(17)
                                                        >liquidLifParamAccept(23)
                                                            >liquidSlNumParams()
                                                        >liquidLifParamGuiType(23)
                                                        >liquidLifParamLabel(23)
                                                        >liquidLifParamGuiRange(23)
                                                        >liquidLifParamDescription(23)
                                                        >liquidLifState(23)
                                                        >liquidLifParamIsOutput(23)
                                                            >liquidSlNumParams()
                                                            >liquidSlParamIsOutput(17)
                                                    >[liquidSlBuildLifCmdList] for param: __shadowC, type: color (color), UI label: __shadowC:
liquidAE_LifParameter( "__shadowC", "-1", "color", "color", "__shadowC", {""}, "", 14 );
                                                        >liquidLifSetParamAccept(23, )
                                                            >liquidSlNumParams()
                                                            >liquidSlSetParamAccept(17, )
                                                        >liquidLifParamName(24)
                                                            >liquidSlNumParams()
                                                            >liquidSlNumParams(18)
                                                        >liquidLifParamType(24)
                                                            >liquidSlNumParams()
                                                            >liquidSlParamType(18)
                                                        >liquidLifParamArraySize(24)
                                                            >liquidSlNumParams()
                                                            >liquidSlParamArraySize(18)
                                                        >liquidLifParamAccept(24)
                                                            >liquidSlNumParams()
                                                        >liquidLifParamGuiType(24)
                                                        >liquidLifParamLabel(24)
                                                        >liquidLifParamGuiRange(24)
                                                        >liquidLifParamDescription(24)
                                                        >liquidLifState(24)
                                                        >liquidLifParamIsOutput(24)
                                                            >liquidSlNumParams()
                                                            >liquidSlParamIsOutput(18)
                                                    >[liquidSlBuildLifCmdList] for param: __unshadowed_Cl, type: color (color), UI label: __unshadowed_Cl:
liquidAE_LifParameter( "__unshadowed_Cl", "-1", "color", "color", "__unshadowed_Cl", {""}, "", 14 );
                                                        >liquidLifSetParamAccept(24, )
                                                            >liquidSlNumParams()
                                                            >liquidSlSetParamAccept(18, )
                                                        >liquidLifParamName(25)
                                                            >liquidSlNumParams()
                                                        >liquidLifParamType(25)
                                                            >liquidSlNumParams()
                                                        >liquidLifParamArraySize(25)
                                                            >liquidSlNumParams()
                                                        >liquidLifParamAccept(25)
                                                            >liquidSlNumParams()
                                                        >liquidLifParamGuiType(25)
                                                        >liquidLifParamLabel(25)
                                                        >liquidLifParamGuiRange(25)
                                                        >liquidLifParamDescription(25)
                                                        >liquidLifState(25)
                                                        >liquidLifParamIsOutput(25)
                                                            >liquidSlNumParams()
                                                    >	[liquidSlBuildLifCmdList] group: liquidAE_LifGrp( "end", 14 );
                                                        >liquidLifParamName(26)
                                                            >liquidSlNumParams()
                                                        >liquidLifParamType(26)
                                                            >liquidSlNumParams()
                                                        >liquidLifParamArraySize(26)
                                                            >liquidSlNumParams()
                                                        >liquidLifParamAccept(26)
                                                            >liquidSlNumParams()
                                                        >liquidLifParamGuiType(26)
                                                        >liquidLifParamLabel(26)
                                                        >liquidLifParamGuiRange(26)
                                                        >liquidLifParamDescription(26)
                                                        >liquidLifState(26)
                                                        >liquidLifParamIsOutput(26)
                                                            >liquidSlNumParams()
                                                    >	[liquidSlBuildLifCmdList] group: liquidAE_LifGrp( "end", 14 );
                                                    >[liquidSlBuildLifCmdList] generated 27 commands in 0.93 sec.
                                                >[liquidSlParseLif] 4.27 sec.
                                        >liquidSlShaderType()
nodeType = liquidlight
shadertype = light
                                        >checkParamsDefinition(liquidLight3)
                                            >liquidSlNumParams()
                                            >liquidSlNumParams(0)
                                            >liquidSlParamType(0)
                                            >liquidSlParamArraySize(0)
                                            >liquidSlNumParams(1)
                                            >liquidSlParamType(1)
                                            >liquidSlParamArraySize(1)
                                            >liquidSlNumParams(2)
                                            >liquidSlParamType(2)
                                            >liquidSlParamArraySize(2)
                                            >liquidSlNumParams(3)
                                            >liquidSlParamType(3)
                                            >liquidSlParamArraySize(3)
                                            >liquidSlNumParams(4)
                                            >liquidSlParamType(4)
                                            >liquidSlParamArraySize(4)
                                            >liquidSlNumParams(5)
                                            >liquidSlParamType(5)
                                            >liquidSlParamArraySize(5)
                                            >liquidSlNumParams(6)
                                            >liquidSlParamType(6)
                                            >liquidSlParamArraySize(6)
                                            >liquidSlNumParams(7)
                                            >liquidSlParamType(7)
                                            >liquidSlParamArraySize(7)
                                            >liquidSlNumParams(8)
                                            >liquidSlParamType(8)
                                            >liquidSlParamArraySize(8)
                                            >liquidSlNumParams(9)
                                            >liquidSlParamType(9)
                                            >liquidSlParamArraySize(9)
                                            >liquidSlNumParams(10)
                                            >liquidSlParamType(10)
                                            >liquidSlParamArraySize(10)
                                            >liquidSlNumParams(11)
                                            >liquidSlParamType(11)
                                            >liquidSlParamArraySize(11)
                                            >liquidSlNumParams(12)
                                            >liquidSlParamType(12)
                                            >liquidSlParamArraySize(12)
                                            >liquidSlNumParams(13)
                                            >liquidSlParamType(13)
                                            >liquidSlParamArraySize(13)
                                            >liquidSlNumParams(14)
                                            >liquidSlParamType(14)
                                            >liquidSlParamArraySize(14)
                                            >liquidSlNumParams(15)
                                            >liquidSlParamType(15)
                                            >liquidSlParamArraySize(15)
                                            >liquidSlNumParams(16)
                                            >liquidSlParamType(16)
                                            >liquidSlParamArraySize(16)
                                            >liquidSlNumParams(17)
                                            >liquidSlParamType(17)
                                            >liquidSlParamArraySize(17)
                                            >liquidSlNumParams(18)
                                            >liquidSlParamType(18)
                                            >liquidSlParamArraySize(18)
                                            >liquidSlNumParams(19)
                                            >liquidSlParamType(19)
                                            >liquidSlParamArraySize(19)
                                            >liquidSlNumParams(20)
                                            >liquidSlParamType(20)
                                            >liquidSlParamArraySize(20)
                                        >liquidAttachShaderParams( liquidLight3, E:/dev/Autodesk/maya/myplugin/project/liquid_/2.3.3/lib/shaders/liquidpoint.sdl )
                                            >liquidSlSetShader(E:/dev/Autodesk/maya/myplugin/project/liquid_/2.3.3/lib/shaders/liquidpoint.sdl)
                                            >liquidSlNumParams()
                                        >0/21-----------------
                                            >liquidSlNumParams(0)
                                            >liquidSlParamIsOutput(0)
                                        >attach : intensity ( "^_*" )
                                            >liquidSlParamType(0)
                                            >liquidSlParamArraySize(0)
                                            >liquidSlParamDefault(0)
                                        >for param: float intensity = 1.0
                                        >objExists(liquidLight3.intensity)=1
                                        >1/21-----------------
                                            >liquidSlNumParams(1)
                                            >liquidSlParamIsOutput(1)
                                        >attach : lightcolor ( "^_*" )
                                            >liquidSlParamType(1)
                                            >liquidSlParamArraySize(1)
                                            >liquidSlParamDefault(1)
                                        >for param: color lightcolor = <<1, 1, 1>>
                                        >objExists(liquidLight3.lightcolor)=1
                                        >2/21-----------------
                                            >liquidSlNumParams(2)
                                            >liquidSlParamIsOutput(2)
                                        >attach : decay ( "^_*" )
                                            >liquidSlParamType(2)
                                            >liquidSlParamArraySize(2)
                                            >liquidSlParamDefault(2)
                                        >for param: float decay = 0.0
                                        >objExists(liquidLight3.decay)=1
                                        >3/21-----------------
                                            >liquidSlNumParams(3)
                                            >liquidSlParamIsOutput(3)
                                        >attach : shadownamepx ( "^_*" )
                                            >liquidSlParamType(3)
                                            >liquidSlParamArraySize(3)
                                            >liquidSlParamDefault(3)
                                        >for param: string shadownamepx = ""
                                        >objExists(liquidLight3.shadownamepx)=1
                                        >4/21-----------------
                                            >liquidSlNumParams(4)
                                            >liquidSlParamIsOutput(4)
                                        >attach : shadownamenx ( "^_*" )
                                            >liquidSlParamType(4)
                                            >liquidSlParamArraySize(4)
                                            >liquidSlParamDefault(4)
                                        >for param: string shadownamenx = ""
                                        >objExists(liquidLight3.shadownamenx)=1
                                        >5/21-----------------
                                            >liquidSlNumParams(5)
                                            >liquidSlParamIsOutput(5)
                                        >attach : shadownamepy ( "^_*" )
                                            >liquidSlParamType(5)
                                            >liquidSlParamArraySize(5)
                                            >liquidSlParamDefault(5)
                                        >for param: string shadownamepy = ""
                                        >objExists(liquidLight3.shadownamepy)=1
                                        >6/21-----------------
                                            >liquidSlNumParams(6)
                                            >liquidSlParamIsOutput(6)
                                        >attach : shadownameny ( "^_*" )
                                            >liquidSlParamType(6)
                                            >liquidSlParamArraySize(6)
                                            >liquidSlParamDefault(6)
                                        >for param: string shadownameny = ""
                                        >objExists(liquidLight3.shadownameny)=1
                                        >7/21-----------------
                                            >liquidSlNumParams(7)
                                            >liquidSlParamIsOutput(7)
                                        >attach : shadownamepz ( "^_*" )
                                            >liquidSlParamType(7)
                                            >liquidSlParamArraySize(7)
                                            >liquidSlParamDefault(7)
                                        >for param: string shadownamepz = ""
                                        >objExists(liquidLight3.shadownamepz)=1
                                        >8/21-----------------
                                            >liquidSlNumParams(8)
                                            >liquidSlParamIsOutput(8)
                                        >attach : shadownamenz ( "^_*" )
                                            >liquidSlParamType(8)
                                            >liquidSlParamArraySize(8)
                                            >liquidSlParamDefault(8)
                                        >for param: string shadownamenz = ""
                                        >objExists(liquidLight3.shadownamenz)=1
                                        >9/21-----------------
                                            >liquidSlNumParams(9)
                                            >liquidSlParamIsOutput(9)
                                        >attach : shadowbias ( "^_*" )
                                            >liquidSlParamType(9)
                                            >liquidSlParamArraySize(9)
                                            >liquidSlParamDefault(9)
                                        >for param: float shadowbias = 0.01
                                        >objExists(liquidLight3.shadowbias)=1
                                        >10/21-----------------
                                            >liquidSlNumParams(10)
                                            >liquidSlParamIsOutput(10)
                                        >attach : shadowblur ( "^_*" )
                                            >liquidSlParamType(10)
                                            >liquidSlParamArraySize(10)
                                            >liquidSlParamDefault(10)
                                        >for param: float shadowblur = 0.0
                                        >objExists(liquidLight3.shadowblur)=1
                                        >11/21-----------------
                                            >liquidSlNumParams(11)
                                            >liquidSlParamIsOutput(11)
                                        >attach : shadowsamples ( "^_*" )
                                            >liquidSlParamType(11)
                                            >liquidSlParamArraySize(11)
                                            >liquidSlParamDefault(11)
                                        >for param: float shadowsamples = 16.0
                                        >objExists(liquidLight3.shadowsamples)=1
                                        >12/21-----------------
                                            >liquidSlNumParams(12)
                                            >liquidSlParamIsOutput(12)
                                        >attach : shadowfiltersize ( "^_*" )
                                            >liquidSlParamType(12)
                                            >liquidSlParamArraySize(12)
                                            >liquidSlParamDefault(12)
                                        >for param: float shadowfiltersize = 1.0
                                        >objExists(liquidLight3.shadowfiltersize)=1
                                        >13/21-----------------
                                            >liquidSlNumParams(13)
                                            >liquidSlParamIsOutput(13)
                                        >attach : shadowcolor ( "^_*" )
                                            >liquidSlParamType(13)
                                            >liquidSlParamArraySize(13)
                                            >liquidSlParamDefault(13)
                                        >for param: color shadowcolor = <<0, 0, 0>>
                                        >objExists(liquidLight3.shadowcolor)=1
                                        >14/21-----------------
                                            >liquidSlNumParams(14)
                                            >liquidSlParamIsOutput(14)
                                        >attach : lightID ( "^_*" )
                                            >liquidSlParamType(14)
                                            >liquidSlParamArraySize(14)
                                            >liquidSlParamDefault(14)
                                        >for param: float lightID = 0.0
                                        >objExists(liquidLight3.lightID)=1
                                        >15/21-----------------
                                            >liquidSlNumParams(15)
                                            >liquidSlParamIsOutput(15)
                                        >attach : __category ( "^_*" )
                                            >liquidSlParamType(15)
                                            >liquidSlParamArraySize(15)
                                            >liquidSlParamDefault(15)
                                        >for param: string __category = ""
                                        >objExists(liquidLight3.__category)=1
                                        >16/21-----------------
                                            >liquidSlNumParams(16)
                                            >liquidSlParamIsOutput(16)
                                        >attach : __shadowF ( "^_*" )
                                            >liquidSlParamType(16)
                                            >liquidSlParamArraySize(16)
                                            >liquidSlParamDefault(16)
                                        >for param: float __shadowF = 0.0
                                        >objExists(liquidLight3.__shadowF)=1
                                        >17/21-----------------
                                            >liquidSlNumParams(17)
                                            >liquidSlParamIsOutput(17)
                                        >attach : __shadowC ( "^_*" )
                                            >liquidSlParamType(17)
                                            >liquidSlParamArraySize(17)
                                            >liquidSlParamDefault(17)
                                        >for param: color __shadowC = <<1, 1, 1>>
                                        >objExists(liquidLight3.__shadowC)=1
                                        >18/21-----------------
                                            >liquidSlNumParams(18)
                                            >liquidSlParamIsOutput(18)
                                        >attach : __unshadowed_Cl ( "^_*" )
                                            >liquidSlParamType(18)
                                            >liquidSlParamArraySize(18)
                                            >liquidSlParamDefault(18)
                                        >for param: color __unshadowed_Cl = <<0, 0, 0>>
                                        >objExists(liquidLight3.__unshadowed_Cl)=1
                                        >19/21-----------------
                                            >liquidSlNumParams(19)
                                            >liquidSlParamIsOutput(19)
                                        >attach : __nondiffuse ( "^_*" )
                                            >liquidSlParamType(19)
                                            >liquidSlParamArraySize(19)
                                            >liquidSlParamDefault(19)
                                        >for param: float __nondiffuse = 0.0
                                        >objExists(liquidLight3.__nondiffuse)=1
                                        >20/21-----------------
                                            >liquidSlNumParams(20)
                                            >liquidSlParamIsOutput(20)
                                        >attach : __nonspecular ( "^_*" )
                                            >liquidSlParamType(20)
                                            >liquidSlParamArraySize(20)
                                            >liquidSlParamDefault(20)
                                        >for param: float __nonspecular = 0.0
                                        >objExists(liquidLight3.__nonspecular)=1
                                        >rmanParams_create(liquidLight3,0)
                                            >liquidSlShaderName()
                                            >liquidSlShaderType()
                                            >liquidSlNumParams()
                                            >liquidSlNumParams()
                                            >liquidSlParamIsOutput(0)
                                            >liquidSlNumParams()
                                            >liquidSlParamIsOutput(1)
                                            >liquidSlNumParams()
                                            >liquidSlParamIsOutput(2)
                                            >liquidSlNumParams()
                                            >liquidSlParamIsOutput(3)
                                            >liquidSlNumParams()
                                            >liquidSlParamIsOutput(4)
                                            >liquidSlNumParams()
                                            >liquidSlParamIsOutput(5)
                                            >liquidSlNumParams()
                                            >liquidSlParamIsOutput(6)
                                            >liquidSlNumParams()
                                            >liquidSlParamIsOutput(7)
                                            >liquidSlNumParams()
                                            >liquidSlParamIsOutput(8)
                                            >liquidSlNumParams()
                                            >liquidSlParamIsOutput(9)
                                            >liquidSlNumParams()
                                            >liquidSlParamIsOutput(10)
                                            >liquidSlNumParams()
                                            >liquidSlParamIsOutput(11)
                                            >liquidSlNumParams()
                                            >liquidSlParamIsOutput(12)
                                            >liquidSlNumParams()
                                            >liquidSlParamIsOutput(13)
                                            >liquidSlNumParams()
                                            >liquidSlParamIsOutput(14)
                                            >liquidSlNumParams()
                                            >liquidSlParamIsOutput(15)
                                            >liquidSlNumParams()
                                            >liquidSlParamIsOutput(16)
                                            >liquidSlNumParams()
                                            >liquidSlParamIsOutput(17)
                                            >liquidSlNumParams()
                                            >liquidSlParamIsOutput(18)
                                            >liquidSlNumParams()
                                            >liquidSlParamIsOutput(19)
                                            >liquidSlNumParams()
                                            >liquidSlParamIsOutput(20)
                                            >liquidSlNumParams()
                                        >setAttr -type Int32Array liquidLight3.rmanIsOutput 21 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
                                            >liquidSlNumMethods()
                                            >liquidSlNumMethods()
                                        >setAttr -type stringArray liquidLight3.rmanMethods 0 
                                            >liquidSlNumParams()
                                            >liquidSlNumParams()
                                            >liquidSlNumParams(0)
                                            >liquidSlNumParams()
                                            >liquidSlNumParams(1)
                                            >liquidSlNumParams()
                                            >liquidSlNumParams(2)
                                            >liquidSlNumParams()
                                            >liquidSlNumParams(3)
                                            >liquidSlNumParams()
                                            >liquidSlNumParams(4)
                                            >liquidSlNumParams()
                                            >liquidSlNumParams(5)
                                            >liquidSlNumParams()
                                            >liquidSlNumParams(6)
                                            >liquidSlNumParams()
                                            >liquidSlNumParams(7)
                                            >liquidSlNumParams()
                                            >liquidSlNumParams(8)
                                            >liquidSlNumParams()
                                            >liquidSlNumParams(9)
                                            >liquidSlNumParams()
                                            >liquidSlNumParams(10)
                                            >liquidSlNumParams()
                                            >liquidSlNumParams(11)
                                            >liquidSlNumParams()
                                            >liquidSlNumParams(12)
                                            >liquidSlNumParams()
                                            >liquidSlNumParams(13)
                                            >liquidSlNumParams()
                                            >liquidSlNumParams(14)
                                            >liquidSlNumParams()
                                            >liquidSlNumParams(15)
                                            >liquidSlNumParams()
                                            >liquidSlNumParams(16)
                                            >liquidSlNumParams()
                                            >liquidSlNumParams(17)
                                            >liquidSlNumParams()
                                            >liquidSlNumParams(18)
                                            >liquidSlNumParams()
                                            >liquidSlNumParams(19)
                                            >liquidSlNumParams()
                                            >liquidSlNumParams(20)
                                            >liquidSlNumParams()
                                        >setAttr -type stringArray liquidLight3.rmanParams 21 "intensity" "lightcolor" "decay" "shadownamepx" "shadownamenx" "shadownamepy" "shadownameny" "shadownamepz" "shadownamenz" "shadowbias" "shadowblur" "shadowsamples" "shadowfiltersize" "shadowcolor" "lightID" "__category" "__shadowF" "__shadowC" "__unshadowed_Cl" "__nondiffuse" "__nonspecular" 
                                            >liquidSlNumParams()
                                            >liquidSlNumParams()
                                            >liquidSlParamDetail(0)
                                            >liquidSlNumParams()
                                            >liquidSlParamDetail(1)
                                            >liquidSlNumParams()
                                            >liquidSlParamDetail(2)
                                            >liquidSlNumParams()
                                            >liquidSlParamDetail(3)
                                            >liquidSlNumParams()
                                            >liquidSlParamDetail(4)
                                            >liquidSlNumParams()
                                            >liquidSlParamDetail(5)
                                            >liquidSlNumParams()
                                            >liquidSlParamDetail(6)
                                            >liquidSlNumParams()
                                            >liquidSlParamDetail(7)
                                            >liquidSlNumParams()
                                            >liquidSlParamDetail(8)
                                            >liquidSlNumParams()
                                            >liquidSlParamDetail(9)
                                            >liquidSlNumParams()
                                            >liquidSlParamDetail(10)
                                            >liquidSlNumParams()
                                            >liquidSlParamDetail(11)
                                            >liquidSlNumParams()
                                            >liquidSlParamDetail(12)
                                            >liquidSlNumParams()
                                            >liquidSlParamDetail(13)
                                            >liquidSlNumParams()
                                            >liquidSlParamDetail(14)
                                            >liquidSlNumParams()
                                            >liquidSlParamDetail(15)
                                            >liquidSlNumParams()
                                            >liquidSlParamDetail(16)
                                            >liquidSlNumParams()
                                            >liquidSlParamDetail(17)
                                            >liquidSlNumParams()
                                            >liquidSlParamDetail(18)
                                            >liquidSlNumParams()
                                            >liquidSlParamDetail(19)
                                            >liquidSlNumParams()
                                            >liquidSlParamDetail(20)
                                            >liquidSlNumParams()
                                        >setAttr -type stringArray liquidLight3.rmanDetails 21 uniform uniform uniform uniform uniform uniform uniform uniform uniform uniform uniform uniform uniform uniform uniform uniform varying varying varying varying varying 
                                            >liquidSlNumParams()
                                            >liquidSlNumParams()
                                            >liquidSlParamType(0)
                                            >liquidSlNumParams()
                                            >liquidSlParamType(1)
                                            >liquidSlNumParams()
                                            >liquidSlParamType(2)
                                            >liquidSlNumParams()
                                            >liquidSlParamType(3)
                                            >liquidSlNumParams()
                                            >liquidSlParamType(4)
                                            >liquidSlNumParams()
                                            >liquidSlParamType(5)
                                            >liquidSlNumParams()
                                            >liquidSlParamType(6)
                                            >liquidSlNumParams()
                                            >liquidSlParamType(7)
                                            >liquidSlNumParams()
                                            >liquidSlParamType(8)
                                            >liquidSlNumParams()
                                            >liquidSlParamType(9)
                                            >liquidSlNumParams()
                                            >liquidSlParamType(10)
                                            >liquidSlNumParams()
                                            >liquidSlParamType(11)
                                            >liquidSlNumParams()
                                            >liquidSlParamType(12)
                                            >liquidSlNumParams()
                                            >liquidSlParamType(13)
                                            >liquidSlNumParams()
                                            >liquidSlParamType(14)
                                            >liquidSlNumParams()
                                            >liquidSlParamType(15)
                                            >liquidSlNumParams()
                                            >liquidSlParamType(16)
                                            >liquidSlNumParams()
                                            >liquidSlParamType(17)
                                            >liquidSlNumParams()
                                            >liquidSlParamType(18)
                                            >liquidSlNumParams()
                                            >liquidSlParamType(19)
                                            >liquidSlNumParams()
                                            >liquidSlParamType(20)
                                            >liquidSlNumParams()
                                        >setAttr -type stringArray liquidLight3.rmanTypes 21 "float" "color" "float" "string" "string" "string" "string" "string" "string" "float" "float" "float" "float" "color" "float" "string" "float" "color" "color" "float" "float" 
                                            >liquidSlNumParams()
                                            >liquidSlNumParams()
                                            >liquidSlParamType(0)
                                            >liquidSlParamDefaultRaw(0)
                                            >liquidSlNumParams()
                                            >liquidSlParamType(1)
                                            >liquidSlParamDefaultRaw(1)
                                            >liquidSlNumParams()
                                            >liquidSlParamType(2)
                                            >liquidSlParamDefaultRaw(2)
                                            >liquidSlNumParams()
                                            >liquidSlParamType(3)
                                            >liquidSlParamDefaultRaw(3)
                                            >liquidSlNumParams()
                                            >liquidSlParamType(4)
                                            >liquidSlParamDefaultRaw(4)
                                            >liquidSlNumParams()
                                            >liquidSlParamType(5)
                                            >liquidSlParamDefaultRaw(5)
                                            >liquidSlNumParams()
                                            >liquidSlParamType(6)
                                            >liquidSlParamDefaultRaw(6)
                                            >liquidSlNumParams()
                                            >liquidSlParamType(7)
                                            >liquidSlParamDefaultRaw(7)
                                            >liquidSlNumParams()
                                            >liquidSlParamType(8)
                                            >liquidSlParamDefaultRaw(8)
                                            >liquidSlNumParams()
                                            >liquidSlParamType(9)
                                            >liquidSlParamDefaultRaw(9)
                                            >liquidSlNumParams()
                                            >liquidSlParamType(10)
                                            >liquidSlParamDefaultRaw(10)
                                            >liquidSlNumParams()
                                            >liquidSlParamType(11)
                                            >liquidSlParamDefaultRaw(11)
                                            >liquidSlNumParams()
                                            >liquidSlParamType(12)
                                            >liquidSlParamDefaultRaw(12)
                                            >liquidSlNumParams()
                                            >liquidSlParamType(13)
                                            >liquidSlParamDefaultRaw(13)
                                            >liquidSlNumParams()
                                            >liquidSlParamType(14)
                                            >liquidSlParamDefaultRaw(14)
                                            >liquidSlNumParams()
                                            >liquidSlParamType(15)
                                            >liquidSlParamDefaultRaw(15)
                                            >liquidSlNumParams()
                                            >liquidSlParamType(16)
                                            >liquidSlParamDefaultRaw(16)
                                            >liquidSlNumParams()
                                            >liquidSlParamType(17)
                                            >liquidSlParamDefaultRaw(17)
                                            >liquidSlNumParams()
                                            >liquidSlParamType(18)
                                            >liquidSlParamDefaultRaw(18)
                                            >liquidSlNumParams()
                                            >liquidSlParamType(19)
                                            >liquidSlParamDefaultRaw(19)
                                            >liquidSlNumParams()
                                            >liquidSlParamType(20)
                                            >liquidSlParamDefaultRaw(20)
                                            >liquidSlNumParams()
                                        >setAttr -type stringArray liquidLight3.rmanDefaults 21 "1.0" "1:1:1" "0.0" "" "" "" "" "" "" "0.01" "0.0" "16.0" "1.0" "0:0:0" "0.0" "" "0.0" "1:1:1" "0:0:0" "0.0" "0.0" 
                                            >liquidSlNumParams()
                                            >liquidSlNumParams()
                                            >liquidSlParamArraySize(0)
                                            >liquidSlNumParams()
                                            >liquidSlParamArraySize(1)
                                            >liquidSlNumParams()
                                            >liquidSlParamArraySize(2)
                                            >liquidSlNumParams()
                                            >liquidSlParamArraySize(3)
                                            >liquidSlNumParams()
                                            >liquidSlParamArraySize(4)
                                            >liquidSlNumParams()
                                            >liquidSlParamArraySize(5)
                                            >liquidSlNumParams()
                                            >liquidSlParamArraySize(6)
                                            >liquidSlNumParams()
                                            >liquidSlParamArraySize(7)
                                            >liquidSlNumParams()
                                            >liquidSlParamArraySize(8)
                                            >liquidSlNumParams()
                                            >liquidSlParamArraySize(9)
                                            >liquidSlNumParams()
                                            >liquidSlParamArraySize(10)
                                            >liquidSlNumParams()
                                            >liquidSlParamArraySize(11)
                                            >liquidSlNumParams()
                                            >liquidSlParamArraySize(12)
                                            >liquidSlNumParams()
                                            >liquidSlParamArraySize(13)
                                            >liquidSlNumParams()
                                            >liquidSlParamArraySize(14)
                                            >liquidSlNumParams()
                                            >liquidSlParamArraySize(15)
                                            >liquidSlNumParams()
                                            >liquidSlParamArraySize(16)
                                            >liquidSlNumParams()
                                            >liquidSlParamArraySize(17)
                                            >liquidSlNumParams()
                                            >liquidSlParamArraySize(18)
                                            >liquidSlNumParams()
                                            >liquidSlParamArraySize(19)
                                            >liquidSlNumParams()
                                            >liquidSlParamArraySize(20)
                                            >liquidSlNumParams()
                                        >setAttr -type Int32Array liquidLight3.rmanArraySizes 21 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 
                                            >liquidSlNumParams()
                                            >liquidSlNumParams()
                                            >liquidSlParamAccept(0)
                                            >liquidSlNumParams()
                                            >liquidSlParamAccept(1)
                                            >liquidSlNumParams()
                                            >liquidSlParamAccept(2)
                                            >liquidSlNumParams()
                                            >liquidSlParamAccept(3)
                                            >liquidSlNumParams()
                                            >liquidSlParamAccept(4)
                                            >liquidSlNumParams()
                                            >liquidSlParamAccept(5)
                                            >liquidSlNumParams()
                                            >liquidSlParamAccept(6)
                                            >liquidSlNumParams()
                                            >liquidSlParamAccept(7)
                                            >liquidSlNumParams()
                                            >liquidSlParamAccept(8)
                                            >liquidSlNumParams()
                                            >liquidSlParamAccept(9)
                                            >liquidSlNumParams()
                                            >liquidSlParamAccept(10)
                                            >liquidSlNumParams()
                                            >liquidSlParamAccept(11)
                                            >liquidSlNumParams()
                                            >liquidSlParamAccept(12)
                                            >liquidSlNumParams()
                                            >liquidSlParamAccept(13)
                                            >liquidSlNumParams()
                                            >liquidSlParamAccept(14)
                                            >liquidSlNumParams()
                                            >liquidSlParamAccept(15)
                                            >liquidSlNumParams()
                                            >liquidSlParamAccept(16)
                                            >liquidSlNumParams()
                                            >liquidSlParamAccept(17)
                                            >liquidSlNumParams()
                                            >liquidSlParamAccept(18)
                                            >liquidSlNumParams()
                                            >liquidSlParamAccept(19)
                                            >liquidSlNumParams()
                                            >liquidSlParamAccept(20)
                                            >liquidSlNumParams()
                                        >[rmanParams_create] setAttr -type stringArray liquidLight3.rmanAccept 21 "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" 
                                        >setAttr -type stringArray liquidLight3.rmanLifCmds 27 "liquidAE_LifParameter( \"__category\", \"-1\", \"string\", \"string\", \"__category\", {\"\"}, \"\", 14 );" "liquidAE_LifParameter( \"intensity\", \"-1\", \"float\", \"slider\", \"Intensity\", {\"\"}, \"\", 14 );" "liquidAE_LifParameter( \"lightcolor\", \"-1\", \"color\", \"color\", \"Light Color\", {\"\"}, \"\", 14 );" "liquidAE_LifParameter( \"__nondiffuse\", \"-1\", \"float\", \"bool\", \"Non Diffuse\", {\"\"}, \"\", 14 );" "liquidAE_LifParameter( \"__nonspecular\", \"-1\", \"float\", \"bool\", \"Non Specular\", {\"\"}, \"\", 14 );" "liquidAE_LifParameter( \"decay\", \"-1\", \"float\", \"selector\", \"Decay\", {\"None\", \"0\", \"Linear\", \"1\", \"Quadratic\", \"2\", \"Cubic\", \"3\"}, \"\", 14 );" "liquidAE_LifParameter( \"lightID\", \"-1\", \"float\", \"float\", \"lightID\", {\"\"}, \"\", 14 );" "liquidAE_LifGrp( \"Shadows\", 14 );" "liquidAE_LifGrp( \"Maps\", 14 );" "liquidAE_LifParameter( \"shadownamepx\", \"-1\", \"string\", \"shadow\", \"shadownamepx\", {\"\"}, \"\", 14 );" "liquidAE_LifParameter( \"shadownamenx\", \"-1\", \"string\", \"shadow\", \"shadownamenx\", {\"\"}, \"\", 14 );" "liquidAE_LifParameter( \"shadownamepy\", \"-1\", \"string\", \"shadow\", \"shadownamepy\", {\"\"}, \"\", 14 );" "liquidAE_LifParameter( \"shadownameny\", \"-1\", \"string\", \"shadow\", \"shadownameny\", {\"\"}, \"\", 14 );" "liquidAE_LifParameter( \"shadownamepz\", \"-1\", \"string\", \"shadow\", \"shadownamepz\", {\"\"}, \"\", 14 );" "liquidAE_LifParameter( \"shadownamenz\", \"-1\", \"string\", \"shadow\", \"shadownamenz\", {\"\"}, \"\", 14 );" "liquidAE_LifGrp( \"end\", 14 );" "liquidAE_LifParameter( \"shadowbias\", \"-1\", \"float\", \"slider\", \"Bias\", {\"0\", \"1\"}, \"\", 14 );" "liquidAE_LifParameter( \"shadowblur\", \"-1\", \"float\", \"slider\", \"Blur\", {\"0\", \"1\"}, \"\", 14 );" "liquidAE_LifParameter( \"shadowsamples\", \"-1\", \"float\", \"slider\", \"Samples\", {\"0\", \"1\"}, \"\", 14 );" "liquidAE_LifParameter( \"shadowfiltersize\", \"-1\", \"float\", \"slider\", \"Filter Size\", {\"0\", \"1\"}, \"\", 14 );" "liquidAE_LifParameter( \"shadowcolor\", \"-1\", \"color\", \"color\", \"Color\", {\"\"}, \"\", 14 );" "liquidAE_LifGrp( \"AOVs\", 14 );" "liquidAE_LifParameter( \"__shadowF\", \"-1\", \"float\", \"float\", \"__shadowF\", {\"\"}, \"shadow fraction\", 14 );" "liquidAE_LifParameter( \"__shadowC\", \"-1\", \"color\", \"color\", \"__shadowC\", {\"\"}, \"\", 14 );" "liquidAE_LifParameter( \"__unshadowed_Cl\", \"-1\", \"color\", \"color\", \"__unshadowed_Cl\", {\"\"}, \"\", 14 );" "liquidAE_LifGrp( \"end\", 14 );" "liquidAE_LifGrp( \"end\", 14 );" 
                                            >liquidSlNumParams()
                                        >[rmanParams_create] setAttr -type Int32Array liquidLight3.rmanParamLifCmdId 21 1 2 5 9 10 11 12 13 14 16 17 18 19 20 6 0 22 23 24 3 4 
                                        >[rmanParams_create] setAttr -type stringArray liquidLight3.rmanGroups 0 
                                        >[rmanParams_create] setAttr -type Int32Array liquidLight3.rmanGroupLifCmdId 0 
                                >liquidGetShaderNodeExpectedType(liquidLight3)
                                    >liquidGetShaderNodeType(liquidLight3)
                            >[liquidShaderNodes_reloadAndRefresh] for node: liquidLight3, shader: E:/dev/Autodesk/maya/myplugin/project/liquid_/2.3.3/lib/shaders/liquidpoint.sdl
                                >liquidAE_getShaderLayoutName(liquidLight,E:/dev/Autodesk/maya/myplugin/project/liquid_/2.3.3/lib/shaders/liquidpoint.sdl)
                                >liquidShaderNodesParamsReplace(liquidLight3.rmanShaderLong)
                                    >liquidAE_getShaderLayoutName(liquidLight,E:/dev/Autodesk/maya/myplugin/project/liquid_/2.3.3/lib/shaders/liquidpoint.sdl)
                                    >liquidAE_setCacheLayout(liquidLight,E:/dev/Autodesk/maya/myplugin/project/liquid_/2.3.3/lib/shaders/liquidpoint.sdl,MayaWindow)
                                        >liquidAE_getShaderLayoutName(liquidLight,E:/dev/Autodesk/maya/myplugin/project/liquid_/2.3.3/lib/shaders/liquidpoint.sdl)
                                >rmanLifCmds: liquidAE_LifParameter( "__category", "-1", "string", "string", "__category", {""}, "", 14 );
                                    >liquidAE_LifParameter( __category,-1,string, ui type:string,__category,[],,14)
                                        >liquidAE_LifString( __category,__category, ui type:string,__category,[],,14)
                                            >liquidAE_LifString_field( __category,__category,__category,[],,14)
                                                >liquidAE_LifStringOverride( __category,liquidLightE__dev_Autodesk_maya_myplugin_project_liquid__2_3_3_lib_shaders_liquidpoint_sdl_MayaWindow___category_LIF)
                                >rmanLifCmds: liquidAE_LifParameter( "intensity", "-1", "float", "slider", "Intensity", {""}, "", 14 );
                                    >liquidAE_LifParameter( intensity,-1,float, ui type:slider,Intensity,[],,14)
                                        >liquidAE_LifFloat( intensity,intensity,UI type:slider,Intensity,[],,14)
                                            >liquidAE_LifFloat_slider(intensity,intensity,Intensity,[],,14
                                >rmanLifCmds: liquidAE_LifParameter( "lightcolor", "-1", "color", "color", "Light Color", {""}, "", 14 );
                                    >liquidAE_LifParameter( lightcolor,-1,color, ui type:color,Light Color,[],,14)
                                        >liquidAE_LifColor( lightcolor,lightcolor, ui type:color,Light Color,[],,14)
                                            >liquidAE_LifFloat( lightcolor,lightcolor,Light Color,[],,14)
                                >rmanLifCmds: liquidAE_LifParameter( "__nondiffuse", "-1", "float", "bool", "Non Diffuse", {""}, "", 14 );
                                    >liquidAE_LifParameter( __nondiffuse,-1,float, ui type:bool,Non Diffuse,[],,14)
                                        >liquidAE_LifFloat( __nondiffuse,__nondiffuse,UI type:bool,Non Diffuse,[],,14)
                                            >liquidAE_LifFloat_bool( __nondiffuse,__nondiffuse,Non Diffuse,[],,14)
                                >rmanLifCmds: liquidAE_LifParameter( "__nonspecular", "-1", "float", "bool", "Non Specular", {""}, "", 14 );
                                    >liquidAE_LifParameter( __nonspecular,-1,float, ui type:bool,Non Specular,[],,14)
                                        >liquidAE_LifFloat( __nonspecular,__nonspecular,UI type:bool,Non Specular,[],,14)
                                            >liquidAE_LifFloat_bool( __nonspecular,__nonspecular,Non Specular,[],,14)
                                >rmanLifCmds: liquidAE_LifParameter( "decay", "-1", "float", "selector", "Decay", {"None", "0", "Linear", "1", "Quadratic", "2", "Cubic", "3"}, "", 14 );
                                    >liquidAE_LifParameter( decay,-1,float, ui type:selector,Decay,[None 0 Linear 1 Quadratic 2 Cubic 3],,14)
                                        >liquidAE_LifFloat( decay,decay,UI type:selector,Decay,[None 0 Linear 1 Quadratic 2 Cubic 3],,14)
                                            >liquidAE_Lif_selector(decay,float,decay,Decay,[None 0 Linear 1 Quadratic 2 Cubic 3,,14)
                                                >liquidSlValidIntString(0)
                                                    >liquidSlValidFloatString(0)
                                                        >isValidIntPart(0)
                                                        >isNonEmptyIntPart(0)
                                                            >isValidIntPart(0)
                                                        >isValidExpPart()
                                                >liquidSlValidIntString(1)
                                                    >liquidSlValidFloatString(1)
                                                        >isValidIntPart(1)
                                                        >isNonEmptyIntPart(1)
                                                            >isValidIntPart(1)
                                                        >isValidExpPart()
                                                >liquidSlValidIntString(2)
                                                    >liquidSlValidFloatString(2)
                                                        >isValidIntPart(2)
                                                        >isNonEmptyIntPart(2)
                                                            >isValidIntPart(2)
                                                        >isValidExpPart()
                                                >liquidSlValidIntString(3)
                                                    >liquidSlValidFloatString(3)
                                                        >isValidIntPart(3)
                                                        >isNonEmptyIntPart(3)
                                                            >isValidIntPart(3)
                                                        >isValidExpPart()
                                                >liquidSlConformStrings(float, [0 1 2 3])
                                                    >liquidSlValidFloatString(0)
                                                        >isValidIntPart(0)
                                                        >isNonEmptyIntPart(0)
                                                            >isValidIntPart(0)
                                                        >isValidExpPart()
                                                    >liquidSlValidFloatString(1)
                                                        >isValidIntPart(1)
                                                        >isNonEmptyIntPart(1)
                                                            >isValidIntPart(1)
                                                        >isValidExpPart()
                                                    >liquidSlValidFloatString(2)
                                                        >isValidIntPart(2)
                                                        >isNonEmptyIntPart(2)
                                                            >isValidIntPart(2)
                                                        >isValidExpPart()
                                                    >liquidSlValidFloatString(3)
                                                        >isValidIntPart(3)
                                                        >isNonEmptyIntPart(3)
                                                            >isValidIntPart(3)
                                                        >isValidExpPart()
                                            >		[liquidAE_Lif_selector] using int enum method for values: 0.0|1.0|2.0|3.0
                                >rmanLifCmds: liquidAE_LifParameter( "lightID", "-1", "float", "float", "lightID", {""}, "", 14 );
                                    >liquidAE_LifParameter( lightID,-1,float, ui type:float,lightID,[],,14)
                                        >liquidAE_LifFloat( lightID,lightID,UI type:float,lightID,[],,14)
                                            >liquidAE_LifFloat_slider(lightID,lightID,lightID,[],,14
                                >rmanLifCmds: liquidAE_LifGrp( "Shadows", 14 );
                                    >liquidAE_LifGrp( Shadows,14). liquidLight3,liquidLightE:_dev_Autodesk_maya_myplugin_project_liquid__2_3_3_lib_shaders_liquidpoint_sdl_MayaWindow
                                >rmanLifCmds: liquidAE_LifGrp( "Maps", 14 );
                                    >liquidAE_LifGrp( Maps,14). liquidLight3,liquidLightE:_dev_Autodesk_maya_myplugin_project_liquid__2_3_3_lib_shaders_liquidpoint_sdl_MayaWindow
                                >rmanLifCmds: liquidAE_LifParameter( "shadownamepx", "-1", "string", "shadow", "shadownamepx", {""}, "", 14 );
                                    >liquidAE_LifParameter( shadownamepx,-1,string, ui type:shadow,shadownamepx,[],,14)
                                        >liquidAE_LifString( shadownamepx,shadownamepx, ui type:shadow,shadownamepx,[],,14)
                                            >liquidAE_LifString_browser( shadownamepx,shadownamepx, ui type:shadow,shadownamepx,[],,14)
                                                >2011/liquidAddTextureViewerMenu(...)
                                                >liquidAE_LifStringOverride( shadownamepx,liquidLightE__dev_Autodesk_maya_myplugin_project_liquid__2_3_3_lib_shaders_liquidpoint_sdl_MayaWindow_shadownamepx_LIF)
                                >rmanLifCmds: liquidAE_LifParameter( "shadownamenx", "-1", "string", "shadow", "shadownamenx", {""}, "", 14 );
                                    >liquidAE_LifParameter( shadownamenx,-1,string, ui type:shadow,shadownamenx,[],,14)
                                        >liquidAE_LifString( shadownamenx,shadownamenx, ui type:shadow,shadownamenx,[],,14)
                                            >liquidAE_LifString_browser( shadownamenx,shadownamenx, ui type:shadow,shadownamenx,[],,14)
                                                >2011/liquidAddTextureViewerMenu(...)
                                                >liquidAE_LifStringOverride( shadownamenx,liquidLightE__dev_Autodesk_maya_myplugin_project_liquid__2_3_3_lib_shaders_liquidpoint_sdl_MayaWindow_shadownamenx_LIF)
                                >rmanLifCmds: liquidAE_LifParameter( "shadownamepy", "-1", "string", "shadow", "shadownamepy", {""}, "", 14 );
                                    >liquidAE_LifParameter( shadownamepy,-1,string, ui type:shadow,shadownamepy,[],,14)
                                        >liquidAE_LifString( shadownamepy,shadownamepy, ui type:shadow,shadownamepy,[],,14)
                                            >liquidAE_LifString_browser( shadownamepy,shadownamepy, ui type:shadow,shadownamepy,[],,14)
                                                >2011/liquidAddTextureViewerMenu(...)
                                                >liquidAE_LifStringOverride( shadownamepy,liquidLightE__dev_Autodesk_maya_myplugin_project_liquid__2_3_3_lib_shaders_liquidpoint_sdl_MayaWindow_shadownamepy_LIF)
                                >rmanLifCmds: liquidAE_LifParameter( "shadownameny", "-1", "string", "shadow", "shadownameny", {""}, "", 14 );
                                    >liquidAE_LifParameter( shadownameny,-1,string, ui type:shadow,shadownameny,[],,14)
                                        >liquidAE_LifString( shadownameny,shadownameny, ui type:shadow,shadownameny,[],,14)
                                            >liquidAE_LifString_browser( shadownameny,shadownameny, ui type:shadow,shadownameny,[],,14)
                                                >2011/liquidAddTextureViewerMenu(...)
                                                >liquidAE_LifStringOverride( shadownameny,liquidLightE__dev_Autodesk_maya_myplugin_project_liquid__2_3_3_lib_shaders_liquidpoint_sdl_MayaWindow_shadownameny_LIF)
                                >rmanLifCmds: liquidAE_LifParameter( "shadownamepz", "-1", "string", "shadow", "shadownamepz", {""}, "", 14 );
                                    >liquidAE_LifParameter( shadownamepz,-1,string, ui type:shadow,shadownamepz,[],,14)
                                        >liquidAE_LifString( shadownamepz,shadownamepz, ui type:shadow,shadownamepz,[],,14)
                                            >liquidAE_LifString_browser( shadownamepz,shadownamepz, ui type:shadow,shadownamepz,[],,14)
                                                >2011/liquidAddTextureViewerMenu(...)
                                                >liquidAE_LifStringOverride( shadownamepz,liquidLightE__dev_Autodesk_maya_myplugin_project_liquid__2_3_3_lib_shaders_liquidpoint_sdl_MayaWindow_shadownamepz_LIF)
                                >rmanLifCmds: liquidAE_LifParameter( "shadownamenz", "-1", "string", "shadow", "shadownamenz", {""}, "", 14 );
                                    >liquidAE_LifParameter( shadownamenz,-1,string, ui type:shadow,shadownamenz,[],,14)
                                        >liquidAE_LifString( shadownamenz,shadownamenz, ui type:shadow,shadownamenz,[],,14)
                                            >liquidAE_LifString_browser( shadownamenz,shadownamenz, ui type:shadow,shadownamenz,[],,14)
                                                >2011/liquidAddTextureViewerMenu(...)
                                                >liquidAE_LifStringOverride( shadownamenz,liquidLightE__dev_Autodesk_maya_myplugin_project_liquid__2_3_3_lib_shaders_liquidpoint_sdl_MayaWindow_shadownamenz_LIF)
                                >rmanLifCmds: liquidAE_LifGrp( "end", 14 );
                                    >liquidAE_LifGrp( end,14). liquidLight3,liquidLightE:_dev_Autodesk_maya_myplugin_project_liquid__2_3_3_lib_shaders_liquidpoint_sdl_MayaWindow
                                >rmanLifCmds: liquidAE_LifParameter( "shadowbias", "-1", "float", "slider", "Bias", {"0", "1"}, "", 14 );
                                    >liquidAE_LifParameter( shadowbias,-1,float, ui type:slider,Bias,[0 1],,14)
                                        >liquidAE_LifFloat( shadowbias,shadowbias,UI type:slider,Bias,[0 1],,14)
                                            >liquidAE_LifFloat_slider(shadowbias,shadowbias,Bias,[0 1],,14
                                >rmanLifCmds: liquidAE_LifParameter( "shadowblur", "-1", "float", "slider", "Blur", {"0", "1"}, "", 14 );
                                    >liquidAE_LifParameter( shadowblur,-1,float, ui type:slider,Blur,[0 1],,14)
                                        >liquidAE_LifFloat( shadowblur,shadowblur,UI type:slider,Blur,[0 1],,14)
                                            >liquidAE_LifFloat_slider(shadowblur,shadowblur,Blur,[0 1],,14
                                >rmanLifCmds: liquidAE_LifParameter( "shadowsamples", "-1", "float", "slider", "Samples", {"0", "1"}, "", 14 );
                                    >liquidAE_LifParameter( shadowsamples,-1,float, ui type:slider,Samples,[0 1],,14)
                                        >liquidAE_LifFloat( shadowsamples,shadowsamples,UI type:slider,Samples,[0 1],,14)
                                            >liquidAE_LifFloat_slider(shadowsamples,shadowsamples,Samples,[0 1],,14
                                >rmanLifCmds: liquidAE_LifParameter( "shadowfiltersize", "-1", "float", "slider", "Filter Size", {"0", "1"}, "", 14 );
                                    >liquidAE_LifParameter( shadowfiltersize,-1,float, ui type:slider,Filter Size,[0 1],,14)
                                        >liquidAE_LifFloat( shadowfiltersize,shadowfiltersize,UI type:slider,Filter Size,[0 1],,14)
                                            >liquidAE_LifFloat_slider(shadowfiltersize,shadowfiltersize,Filter Size,[0 1],,14
                                >rmanLifCmds: liquidAE_LifParameter( "shadowcolor", "-1", "color", "color", "Color", {""}, "", 14 );
                                    >liquidAE_LifParameter( shadowcolor,-1,color, ui type:color,Color,[],,14)
                                        >liquidAE_LifColor( shadowcolor,shadowcolor, ui type:color,Color,[],,14)
                                            >liquidAE_LifFloat( shadowcolor,shadowcolor,Color,[],,14)
                                >rmanLifCmds: liquidAE_LifGrp( "AOVs", 14 );
                                    >liquidAE_LifGrp( AOVs,14). liquidLight3,liquidLightE:_dev_Autodesk_maya_myplugin_project_liquid__2_3_3_lib_shaders_liquidpoint_sdl_MayaWindow
                                >rmanLifCmds: liquidAE_LifParameter( "__shadowF", "-1", "float", "float", "__shadowF", {""}, "shadow fraction", 14 );
                                    >liquidAE_LifParameter( __shadowF,-1,float, ui type:float,__shadowF,[],shadow fraction,14)
                                        >liquidAE_LifFloat( __shadowF,__shadowF,UI type:float,__shadowF,[],shadow fraction,14)
                                            >liquidAE_LifFloat_slider(__shadowF,__shadowF,__shadowF,[],shadow fraction,14
                                >rmanLifCmds: liquidAE_LifParameter( "__shadowC", "-1", "color", "color", "__shadowC", {""}, "", 14 );
                                    >liquidAE_LifParameter( __shadowC,-1,color, ui type:color,__shadowC,[],,14)
                                        >liquidAE_LifColor( __shadowC,__shadowC, ui type:color,__shadowC,[],,14)
                                            >liquidAE_LifFloat( __shadowC,__shadowC,__shadowC,[],,14)
                                >rmanLifCmds: liquidAE_LifParameter( "__unshadowed_Cl", "-1", "color", "color", "__unshadowed_Cl", {""}, "", 14 );
                                    >liquidAE_LifParameter( __unshadowed_Cl,-1,color, ui type:color,__unshadowed_Cl,[],,14)
                                        >liquidAE_LifColor( __unshadowed_Cl,__unshadowed_Cl, ui type:color,__unshadowed_Cl,[],,14)
                                            >liquidAE_LifFloat( __unshadowed_Cl,__unshadowed_Cl,__unshadowed_Cl,[],,14)
                                >rmanLifCmds: liquidAE_LifGrp( "end", 14 );
                                    >liquidAE_LifGrp( end,14). liquidLight3,liquidLightE:_dev_Autodesk_maya_myplugin_project_liquid__2_3_3_lib_shaders_liquidpoint_sdl_MayaWindow
                                >rmanLifCmds: liquidAE_LifGrp( "end", 14 );
                                    >liquidAE_LifGrp( end,14). liquidLight3,liquidLightE:_dev_Autodesk_maya_myplugin_project_liquid__2_3_3_lib_shaders_liquidpoint_sdl_MayaWindow
                            >liquidAE_showCachedLayout(liquidLight,E:/dev/Autodesk/maya/myplugin/project/liquid_/2.3.3/lib/shaders/liquidpoint.sdl,MayaWindow)
                                >liquidAE_getShaderLayoutName(liquidLight,E:/dev/Autodesk/maya/myplugin/project/liquid_/2.3.3/lib/shaders/liquidpoint.sdl)
                                >liquidAE_LifStringOverrideDisplayAll()
                                >[liquidAE_LifStringOverrideDisplayAll] for attribute shadownamepx

                                    >liquidAE_LifStringOverrideDisplay( 0,liquidLightE:_dev_Autodesk_maya_myplugin_project_liquid__2_3_3_lib_shaders_liquidpoint_sdl_MayaWindow_shadownamepx_0_LIF)
                                >[liquidAE_LifStringOverrideDisplayAll] for attribute shadownamenx

                                    >liquidAE_LifStringOverrideDisplay( 0,liquidLightE:_dev_Autodesk_maya_myplugin_project_liquid__2_3_3_lib_shaders_liquidpoint_sdl_MayaWindow_shadownamenx_0_LIF)
                                >[liquidAE_LifStringOverrideDisplayAll] for attribute shadownamepy

                                    >liquidAE_LifStringOverrideDisplay( 0,liquidLightE:_dev_Autodesk_maya_myplugin_project_liquid__2_3_3_lib_shaders_liquidpoint_sdl_MayaWindow_shadownamepy_0_LIF)
                                >[liquidAE_LifStringOverrideDisplayAll] for attribute shadownameny

                                    >liquidAE_LifStringOverrideDisplay( 0,liquidLightE:_dev_Autodesk_maya_myplugin_project_liquid__2_3_3_lib_shaders_liquidpoint_sdl_MayaWindow_shadownameny_0_LIF)
                                >[liquidAE_LifStringOverrideDisplayAll] for attribute shadownamepz

                                    >liquidAE_LifStringOverrideDisplay( 0,liquidLightE:_dev_Autodesk_maya_myplugin_project_liquid__2_3_3_lib_shaders_liquidpoint_sdl_MayaWindow_shadownamepz_0_LIF)
                                >[liquidAE_LifStringOverrideDisplayAll] for attribute shadownamenz

                                    >liquidAE_LifStringOverrideDisplay( 0,liquidLightE:_dev_Autodesk_maya_myplugin_project_liquid__2_3_3_lib_shaders_liquidpoint_sdl_MayaWindow_shadownamenz_0_LIF)
                                >[liquidAE_LifStringOverrideDisplayAll] for attribute __category

                                    >liquidAE_LifStringOverrideDisplay( 0,liquidLightE:_dev_Autodesk_maya_myplugin_project_liquid__2_3_3_lib_shaders_liquidpoint_sdl_MayaWindow___category_0_LIF)
                            >liquidFluidGetPreviewDir()
                                >liquidGlobalsExists()
                            >liquidAE_showCachedLayout(liquidLight,E:/dev/Autodesk/maya/myplugin/project/liquid_/2.3.3/lib/shaders/liquidpoint.sdl,MayaWindow)
                                >liquidAE_getShaderLayoutName(liquidLight,E:/dev/Autodesk/maya/myplugin/project/liquid_/2.3.3/lib/shaders/liquidpoint.sdl)
                                >liquidAE_LifStringOverrideDisplayAll()
                                >[liquidAE_LifStringOverrideDisplayAll] for attribute shadownamepx

                                    >liquidAE_LifStringOverrideDisplay( 0,liquidLightE:_dev_Autodesk_maya_myplugin_project_liquid__2_3_3_lib_shaders_liquidpoint_sdl_MayaWindow_shadownamepx_0_LIF)
                                >[liquidAE_LifStringOverrideDisplayAll] for attribute shadownamenx

                                    >liquidAE_LifStringOverrideDisplay( 0,liquidLightE:_dev_Autodesk_maya_myplugin_project_liquid__2_3_3_lib_shaders_liquidpoint_sdl_MayaWindow_shadownamenx_0_LIF)
                                >[liquidAE_LifStringOverrideDisplayAll] for attribute shadownamepy

                                    >liquidAE_LifStringOverrideDisplay( 0,liquidLightE:_dev_Autodesk_maya_myplugin_project_liquid__2_3_3_lib_shaders_liquidpoint_sdl_MayaWindow_shadownamepy_0_LIF)
                                >[liquidAE_LifStringOverrideDisplayAll] for attribute shadownameny

                                    >liquidAE_LifStringOverrideDisplay( 0,liquidLightE:_dev_Autodesk_maya_myplugin_project_liquid__2_3_3_lib_shaders_liquidpoint_sdl_MayaWindow_shadownameny_0_LIF)
                                >[liquidAE_LifStringOverrideDisplayAll] for attribute shadownamepz

                                    >liquidAE_LifStringOverrideDisplay( 0,liquidLightE:_dev_Autodesk_maya_myplugin_project_liquid__2_3_3_lib_shaders_liquidpoint_sdl_MayaWindow_shadownamepz_0_LIF)
                                >[liquidAE_LifStringOverrideDisplayAll] for attribute shadownamenz

                                    >liquidAE_LifStringOverrideDisplay( 0,liquidLightE:_dev_Autodesk_maya_myplugin_project_liquid__2_3_3_lib_shaders_liquidpoint_sdl_MayaWindow_shadownamenz_0_LIF)
                                >[liquidAE_LifStringOverrideDisplayAll] for attribute __category

                                    >liquidAE_LifStringOverrideDisplay( 0,liquidLightE:_dev_Autodesk_maya_myplugin_project_liquid__2_3_3_lib_shaders_liquidpoint_sdl_MayaWindow___category_0_LIF)
                            >liquidFluidGetPreviewDir()
                                >liquidGlobalsExists()




////select spotlight////////////////////////////////////////////////////////
select -r spotLight3 ;
                            >liquidLightViewShadowReplace(...)
                            >liquidLargeFieldReplace(spotLightShape2,Job Options RIB,spotLightShape3.liqRIBOptions)
                            >liquidLargeFieldReplace(spotLightShape2,Job Frame RIB,spotLightShape3.liqRIBFrame)



///assign liquidLight to spotlight/////////////////////////////////////////////////////////
			    >2012/buildHypergraphNodePopupMenuItems(graph1HyperShadeEd,liquidLight3)
                            >2012/duBuildHypergraphAssignCb(liquidLight3,liquidAssignShaderToSelected)
                                >liquidAssignShaderToSelected(liquidLight3)
                                    >liquidAssignLightShaderToSelected(liquidLight3)
                            >liquidPreviewSwatchReplace(liquidLight3.message)
                            >liquidShaderPickerReplace(liquidLight3.rmanShaderLong)
                                >liquidGlobalsExists()
                            >liquidShaderNodesParamsReplace(liquidLight3.rmanShaderLong)
                                >liquidAE_getShaderLayoutName(liquidLight,E:/dev/Autodesk/maya/myplugin/project/liquid_/2.3.3/lib/shaders/liquidpoint.sdl)
                                >liquidAE_setCacheLayout(liquidLight,E:/dev/Autodesk/maya/myplugin/project/liquid_/2.3.3/lib/shaders/liquidpoint.sdl,MayaWindow)
                                    >liquidAE_getShaderLayoutName(liquidLight,E:/dev/Autodesk/maya/myplugin/project/liquid_/2.3.3/lib/shaders/liquidpoint.sdl)
                            >rmanLifCmds: liquidAE_LifParameter( "__category", "-1", "string", "string", "__category", {""}, "", 14 );
                                >liquidAE_LifParameter( __category,-1,string, ui type:string,__category,[],,14)
                                    >liquidAE_LifString( __category,__category, ui type:string,__category,[],,14)
                                        >liquidAE_LifString_field( __category,__category,__category,[],,14)
                                            >liquidAE_LifStringOverride( __category,liquidLightE__dev_Autodesk_maya_myplugin_project_liquid__2_3_3_lib_shaders_liquidpoint_sdl_MayaWindow___category_LIF)
                            >rmanLifCmds: liquidAE_LifParameter( "intensity", "-1", "float", "slider", "Intensity", {""}, "", 14 );
                                >liquidAE_LifParameter( intensity,-1,float, ui type:slider,Intensity,[],,14)
                                    >liquidAE_LifFloat( intensity,intensity,UI type:slider,Intensity,[],,14)
                                        >liquidAE_LifFloat_slider(intensity,intensity,Intensity,[],,14
                            >rmanLifCmds: liquidAE_LifParameter( "lightcolor", "-1", "color", "color", "Light Color", {""}, "", 14 );
                                >liquidAE_LifParameter( lightcolor,-1,color, ui type:color,Light Color,[],,14)
                                    >liquidAE_LifColor( lightcolor,lightcolor, ui type:color,Light Color,[],,14)
                                        >liquidAE_LifFloat( lightcolor,lightcolor,Light Color,[],,14)
                            >rmanLifCmds: liquidAE_LifParameter( "__nondiffuse", "-1", "float", "bool", "Non Diffuse", {""}, "", 14 );
                                >liquidAE_LifParameter( __nondiffuse,-1,float, ui type:bool,Non Diffuse,[],,14)
                                    >liquidAE_LifFloat( __nondiffuse,__nondiffuse,UI type:bool,Non Diffuse,[],,14)
                                        >liquidAE_LifFloat_bool( __nondiffuse,__nondiffuse,Non Diffuse,[],,14)
                            >rmanLifCmds: liquidAE_LifParameter( "__nonspecular", "-1", "float", "bool", "Non Specular", {""}, "", 14 );
                                >liquidAE_LifParameter( __nonspecular,-1,float, ui type:bool,Non Specular,[],,14)
                                    >liquidAE_LifFloat( __nonspecular,__nonspecular,UI type:bool,Non Specular,[],,14)
                                        >liquidAE_LifFloat_bool( __nonspecular,__nonspecular,Non Specular,[],,14)
                            >rmanLifCmds: liquidAE_LifParameter( "decay", "-1", "float", "selector", "Decay", {"None", "0", "Linear", "1", "Quadratic", "2", "Cubic", "3"}, "", 14 );
                                >liquidAE_LifParameter( decay,-1,float, ui type:selector,Decay,[None 0 Linear 1 Quadratic 2 Cubic 3],,14)
                                    >liquidAE_LifFloat( decay,decay,UI type:selector,Decay,[None 0 Linear 1 Quadratic 2 Cubic 3],,14)
                                        >liquidAE_Lif_selector(decay,float,decay,Decay,[None 0 Linear 1 Quadratic 2 Cubic 3,,14)
                                            >liquidSlValidIntString(0)
                                                >liquidSlValidFloatString(0)
                                                    >isValidIntPart(0)
                                                    >isNonEmptyIntPart(0)
                                                        >isValidIntPart(0)
                                                    >isValidExpPart()
                                            >liquidSlValidIntString(1)
                                                >liquidSlValidFloatString(1)
                                                    >isValidIntPart(1)
                                                    >isNonEmptyIntPart(1)
                                                        >isValidIntPart(1)
                                                    >isValidExpPart()
                                            >liquidSlValidIntString(2)
                                                >liquidSlValidFloatString(2)
                                                    >isValidIntPart(2)
                                                    >isNonEmptyIntPart(2)
                                                        >isValidIntPart(2)
                                                    >isValidExpPart()
                                            >liquidSlValidIntString(3)
                                                >liquidSlValidFloatString(3)
                                                    >isValidIntPart(3)
                                                    >isNonEmptyIntPart(3)
                                                        >isValidIntPart(3)
                                                    >isValidExpPart()
                                            >liquidSlConformStrings(float, [0 1 2 3])
                                                >liquidSlValidFloatString(0)
                                                    >isValidIntPart(0)
                                                    >isNonEmptyIntPart(0)
                                                        >isValidIntPart(0)
                                                    >isValidExpPart()
                                                >liquidSlValidFloatString(1)
                                                    >isValidIntPart(1)
                                                    >isNonEmptyIntPart(1)
                                                        >isValidIntPart(1)
                                                    >isValidExpPart()
                                                >liquidSlValidFloatString(2)
                                                    >isValidIntPart(2)
                                                    >isNonEmptyIntPart(2)
                                                        >isValidIntPart(2)
                                                    >isValidExpPart()
                                                >liquidSlValidFloatString(3)
                                                    >isValidIntPart(3)
                                                    >isNonEmptyIntPart(3)
                                                        >isValidIntPart(3)
                                                    >isValidExpPart()
                                        >		[liquidAE_Lif_selector] using int enum method for values: 0.0|1.0|2.0|3.0
                            >rmanLifCmds: liquidAE_LifParameter( "lightID", "-1", "float", "float", "lightID", {""}, "", 14 );
                                >liquidAE_LifParameter( lightID,-1,float, ui type:float,lightID,[],,14)
                                    >liquidAE_LifFloat( lightID,lightID,UI type:float,lightID,[],,14)
                                        >liquidAE_LifFloat_slider(lightID,lightID,lightID,[],,14
                            >rmanLifCmds: liquidAE_LifGrp( "Shadows", 14 );
                                >liquidAE_LifGrp( Shadows,14). liquidLight3,liquidLightE:_dev_Autodesk_maya_myplugin_project_liquid__2_3_3_lib_shaders_liquidpoint_sdl_MayaWindow
                            >rmanLifCmds: liquidAE_LifGrp( "Maps", 14 );
                                >liquidAE_LifGrp( Maps,14). liquidLight3,liquidLightE:_dev_Autodesk_maya_myplugin_project_liquid__2_3_3_lib_shaders_liquidpoint_sdl_MayaWindow
                            >rmanLifCmds: liquidAE_LifParameter( "shadownamepx", "-1", "string", "shadow", "shadownamepx", {""}, "", 14 );
                                >liquidAE_LifParameter( shadownamepx,-1,string, ui type:shadow,shadownamepx,[],,14)
                                    >liquidAE_LifString( shadownamepx,shadownamepx, ui type:shadow,shadownamepx,[],,14)
                                        >liquidAE_LifString_browser( shadownamepx,shadownamepx, ui type:shadow,shadownamepx,[],,14)
                                            >liquidAE_LifStringOverride( shadownamepx,liquidLightE__dev_Autodesk_maya_myplugin_project_liquid__2_3_3_lib_shaders_liquidpoint_sdl_MayaWindow_shadownamepx_LIF)
                            >rmanLifCmds: liquidAE_LifParameter( "shadownamenx", "-1", "string", "shadow", "shadownamenx", {""}, "", 14 );
                                >liquidAE_LifParameter( shadownamenx,-1,string, ui type:shadow,shadownamenx,[],,14)
                                    >liquidAE_LifString( shadownamenx,shadownamenx, ui type:shadow,shadownamenx,[],,14)
                                        >liquidAE_LifString_browser( shadownamenx,shadownamenx, ui type:shadow,shadownamenx,[],,14)
                                            >liquidAE_LifStringOverride( shadownamenx,liquidLightE__dev_Autodesk_maya_myplugin_project_liquid__2_3_3_lib_shaders_liquidpoint_sdl_MayaWindow_shadownamenx_LIF)
                            >rmanLifCmds: liquidAE_LifParameter( "shadownamepy", "-1", "string", "shadow", "shadownamepy", {""}, "", 14 );
                                >liquidAE_LifParameter( shadownamepy,-1,string, ui type:shadow,shadownamepy,[],,14)
                                    >liquidAE_LifString( shadownamepy,shadownamepy, ui type:shadow,shadownamepy,[],,14)
                                        >liquidAE_LifString_browser( shadownamepy,shadownamepy, ui type:shadow,shadownamepy,[],,14)
                                            >liquidAE_LifStringOverride( shadownamepy,liquidLightE__dev_Autodesk_maya_myplugin_project_liquid__2_3_3_lib_shaders_liquidpoint_sdl_MayaWindow_shadownamepy_LIF)
                            >rmanLifCmds: liquidAE_LifParameter( "shadownameny", "-1", "string", "shadow", "shadownameny", {""}, "", 14 );
                                >liquidAE_LifParameter( shadownameny,-1,string, ui type:shadow,shadownameny,[],,14)
                                    >liquidAE_LifString( shadownameny,shadownameny, ui type:shadow,shadownameny,[],,14)
                                        >liquidAE_LifString_browser( shadownameny,shadownameny, ui type:shadow,shadownameny,[],,14)
                                            >liquidAE_LifStringOverride( shadownameny,liquidLightE__dev_Autodesk_maya_myplugin_project_liquid__2_3_3_lib_shaders_liquidpoint_sdl_MayaWindow_shadownameny_LIF)
                            >rmanLifCmds: liquidAE_LifParameter( "shadownamepz", "-1", "string", "shadow", "shadownamepz", {""}, "", 14 );
                                >liquidAE_LifParameter( shadownamepz,-1,string, ui type:shadow,shadownamepz,[],,14)
                                    >liquidAE_LifString( shadownamepz,shadownamepz, ui type:shadow,shadownamepz,[],,14)
                                        >liquidAE_LifString_browser( shadownamepz,shadownamepz, ui type:shadow,shadownamepz,[],,14)
                                            >liquidAE_LifStringOverride( shadownamepz,liquidLightE__dev_Autodesk_maya_myplugin_project_liquid__2_3_3_lib_shaders_liquidpoint_sdl_MayaWindow_shadownamepz_LIF)
                            >rmanLifCmds: liquidAE_LifParameter( "shadownamenz", "-1", "string", "shadow", "shadownamenz", {""}, "", 14 );
                                >liquidAE_LifParameter( shadownamenz,-1,string, ui type:shadow,shadownamenz,[],,14)
                                    >liquidAE_LifString( shadownamenz,shadownamenz, ui type:shadow,shadownamenz,[],,14)
                                        >liquidAE_LifString_browser( shadownamenz,shadownamenz, ui type:shadow,shadownamenz,[],,14)
                                            >liquidAE_LifStringOverride( shadownamenz,liquidLightE__dev_Autodesk_maya_myplugin_project_liquid__2_3_3_lib_shaders_liquidpoint_sdl_MayaWindow_shadownamenz_LIF)
                            >rmanLifCmds: liquidAE_LifGrp( "end", 14 );
                                >liquidAE_LifGrp( end,14). liquidLight3,liquidLightE:_dev_Autodesk_maya_myplugin_project_liquid__2_3_3_lib_shaders_liquidpoint_sdl_MayaWindow
                            >rmanLifCmds: liquidAE_LifParameter( "shadowbias", "-1", "float", "slider", "Bias", {"0", "1"}, "", 14 );
                                >liquidAE_LifParameter( shadowbias,-1,float, ui type:slider,Bias,[0 1],,14)
                                    >liquidAE_LifFloat( shadowbias,shadowbias,UI type:slider,Bias,[0 1],,14)
                                        >liquidAE_LifFloat_slider(shadowbias,shadowbias,Bias,[0 1],,14
                            >rmanLifCmds: liquidAE_LifParameter( "shadowblur", "-1", "float", "slider", "Blur", {"0", "1"}, "", 14 );
                                >liquidAE_LifParameter( shadowblur,-1,float, ui type:slider,Blur,[0 1],,14)
                                    >liquidAE_LifFloat( shadowblur,shadowblur,UI type:slider,Blur,[0 1],,14)
                                        >liquidAE_LifFloat_slider(shadowblur,shadowblur,Blur,[0 1],,14
                            >rmanLifCmds: liquidAE_LifParameter( "shadowsamples", "-1", "float", "slider", "Samples", {"0", "1"}, "", 14 );
                                >liquidAE_LifParameter( shadowsamples,-1,float, ui type:slider,Samples,[0 1],,14)
                                    >liquidAE_LifFloat( shadowsamples,shadowsamples,UI type:slider,Samples,[0 1],,14)
                                        >liquidAE_LifFloat_slider(shadowsamples,shadowsamples,Samples,[0 1],,14
                            >rmanLifCmds: liquidAE_LifParameter( "shadowfiltersize", "-1", "float", "slider", "Filter Size", {"0", "1"}, "", 14 );
                                >liquidAE_LifParameter( shadowfiltersize,-1,float, ui type:slider,Filter Size,[0 1],,14)
                                    >liquidAE_LifFloat( shadowfiltersize,shadowfiltersize,UI type:slider,Filter Size,[0 1],,14)
                                        >liquidAE_LifFloat_slider(shadowfiltersize,shadowfiltersize,Filter Size,[0 1],,14
                            >rmanLifCmds: liquidAE_LifParameter( "shadowcolor", "-1", "color", "color", "Color", {""}, "", 14 );
                                >liquidAE_LifParameter( shadowcolor,-1,color, ui type:color,Color,[],,14)
                                    >liquidAE_LifColor( shadowcolor,shadowcolor, ui type:color,Color,[],,14)
                                        >liquidAE_LifFloat( shadowcolor,shadowcolor,Color,[],,14)
                            >rmanLifCmds: liquidAE_LifGrp( "AOVs", 14 );
                                >liquidAE_LifGrp( AOVs,14). liquidLight3,liquidLightE:_dev_Autodesk_maya_myplugin_project_liquid__2_3_3_lib_shaders_liquidpoint_sdl_MayaWindow
                            >rmanLifCmds: liquidAE_LifParameter( "__shadowF", "-1", "float", "float", "__shadowF", {""}, "shadow fraction", 14 );
                                >liquidAE_LifParameter( __shadowF,-1,float, ui type:float,__shadowF,[],shadow fraction,14)
                                    >liquidAE_LifFloat( __shadowF,__shadowF,UI type:float,__shadowF,[],shadow fraction,14)
                                        >liquidAE_LifFloat_slider(__shadowF,__shadowF,__shadowF,[],shadow fraction,14
                            >rmanLifCmds: liquidAE_LifParameter( "__shadowC", "-1", "color", "color", "__shadowC", {""}, "", 14 );
                                >liquidAE_LifParameter( __shadowC,-1,color, ui type:color,__shadowC,[],,14)
                                    >liquidAE_LifColor( __shadowC,__shadowC, ui type:color,__shadowC,[],,14)
                                        >liquidAE_LifFloat( __shadowC,__shadowC,__shadowC,[],,14)
                            >rmanLifCmds: liquidAE_LifParameter( "__unshadowed_Cl", "-1", "color", "color", "__unshadowed_Cl", {""}, "", 14 );
                                >liquidAE_LifParameter( __unshadowed_Cl,-1,color, ui type:color,__unshadowed_Cl,[],,14)
                                    >liquidAE_LifColor( __unshadowed_Cl,__unshadowed_Cl, ui type:color,__unshadowed_Cl,[],,14)
                                        >liquidAE_LifFloat( __unshadowed_Cl,__unshadowed_Cl,__unshadowed_Cl,[],,14)
                            >rmanLifCmds: liquidAE_LifGrp( "end", 14 );
                                >liquidAE_LifGrp( end,14). liquidLight3,liquidLightE:_dev_Autodesk_maya_myplugin_project_liquid__2_3_3_lib_shaders_liquidpoint_sdl_MayaWindow
                            >rmanLifCmds: liquidAE_LifGrp( "end", 14 );
                                >liquidAE_LifGrp( end,14). liquidLight3,liquidLightE:_dev_Autodesk_maya_myplugin_project_liquid__2_3_3_lib_shaders_liquidpoint_sdl_MayaWindow
                            >liquidAE_showCachedLayout(liquidLight,E:/dev/Autodesk/maya/myplugin/project/liquid_/2.3.3/lib/shaders/liquidpoint.sdl,MayaWindow)
                                >liquidAE_getShaderLayoutName(liquidLight,E:/dev/Autodesk/maya/myplugin/project/liquid_/2.3.3/lib/shaders/liquidpoint.sdl)
                                >liquidAE_LifStringOverrideDisplayAll()
                                >[liquidAE_LifStringOverrideDisplayAll] for attribute shadownamepx

                                    >liquidAE_LifStringOverrideDisplay( 0,liquidLightE:_dev_Autodesk_maya_myplugin_project_liquid__2_3_3_lib_shaders_liquidpoint_sdl_MayaWindow_shadownamepx_0_LIF)
                                >[liquidAE_LifStringOverrideDisplayAll] for attribute shadownamenx

                                    >liquidAE_LifStringOverrideDisplay( 0,liquidLightE:_dev_Autodesk_maya_myplugin_project_liquid__2_3_3_lib_shaders_liquidpoint_sdl_MayaWindow_shadownamenx_0_LIF)
                                >[liquidAE_LifStringOverrideDisplayAll] for attribute shadownamepy

                                    >liquidAE_LifStringOverrideDisplay( 0,liquidLightE:_dev_Autodesk_maya_myplugin_project_liquid__2_3_3_lib_shaders_liquidpoint_sdl_MayaWindow_shadownamepy_0_LIF)
                                >[liquidAE_LifStringOverrideDisplayAll] for attribute shadownameny

                                    >liquidAE_LifStringOverrideDisplay( 0,liquidLightE:_dev_Autodesk_maya_myplugin_project_liquid__2_3_3_lib_shaders_liquidpoint_sdl_MayaWindow_shadownameny_0_LIF)
                                >[liquidAE_LifStringOverrideDisplayAll] for attribute shadownamepz

                                    >liquidAE_LifStringOverrideDisplay( 0,liquidLightE:_dev_Autodesk_maya_myplugin_project_liquid__2_3_3_lib_shaders_liquidpoint_sdl_MayaWindow_shadownamepz_0_LIF)
                                >[liquidAE_LifStringOverrideDisplayAll] for attribute shadownamenz

                                    >liquidAE_LifStringOverrideDisplay( 0,liquidLightE:_dev_Autodesk_maya_myplugin_project_liquid__2_3_3_lib_shaders_liquidpoint_sdl_MayaWindow_shadownamenz_0_LIF)
                                >[liquidAE_LifStringOverrideDisplayAll] for attribute __category

                                    >liquidAE_LifStringOverrideDisplay( 0,liquidLightE:_dev_Autodesk_maya_myplugin_project_liquid__2_3_3_lib_shaders_liquidpoint_sdl_MayaWindow___category_0_LIF)

