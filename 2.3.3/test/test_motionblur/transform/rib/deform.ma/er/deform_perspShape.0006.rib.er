//### SCENE BEGIN ###
eiContext *CONTEXT = ei_create_context();
ei_context(CONTEXT);
//ei_set_connection( &(MayaConnection::getInstance()->connection.base );
ei_verbose( 6 );
ei_link( "eiIMG" );
ei_link( "eiSHADER" );
ei_link( "eiSHADER_maya" );
//----------------phong_shader_for_test begin---
ei_shader("phong_shader_for_test");
ei_shader_param_string("desc","plastic");
ei_shader_param_vector("Cs",1,0.2,0.3);
ei_shader_param_vector("Kd",0.7,1,1);
ei_shader_param_scalar("Ks",1);
ei_shader_param_scalar("roughness",0.2);
ei_end_shader();
ei_shader("opaque_shadow_for_test");
ei_shader_param_string("desc","opaque");
ei_end_shader();
ei_material("phong_mtl_for_test");
ei_add_surface("phong_shader_for_test");
ei_add_shadow("opaque_shadow_for_test");
ei_end_material();
//----------------phong_shader_for_test end ---
//    Generated by Liquid v2.3.5 (buildtime=13:24:39.07)
//    Scene : E:/MyDocuments/maya/projects/default/deform
//    User  : yaoyansi
//    Time  : Tue Jun 12 16:09:20 2012


//############################### option #
ei_options("perspShape_option");
ei_contrast(0.05,0.05,0.05,0.05);
ei_samples(0,2);
ei_filter(4,3);
//transform motion=1, deform motion=1
ei_motion(1);
ei_trace_depth(4,4,4,4,4,4);
ei_displace(0);
ei_face(3);
ei_end_options();
// maya settings: focal=35, aperture = 36, aspect=1.33333
//Depth of Field on camera "|persp|perspShape" is turned off in Maya

//############################### camera #
ei_camera("|persp|perspShape_object");
ei_output("E:/MyDocuments/maya/projects/default/rmanpix/deform.perspShape.6.elvishray.bmp","bmp",1);
ei_output_variable("color",11);
ei_end_output();
ei_focal(35);
ei_aperture(36);
ei_aspect(1.33333);
ei_resolution(768,576);
ei_clip(0.1,1000);
ei_end_camera();
//----------------------------------
ei_instance("|persp|perspShape");
ei_element("|persp|perspShape_object");
ei_transform(0.925871,0,-0.377841,0,   -0.257389,0.732087,-0.630713,0,   0.276612,0.681211,0.677818,0,   0.994093,2.44814,2.43595,1);
ei_end_instance();
//
ei_shader("lambert1");
ei_shader_param_string("desc", "maya_lambert_transparent");
ei_shader_param_vector("Cs", 0.5, 0.5, 0.5);
ei_shader_param_vector("transparency", 0, 0, 0);
ei_shader_param_vector("ambientColor", 0, 0, 0);
ei_shader_param_vector("incandescence", 0, 0, 0);
ei_shader_param_scalar("diffusion", 0.8);
ei_shader_param_vector("outColor", 0, 0, 0);
ei_shader_param_vector("outTransparency", 0, 0, 0);
ei_end_shader();

ei_material("initialShadingGroup");
ei_add_surface("lambert1");
ei_end_material();

//worldPrologue

// Renderer::exportLight("_pointLight1_pointLightShape1");

// Renderer::exportPointLight()
ei_shader("|pointLight1|pointLightShape1_shader");
ei_shader_param_string("desc","pointlight");
ei_shader_param_vector("lightcolor",1,1,1);
ei_shader_param_scalar("intensity",1);
ei_end_shader();
ei_light("|pointLight1|pointLightShape1_object");
ei_add_light("|pointLight1|pointLightShape1_shader" );
ei_origin(0,0,0);
ei_end_light();
ei_instance("|pointLight1|pointLightShape1");
ei_element("|pointLight1|pointLightShape1_object");
ei_transform(1,0,0,0,   0,1,0,0,   0,0,1,0,   0,0.506906,0,1);
{
eiInt tag = 0;
ei_declare("|pPlane1_lightgroup",0,4, &tag);
}
ei_end_instance();

// Renderer::exportOneGeometry_Mesh(|pPlane1|pPlaneShape1,0,1)

//############################### mesh #
//shape full path name=|pPlane1|pPlaneShape1
ei_object("|pPlane1|pPlaneShape1","poly");
{
eiTag tag;
//### vertex positions, fnMesh.numVertices()=4
tag = ei_tab(EI_DATA_TYPE_VECTOR, 1024);
ei_pos_list(tag);
ei_tab_add_vector(-0.5,1.39675,0.5);
ei_tab_add_vector(0.5,-1.11022e-016,0.5);
ei_tab_add_vector(-0.5,1.11022e-016,-0.5);
ei_tab_add_vector(0.5,-0.228341,-0.5);
ei_end_tab();
//### vertex deform positions, 
tag = ei_tab(EI_DATA_TYPE_VECTOR, 1024);
ei_motion_pos_list(tag);
ei_tab_add_vector(-0.5,1.69839,0.5);
ei_tab_add_vector(0.5,-1.11022e-016,0.5);
ei_tab_add_vector(-0.5,1.11022e-016,-0.5);
ei_tab_add_vector(0.5,-0.246608,-0.5);
ei_end_tab();
//vertex normals are not output temporarily.
//### N
tag = eiNULL_TAG;
ei_declare("N",2,6, &tag);
tag = ei_tab(EI_DATA_TYPE_VECTOR, 1024);
ei_variable("N", &tag);
ei_tab_add_vector(0.571909,0.588082,-0.571909);
ei_tab_add_vector(0.571909,0.588082,-0.571909);
ei_tab_add_vector(0.571909,0.588082,-0.571909);
ei_tab_add_vector(0.571909,0.588082,-0.571909);
ei_end_tab();
//### UV(map1), size=4
tag = eiNULL_TAG;
ei_declare("u",2,6, &tag);
tag = ei_tab(EI_DATA_TYPE_SCALAR, 1024);
ei_variable("u", &tag);
ei_tab_add_scalar(0);
ei_tab_add_scalar(1);
ei_tab_add_scalar(0);
ei_tab_add_scalar(1);
ei_end_tab();
tag = eiNULL_TAG;
ei_declare("v",2,6, &tag);
tag = ei_tab(EI_DATA_TYPE_SCALAR, 1024);
ei_variable("v", &tag);
ei_tab_add_scalar(0);
ei_tab_add_scalar(0);
ei_tab_add_scalar(1);
ei_tab_add_scalar(1);
ei_end_tab();
//### triangles, size=1
tag = ei_tab(EI_DATA_TYPE_INDEX, 1024);
ei_triangle_list(tag);
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(2);
ei_tab_add_index(1);
ei_tab_add_index(3);
ei_end_tab();
}//|pPlane1|pPlaneShape1
ei_end_object();
//--------------------------
//ribNode->name=|pPlane1|pPlaneShape1
//ribNode's transform node=|pPlane1
//ribNode->object(0)->getDataPtr()->getFullPathName()=|pPlane1|pPlaneShape1
ei_instance("|pPlane1");
ei_add_material("initialShadingGroup");
//shape name=|pPlane1|pPlaneShape1
//shape full path name=|pPlane1|pPlaneShape1
ei_element("|pPlane1|pPlaneShape1");
ei_transform(1,0,0,0,   0,1,0,0,   0,0,1,0,   0.00437896,0,-0.00178702,1);
ei_motion_transform(1,0,0,0,   0,1,0,0,   0,0,1,0,   0.00437896,0,-0.00178702,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *tag = NULL;
ei_declare("lightgroup",0,1, &tag);
tag = ei_token("|pPlane1_lightgroup");
ei_variable("lightgroup", &tag);
}
ei_end_instance();
//

//Renderer::worldEpilogue()
ei_instgroup("perspShape");
//camera
ei_add_instance("|persp|perspShape");
//light(s)
ei_add_instance("|pointLight1|pointLightShape1");
//mesh(s)
ei_add_instance("|pPlane1");
ei_end_instgroup( );
// in batch render mode
ei_render("perspShape", "|persp|perspShape", "perspShape_option");
ei_delete_context(CONTEXT);
