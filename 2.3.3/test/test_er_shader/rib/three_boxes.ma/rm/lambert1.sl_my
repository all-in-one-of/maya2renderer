void lambert1 (
)
{
 vector inColor = vector (0,0.00300002,0.5);
 vector transparency = vector (0,0,0);
 vector ambientColor = vector (0,0,0);
 vector incandescence = vector (0,0,0);
 float diffusion = float 0.8;
 vector outColor = vector (0,0,0);
 vector outTransparency = vector (0,0,0);
 extern normal N;
 normal Nn = normalize( N );
 outTransparency = transparency;
 Oi = Os * color ( 1 - outTransparency );
 outColor = incandescence +
            ( inColor * ( diffusion * 
                          vector diffuse( Nn ) +
                          ambientColor ) );
 Ci = Cs * Oi * color outColor;
}

surface lambert1()
{

 lambert1();
//input: 
//output:

}
