//shader name: lambert4
void lambert4 (
)
{
  vector inColor = vector (0,0.5,0.0157501);
  vector transparency = vector (0,0,0);
  vector ambientColor = vector (0,0,0);
  vector incandescence = vector (0,0,0);
  float diffusion = float 0.8;
  vector outColor = vector (0,0,0);
  vector outTransparency = vector (0,0,0);
 extern normal N;
 normal Nn = normalize( N );
 outTransparency = transparency;
 Oi = Os * color ( 1 - outTransparency );
 outColor = incandescence +
            ( inColor * ( diffusion * 
                          vector diffuse( Nn ) +
                          ambientColor ) );
 Ci = Cs * Oi * color outColor;
}

//surface shader name: lambert4
surface lambert4()
{

 //lambert4
 lambert4();
//input: 
//output:

}
