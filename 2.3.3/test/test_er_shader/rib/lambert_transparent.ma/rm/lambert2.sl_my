//shader name: lambert2
void lambert2 (
)
{
  vector inColor = vector (0.5,0.5,0.5);
  vector transparency = vector (0.32232,0.32232,0.32232);
  vector ambientColor = vector (0,0,0);
  vector incandescence = vector (0,0,0);
  float diffusion = float 0.8;
  vector outColor = vector (0,0,0);
  vector outTransparency = vector (0.32232,0.32232,0.32232);
 extern normal N;
 normal Nn = normalize( N );
 outTransparency = transparency;
 Oi = Os * color ( 1 - outTransparency );
 outColor = incandescence +
            ( inColor * ( diffusion * 
                          vector diffuse( Nn ) +
                          ambientColor ) );
 Ci = Cs * Oi * color outColor;
}

//surface shader name: lambert2
surface lambert2()
{

 //lambert2
 lambert2();
//input: 
//output:

}
