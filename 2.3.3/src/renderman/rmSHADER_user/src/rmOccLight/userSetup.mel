print "This is $RM_SHADER_USER/src/rmOccLight/userSetup.mel\n";

string $rmSHADER_user_DIR = getenv("RM_SHADER_USER");
if( $rmSHADER_user_DIR == "" )
{
    error("environment variable <RM_SHADER_USER> is not set in Maya.env");
} else {
    eval( "source \"" + $rmSHADER_user_DIR + "/src/rmOccLight/AErmOccLightTemplate.mel\"" );
}
//
global proc int liquidAssignUserShaderToSelected_renderman_rmOccLight(string $node)
{
	liqPushIdent();	
	liqAElog("liquidAssignUserShaderToSelected_elvishray_rmOccLight("+$node+")");
	
	string $selected[] = `ls -l -lights -dag -sl`;

	if ( !objExists( ($node + ".liqAssignedObjects") ) )
		addAttr -ln liqAssignedObjects -at message $node;

	for ( $sel in $selected ) 
	{
		if ( !objExists( ($sel + ".liquidLightShaderNode") ) ) 
			addAttr -ln liquidLightShaderNode -at message $sel;
		if ( !isConnected( ($node + ".liqAssignedObjects"), ($sel + ".liquidLightShaderNode" ) ) )
			connectAttr -f ($node + ".liqAssignedObjects") ($sel + ".liquidLightShaderNode");
	}

	liqPopIdent();
	return 1;
}
//
global proc liquidBuildHypergraphNodePopupMenuItems_rmOccLight( string $node )
{
	liqPushIdent();
	liqlog("liquidBuildHypergraphNodePopupMenuItems_rmOccLight("+$node+")");
	liqPopIdent();
}