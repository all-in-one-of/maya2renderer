source xxliquidutility.mel;

//============================================================================
//	light
//============================================================================
// --------------------------- point light -----------------------------------
global proc rmAddAttributeExtension_pointlight()
{
	liqPushIdent();
	liqlog("rmAddAttributeExtension_pointlight()");

	addExtension -nt "pointLight" -ln "rm_attr0" -sn "ra0" -at "long" -dv 16 -k true -s true -w true /*-fromPlugin rm_getRendererName()*/;
	addExtension -nt "pointLight" -ln "rm_attr1" -sn "ra1" -at "bool" -dv 0  -k true -s true -w true /*-fromPlugin rm_getRendererName()*/;

	liqPopIdent();
}
//
global proc rmDeleteAttributeExtension_pointlight()
{
	liqPushIdent();
	liqlog("rmDeleteAttributeExtension_pointlight()");
	
	deleteExtension -nt "pointLight" -at "rm_attr0" -forceDelete on;
	deleteExtension -nt "pointLight" -at "rm_attr1" -forceDelete on;

	liqPopIdent();
}
//
global proc rmAddAttribute_pointlight(string $node)
{
	liqPushIdent();
	liqlog("rmAddAttribute_pointlight("+$node+")");

	_liquidCreateLightShadowAttributes($node);

	liqPopIdent();
}
//
global proc rmDeleteAttribute_pointlight(string $node)
{
	liqPushIdent();
	liqlog("rmDeleteAttribute_pointlight("+$node+")");
	
	//liquidDeleteLightShadowAttributes()

	liqPopIdent();
}
//
global proc liquidAETemplate_pointLight_renderman( string $node )
{
	liqPushIdent();
	liqAElog("liquidAETemplate_pointLight_elvishray("+$node+")");

	editorTemplate -beginLayout (rm_getRendererName()) -collapse 1;
		AEliquidShadowControls($node);
	editorTemplate -endLayout;

	liqPopIdent();
}

// ------------------------------- area light -----------------------------
// ------------------------------- spot light -----------------------------
// ------------------------------- transform  -----------------------------
global proc rmAddAttribute_transform(string $node)
{
	liqPushIdent();
	liqlog("rmAddAttribute_transform("+$node+")");

	if ( !`attributeQuery -node $node -ex "liqGeoShader"` ) {
      addAttr -ln "liqGeoShader" -dt "float3" $node;
    }
	liqPopIdent();
}
//
global proc rmDeleteAttribute_transform(string $node)
{
	liqPushIdent();
	liqlog("rmDeleteAttribute_transform("+$node+")");
	
	if ( `attributeQuery -node $node -ex "liqGeoShader"` ) 
	{
		// philippe: this is a fix to deal with a bug with compound attributes
		renameAttr ( $node + ".liqGeoShader" ) "TO_BE_DELETED";
		deleteAttr ( $node + ".TO_BE_DELETED" );
	}

	liqPopIdent();
}
global proc liquidAETemplate_transform_renderman( string $node )
{
	liqPushIdent();
	liqAElog("liquidAETemplate_transform_renderman("+$node+")");

	editorTemplate -beginLayout (rm_getRendererName()) -collapse 1;
      //editorTemplate -label "liqGeoShader"    -addDynamicControl "liqGeoShader";
      editorTemplate 
		  -callCustom 
			"AEliqInstanceFlagsGeometryNew"
			"AEliqInstanceFlagsGeometryReplace"
			"message";
	editorTemplate -endLayout;




	liqPopIdent();
}