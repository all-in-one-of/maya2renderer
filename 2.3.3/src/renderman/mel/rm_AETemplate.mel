source xxliquidutility.mel;

//============================================================================
//	light
//============================================================================
// --------------------------- point light -----------------------------------
global proc rmAddAttributeExtension_pointlight()
{
	liqPushIdent();
	liqlog("rmAddAttributeExtension_pointlight()");

	addExtension -nt "pointLight" -ln "rm_attr0" -sn "ra0" -at "long" -dv 16 -k true -s true -w true /*-fromPlugin rm_getRendererName()*/;
	addExtension -nt "pointLight" -ln "rm_attr1" -sn "ra1" -at "bool" -dv 0  -k true -s true -w true /*-fromPlugin rm_getRendererName()*/;

	liqPopIdent();
}
//
global proc rmDeleteAttributeExtension_pointlight()
{
	liqPushIdent();
	liqlog("rmDeleteAttributeExtension_pointlight()");
	
	deleteExtension -nt "pointLight" -at "rm_attr0" -forceDelete on;
	deleteExtension -nt "pointLight" -at "rm_attr1" -forceDelete on;

	liqPopIdent();
}
//
global proc rmAddAttribute_pointlight(string $node)
{
	liqPushIdent();
	liqlog("rmAddAttribute_pointlight("+$node+")");

	_liquidCreateLightShadowAttributes($node);

	liqPopIdent();
}
//
global proc rmDeleteAttribute_pointlight(string $node)
{
	liqPushIdent();
	liqlog("rmDeleteAttribute_pointlight("+$node+")");
	
	//liquidDeleteLightShadowAttributes()

	liqPopIdent();
}
//
global proc liquidAETemplate_pointLight_renderman( string $node )
{
	liqPushIdent();
	liqAElog("liquidAETemplate_pointLight_elvishray("+$node+")");

	editorTemplate -beginLayout (rm_getRendererName()) -collapse 1;
		AEliquidShadowControls($node);
	editorTemplate -endLayout;

	liqPopIdent();
}

// ------------------------------- area light -----------------------------
global proc rmAddAttribute_areaLight(string $node)
{
	liqPushIdent();
	liqlog("rmAddAttribute_areaLight("+$node+")");

	_liquidCreateLightShadowAttributes($node);

	liqPopIdent();
}
//
global proc rmDeleteAttribute_areaLight(string $node)
{
	liqPushIdent();
	liqlog("rmDeleteAttribute_areaLight("+$node+")");
	
	//liquidDeleteLightShadowAttributes()

	liqPopIdent();
}
//
global proc liquidAETemplate_areaLight_renderman( string $node )
{
	liqPushIdent();
	liqAElog("liquidAETemplate_areaLight_renderman("+$node+")");

	editorTemplate -beginLayout (rm_getRendererName()) -collapse 1;
		AEliquidShadowControls($node);
	editorTemplate -endLayout;

	liqPopIdent();
}
// ------------------------------- directional light ----------------------
global proc rmAddAttribute_directionalLight(string $node)
{
	liqPushIdent();
	liqlog("rmAddAttribute_directionalLight("+$node+")");

	_liquidCreateLightShadowAttributes($node);

	liqPopIdent();
}
//
global proc rmDeleteAttribute_directionalLight(string $node)
{
	liqPushIdent();
	liqlog("rmDeleteAttribute_directionalLight("+$node+")");
	
	//liquidDeleteLightShadowAttributes()

	liqPopIdent();
}
//
global proc liquidAETemplate_directionalLight_renderman( string $node )
{
	liqPushIdent();
	liqAElog("liquidAETemplate_directionalLight_renderman("+$node+")");

	editorTemplate -beginLayout (rm_getRendererName()) -collapse 1;
		AEliquidShadowControls($node);
	editorTemplate -endLayout;

	liqPopIdent();
}
// ------------------------------- spot light -----------------------------
global proc rmAddAttribute_spotLight(string $node)
{
	liqPushIdent();
	liqlog("rmAddAttribute_spotLight("+$node+")");

	_liquidCreateLightShadowAttributes($node);

	liqPopIdent();
}
//
global proc rmDeleteAttribute_spotLight(string $node)
{
	liqPushIdent();
	liqlog("rmDeleteAttribute_spotLight("+$node+")");
	
	//liquidDeleteLightShadowAttributes()

	liqPopIdent();
}
//
global proc liquidAETemplate_spotLight_renderman( string $node )
{
	liqPushIdent();
	liqAElog("liquidAETemplate_spotLight_renderman("+$node+")");

	editorTemplate -beginLayout (rm_getRendererName()) -collapse 1;
		AEliquidShadowControls($node);
	editorTemplate -endLayout;

	liqPopIdent();
}
// ------------------------------- volumeLight -----------------------------
global proc rmAddAttribute_volumeLight(string $node)
{
	liqPushIdent();
	liqlog("rmAddAttribute_volumeLight("+$node+")");

	_liquidCreateLightShadowAttributes($node);

	liqPopIdent();
}
//
global proc rmDeleteAttribute_volumeLight(string $node)
{
	liqPushIdent();
	liqlog("rmDeleteAttribute_volumeLight("+$node+")");
	
	//liquidDeleteLightShadowAttributes()

	liqPopIdent();
}
//
global proc liquidAETemplate_volumeLight_renderman( string $node )
{
	liqPushIdent();
	liqAElog("liquidAETemplate_volumeLight_renderman("+$node+")");

	editorTemplate -beginLayout (rm_getRendererName()) -collapse 1;
		AEliquidShadowControls($node);
	editorTemplate -endLayout;

	liqPopIdent();
}
// ------------------------------- shadingEngine  ----------------------
//invoked from liqMDGMessage_addNodeAddedCallback_renderman()
global proc rmAddAttribute_shadingEngine(string $node)
{
	liqPushIdent();
	liqlog("rmAddAttribute_shadingEngine("+$node+")");

	if ( !`attributeQuery -node $node -ex "liqShadowShader"` ) {
		addAttr -ln "liqShadowShader" -usedAsColor -at "float3" -k true $node;
		addAttr -ln "liqShadowShaderR" -at "float" -dv 1 -k true -parent "liqShadowShader" $node;
		addAttr -ln "liqShadowShaderG" -at "float" -dv 1 -k true -parent "liqShadowShader" $node;
		addAttr -ln "liqShadowShaderB" -at "float" -dv 1 -k true -parent "liqShadowShader" $node;
	}
	if ( !`attributeQuery -node $node -ex "liqEnvironmentShader"` ) {
		addAttr -ln "liqEnvironmentShader" -usedAsColor -at "float3" -k true $node;
		addAttr -ln "liqEnvironmentShaderR" -at "float" -dv 1 -k true -parent "liqEnvironmentShader" $node;
		addAttr -ln "liqEnvironmentShaderG" -at "float" -dv 1 -k true -parent "liqEnvironmentShader" $node;
		addAttr -ln "liqEnvironmentShaderB" -at "float" -dv 1 -k true -parent "liqEnvironmentShader" $node;
	}

	liqPopIdent();
}
//
global proc rmDeleteAttribute_shadingEngine(string $node)
{
	liqPushIdent();
	liqlog("rmDeleteAttribute_shadingEngine("+$node+")");

	liqDeleteAttr($node, "liqShadowShader");
	liqDeleteAttr($node, "liqEnvironmentShader");

	liqPopIdent();
}
global proc liquidAETemplate_shadingEngine_renderman( string $node )
{
	liqPushIdent();
	liqAElog("liquidAETemplate_shadingEngine_renderman("+$node+")");
		
	editorTemplate -beginLayout (rm_getRendererName()) -collapse 1;

		editorTemplate -callCustom "AEliqShaderNew" "AEliqShaderReplace" "liqShadowShader";
		editorTemplate -callCustom "AEliqShaderNew" "AEliqShaderReplace" "liqEnvironmentShader";

	editorTemplate -endLayout;

	liqPopIdent();
}
// ------------------------------- camera  -----------------------------
//invoked from liqMDGMessage_addNodeAddedCallback_renderman()
global proc rmAddAttribute_camera(string $node)
{
	liqPushIdent();
	liqlog("rmAddAttribute_camera("+$node+")");

	//global string $attrCameraShadowGroup[];
	//clear( $attrCameraShadowGroup ); // prevent warning: Global variable is already initialized
	//$attrCameraShadowGroup =
	//{
	//	"Shadow Resolution"       ,"liqShadowResolution",""	    ,"int"    ,512    ,""   ,""      
	//	,"MidPoint Shadow"        ,"liqMidPointShadow",""	      ,"bool"   ,0      ,"switch"   ,""  
	//	,"MidPoint Ratio"         ,"liqMidPointRatio",""	      ,"float"  ,0.1    ,""         ,"" 
	//	,"Deep Shadows"           ,"liqDeepShadows",""	  	    ,"bool"   ,0      ,"switch"   ,""  
	//	,"Pixel Samples"          ,"liqPixelSamples","" 		    ,"int"    ,1      ,"slider"   ,"0:256:1"  
	//	,"Volume Interpretation"  ,"liqVolumeInterpretation","" ,"int"    ,0      ,"selector" ,"Discreet=0:Continuous=1"  
	//	,"Display Mode"           ,"liqDeepShadowsDisplayMode","dshdm" ,"int"    ,0      ,"selector" ,"Default=0:deepprevdisttotal=1"     
	//	,"Every Frame"            ,"liqEveryFrame",""				    ,"bool"   ,1       ,"switch"   ,""  
	//	,"Render At Frame"        ,"liqRenderAtFrame",""		    ,"int"  	 ,0       ,""         ,"" 
	//	,"Geometry Set"           ,"liqGeometrySet",""			    ,"string" ,""      ,""         ,""  
	//	,"Shading Rate Factor"    ,"liqShadingRateFactor",""    ,"float"  ,1.0     ,""         ,""     
	//};
	addAttr -ln "liqShadowResolution"		/*-sn ""*/ -at "short"  -dv 512	-k true -s true -w true $node;
	addAttr -ln "liqMidPointShadow"			/*-sn ""*/ -at "bool"   -dv 0	-k true -s true -w true $node;
	addAttr -ln "liqMidPointRatio"			/*-sn ""*/ -at "float"  -dv 0.1	-k true -s true -w true $node;
	addAttr -ln "liqDeepShadows"			/*-sn ""*/ -at "bool"   -dv 0	-k true -s true -w true $node;
	addAttr -ln "liqPixelSamples"			/*-sn ""*/ -at "short"  -dv 1	-k true -s true -w true $node;//"0:256:1"
	addAttr -ln "liqVolumeInterpretation"   /*-sn ""*/ -at "enum"	-dv 0	-k true -s true -w true -enumName "Discreet=0:Continuous=1"       $node;//  
	addAttr -ln "liqDeepShadowsDisplayMode" -sn "dshdm" -at "enum"	-dv 0	-k true -s true -w true -enumName "Default=0:deepprevdisttotal=1" $node;//
	addAttr -ln "liqEveryFrame"				/*-sn ""*/ -at "bool"   -dv 1	-k true -s true -w true $node;
	addAttr -ln "liqRenderAtFrame"			/*-sn ""*/ -at "short"  -dv 0	-k true -s true -w true $node;
	addAttr -ln "liqGeometrySet"			/*-sn ""*/ -dt "string"	/*-dv ""*/ -k true -s true -w true $node;
	addAttr -ln "liqShadingRateFactor"		/*-sn ""*/ -at "float"  -dv 1.0	-k true -s true -w true $node;

	liqPopIdent();
}
//
global proc rmDeleteAttribute_camera(string $node)
{
	liqPushIdent();
	liqlog("rmDeleteAttribute_camera("+$node+")");

	deleteAttr -at "liqShadowResolution"	$node;
	deleteAttr -at "liqMidPointShadow"		$node;
	deleteAttr -at "liqMidPointRatio"		$node;
	deleteAttr -at "liqDeepShadows"			$node;
	deleteAttr -at "liqPixelSamples"		$node;
	deleteAttr -at "liqVolumeInterpretation"	$node;
	deleteAttr -at "liqDeepShadowsDisplayMode"	$node;
	deleteAttr -at "liqEveryFrame"			$node;
	deleteAttr -at "liqRenderAtFrame"		$node;
	deleteAttr -at "liqGeometrySet"			$node;
	deleteAttr -at "liqShadingRateFactor"	$node;

	liqPopIdent();
}
global proc liquidAETemplate_camera_renderman( string $node )
{
	liqPushIdent();
	liqAElog("liquidAETemplate_camera_renderman("+$node+")");
		
	editorTemplate -beginLayout (rm_getRendererName()) -collapse 1;
		editorTemplate -label "Shadow Resolution" -addControl "liqShadowResolution";
		editorTemplate -label "Mid-Point Shadow" -addControl "liqMidPointShadow";
		editorTemplate -label "Mid-Point Ratio" -addControl "liqMidPointRatio";
		editorTemplate -addSeparator;
		editorTemplate -label "Deep Shadows" -addControl "liqDeepShadows";
		editorTemplate -label "Pixel Samples" -addControl "liqPixelSamples";
		editorTemplate -label "Volume Interpretation" -addControl "liqVolumeInterpretation";
		editorTemplate -label "DeepShadowsDisplayMode" -addControl "liqDeepShadowsDisplayMode";
		editorTemplate -addSeparator;
		editorTemplate -label "Every Frame" -addControl "liqEveryFrame";
		editorTemplate -label "Render At Frame" -addControl "liqRenderAtFrame";
		editorTemplate -label "Geometry Set" -addControl "liqGeometrySet";
		editorTemplate -label "Shading Rate Factor" -addControl "liqShadingRateFactor";
	editorTemplate -endLayout;

	liqPopIdent();
}
// ------------------------------- transform  -----------------------------
global proc rmAddAttribute_transform(string $node)
{
	liqPushIdent();
	liqlog("rmAddAttribute_transform("+$node+")");

	//"Procedural"
	if ( !`attributeQuery -node $node -ex "liqGeoShader"` ) {
      addAttr -ln "liqGeoShader" -dt "float3" $node;
    }
	liqPopIdent();
}
//
global proc rmDeleteAttribute_transform(string $node)
{
	liqPushIdent();
	liqlog("rmDeleteAttribute_transform("+$node+")");
	
	//"Procedural"
	liqDeleteAttr($node, "liqGeoShader");

	liqPopIdent();
}
global proc liquidAETemplate_transform_renderman( string $node )
{
	liqPushIdent();
	liqAElog("liquidAETemplate_transform_renderman("+$node+")");

	editorTemplate -beginLayout (rm_getRendererName()) -collapse 1;
		
		liquidEditorTemplate_renderman($node);

		//"Procedural"
		editorTemplate -beginLayout "Procedural" -collapse true;
			editorTemplate -callCustom "AEliqShaderNew" "AEliqShaderReplace" "liqGeoShader";
		editorTemplate -endLayout;//"Procedural"

	editorTemplate -endLayout;




	liqPopIdent();
}