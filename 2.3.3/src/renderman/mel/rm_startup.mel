
source xxliquidutility.mel;

global proc liquidCreateMenus_renderman()
{
	liqPushIdent();
	liqlog("liquidCreateMenus_renderman()");
	
	string $iconPath = (liquidGetHome()+"/icons/");

	menuItem -d true;//------------------------------------
	menuItem -label "Add Render Pass"
               -subMenu true
               -tearOff false
               -postMenuCommand 
                ("rendermanBuildAddRenderPassMenu rendermanAddRenderPassMenu")
               rendermanAddRenderPassMenu;
    setParent -menu ..; // from submenu 
	//
	$cmd = "rendermanBuildRenderPassMenu(\"Select\", \"select\", 1)";
    menuItem -label "Select Render Pass"
               -subMenu true
               -tearOff false
               -postMenuCommand $cmd
               rendermanSelectRenderPassMenu;
    setParent -menu ..; // from submenu

	menuItem -d true;//------------------------------------
	  //[refactor liq|ui|1 -beg]  moved from 
	  menuItem -label "Attribute Manager..."   -command liquidAttributeManager -ann "Liquid attributes manager";
      liquidCreateObjectsAttributesMenu_renderman( "main" );
      liquidCreateLightsAttributesMenu_renderman( "main" );
      liquidCreateSetsAttributesMenu_renderman( "main" );
      liquidCreateShaderAttributesMenu_renderman( "main" );//ymesh not use this in r775
      menuItem -d true;
      menuItem -label "Subdivision Surfaces" -subMenu true -tearOff true -aob true;
        if ( !`optionVar -exists liqSubivMesh` ) optionVar -iv liqSubdiv true;
        if ( !`optionVar -exists liqSubdivFacevaryingUVs` ) optionVar -iv liqFacevaryingUVs false;
        if ( !`optionVar -exists liqSubdivInterpolateBoundary` ) optionVar -iv liqInterpolateBoundary true;
        if ( !`optionVar -exists liqSubdivCrease` ) optionVar -iv liqSubdivCrease 3;
        if ( !`optionVar -exists liqSubdivCorner` ) optionVar -iv liqSubdivCorner 3;
        if ( !`optionVar -exists liqSubdivHole` ) optionVar -iv liqSubdivHole true;
        if ( !`optionVar -exists liqSubdivStitch` ) optionVar -iv liqSubdivStitch 1; // unique curve ID for pair stitched surfaces
        menuItem -label "Tag as Subdivision Surface" -command liquidMakeSubdiv -aob true -ann "Tag selected mesh(es) as a subdivision surface";
        menuItem -c liquidMakeSubdivUI -ob true;
        menuItem -label "Untag as Subdivision Surface" -command liquidUnMakeSubdiv -ann "Untag subdivision surface tag from selected mesh(es)";
        menuItem -d true;
        menuItem -label "Add Crease" -command liquidSubdivCreaseApply -aob true -ann "Add creases to selected edges";
        menuItem -c liquidSubdivCreaseUI -ob true;
        menuItem -label "Add Corner" -command liquidSubdivCornerApply -aob true -ann "Add corners to selected vertices";
        menuItem -c liquidSubdivCornerUI -ob true;
        menuItem -label "Add Hole" -command liquidSubdivHoleApply -aob true -ann "Add holes to selected faces";
        menuItem -c liquidSubdivHoleUI -ob true;
        menuItem -label "Add Stitch Seam" -command liquidSubdivStitchApply -aob true -ann "Add Stitch to selected vertices (new tag in PRman 11)";
        menuItem -c liquidSubdivStitchUI -ob true;
        menuItem -d true;
        menuItem -label "Subdivison Surface Inspector..." -command liquidSubdivInspector;
      setParent -menu ..;
      //menuItem -label "Nurbs" -subMenu true -tearOff true;
      //	menuItem -label "Add noNormalizeNurbs attribute" -command liquidAddNoNormalizeNurbs -ann "Tag NURBS as NOT normalized";
      //setParent -menu ..;
      menuItem -label "Curves" -subMenu true -tearOff true;
        menuItem -label "Tag as Render Curve" -command liquidMakeRenderCurve -ann "Tag selected NURBS curve(s) as renderable";
        menuItem -label "Untag as Render Curve" -command liquidUnMakeRenderCurve -ann "Untag renderable tag from selected NURBS curve(s)";
        menuItem -label "Create Render Curve Group" -command liquidCreateCurveGroup -ann "Group multiple curves";
      setParent -menu ..;
      menuItem -label "Paint Effects" -subMenu true -tearOff true;
        menuItem -label "Add Paint Effects Attributes" -command liquidAddPFXAttributes -ann "Add Paint Effects Attributes Group to Stroke";
        menuItem -label "Remove Paint Effects Attributes" -command liquidRemovePFXAttributes -ann "Remove Paint Effects Attributes Group from Stroke";
      setParent -menu ..;
      menuItem -label "Reference Geometry" -subMenu true -tearOff true;
        menuItem -label "Freeze Reference Pose (__Pref)" -command liquidAddPrefAttribute -ann "Lock reference attribute (__Pref) to current position";
        menuItem -label "Delete Reference Pose" -command liquidDeletePrefAttribute -ann "Delete reference attribute (__Pref)";
        menuItem -d true;
        menuItem -label "Freeze Reference Normals (__Nref)" -command liquidAddNrefAttribute -ann "Lock reference attribute (__Nref) to current normals";
        menuItem -label "Delete Reference Normals" -command liquidDeleteNrefAttribute -ann "Delete reference attribute (__Nref)";
      setParent -menu ..;
      menuItem -d true;
      menuItem -label "Create Coordinate System" -command liquidAddCoordSystem;
      menuItem -label "Create Clipping Plane" -command liquidAddClipPlane;
	  menuItem -d true;
      menuItem -label "Helpers" -subMenu true -tearOff true;
        menuItem -label "Map Generators" -subMenu true -tearOff true -aob true;
          if ( !`optionVar -exists liqRefPoleAxis` ) optionVar -sv liqRefPoleAxis "XZ";
          if ( !`optionVar -exists liqRefPlaneSize` ) optionVar -iv liqRefPlaneSize 24;
          if ( !`optionVar -exists liqRefMapSize` ) optionVar -iv liqRefMapSize 512;
          if ( !`optionVar -exists liqRefShadingRate` ) optionVar -iv liqRefShadingRate 5;
          if ( !`optionVar -exists liqRefEveryFrame` ) optionVar -iv liqRefEveryFrame true;
          menuItem -label "Reflection" -aob true -command liquidAddReflection -ann "Add liquid Reflection map generator.";
          menuItem -ob true -command liquidAddReflectionUI -ann "Add liquid Reflection map generator.";
          if ( !`optionVar -exists liqEnvMapSize` ) optionVar -iv liqEnvMapSize 512;
          if ( !`optionVar -exists liqEnvShadingRate` ) optionVar -iv liqEnvShadingRate 5;
          if ( !`optionVar -exists liqEnvEveryFrame` ) optionVar -iv liqEnvEveryFrame true;
          menuItem -label "Environment" -aob true -command liquidAddEnvironment -ann "Add liquid Environment map generator.";
          menuItem -ob true -command liquidAddEnvironmentUI -ann "Add liquid Environment map generator.";
        setParent -menu ..;
        menuItem -d true;

        menuItem -label "View Last Generated RIB" -command liquidViewLastRib -image ($iconPath+"liquidViewLastRib.xpm");
        menuItem -label "View Last Render Script" -command liquidViewLastRenderScript;
        menuItem -d true;
        menuItem  -label "Convert Shading Network to RSL" -command liquidConvertShadingNetworkToRSL
                  -ann "Tries to convert selected hypershade shaders / networks to Sl, compile them and attach them";
        menuItem  -label "Convert MtoR to Liquid" -command liquidConvertMtor
                  -ann "Tries to convert any reference to MtoR/RAT in the scene into matching liquid assignments BASED ON CURRENT PALETTE";
        //ymesh not use this in r775:
	    menuItem -label "Shader Manager" -ann "Shader Source Manager" -command "liquidSLManager";
        menuItem -label "SL Search/Replace..." -ann "SL search/replace utility" -command "liquidSLEditor";
      setParent -menu ..;
      menuItem -label "External RIB" -subMenu true -tearOff true;
        menuItem -label "Add RIB Generator..." -command liquidAssignRibGenCMD;
        menuItem -label "Delete RIB Generator" -command liquidRibGenDelete;
        menuItem -d true;
        menuItem -label "Add RIB Box" -command liquidAddRibBox -ann "Add Additional RIB Node";
        menuItem -label "Add Ribbox node..." -command ("liquidNewRibboxNode \"\"") -ann "Add a Ribbox Node";
        menuItem -label "Delete RIB Box" -command liquidDeleteRibBox -ann "Remove Additional RIB node";
        menuItem -d true;
        menuItem -label "Add ReadArchive" -command liquidReadArchive -ann "Add A RiReadArchive node";
        menuItem -label "Delete ReadArchive" -command liquidDeleteReadArchive -ann "Remove A RiReadArchive node";
        menuItem -d true;
        menuItem -label "Add DelayedReadArchive" -command liquidDelayedReadArchive;
        menuItem -label "Delete DelayedReadArchive" -command liquidDeleteDelayedReadArchive;
        menuItem -d true;
        menuItem -label "Export Selected as RIB Archive" -ann "Write a RIB file for selected object only" -command "liquid -ra -sel";
        menuItem -label "Export Selected as RIB Archive Without Shaders" -enable false -ann "Write a RIB file for selected object only without shaders";
      setParent -menu ..;
	  //[refactor liq|ui|1 -end]

	liqPopIdent();
}

global proc liquidCreateObjectsAttributesMenu_renderman( string $prefix )
{
	liqPushIdent();
	liqlog("liquidCreateObjectsAttributesMenu_renderman("+$prefix+")");
  //[refactor liq|ui|2-beg] moved from liquidCreateObjectsAttributesMenu()
  menuItem -label "Object Attributes" -subMenu true -tearOff true;
    menuItem -label "Create Shading Group" -command liquidCreateShadingAttributes -ann "Add Shading attributes to selected Transform node(s)";
    menuItem -label "Shading Add" -subMenu true -tearOff true -postMenuCommand ("liquidMenuPostShadingAttributes "+$prefix);
      menuItem -label "Shading Rate"          -command liquidCreateShadingRateAttribute;
      menuItem -label "Color"                 -command liquidCreateColorAttribute;
      menuItem -label "Opacity"               -command liquidCreateOpacityAttribute;
      menuItem -label "Matte"                 -command liquidCreateMatteAttribute;
      menuItem -label "Camera Hit-Mode"       -command liquidCreateCameraHitModeAttribute;
      menuItem -label "Strategy"						-command liquidCreateStrategyAttribute;
      menuItem -label "VolumeIntersectionStrategy"      -command liquidCreateVolumeIntersectionStrategyAttribute;
      menuItem -label "VolumeIntersectionPriority"      -command liquidCreateVolumeIntersectionPriorityAttribute;
      menuItem -label "Raster-Oriented Dicing" -command "liquidCreateRasterOrientedDicingAttribute( 1 )";
      menuItem -label "Double Shaded" -command "liquidCreateDoubleShadedAttribute( 0 )";
      menuItem -label "Custom Shading Group" -command liquidCreateCustomSGAttribute;
    setParent -menu ..;
    menuItem -label "Remove Shading Group" -command liquidDeleteShadingAttributes -ann "Remove Shading attributes from selected Transform node(s)";
    menuItem -d true;
    menuItem -label "Create Visibility Group" -command liquidCreateVisibilityAttributes -ann "Add Visibility attributes to selected Transform node(s)";
    menuItem -label "Visibility Add" -subMenu true -tearOff true -postMenuCommand ("liquidMenuPostVisibilityAttributes "+$prefix);
      menuItem -label "Camera"            -command liquidCreateVisibilityCameraAttribute  ($prefix+"LiquidMenuItemVisibilityCamera");
      menuItem -label "Ray Tracer"        -command liquidCreateVisibilityTraceAttribute   ($prefix+"LiquidMenuItemVisibilityTrace");
      menuItem -label "Diffuse Rays"      -command liquidCreateVisibilityDiffuse          ($prefix+"LiquidMenuItemVisibilityDiffuse");
      menuItem -label "Specular Rays"     -command liquidCreateVisibilitySpecular         ($prefix+"LiquidMenuItemVisibilitySpecular");
      menuItem -label "Transmission Rays" -command liquidCreateVisibilityTransmission     ($prefix+"LiquidMenuItemVisibilityTransmission");
      menuItem -label "Photon"			  -command liquidCreateVisibilityPhoton           ($prefix+"LiquidMenuItemVisibilityPhoton");
      menuItem -label "Midpoint"          -command liquidCreateVisibilityMidpoint         ($prefix+"LiquidMenuItemVisibilityMidpoint");
    setParent -menu ..;
    menuItem -label "Remove Visibility Group" -command liquidDeleteVisibilityAttributes -ann "Remove Visibility attributes from selected Transform node(s)";
    menuItem -d true;
    menuItem -label "Create Ray Tracing Group" -command liquidCreateObjectRayTracingAttributes -ann "Add Ray Tracing attributes to selected Transform node(s)";
    menuItem -label "Ray Tracing Add" -subMenu true -tearOff true -postMenuCommand ("liquidMenuPostRaytracingAttributes "+$prefix) ($prefix+"LiquidMenuRaytracingSubMenu");
      menuItem -label "Sample Motion"         -command liquidCreateSampleMotionAttribute;
      menuItem -label "Trace Displacements"   -command liquidCreateTraceDisplacementsAttribute;
      menuItem -label "Trace Bias"            -command liquidCreateTraceBiasAttribute;
      menuItem -label "Maximum Diffuse Depth"     -command liquidCreateMaxDiffuseDepthAttribute;
      menuItem -label "Maximum Specular Depth"    -command liquidCreateMaxSpecularDepthAttribute;
      menuItem -label "Diffuse Hit-Mode"      -command liquidCreateHitModeDiffuseAttribute      ($prefix+"LiquidMenuItemDiffuseHitMode");
      menuItem -label "Specular Hit-Mode"     -command liquidCreateHitModeSpecularAttribute     ($prefix+"LiquidMenuItemSpecularHitMode");
      menuItem -label "Transmission Hit-Mode" -command liquidCreateHitModeTransmissionAttribute ($prefix+"LiquidMenuItemTransmissionHitMode");
    setParent -menu ..;
    menuItem -label "Remove Ray Tracing Group" -command liquidDeleteRayTracingAttributes -ann "Remove Ray Tracing attributes from selected Transform node(s)";
    menuItem -d true;
    menuItem -label "Create Global Illumination Group" -command  liquidCreateGlobalIlluminationAttributes -ann "Add Global Illumination attributes to selected Transform node(s)";
    menuItem -label "Remove Global Illumination Group" -command  liquidDeleteGlobalIlluminationAttributes -ann "Remove Global Illumination attributes from selected Transform node(s)";
    menuItem -d true;
    menuItem -label "Create PhotonMap Group" -command  liquidCreatePhotonAttributes -ann "Add Photon Mapping attributes to selected Transform node(s)";
    menuItem -label "Remove PhotonMap Group" -command  liquidDeletePhotonAttributes -ann "Remove Photon Mapping attributes from selected Transform node(s)";
    menuItem -d true;
    menuItem -label "Create Motion Blur Group" -command liquidCreateMotionBlurAttributes -ann "Add Motion Blur attributes to selected Transform node(s)";
    menuItem -label "Motion Blur Add" -subMenu true -tearOff true;
      menuItem -label "Transformation Blur" -command liquidCreateTransformationBlurAttribute;
      menuItem -label "Deformation Blur" -command liquidCreateDeformationBlurAttribute;
      menuItem -label "Motion Samples" -command liquidCreateMotionSamplesAttribute;
      menuItem -label "Motion Factor" -command liquidCreateMotionFactorAttribute;
    setParent -menu ..;
    menuItem -label "Remove Motion Blur Group" -command liquidDeleteMotionBlurAttributes -ann "Remove Motion Blur attributes from selected Transform node(s)";
    menuItem -d true;
    menuItem -label "Add PrePosterous" -subMenu true -tearOff true;
      menuItem -label "Pre Transform Mel" -command liquidCreatePreTransformMelAttribute;
      menuItem -label "Post Transform Mel" -command liquidCreatePostTransformMelAttribute;
      menuItem -label "Pre Shape Mel" -command liquidCreatePreShapeMelAttribute;
      menuItem -label "Post Shape Mel" -command liquidCreatePostShapeMelAttribute;
    setParent -menu ..;
    menuItem -label "Remove PrePosterous" -subMenu true -tearOff true;
      menuItem -label "Pre Transform Mel" -command liquidDeletePreTransformMelAttribute;
      menuItem -label "Post Transform Mel" -command liquidDeletePostTransformMelAttribute;
      menuItem -label "Pre Shape Mel" -command liquidDeletePreShapeMelAttribute;
      menuItem -label "Post Shape Mel" -command liquidDeletePostShapeMelAttribute;
    setParent -menu ..;
    menuItem -d true;
    menuItem -label "Create RIB Group" -command liquidCreateRIBAttributes -ann "Add RIB attributes to selected Transform node(s)";
    menuItem -label "RIB Add" -subMenu true -tearOff true;
      menuItem -label "RIB Box" -command liquidCreateRIBBoxAttribute;
      menuItem -label "RIB Generator" -command liquidCreateRIBGeneratorAttribute;
      menuItem -label "Read Archive" -command liquidCreateReadArchiveAttribute;
      menuItem -label "Delayed Read Archive" -command liquidCreateDelayedReadArchiveAttribute;
    setParent -menu ..;
    menuItem -label "Shadow RIB Add" -subMenu true -tearOff true;
      menuItem -label "Shadow RIB Box" -command liquidCreateShdRIBBoxAttribute;
      menuItem -label "Shadow RIB Generator" -command liquidCreateShdRIBGeneratorAttribute;
      menuItem -label "Shadow Read Archive" -command liquidCreateShdReadArchiveAttribute;
      menuItem -label "Shadow Delayed Read Archive" -command liquidCreateShdDelayedReadArchiveAttribute;
    setParent -menu ..;
    menuItem -label "Remove RIB Group" -command liquidDeleteRIBAttributes -ann "Remove RIB attributes from selected Transform node(s)";
    menuItem -label "Remove Shadow RIB Group" -command liquidDeleteShdRIBAttributes -ann "Remove Shadow RIB attributes from selected Transform node(s)";
    menuItem -d true;
    menuItem -label "Add Instancing" -command liquidCreateInstancingAttributes -ann "Add Instancing control to selected node";
    menuItem -label "Delete Instancing" -command liquidDeleteInstancingAttributes -ann "Remove Instancing control from selected Transform node(s)";
    menuItem -d true;
    menuItem -label "Create 3Delight Sub Surface Scattering Group" -command liquidCreate3DelightSubSurfaceScatteringAttributes -ann "Add 3Delight Sub Surface Scattering control to selected node";
    menuItem -label "Remove 3Delight Sub Surface Scattering Group" -command liquidDelete3DelightSubSurfaceScatteringAttributes -ann "Remove 3Delight Sub Surface Scattering control to selected node";
    menuItem -d true;
    menuItem -label "Add Liquid Invisible" -command liquidCreateLiquidInvisibleAttribute -ann "Add Liquid Invisible control to selected node";
    menuItem -label "Delete Liquid Invisible" -command liquidDeleteLiquidInvisibleAttribute -ann "Remove Liquid Invisible control to selected node";
    menuItem -d true;
    menuItem -label "Add Liquid Ignore Shapes" -command liquidCreateIgnoreShapesAttribute -ann "Add Liquid Ignore Shapes control to selected node";
    menuItem -label "Delete Liquid Ignore Shapes" -command liquidDeleteIgnoreShapesAttribute -ann "Remove Liquid Ignore Shapes control to selected node";
    menuItem -d true;
    menuItem -label "Create TrimCurve Group"    -command liquidCreateTrimCurveAttribute -ann "Add Trim Curve to selected node";
    menuItem -label "Trim Curve Add" -subMenu true -tearOff true -postMenuCommand ("liquidMenuPostTrimCurveAttribute "+$prefix);
      menuItem -label "sense" -command liquidCreateTrimCurveSenseAttribute ($prefix+"LiquidMenuItemTrimCurveSense");
    setParent -menu ..;
	menuItem -label "Remove TrimCurve Group" -command liquidDeleteTrimCurveAttribute -ann "Remove Trim Curve from selected node";
    menuItem -d true;
    menuItem -label "Create Stitch Group"    -command liquidCreateStitchAttribute -ann "Add Stitch to selected node";
    menuItem -label "Stitch Add" -subMenu true -tearOff true -postMenuCommand ("liquidMenuPostStitchAttribute "+$prefix);
      menuItem -label "enable"       -command liquidCreateStitchEnableAttribute      ($prefix+"LiquidMenuItemStitchEnable");
      menuItem -label "traceenable" -command liquidCreateStitchTraceEnableAttribute ($prefix+"LiquidMenuItemStitchTraceEnable");
      menuItem -label "newgroup"    -command liquidCreateStitchNewGroupAttribute    ($prefix+"LiquidMenuItemStitchNewGroup");
	setParent -menu ..;
	menuItem -label "Remove Stitch Group" -command liquidDeleteStitchAttribute -ann "Remove Stitch from selected node";
    menuItem -d true;
    menuItem -label "Create Stochastic Group"    -command liquidCreateStochasticAttribute -ann "Add Stochastic to selected node";
    menuItem -label "Stochastic Add" -subMenu true -tearOff true -postMenuCommand ("liquidMenuPostStochasticAttribute "+$prefix);
      menuItem -label "sigma"        -command liquidCreateStochasticSigmaAttribute        ($prefix+"LiquidMenuItemStochasticSigma");
      menuItem -label "pointfalloff" -command liquidCreateStochasticPointFallOffAttribute ($prefix+"LiquidMenuItemStochasticPointFallOff");
	setParent -menu ..;
	menuItem -label "Remove Stochastic Group" -command liquidDeleteStochasticAttribute -ann "Remove Stochastic from selected node";
    menuItem -d true;
    menuItem -label "Create Dice Group"    -command liquidCreateDiceAttributes -ann "Add Dice to selected node";
 //   menuItem -label "Stochastic Add" -subMenu true -tearOff true -postMenuCommand ("liquidMenuPostStochasticAttribute "+$prefix);
 //     menuItem -label "sigma"        -command liquidCreateStochasticSigmaAttribute        ($prefix+"LiquidMenuItemStochasticSigma");
 //     menuItem -label "pointfalloff" -command liquidCreateStochasticPointFallOffAttribute ($prefix+"LiquidMenuItemStochasticPointFallOff");
//	setParent -menu ..;
	menuItem -label "Remove Dice Group" -command liquidDeleteDiceAttributes -ann "Remove Dice control from selected node";
    menuItem -d true;
    menuItem -label "Create Derivatives Group" -command liquidCreateDerivativesAttributes -ann "Add Derivatives to selected node";
	menuItem -label "Remove Derivatives Group" -command liquidDeleteDerivativesAttributes -ann "Remove Derivatives from selected node";
    menuItem -d true;
    menuItem -label "Create Procedural Group" -command liquidCreateProceduralAttributes -ann "Add Procedural to selected node";
	menuItem -label "Remove Procedural Group" -command liquidDeleteProceduralAttributes -ann "Remove Procedural from selected node";
    menuItem -d true;
    menuItem -label "Create CustomShader" -command liquidCreateCustomShaderAttributes -ann "Add CustomShader to selected node";
	menuItem -label "Remove CustomShader" -command liquidDeleteCustomShaderAttributes -ann "Remove CustomShader from selected node";

  setParent -menu ..;
  //[refactor liq|ui|2-end] 

	liqPopIdent();
}
//
global proc liquidCreateLightsAttributesMenu_renderman( string $prefix )
{
	liqPushIdent();
	liqlog("liquidCreateLightsAttributesMenu_renderman("+$prefix+")");
  //[refactor liq|ui|3-beg] moved from liquidCreateLightsAttributesMenu()
  menuItem -label "Light Attributes" -subMenu true -tearOff true;
    menuItem -label "Create Area Light Attributes" -command liquidCreateAreaLightAttributes -ann "Add Area Light attributes to selected Light shape node(s)";
    menuItem -label "Remove Area Light Attributes" -command liquidDeleteAreaLightAttributes -ann "Remove Area Light attributes from selected Light shape node(s)";
    menuItem -d true;
    menuItem -label "Create Shadow Attributes" -command liquidCreateLightShadowAttributes -ann "Add shadow attributes to selected Light shape node(s)";
    menuItem -label "Remove Shadow Attributes" -command liquidDeleteLightShadowAttributes -ann "Remove shadow attributes from selected Light shape node(s)";
    menuItem -d true;
    menuItem -label "Create Output Attributes" -command liquidCreateLightOutputAttributes -ann "Add output attributes to selected Light shape node(s)";
    menuItem -label "Remove Output Attributes" -command liquidDeleteLightOutputAttributes -ann "Remove output attributes from selected Light shape node(s)";
    menuItem -d true;
    menuItem -label "Create Decay Region Attributes" -command liquidCreateDecayRegionAttributes -ann "Add Decay Region attributes to selected Light shape node(s)";
    menuItem -label "Remove Decay Region Attributes" -command liquidDeleteDecayRegionAttributes -ann "Remove Decay Region attributes from selected Light shape node(s)";
    menuItem -d true;
    menuItem -label "Create Shadow RIB Attributes" -command liquidCreateLightShadowRIBAttributes -ann "Add Shadow RIB attributes to selected Light shape node(s)";
    menuItem -label "Remove Shadow RIB Attributes" -command liquidDeleteLightShadowRIBAttributes -ann "Remove Shadow RIB attributes from selected Light shape node(s)";
    menuItem -d true;
    menuItem -label "Create Ray Tracing Group" -command liquidCreateLightRayTracingAttributes -ann "Add Ray Tracing attributes to selected Light Transform node(s)";
    menuItem -label "Ray Tracing Add" -subMenu true -tearOff true;
      menuItem -label "Sample Motion" -command liquidCreateSampleMotionAttribute;
      menuItem -label "Trace Displacements" -command liquidCreateTraceDisplacementsAttribute;
      menuItem -label "Trace Bias" -command liquidCreateTraceBiasAttribute;
    setParent -menu ..;
    menuItem -label "Remove Ray Tracing Group" -command liquidDeleteRayTracingAttributes -ann "Remove Ray Tracing attributes from selected Light Transform node(s)";
    menuItem -d true;
    menuItem -label "Add Z-Threshold" -command liquidAddZThres -ann "Add a z-threshold control to selected light(s)";
    menuItem -label "Delete Z-Threshold" -command liquidRemoveZThres -ann "Remove a z-threshold control from selected light(s)";
  
  setParent -menu ..;
  //[refactor liq|ui|3-end]

	liqPopIdent();
}
//
global proc liquidCreateSetsAttributesMenu_renderman( string $prefix )
{
  liqPushIdent();
	liqlog("liquidCreateSetsAttributesMenu_renderman("+$prefix+")");
  menuItem -label "Set Attributes" -subMenu true -tearOff true;
    menuItem -label "Add Trace Set Attribute" -command liquidCreateSetAttributes -ann "Add Set attributes to the selected Set node(s)";
    menuItem -label "Delete Trace Set Attribute" -command liquidDeleteSetAttributes -ann "Remove Set attributes from selected Set node(s)";
  setParent -menu ..;
  liqPopIdent();
}
global proc liquidCreateShaderAttributesMenu_renderman( string $prefix )
{ 
 liqPushIdent();
	liqlog("liquidCreateShaderAttributesMenu_renderman("+$prefix+")");
  menuItem -label "Shader Attributes" -subMenu true -tearOff true;
    menuItem -label "Add RIBBox" -command liquidCreateShaderRIBBox -ann "Add a RIBBox on selected shader(s)";
    menuItem -label "Remove RIB Group" -command liquidRemoveShaderRIBBox -ann "Remove all RIBBox attributes";
  setParent -menu ..;
  liqPopIdent();
}
//
//
global proc
rendermanBuildRenderPassMenu(
  string $partial_menu_name, 
  string $command, 
  int $add_last_rendered_item)
{
  string $menu_name = "renderman" + $partial_menu_name + "RenderPassMenu";
  
  // Delete all existing items from the menu, since we are going to rebuild it
  // completely.
  //
  menu -edit -deleteAllItems $menu_name;

  // Get a list of all render pass nodes that exist in the scene.
  //
  string $render_passes[] = LRP_getAllRenderPasses();
  
  if (size($render_passes) > 0)
  {
    if ($add_last_rendered_item)
    {
      // Add to the menu a menu item that lets the user re-render the most 
      // recently rendered pass.
      //
      //addLastRenderedMenuItem($menu_name, $command);
    }
    
    global int $gMaxNumOptionMenuItems;

    if (size($render_passes) < $gMaxNumOptionMenuItems)
    {
      // Add to the menu a menu item for each render pass in the scene.
      //
      for ($render_pass in $render_passes)
      {
        menuItem 
          -label $render_pass
          -parent $menu_name
          -annotation ($partial_menu_name + " " + $render_pass)
          -command ($command + " " + $render_pass);
      }
    }
    else
    {
      // There are too many items in the scene to put in one menu. 
      // Instead, we offer the user the option of opening a dialog 
      // from which they can choose one
      //
      //menuItem
      //  -enableCommandRepeat false
      //  -label "Too many items. Choose from dialog..."
      //  -parent $menu_name
      //  -command
      //    ("DL_optionMenuChoiceDlg "
      //      + DL_stringArrayAsString($render_passes)
      //      + " \"" + $partial_menu_name + "\""
      //      + " \"" + $command + "\"");
    }
  }
  else
  {
    // No render passes exist in the scene. Add only one item to the menu,
    // which tells the user there are no render passes.
    //
    menuItem 
      -label "<no render passes>"
      -enable false
      -annotation "No 3Delight render passes in scene"
      -parent $menu_name;
  }
}
//
global proc
rendermanBuildAddRenderPassMenu(string $menu)
{
  // Delete all existing items from the menu, since we are going to rebuild it
  // completely.
  //
  menu -edit -deleteAllItems $menu;

  menuItem -label "Full"
    -annotation "Add new render pass with all possible attributes"
    -command "select `RM_createFullRenderPassNode`"
    -parent $menu;
  //menuItem -label "Basic"
  //  -annotation "Add new render pass with basic attributes"
  //  -command "select `DL_createBasicRenderPassNode`"
  //  -parent $menu;

  menuItem -divider true -parent $menu;
  
  //delightBuildRenderPassTemplatesMenuItems($menu);
}
//
global proc string
RM_createFullRenderPassNode()
{
  // Create an render pass node with all attributes and call the user's init 
  // procedure with it.
  //
  //string $node = DRP_createNode();
  //DL_addAttributeGroup($node, "mainAttrGrp");
  //$node = `rename $node "fullRenderPass"`;

  //if (`delightExists -user "DL_userRenderPassInit"`)
  //  eval("DL_userRenderPassInit \"" + $node + "\"");
  string $node = `createNode rendermanGlobals`;
  return $node;
}
//
global proc rmLiquidLoadGlobals()
{
	liqPushIdent();
	liqlog("rmLiquidLoadGlobals()");

	//setAttr "liquidGlobals.renderer"		-type "string" (rm_getRendererName());

	setAttr "liquidGlobals.renderCommand"	-type "string" "renderdl";
	setAttr "liquidGlobals.previewer"		-type "string" "renderdl";
	setAttr "liquidGlobals.shaderInfo"		-type "string" "shaderinfo";
	setAttr "liquidGlobals.shaderComp"		-type "string" "shaderdl";
	setAttr "liquidGlobals.shaderExt"		-type "string" "sdl";
	setAttr "liquidGlobals.makeTexture"		-type "string" "tdlmake";
	setAttr "liquidGlobals.viewTexture"		-type "string" "i-display";
	setAttr "liquidGlobals.textureExt"		-type "string" "tdl";

	setAttr "liquidGlobals.dshDisplayName"	-type "string" "deepshad";
	setAttr "liquidGlobals.dshImageMode"		-type "string" "deepopacity";

	setAttr "liquidGlobals.Hidden" yes;
	setAttr "liquidGlobals.Photon" yes;
	setAttr "liquidGlobals.ZBuffer" no;
	setAttr "liquidGlobals.Raytrace" no;
	setAttr "liquidGlobals.OpenGL" no;
	setAttr "liquidGlobals.DepthMask" yes;

	setAttr "liquidGlobals.Box" yes;
	setAttr "liquidGlobals.Triangle" yes;
	setAttr "liquidGlobals.Catmull_Rom" yes;
	setAttr "liquidGlobals.Gaussian" yes;
	setAttr "liquidGlobals.Sinc" yes;
	setAttr "liquidGlobals.Blackman_Harris" yes;
	setAttr "liquidGlobals.Mitchell" yes;
	setAttr "liquidGlobals.SeparableCatmull_Rom" yes;
	setAttr "liquidGlobals.Lanczos" no;
	setAttr "liquidGlobals.Bessel" no;
	setAttr "liquidGlobals.Disk" no;

	setAttr "liquidGlobals.Blobbies" yes;
	setAttr "liquidGlobals.Points" yes;
	setAttr "liquidGlobals.Eyesplits" yes;
	setAttr "liquidGlobals.Raytracing" yes;
	setAttr "liquidGlobals.DepthOfField" yes;
	setAttr "liquidGlobals.AdvancedVisibility" yes;
	setAttr "liquidGlobals.DisplayChannels" no;

	setAttr "liquidGlobals.Swap_UV" no;
	setAttr "liquidGlobals.__Pref" no;
	setAttr "liquidGlobals.MakeShadow" no;

	liqPopIdent();
}
//
global proc liquidStartup_renderman()
{
	liqPushIdent();
	liqlog("liquidStartup_renderman()");

	//set liquidGlobals.renderer
	liqSetSubRendererName(rm_getRendererName());
	//create global node for this renderer
	liqGlobalsNodeRendererMain();

	rmLiquidLoadGlobals();

	//update menu
	liquidCreateMenus();
	liquidShaderNodes_AERefresh();

	liqPopIdent();
}
//
global proc liquidShutdown_renderman()
{
	liqPushIdent();
	liqlog("liquidShutdown_renderman()");

	//liquidAddAttributeExtension_renderman();
	//rmLiquidUnloadGlobals();

	liqPopIdent();
}