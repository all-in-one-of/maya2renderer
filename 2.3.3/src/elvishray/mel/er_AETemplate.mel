source xxliquidutility.mel;

//============================================================================
//	light
//============================================================================
// --------------------------- point light -----------------------------------
global proc erAddAttributeExtension_pointlight()
{
	liqPushIdent();
	liqlog("erAddAttributeExtension_pointlight()");

	addExtension -nt "pointLight" -ln "ei_area_samples" -sn "sam" -at "long" -dv 16 -k true -s true -w true -fromPlugin 1;
	addExtension -nt "pointLight" -ln "ei_adaptive"     -sn "adp" -at "bool" -dv 0  -k true -s true -w true -fromPlugin 1;

	liqPopIdent();
}
//
global proc erDeleteAttributeExtension_pointlight()
{
	liqPushIdent();
	liqlog("erDeleteAttributeExtension_pointlight()");
	
	deleteExtension -nt "pointLight" -at "ei_area_samples" -forceDelete on;
	deleteExtension -nt "pointLight" -at "ei_adaptive"     -forceDelete on;

	liqPopIdent();
}
//invoked from liqMDGMessage_addNodeAddedCallback_elvishray()
global proc erAddAttribute_pointlight(string $node)
{
	liqPushIdent();
	liqlog("erAddAttribute_pointlight("+$node+")");

	addAttr -ln "ei_area_samples" -sn "sam" -at "long" -dv 16 -k true -s true -w true $node;
	addAttr -ln "ei_adaptive"     -sn "adp" -at "bool" -dv 0  -k true -s true -w true $node;

	liqPopIdent();
}
//
global proc erDeleteAttribute_pointlight(string $node)
{
	liqPushIdent();
	liqlog("erDeleteAttribute_pointlight("+$node+")");
	
	deleteAttr -at "ei_area_samples" $node;
	deleteAttr -at "ei_adaptive"     $node;

	liqPopIdent();
}
//
global proc liquidAETemplate_pointLight_elvishray( string $node )
{
	liqPushIdent();
	liqAElog("liquidAETemplate_pointLight_elvishray("+$node+")");

	editorTemplate -beginLayout (er_getRendererName()) -collapse 1;
		editorTemplate -addDynamicControl "ei_area_samples";
		editorTemplate -addDynamicControl "ei_adaptive";	
	editorTemplate -endLayout;


	liqPopIdent();
}
// ------------------------------- area light -----------------------------
//invoked from liqMDGMessage_addNodeAddedCallback_elvishray()
global proc erAddAttribute_areaLight(string $node)
{
	liqPushIdent();
	liqlog("erAddAttribute_areaLight("+$node+")");

	addAttr -ln "ei_area_samples" -sn "sam" -at "long" -dv 16 -k true -s true -w true $node;
	addAttr -ln "ei_adaptive"     -sn "adp" -at "bool" -dv 0  -k true -s true -w true $node;

	liqPopIdent();
}
//
global proc erDeleteAttribute_areaLight(string $node)
{
	liqPushIdent();
	liqlog("erDeleteAttribute_areaLight("+$node+")");
	
	deleteAttr -at "ei_area_samples" $node;
	deleteAttr -at "ei_adaptive"     $node;

	liqPopIdent();
}
//
global proc liquidAETemplate_areaLight_elvishray( string $node )
{
	liqPushIdent();
	liqAElog("liquidAETemplate_areaLight_elvishray("+$node+")");

	editorTemplate -beginLayout (er_getRendererName()) -collapse 1;
		editorTemplate -addDynamicControl "ei_area_samples";
		editorTemplate -addDynamicControl "ei_adaptive";	
	editorTemplate -endLayout;


	liqPopIdent();
}
// ------------------------------- directional light ----------------------
global proc erAddAttribute_directionalLight(string $node)
{
	liqPushIdent();
	liqlog("erAddAttribute_directionalLight("+$node+")");

	addAttr -ln "ei_area_samples" -sn "sam" -at "long" -dv 16 -k true -s true -w true $node;
	addAttr -ln "ei_adaptive"     -sn "adp" -at "bool" -dv 0  -k true -s true -w true $node;

	liqPopIdent();
}
//
global proc erDeleteAttribute_directionalLight(string $node)
{
	liqPushIdent();
	liqlog("erDeleteAttribute_directionalLight("+$node+")");
	
	deleteAttr -at "ei_area_samples" $node;
	deleteAttr -at "ei_adaptive"     $node;

	liqPopIdent();
}
//
global proc liquidAETemplate_directionalLight_elvishray( string $node )
{
	liqPushIdent();
	liqAElog("liquidAETemplate_directionalLight_elvishray("+$node+")");

	editorTemplate -beginLayout (er_getRendererName()) -collapse 1;
		editorTemplate -addDynamicControl "ei_area_samples";
		editorTemplate -addDynamicControl "ei_adaptive";	
	editorTemplate -endLayout;


	liqPopIdent();
}
// ------------------------------- spot light -----------------------------
global proc erAddAttribute_spotLight(string $node)
{
	liqPushIdent();
	liqlog("erAddAttribute_spotLight("+$node+")");

	addAttr -ln "ei_area_samples" -sn "sam" -at "long" -dv 16 -k true -s true -w true $node;
	addAttr -ln "ei_adaptive"     -sn "adp" -at "bool" -dv 0  -k true -s true -w true $node;

	liqPopIdent();
}
//
global proc erDeleteAttribute_spotLight(string $node)
{
	liqPushIdent();
	liqlog("erDeleteAttribute_spotLight("+$node+")");
	
	deleteAttr -at "ei_area_samples" $node;
	deleteAttr -at "ei_adaptive"     $node;

	liqPopIdent();
}
//
global proc liquidAETemplate_spotLight_elvishray( string $node )
{
	liqPushIdent();
	liqAElog("liquidAETemplate_spotLight_elvishray("+$node+")");

	editorTemplate -beginLayout (er_getRendererName()) -collapse 1;
		editorTemplate -addDynamicControl "ei_area_samples";
		editorTemplate -addDynamicControl "ei_adaptive";	
	editorTemplate -endLayout;


	liqPopIdent();
}
// ------------------------------- volumeLight -----------------------------
global proc erAddAttribute_volumeLight(string $node)
{
	liqPushIdent();
	liqlog("erAddAttribute_volumeLight("+$node+")");

	addAttr -ln "ei_area_samples" -sn "sam" -at "long" -dv 16 -k true -s true -w true $node;
	addAttr -ln "ei_adaptive"     -sn "adp" -at "bool" -dv 0  -k true -s true -w true $node;

	liqPopIdent();
}
//
global proc erDeleteAttribute_volumeLight(string $node)
{
	liqPushIdent();
	liqlog("erDeleteAttribute_volumeLight("+$node+")");
	
	deleteAttr -at "ei_area_samples" $node;
	deleteAttr -at "ei_adaptive"     $node;

	liqPopIdent();
}
//
global proc liquidAETemplate_volumeLight_elvishray( string $node )
{
	liqPushIdent();
	liqAElog("liquidAETemplate_volumeLight_elvishray("+$node+")");

	editorTemplate -beginLayout (er_getRendererName()) -collapse 1;
		editorTemplate -addDynamicControl "ei_area_samples";
		editorTemplate -addDynamicControl "ei_adaptive";	
	editorTemplate -endLayout;


	liqPopIdent();
}
// ------------------------------- camera  -----------------------------
//invoked from liqMDGMessage_addNodeAddedCallback_elvishray()
global proc erAddAttribute_camera(string $node)
{
	liqPushIdent();
	liqlog("erAddAttribute_camera("+$node+")");

	if ( !`attributeQuery -node $node -ex "liqEnvironmentShader"` ) {
	  addAttr -ln "liqEnvironmentShader" -usedAsColor -at "float3" -k true $node;
	  addAttr -ln "liqEnvironmentShaderR" -at "float" -dv 1 -k true -parent "liqEnvironmentShader" $node;
	  addAttr -ln "liqEnvironmentShaderG" -at "float" -dv 1 -k true -parent "liqEnvironmentShader" $node;
	  addAttr -ln "liqEnvironmentShaderB" -at "float" -dv 1 -k true -parent "liqEnvironmentShader" $node;
	}
	if ( !`attributeQuery -node $node -ex "liqLensShader"` ) {
	  addAttr -ln "liqLensShader" -usedAsColor -at "float3" -k true $node;
	  addAttr -ln "liqLensShaderR" -at "float" -dv 1 -k true -parent "liqLensShader" $node;
	  addAttr -ln "liqLensShaderG" -at "float" -dv 1 -k true -parent "liqLensShader" $node;
	  addAttr -ln "liqLensShaderB" -at "float" -dv 1 -k true -parent "liqLensShader" $node;
	}
	liqPopIdent();
}
//
global proc erDeleteAttribute_camera(string $node)
{
	liqPushIdent();
	liqlog("erDeleteAttribute_camera("+$node+")");
	
	liqDeleteAttr($node, "liqEnvironmentShader");
	liqDeleteAttr($node, "liqLensShader");

	liqPopIdent();
}
//
global proc liquidAETemplate_camera_elvishray( string $node )
{
	liqPushIdent();
	liqAElog("liquidAETemplate_camera_elvishray("+$node+")");
		
	editorTemplate -beginLayout (er_getRendererName()) -collapse 1;
		editorTemplate -callCustom
				"AEliqShaderNew" "AEliqShaderReplace" 
				"liqEnvironmentShader";
		editorTemplate -callCustom
				"AEliqShaderNew" "AEliqShaderReplace" 
				"liqLensShader";
	editorTemplate -endLayout;

	liqPopIdent();
}
// ------------------------------- transform  -----------------------------
//invoked from liqMDGMessage_addNodeAddedCallback_elvishray()
global proc erAddAttribute_transform(string $node)
{
	liqPushIdent();
	liqlog("erAddAttribute_transform("+$node+")");

	if ( !`attributeQuery -node $node -ex "liqGeoShader"` ) {
      addAttr -ln "liqGeoShader" -dt "float3" $node;
    }
	liqPopIdent();
}
//
global proc erDeleteAttribute_transform(string $node)
{
	liqPushIdent();
	liqlog("erDeleteAttribute_transform("+$node+")");
	
	if ( `attributeQuery -node $node -ex "liqGeoShader"` ) 
	{
		// philippe: this is a fix to deal with a bug with compound attributes
		renameAttr ( $node + ".liqGeoShader" ) "TO_BE_DELETED";
		deleteAttr ( $node + ".TO_BE_DELETED" );
	}

	liqPopIdent();
}
global proc liquidAETemplate_transform_elvishray( string $node )
{
	liqPushIdent();
	liqAElog("liquidAETemplate_transform_elvishray("+$node+")");

	editorTemplate -beginLayout (er_getRendererName()) -collapse 1;
      //editorTemplate -label "liqGeoShader"    -addDynamicControl "liqGeoShader";
      editorTemplate 
		  -callCustom 
			"AEliqInstanceFlagsGeometryNew"
			"AEliqInstanceFlagsGeometryReplace"
			"message";
	editorTemplate -endLayout;

	liqPopIdent();
}