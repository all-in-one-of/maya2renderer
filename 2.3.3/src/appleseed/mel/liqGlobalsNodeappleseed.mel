source xxliquidutility.mel;
source liqGlobalsNodeRenderer.mel;

global string $gWindow_appleseed="liqGlobalWindow_appleseed";
global string $gGlobalNode_appleseed="liqGlobalsNodeRenderer_appleseed";
global string $gGlobalValue_appleseed[]=
{
	//environment
	"env_model",				"long","0"// 0:generic_environment
	,"env_edf_model",			"long","0"//0:constant_environment_edf, 1:constant_hemisphere_environment_edf, 2:gradient_environment_edf, 3:latlong_map_environment_edf, 4:mirrorball_map_environment_edf
	,"constant_environment_edf_exitance",				"color","0.0|0.0|0.0"
	,"constant_hemisphere_environment_edf_exitance",	"color","0.0|0.0|0.0"
	,"gradient_environment_edf_horizon_exitance",		"color","0.0|0.0|0.0"
	,"gradient_environment_edf_zenith_exitance",		"color","0.0|0.0|0.0"
	,"latlong_map_environment_edf_exitance",			"color","0.0|0.0|0.0"
	,"mirrorball_map_environment_edf_exitance",			"color","0.0|0.0|0.0"
	,"env_shader_model",		"long","0"// 0:edf_environment_shader

	//frame
	,"framename",          "string",	"beauty"
	//,"resolution",   "string",	"640|480"
	,"tile_size",		"string",	"32|32"
	,"pixel_format",	"long",		"4"//default is float
	,"color_space",		"long",		"0"//default is linear_rgb
	,"clamping",		"bool",		"0"//default is false
	,"gamma_correction","float",	"1"//default is 1.0

	//configurations
	,"useFinal",					"bool",	false
	//final
	,"final_frame_renderer",		"long",	"0"//0:generic, 1:progressive
	,"final_tile_renderer",			"long",	"0"//0:generic, 1:blank, 2:debug, 3:ewatest
	,"final_sample_renderer",		"long",	"0"//0:generic
	,"final_sample_generator",		"long",	"0"//0:generic, 1:lighttracing
	,"final_lighting_engine",		"long",	"1"//0:dr, 1:tpt
	//final:generic_tile_renderer
	,"final_min_samples",			"long",	"1"
	,"final_max_samples",			"long",	"1"
	,"final_sample_filter_size",	"long",	"4"
	,"final_sample_filter_type",	"long",	"0"//0:mitchell,1:box
	//interactive
	,"interactive_frame_renderer",		"long",	"1"//0:generic, 1:progressive
	,"interactive_tile_renderer",		"long",	"0"//0:generic, 1:blank, 2:debug, 3:ewatest
	,"interactive_sample_renderer",		"long",	"0"//0:generic 
	,"interactive_sample_generator",	"long",	"0"//0:generic, 1:lighttracing
	,"interactive_lighting_engine",		"long",	"1"//0:dr, 1:tpt
	//interactive:generic_tile_renderer
	,"interactive_min_samples",			"long",	"1"
	,"interactive_max_samples",			"long",	"1"
	,"interactive_sample_filter_size",	"long",	"1"
	,"interactive_sample_filter_type",	"long",	"1"//0:mitchell,1:box

	//other
	,"export_mesh_to",	"string",	""//,
	,"export_mesh_facet_groups",	"bool",	true
	,"export_mesh_vertex_groups",	"bool",	true
	,"export_mesh_materials",		"bool",	true
	,"export_mesh_smoothing",		"bool",	true
	,"export_mesh_normals",			"bool",	true
	,"light_intensity_factor",		"float","30"
	//,"testBool1",            "bool",			false
	//,"testString0",            "string",		"string_test_value0"
	//,"testString1",            "string",		"string_test_value1"
	//,"testColor0",            "color",		"1.0|1.0|0.0"
	//,"testColor1",            "color",		"1.9|9.0|2.0"
	//,"testInt0",            "long",		"0"
	//,"testInt1",            "long",		"10"
	//,"testFloat0",          "float",	"0.0"
	//,"testFloat1",            "float",	"10.0"
	//,"testIntMenu0",           "long",	"0"
	//,"testIntMenu1",           "long",	"1"
	//,"testStringArray",      "stringArray",  "xx|yyy|zzzzzz|aaa"//,
	//long
	//float
	//boolArray,""


};
proc sayHello()
{
	liqlog("Hi, this is appleseed global panel.");
}
//
proc createGlobalNode_appleseed()
{
	liqPushIdent();
	liqlog("createGlobalNode_appleseed()");
	global string $gGlobalNode_appleseed;
	global string $gGlobalValue_appleseed[];

    string $gGlobal = xxu_getSingletonNode2( "liqGlobalsNodeRenderer", getGlobalNodeName() );
	liqAssert($gGlobal==$gGlobalNode_appleseed,"global node name error");

	//add global values 
	liquidAddGlobals2($gGlobalNode_appleseed, $gGlobalValue_appleseed);

	liqPopIdent();
}
// modified from liquidGlobalsFrameTab()
proc liquidGlobalsTab_appleseed_AA( string $prefix )
{
  liqPushIdent();
	liqlog("liquidGlobalsTab_appleseed_AA("+$prefix+")");
	global string $gGlobalNode_appleseed;
	string $n = $gGlobalNode_appleseed;
  ////setUITemplate -pushTemplate attributeEditorTemplate;
  string $previousParent = `setParent -q`;

  columnLayout -adj true -vis false ($prefix + "liquidGlobalsFrameSet"+liqGetRendererName());
    
	//evironment
    frameLayout -bs "etchedIn" -l "environment" -cll true -cl false;
	  liquidShowIntGlobalMenu2($n, "env_model", "model", {"generic_environment"}, $prefix);
      columnLayout -adj true ;
	    //edf
	    frameLayout -bs "etchedIn" -l "edf" -cll true -cl false;
		  columnLayout -adj true ;
				liquidShowIntGlobalMenu2($n, "env_edf_model", "model", 
				{"constant_environment_edf",
				"constant_hemisphere_environment_edf",
				"gradient_environment_edf",
				"latlong_map_environment_edf",
				"mirrorball_map_environment_edf"}, $prefix);
				liquidShowColorGlobal2Button($n, "constant_environment_edf_exitance",			"constant_exitance");
				liquidShowColorGlobal2Button($n, "constant_hemisphere_environment_edf_exitance","constant_hemisphere_exitance");			
				liquidShowColorGlobal2Button($n, "gradient_environment_edf_horizon_exitance",	"gradient_horizon_exitance");
				liquidShowColorGlobal2Button($n, "gradient_environment_edf_zenith_exitance",	"gradient_zenith_exitance");
				liquidShowNaviColorGlobal2($n, "latlong_map_environment_edf_exitance",			"latlong_map_exitance");
				liquidShowNaviColorGlobal2($n, "mirrorball_map_environment_edf_exitance",		"mirrorball_map_exitance");
          setParent ..;
        setParent ..;
		//shader
	    frameLayout -bs "etchedIn" -l "shader" -cll true -cl false;
		  columnLayout -adj true ;
		  		liquidShowIntGlobalMenu2($n, "env_shader_model", "model", 
				{"edf_environment_shader"}, $prefix);
          setParent ..;
        setParent ..;

      setParent ..;
    setParent ..;

    //frame
    frameLayout -bs "etchedIn" -l "frame" -cll true -cl false;
      columnLayout -adj true ;
        liquidShowStringGlobal2($n, "framename",		"framename",		$prefix);
        liquidShowTextGlobal2($n, "resolution", "see RenderSettings->liquid->Frame->Resolution");
        liquidShowStringGlobal2($n, "tile_size",		"tile_size",		$prefix);
        liquidShowIntGlobalMenu2($n, "pixel_format", "pixel_format", 
		{"uint8",
		"uint16",
		"uint32",
		"half",
		"float",
		"double"}, $prefix);
        liquidShowIntGlobalMenu2($n, "color_space", "color_space", 
		{"linear_rgb",
		"srgb",
		"ciexyz"}, $prefix);
        liquidShowBoolGlobal2($n, "clamping", "clamping", $prefix);
        liquidShowFloatGlobal2($n, "gamma_correction", "gamma_correction");
        //liquidShowFloatGlobal2($n, "testFloat0", "testFloat0L");
        //liquidShowBoolGlobal2($n, "testBool0", "testBool0L", $prefix);
        //liquidShowStringGlobal2($n, "testString0", "testString0L", $prefix);
        //liquidShowIntGlobal2($n, "testInt0", "testInt0L");

        //liquidShowColorGlobal2($n, "testColor0", "testColor0L");
        //liquidShowIntGlobalMenu2($n, "testIntMenu0", "Preview Type", {"A", "B C", "DE"}, $prefix);

      setParent ..;
    setParent ..;

	//configuration
	frameLayout -bs "etchedIn" -l "configurations" -cll true -cl false;
        liquidShowBoolGlobal2($n, "useFinal", "useFinal", $prefix);
		//final
		frameLayout -bs "etchedIn" -l "final" -cll true -cl false;
		  columnLayout -adj true ;
			liquidShowIntGlobalMenu2($n, "final_frame_renderer", "final_frame_renderer",	
			{"generic",
			"progressive"},$prefix);
			liquidShowIntGlobalMenu2($n, "final_tile_renderer",	"tile_renderer",
			{"generic",
			"blank",
			"debug",
			"ewatest"},	$prefix);
			liquidShowIntGlobalMenu2($n, "final_sample_renderer","sample_renderer",	
			{"generic"},$prefix);
			liquidShowIntGlobalMenu2($n, "final_sample_generator","sample_generator",	
			{"generic",
			"lighttracing"},$prefix);
			liquidShowIntGlobalMenu2($n, "final_lighting_engine","lighting_engine",	
			{"dr",
			"pt"},$prefix);
			
			frameLayout -bs "etchedIn" -l "generic_tile_renderer" -cll true -cl false;
				columnLayout -adj true ;
				liquidShowIntGlobal2($n, "final_min_samples",	"min_samples");
				liquidShowIntGlobal2($n, "final_max_samples",	"max_samples");
				liquidShowIntGlobal2($n, "final_sample_filter_size","sample_filter_size");
				liquidShowIntGlobalMenu2($n, "final_sample_filter_type","sample_filter_type",
				{"mitchell",
				"box"},$prefix);
				setParent ..;
			setParent ..;

		  setParent ..;
		setParent ..;

		//interactive
		frameLayout -bs "etchedIn" -l "interactive" -cll true -cl false;
		  columnLayout -adj true ;
			liquidShowIntGlobalMenu2($n, "interactive_frame_renderer", "frame_renderer",	
			{"generic",
			"progressive"},$prefix);
			liquidShowIntGlobalMenu2($n, "interactive_tile_renderer",	"tile_renderer",
			{"generic",
			"blank",
			"debug",
			"ewatest"},	$prefix);
			liquidShowIntGlobalMenu2($n, "interactive_sample_renderer","sample_renderer",	
			{"generic"},$prefix);
			liquidShowIntGlobalMenu2($n, "interactive_sample_generator","sample_generator",	
			{"generic",
			"lighttracing"},$prefix);
			liquidShowIntGlobalMenu2($n, "interactive_lighting_engine","lighting_engine",	
			{"dr",
			"pt"},$prefix);
			
			frameLayout -bs "etchedIn" -l "generic_tile_renderer" -cll true -cl false;
				columnLayout -adj true ;
				liquidShowIntGlobal2($n, "interactive_min_samples",	"min_samples");
				liquidShowIntGlobal2($n, "interactive_max_samples",	"max_samples");
				liquidShowIntGlobal2($n, "interactive_sample_filter_size","sample_filter_size");
				liquidShowIntGlobalMenu2($n, "interactive_sample_filter_type","sample_filter_type",
				{"mitchell",
				"box"},$prefix);
				setParent ..;
			setParent ..;

		  setParent ..;
		setParent ..;
		//
	setParent ..;

    frameLayout -bs "etchedIn" -l "others" -cll true -cl false;
      columnLayout -adj true ;
	    liquidShowStringGlobal2($n, "export_mesh_to",		"export_mesh_to",		$prefix);
        liquidShowBoolGlobal2($n, "export_mesh_facet_groups",  "export_mesh_facet_groups", $prefix);
        liquidShowBoolGlobal2($n, "export_mesh_vertex_groups", "export_mesh_vertex_groups", $prefix);
        liquidShowBoolGlobal2($n, "export_mesh_materials",     "export_mesh_materials", $prefix);
        liquidShowBoolGlobal2($n, "export_mesh_smoothing",     "export_mesh_smoothing", $prefix);
        liquidShowBoolGlobal2($n, "export_mesh_normals",       "export_mesh_normals", $prefix);
		liquidShowFloatGlobal2($n, "light_intensity_factor", "light_intensity_factor");
//         liquidShowIntGlobalMenu2($n, "approx_method", "method",
// 		{"EI_APPROX_METHOD_NONE",
// 		"EI_APPROX_METHOD_REGULAR",
// 		"EI_APPROX_METHOD_LENGTH"}, $prefix);
// 		liquidShowIntGlobal2($n,	"approx_any",		"any");
// 		liquidShowIntGlobal2($n,	"approx_view_dep",	"view_dep");
//         liquidShowStringGlobal2($n, "approx_args",		"args[0~4]",	$prefix);
//         liquidShowFloatGlobal2($n,	"approx_sharp",		"sharp");
// 		liquidShowIntGlobal2($n,	"approx_min_subdiv",	"min_subdiv");
// 		liquidShowIntGlobal2($n,	"approx_max_subdiv",	"max_subdiv");
// 		liquidShowIntGlobal2($n,	"approx_max_grid_size",	"max_grid_size");
//         liquidShowFloatGlobal2($n,	"approx_motion_factor", "motion_factor");

        //liquidShowStringGlobal2($n, "testString1", "testString1L", $prefix);

        //liquidShowFloatGlobal2($n, "testFloat1", "testFloat1L");
        //liquidShowColorGlobal2($n, "testColor1", "testColor1L");
      setParent ..;
    setParent ..;

  setParent ..;
  //setParent ..;

  columnLayout -e -vis true ($prefix + "liquidGlobalsFrameSet"+liqGetRendererName());
  setParent $previousParent;

  //if ( `layout -q -ex liquidGlobalsTab` ) setParent liquidGlobalsTab;
  ////setUITemplate -popTemplate;
  liqPopIdent();
}
// modified from liquidCreateMayaGlobalsTab()
//proc liquidCreateGlobalsTab_appleseed( string $prefix, string $name, string $tabCallback )
//{
//  liqPushIdent();
//	liqlog("liquidCreateGlobalsTab_appleseed("+$prefix+","+$name+")");
//  // sanity check : we need valid globals
//  xxu_getSingletonNode2( "liqGlobalsNodeRenderer", getGlobalNodeName() );
//
//  string $theTabLayout = ( $prefix + "liquidGlobalNode_appleseed_TabLayout" );
//
//  setParent $theTabLayout;
//  evalEcho($tabCallback); //evalEcho ("liquidGlobals"+$name+"Tab_"+liqGetRendererName()+"( \""+$prefix+"\");");//tab callback
//  string $newlayout = ($prefix+"liquidGlobals"+$name+"Set"+liqGetRendererName());
//  if ( `layout -q -ex $newlayout` ) tabLayout -e -tabLabel $newlayout $name $theTabLayout;
//
//  liqPopIdent();
//}
// modified from liquidCreateGlobalsTab()
//proc createGlobalNodeWindow_appleseed()
//{
//	liqPushIdent();
//	liqlog("createGlobalNodeWindow_appleseed()");
//	
//	global string $gWindow_appleseed;
//
//	string $currentParent = `setParent -q`;
//
//		$rnd = `getAttr liquidGlobals.renderer`;
//		window 
//			-title $rnd
//			-iconName "Short Name"
//			-widthHeight 200 55
//			$gWindow_appleseed;
//
//		//setParent $unifiedRendererTabName;
//		string $prefix = `liquidGetCurrentRenderLayerName`;
//		// create the main tab layout
//		if ( `about -win` == true ) {
//			columnLayout -adjustableColumn false ($prefix+"liquidTabColumn"+$rnd);
//		} else {
//			columnLayout -adjustableColumn true ($prefix+"liquidTabColumn"+$rnd);
//		}
//		// build the content of the globals
//		string $theTabLayout = ( $prefix + "liquidGlobalNode_appleseed_TabLayout" );
//
//		string $cmd;
//		if ( `about -win` == true ) {
//			$cmd = ("evalDeferred -lp \"tabLayout -e -w (`window -q -w unifiedRenderGlobalsWindow`-12) -h (`window -q -h unifiedRenderGlobalsWindow`-200) "+$theTabLayout+"\";");
//		} else {
//			$cmd = ("tabLayout -e -w (`window -q -w unifiedRenderGlobalsWindow`) -h (`window -q -h unifiedRenderGlobalsWindow`-170) "+$theTabLayout+";");
//		}
//		tabLayout -scrollable true -minChildWidth 200
//				//-cc $cmd  -sc $cmd  -dcc $cmd
//				$theTabLayout;
//
//		string $LAYOUT = "liquidTabLayout_appleseed";
//		if ( `layout -q -ex $LAYOUT` ) layout -e -vis false $LAYOUT;
//
//
//
//		liquidCreateGlobalsTab_appleseed( $prefix, "AA", 
//			"liquidGlobalsTab_appleseed_AA( \""+$prefix+"\");" );
//		//liquidCreateGlobalsTab_appleseed( $prefix, "BB",
//		//	"liquidGlobalsTab_appleseed_BB( \""+$prefix+"\");");
//		
//		// set up the tab so that it may resize and auto-build.
//		if ( `layout -q -ex $LAYOUT` ) {
//			tabLayout -e 
//				//-cc $cmd -sc $cmd -dcc $cmd 
//				$LAYOUT;
//		}
//		tabLayout -e 
//			//-psc ("liquidCreateMayaGlobalsTabContent( \""+$prefix+"\" );") 
//			$theTabLayout;
//
//		if ( `layout -q -ex $LAYOUT` ) 
//			layout 
//				-e 
//				-vis true 
//				$LAYOUT;
//
//	setParent $currentParent;
//	liqPopIdent();
//}
//
proc createGlobalNodeWindow_appleseed2()
{
	liqPushIdent();
	liqlog("createGlobalNodeWindow_appleseed2()");
	
	global string $gWindow_appleseed;

	//string $currentParent = `setParent -q`;

		$rnd = `getAttr liquidGlobals.renderer`;
		window 
			-title ($rnd+" Global Values")
			-iconName "Short Name"
			-widthHeight 200 55
			$gWindow_appleseed;

		columnLayout;

		xxu_getSingletonNode2( "liqGlobalsNodeRenderer", getGlobalNodeName() );
		liquidGlobalsTab_appleseed_AA( "" );
		//liquidCreateGlobalsTab_appleseed( $prefix, "BB",
		//	"liquidGlobalsTab_appleseed_BB( \""+$prefix+"\");");
		


	//setParent $currentParent;
	liqPopIdent();
}
//
proc getSingletonWindow(string $window)
{
	liqPushIdent();
	liqlog("getSingletonWindow("+$window+")");

	if(`window -q -exists $window`)
	{
		liqlog($window +" already exists.\n");
	}else{
		//createGlobalNodeWindow_appleseed();
		createGlobalNodeWindow_appleseed2();
	}
	//showWindow $window;

	liqPopIdent();
}
//
proc showGlobalNodeWindow_appleseed()
{
	liqPushIdent();
	liqlog("showGlobalNodeWindow_appleseed()");

	global string $gWindow_appleseed;

	getSingletonWindow($gWindow_appleseed);
	showWindow $gWindow_appleseed;

	liqPopIdent();
}
proc hideGlobalNodeWindow_appleseed()
{
	liqPushIdent();
	liqlog("hideGlobalNodeWindow_appleseed()");
	liqPopIdent();
}

//
global proc liqGlobalsNode_appleseed(string $cmd)
{
	liqPushIdent();
	liqlog("liqGlobalsNode_appleseed("+$cmd+")");

	global string $gWindow_appleseed;

	sayHello();
	
	if($cmd=="create") {
		createGlobalNode_appleseed();	
	}
	else if($cmd=="show"){
		showGlobalNodeWindow_appleseed();
	}

	liqPopIdent();
}
//