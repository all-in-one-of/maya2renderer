##context
##ei_verbose(6);
link "eiIMG"
link "eiSHADER"
link "eiSHADER_maya"
##----------------shader_for_test begin---
shader "maya_surfaceShader" "liquid_shader_for_test" 
    param_vector "o_outColor" 1.000000 0.000000 0.000000
end shader
material "liquid_material_for_test" 
surface_shader "liquid_shader_for_test" 
end material
##----------------shader_for_test end ---
##    Generated by Liquid v2.3.5
##    Scene : R:/MyDocuments/maya/projects/default/onehair
##    User  : yaoyansi

################################# option #
options "perspShape_option" 
    contrast 0.05 
    samples 0 16 
    filter 4 3 
    ei_progressive 1 
##transform motion=0, deform motion=0
    motion 0 
    trace_depth 4 4 4 4 4 4 
    displace 0 
    face 3 
end options

shader "maya_lambert" "lambert1" 
    param_vector "i_ambientColor" 0.000000 0.000000 0.000000
    param_vector "i_color" 0.898000 0.539042 0.132904
    param_scalar "i_diffuse" 0.8 
    param_vector "i_incandescence" 0.000000 0.000000 0.000000
    param_index "i_matteOpacityMode" 2 
    param_scalar "i_matteOpacity" 1 
    param_bool "i_refractions" 0 
    param_scalar "i_refractiveIndex" 1 
    param_index "i_refractionLimit" 6 
    param_scalar "i_lightAbsorbance" 0 
    param_scalar "i_shadowAttenuation" 0.5 
    param_int "liq_UserDefinedNormal" 0 
    param_vector "i_normalCamera" 1.000000 1.000000 1.000000
    param_vector "i_transparency" 0.000000 0.000000 0.000000
    param_scalar "i_translucence" 0 
    param_scalar "i_translucenceDepth" 0.5 
    param_scalar "i_translucenceFocus" 0.5 
    param_vector "o_outColor" 0.000000 0.000000 0.000000
    param_vector "o_outTransparency" 0.000000 0.000000 0.000000
end shader

material "initialShadingGroup" 
surface_shader "lambert1" 
end material


##worldPrologue

## Renderer::exportLight("_pointLight1_pointLightShape1");

## Renderer::exportPointLight()
shader "pointlight" "|pointLight1|pointLightShape1_shader" 
    param_vector "lightcolor" 1.000000 1.000000 1.000000
    param_scalar "intensity" 1 
end shader
light "|pointLight1|pointLightShape1_object" 
light_shader "|pointLight1|pointLightShape1_shader" 
origin 0 0 0 
end light
instance "|pointLight1|pointLightShape1" 
element "|pointLight1|pointLightShape1_object" 
transform 1 0 0 0    0 1 0 0    0 0 1 0    0 6.93427 0 1 
declare "|pPlane3_lightgroup" "const" "int" 
declare "|pPlane4_lightgroup" "const" "int" 
end instance

## maya settings: focal=35.000000, aperture = 36.000000, aspect=1.333333
##Depth of Field on camera "|persp|perspShape" is turned off in Maya

################################# camera #
camera "|persp|perspShape" 
##beauty channel
    output "R:/MyDocuments/maya/projects/default/rmanpix/onehair.perspShape.1.ElvishRender.bmp" "bmp" "rgb" 
##mode=rgb
    output_variable "color" "vector" 
end output
## AOV
## AOV end
    focal 35 
    aperture 36 
    aspect 1.33333 
    resolution 768 576 
    clip 1 100000 
end camera

## Renderer::exportOneGeometry_Mesh(|pPlane3|pPlaneShape3, 0, 0

################################# mesh #
##shape full path name=|pPlane3|pPlaneShape3
##### UV(map1), size=4
### numUVSets=1
### uvsetNames[0]=map1
### uvsetFamilyNames[0]=map1
object "|pPlane3|pPlaneShape3" "poly" 
pos_list 6
-0.627226 -0.000000 1.026787
0.627226 -0.000000 1.026787
-0.627226 0.000000 -1.026787
-0.627226 0.000000 -1.026787
0.627226 -0.000000 1.026787
0.627226 0.000000 -1.026787
nrm_list 6
0.000000 1.000000 0.000000
0.000000 1.000000 0.000000
0.000000 1.000000 0.000000
0.000000 1.000000 0.000000
0.000000 1.000000 0.000000
0.000000 1.000000 0.000000
uv_list 6
0.000000 0.000000 0.000000
0.610863 0.000000 0.000000
0.000000 1.000000 0.000000
0.000000 1.000000 0.000000
0.610863 0.000000 0.000000
0.610863 1.000000 0.000000
triangle_list 6
0 1 2
3 4 5
end object

## Renderer::exportOneGeometry_Mesh(|pfxHair2|pfxHairShape2,0,0

################################# mesh #
##shape full path name=|pfxHair2|pfxHairShape2
##OutputESS::liq_hair() is not implemented.

## Renderer::exportOneGeometry_Mesh(|pPlane4|pPlaneShape4, 0, 0

################################# mesh #
##shape full path name=|pPlane4|pPlaneShape4
##### UV(map1), size=4
### numUVSets=1
### uvsetNames[0]=map1
### uvsetFamilyNames[0]=map1
object "|pPlane4|pPlaneShape4" "poly" 
pos_list 6
-1.438215 -0.000000 2.918313
1.438215 -0.000000 2.918313
-1.438215 0.000000 -2.918313
-1.438215 0.000000 -2.918313
1.438215 -0.000000 2.918313
1.438215 0.000000 -2.918313
nrm_list 6
0.000000 1.000000 0.000000
0.000000 1.000000 0.000000
0.000000 1.000000 0.000000
0.000000 1.000000 0.000000
0.000000 1.000000 0.000000
0.000000 1.000000 0.000000
uv_list 6
0.000000 0.000000 0.000000
0.492824 0.000000 0.000000
0.000000 1.000000 0.000000
0.000000 1.000000 0.000000
0.492824 0.000000 0.000000
0.492824 1.000000 0.000000
triangle_list 6
0 1 2
3 4 5
end object
##|persp|perspShape is not lighted.
##--------------------------
##ribNode->name=|persp|perspShape
##ribNode's transform node=|persp
##ribNode->object(0)->getDataPtr()->getFullPathName()=|persp|perspShape
instance "|persp" 
##|persp|perspShape's shading group is empty, use "liquid_material_for_test" to avoid crash
mtl "liquid_material_for_test" 
##shape name=|persp|perspShape
##shape full path name=|persp|perspShape
element "|persp|perspShape" 
transform -0.928486 -3.46945e-018 -0.371368 0    -0.0487197 0.991357 0.121808 0    0.368158 0.13119 -0.920461 0    1.41331 0.788518 -3.05829 1 
##bMotionBlur=0, bGeometryMotion=0
    motion 0 
declare "lightgroup"  "const"  "token" 
variable "lightgroup" "|persp_lightgroup" 
end instance

##--------------------------
##ribNode->name=|pPlane3|pPlaneShape3
##ribNode's transform node=|pPlane3
##ribNode->object(0)->getDataPtr()->getFullPathName()=|pPlane3|pPlaneShape3
instance "|pPlane3" 
##|pPlane3|pPlaneShape3 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
##materials are: initialShadingGroup,
mtl "initialShadingGroup" 
##shape name=|pPlane3|pPlaneShape3
##shape full path name=|pPlane3|pPlaneShape3
element "|pPlane3|pPlaneShape3" 
transform 1 0 0 0    0 1 0 0    0 0 1 0    -0.104414 0 1.59073 1 
##bMotionBlur=0, bGeometryMotion=0
    motion 0 
declare "lightgroup"  "const"  "token" 
variable "lightgroup" "|pPlane3_lightgroup" 
end instance

##|pfxHair2|pfxHairShape2 is not lighted.
##--------------------------
##ribNode->name=|pfxHair2|pfxHairShape2
##ribNode's transform node=|pfxHair2
##ribNode->object(0)->getDataPtr()->getFullPathName()=|pfxHair2|pfxHairShape2
instance "|pfxHair2" 
##|pfxHair2|pfxHairShape2's shading group is empty, use "liquid_material_for_test" to avoid crash
mtl "liquid_material_for_test" 
##shape name=|pfxHair2|pfxHairShape2
##shape full path name=|pfxHair2|pfxHairShape2
element "|pfxHair2|pfxHairShape2" 
transform 1 0 0 0    0 1 0 0    0 0 1 0    -0.213447 0 -0.114497 1 
##bMotionBlur=0, bGeometryMotion=0
    motion 0 
declare "lightgroup"  "const"  "token" 
variable "lightgroup" "|pfxHair2_lightgroup" 
end instance

##--------------------------
##ribNode->name=|pPlane4|pPlaneShape4
##ribNode's transform node=|pPlane4
##ribNode->object(0)->getDataPtr()->getFullPathName()=|pPlane4|pPlaneShape4
instance "|pPlane4" 
##|pPlane4|pPlaneShape4 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
##materials are: initialShadingGroup,
mtl "initialShadingGroup" 
##shape name=|pPlane4|pPlaneShape4
##shape full path name=|pPlane4|pPlaneShape4
element "|pPlane4|pPlaneShape4" 
transform 1 0 -0 0    -0 -0.00338668 -0.999994 0    0 0.999994 -0.00338668 0    -1.45353 0 4.93474 1 
##bMotionBlur=0, bGeometryMotion=0
    motion 0 
declare "lightgroup"  "const"  "token" 
variable "lightgroup" "|pPlane4_lightgroup" 
end instance

##Renderer::worldEpilogue()
instgroup "perspShape" 
##camera
add_instance "|persp" 
##light(s)
add_instance "|pointLight1|pointLightShape1" 
##mesh(s)
add_instance "|pPlane3" 
add_instance "|pPlane4" 
add_instance "|pfxHair2" 
end instgroup
##ei_connection(con);
##ei_render( "perspShape", "|persp", "perspShape_option" );
render "perspShape" "|persp" "perspShape_option"
##end context
##------------------------------------------------

