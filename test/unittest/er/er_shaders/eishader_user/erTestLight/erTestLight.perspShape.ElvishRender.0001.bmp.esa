//------------------------------------------------
char *null_token = NULL;
eiInt defaultInt = 0;
//------------------------------------------------

ei_context();
ei_verbose(6);
ei_link("eiIMG");
ei_link("eiSHADER");
ei_link("eiSHADER_maya");
ei_link("eiSHADER_user");
//----------------shader_for_test begin---
ei_shader("maya_surfaceShader", "liquid_shader_for_test");
ei_shader_param_vector("o_outColor",1,0,0);
ei_end_shader();
ei_material("liquid_material_for_test");
ei_surface_shader("liquid_shader_for_test");
ei_end_material();
//----------------shader_for_test end ---
//    Generated by Liquid v2.3.5
//    Scene : R:/MyDocuments/maya/projects/default/erTestLight
//    User  : yaoyansi

//############################### option #
ei_options("perspShape_option");
ei_contrast(0.05);
ei_samples(0,16);
ei_filter(4,3);
ei_progressive(1);
//transform motion=0, deform motion=0
ei_motion(0);
ei_trace_depth(4,4,4,4,4,4);
ei_displace(0);
ei_face(3);
ei_end_options();

ei_shader("maya_lambert", "lambert1");
ei_shader_param_vector("i_ambientColor",0,0,0);
ei_shader_param_vector("i_color",0.5,0.5,0.5);
ei_shader_param_scalar("i_diffuse",0.8);
ei_shader_param_vector("i_incandescence",0,0,0);
ei_shader_param_index("i_matteOpacityMode",2);
ei_shader_param_scalar("i_matteOpacity",1);
ei_shader_param_bool("i_refractions",0);
ei_shader_param_scalar("i_refractiveIndex",1);
ei_shader_param_index("i_refractionLimit",6);
ei_shader_param_scalar("i_lightAbsorbance",0);
ei_shader_param_scalar("i_shadowAttenuation",0.5);
ei_shader_param_int("liq_UserDefinedNormal",0);
ei_shader_param_vector("i_normalCamera",1,1,1);
ei_shader_param_vector("i_transparency",0,0,0);
ei_shader_param_scalar("i_translucence",0);
ei_shader_param_scalar("i_translucenceDepth",0.5);
ei_shader_param_scalar("i_translucenceFocus",0.5);
ei_shader_param_vector("o_outColor",0,0,0);
ei_shader_param_vector("o_outTransparency",0,0,0);
ei_end_shader();

ei_material("initialShadingGroup");
ei_surface_shader("lambert1");
ei_end_material();


//worldPrologue

// Renderer::exportLight("_spotLight1_spotLightShape1");

ei_shader("erTestLight", "erTestLight1");
ei_shader_param_vector("lightcolor",0,1,1);
ei_shader_param_scalar("intensity",1);
ei_end_shader();

ei_light("|spotLight1|spotLightShape1_object");
ei_light_shader("erTestLight1");
ei_origin(0,0,0);
ei_area_samples(16);
ei_adaptive(0);
ei_end_light();
ei_instance("|spotLight1|spotLightShape1");
ei_element("|spotLight1|spotLightShape1_object");
ei_transform(1,0,-0,0,   -0,0.74982,-0.661642,0,   0,0.661642,0.74982,0,   0,3.04663,5.11321,1);
ei_declare("|pPlane1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_end_instance();

// maya settings: focal=35.000000, aperture = 36.000000, aspect=1.333333
//Depth of Field on camera "|persp|perspShape" is turned off in Maya

//############################### camera #
ei_camera("|persp|perspShape");
//beauty channel
ei_output("R:/MyDocuments/maya/projects/default/rmanpix/erTestLight.perspShape.ElvishRender.0001.bmp","bmp",1);
//mode=rgb
ei_output_variable("color",11);
ei_end_output();
// AOV
// AOV end
ei_focal(35);
ei_aperture(36);
ei_aspect(1.33333);
ei_resolution(200,150);
ei_clip(1,100000);
ei_end_camera();

// Renderer::exportOneGeometry_Mesh(|pPlane1|pPlaneShape1, 0, 0

//############################### mesh #
//shape full path name=|pPlane1|pPlaneShape1
//### UV(map1), size=4
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|pPlane1|pPlaneShape1" );
{
eiTag tag;
//vertex positions(required), size=6
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -6.966161, -0.000000, 6.780350 );
ei_tab_add_vector( 6.966161, -0.000000, 6.780350 );
ei_tab_add_vector( -6.966161, 0.000000, -6.780350 );
ei_tab_add_vector( -6.966161, 0.000000, -6.780350 );
ei_tab_add_vector( 6.966161, -0.000000, 6.780350 );
ei_tab_add_vector( 6.966161, 0.000000, -6.780350 );
ei_end_tab();
//### N ###(optional)
tag = eiNULL_TAG;
ei_declare("N", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_variable("N", &tag);
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_end_tab();
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.000000, 0.000000 );
ei_tab_add_vector2( 1.000000, 0.000000 );
ei_tab_add_vector2( 0.000000, 0.973327 );
ei_tab_add_vector2( 0.000000, 0.973327 );
ei_tab_add_vector2( 1.000000, 0.000000 );
ei_tab_add_vector2( 1.000000, 0.973327 );
ei_end_tab();
//### triangles(required) size=6
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_end_tab();
}//|pPlane1|pPlaneShape1
ei_end_object();
//|persp|perspShape is not lighted.
//--------------------------
//ribNode->name=|persp|perspShape
//ribNode's transform node=|persp
//ribNode->object(0)->getDataPtr()->getFullPathName()=|persp|perspShape
ei_instance("|persp");
//|persp|perspShape's shading group is empty, use "liquid_material_for_test" to avoid crash
ei_mtl("liquid_material_for_test");
//shape name=|persp|perspShape
//shape full path name=|persp|perspShape
ei_element("|persp|perspShape");
ei_transform(0.707107,2.77556e-017,-0.707107,0,   -0.331295,0.883452,-0.331295,0,   0.624695,0.468521,0.624695,0,   28,21,28,1);
//bMotionBlur=0, bGeometryMotion=0
ei_motion(0);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|persp_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|pPlane1|pPlaneShape1
//ribNode's transform node=|pPlane1
//ribNode->object(0)->getDataPtr()->getFullPathName()=|pPlane1|pPlaneShape1
ei_instance("|pPlane1");
//|pPlane1|pPlaneShape1 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: initialShadingGroup,
ei_mtl("initialShadingGroup");
//shape name=|pPlane1|pPlaneShape1
//shape full path name=|pPlane1|pPlaneShape1
ei_element("|pPlane1|pPlaneShape1");
ei_transform(1,0,0,0,   0,1,0,0,   0,0,1,0,   1.00549,0,0.687316,1);
//bMotionBlur=0, bGeometryMotion=0
ei_motion(0);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|pPlane1_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//Renderer::worldEpilogue()
ei_instgroup("perspShape");
//camera
ei_add_instance("|persp");
//light(s)
ei_add_instance("|spotLight1|spotLightShape1");
//mesh(s)
ei_add_instance("|pPlane1");
ei_end_instgroup();
//ei_connection(con);
//ei_render( "perspShape", "|persp", "perspShape_option" );
ei_render( "perspShape", "|persp", "perspShape_option" );
ei_end_context();
//------------------------------------------------

