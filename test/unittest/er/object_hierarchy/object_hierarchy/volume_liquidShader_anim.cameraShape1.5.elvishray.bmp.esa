//------------------------------------------------
char *null_token = NULL;
eiInt defaultInt = 0;
//------------------------------------------------

ei_context();
ei_verbose(6);
ei_link("eiIMG");
ei_link("eiSHADER");
ei_link("eiSHADER_maya");
//----------------shader_for_test begin---
ei_shader("maya_surfaceShader", "liquid_shader_for_test");
ei_shader_param_vector("outColor",1,0,0);
ei_end_shader();
ei_material("liquid_material_for_test");
ei_surface_shader("liquid_shader_for_test");
ei_end_material();
//----------------shader_for_test end ---
//    Generated by Liquid v2.3.5 (buildtime=20:51:12.30)
//    Scene : R:/MyDocuments/maya/projects/default/volume_liquidShader_anim
//    User  : yaoyansi

//############################### option #
ei_options("cameraShape1_option");
ei_contrast(0.05);
ei_samples(0,16);
ei_filter(4,3);
//transform motion=0, deform motion=0
ei_motion(0);
ei_trace_depth(4,4,4,4,4,4);
ei_displace(0);
ei_face(3);
ei_end_options();
// maya settings: focal=35.000000, aperture = 41.599998, aspect=1.333333
//Depth of Field on camera "|camera1_group|camera1|cameraShape1" is turned off in Maya

//############################### camera #
ei_camera("|camera1_group|camera1|cameraShape1_object");
//beauty channel
ei_output("R:/MyDocuments/maya/projects/default/rmanpix/volume_liquidShader_anim.cameraShape1.1.elvishray.bmp","bmp",1);
//mode=rgba
ei_output_variable("color",11);
ei_end_output();
// AOV
// AOV end
ei_focal(35);
ei_aperture(32);
ei_aspect(1.33333);
ei_resolution(200,150);
ei_clip(0.1,10000);
ei_end_camera();
//----------------------------------
ei_instance("|camera1_group|camera1|cameraShape1");
ei_element("|camera1_group|camera1|cameraShape1_object");
ei_transform(0.999739,-4.33681e-019,-0.0228392,0,   -0.00451738,0.980244,-0.197739,0,   0.022388,0.19779,0.979989,0,   0.195826,4.55134,8.45828,1);
ei_end_instance();

ei_shader("volume_shell", "liquidShader3");
ei_end_shader();

ei_shader("simple_volume", "liquidShader2");
ei_shader_param_vector("vol_color",1,1,0);
ei_shader_param_scalar("vol_density",5);
ei_shader_param_scalar("step_size",0.2);
ei_shader_param_scalar("vol_radius",3);
ei_shader_param_vector("vol_offset",0,0,0);
ei_shader_param_scalar("absorption",0.3);
ei_shader_param_scalar("anisotropic",0.4);
ei_end_shader();

ei_shader("shadowvol_shell", "liquidShader1");
ei_end_shader();

ei_material("liquidShader3SG");
ei_surface_shader("liquidShader3");
ei_volume_shader("liquidShader2" );
ei_shadow_shader("liquidShader1" );
ei_end_material();
ei_shader("maya_phong", "phong1");
ei_shader_param_vector("color_",0.803922,0.664462,0.110342);
ei_shader_param_vector("transparency",0,0,0);
ei_shader_param_vector("ambientColor",0,0,0);
ei_shader_param_vector("incandescence",0,0,0);
ei_shader_param_int("liq_UserDefinedNormal",0);
ei_shader_param_vector("normalCamera",1,1,1);
ei_shader_param_scalar("diffuse",0.8);
ei_shader_param_scalar("translucence",0);
ei_shader_param_scalar("translucenceDepth",0.5);
ei_shader_param_scalar("translucenceFocus",0.5);
ei_shader_param_scalar("cosinePower",20);
ei_shader_param_vector("specularColor",0.5,0.5,0.5);
ei_shader_param_scalar("reflectivity",0.5);
ei_shader_param_vector("reflectedColor",0,0,0);
ei_shader_param_index("matteOpacityMode",2);
ei_shader_param_scalar("matteOpacity",1);
ei_shader_param_index("reflectionLimit",1);
ei_shader_param_vector("outColor",0,0,0);
ei_shader_param_vector("outTransparency",0,0,0);
ei_end_shader();

ei_material("phong1SG");
ei_surface_shader("phong1");
ei_end_material();

//worldPrologue

// Renderer::exportLight("_pointLight1_pointLightShape1");

// Renderer::exportPointLight()
ei_shader("pointlight", "|pointLight1|pointLightShape1_shader");
ei_shader_param_vector("lightcolor",1,1,1);
ei_shader_param_scalar("intensity",1);
ei_end_shader();
ei_light("|pointLight1|pointLightShape1_object");
ei_light_shader("|pointLight1|pointLightShape1_shader");
ei_origin(0,0,0);
ei_end_light();
ei_instance("|pointLight1|pointLightShape1");
ei_element("|pointLight1|pointLightShape1_object");
ei_transform(1,0,0,0,   0,1,0,0,   0,0,1,0,   0,5.23026,6.38383,1);
ei_declare("|pCube1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|pPlane1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_end_instance();

// Renderer::exportOneGeometry_Mesh(|pCube1|pCubeShape1, 0, 0

//############################### mesh #
//shape full path name=|pCube1|pCubeShape1
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|pCube1|pCubeShape1" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### vertex deform positions(optional)
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|pCube1|pCubeShape1
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|pPlane1|pPlaneShape1, 0, 0

//############################### mesh #
//shape full path name=|pPlane1|pPlaneShape1
//### UV(map1), size=4
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|pPlane1|pPlaneShape1" );
{
eiTag tag;
//vertex positions(required), size=6
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( 7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( -7.346750, 0.000000, -5.814621 );
ei_tab_add_vector( -7.346750, 0.000000, -5.814621 );
ei_tab_add_vector( 7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( 7.346750, 0.000000, -5.814621 );
ei_end_tab();
//### vertex deform positions(optional)
//### N ###(optional)
tag = eiNULL_TAG;
ei_declare("N", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_variable("N", &tag);
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_end_tab();
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.000000, 0.000000 );
ei_tab_add_vector2( 1.000000, 0.000000 );
ei_tab_add_vector2( 0.000000, 0.791455 );
ei_tab_add_vector2( 0.000000, 0.791455 );
ei_tab_add_vector2( 1.000000, 0.000000 );
ei_tab_add_vector2( 1.000000, 0.791455 );
ei_end_tab();
//### triangles(required) size=6
tag = ei_tab(EI_TYPE_INDEX, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_end_tab();
}//|pPlane1|pPlaneShape1
ei_end_object();
//--------------------------
//ribNode->name=|pCube1|pCubeShape1
//ribNode's transform node=|pCube1
//ribNode->object(0)->getDataPtr()->getFullPathName()=|pCube1|pCubeShape1
ei_instance("|pCube1");
ei_mtl("liquidShader3SG");
//shape name=|pCube1|pCubeShape1
//shape full path name=|pCube1|pCubeShape1
ei_element("|pCube1|pCubeShape1");
ei_transform(3.46703,0,0,0,   0,3.46703,0,0,   0,0,3.46703,0,   0,2.96559,0,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|pCube1_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|pPlane1|pPlaneShape1
//ribNode's transform node=|pPlane1
//ribNode->object(0)->getDataPtr()->getFullPathName()=|pPlane1|pPlaneShape1
ei_instance("|pPlane1");
ei_mtl("phong1SG");
//shape name=|pPlane1|pPlaneShape1
//shape full path name=|pPlane1|pPlaneShape1
ei_element("|pPlane1|pPlaneShape1");
ei_transform(2.5307,0,0,0,   0,2.5307,0,0,   0,0,2.5307,0,   0.186074,0,0.080088,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|pPlane1_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//Renderer::worldEpilogue()
ei_instgroup("cameraShape1");
//camera
ei_add_instance("|camera1_group|camera1|cameraShape1");
//light(s)
ei_add_instance("|pointLight1|pointLightShape1");
//mesh(s)
ei_add_instance("|pCube1");
ei_add_instance("|pPlane1");
ei_end_instgroup();
// in batch render mode
ei_render( "cameraShape1", "|camera1_group|camera1|cameraShape1", "cameraShape1_option" );
ei_end_context();
//------------------------------------------------

ei_context();
ei_verbose(6);
ei_link("eiIMG");
ei_link("eiSHADER");
ei_link("eiSHADER_maya");
//----------------shader_for_test begin---
ei_shader("maya_surfaceShader", "liquid_shader_for_test");
ei_shader_param_vector("outColor",1,0,0);
ei_end_shader();
ei_material("liquid_material_for_test");
ei_surface_shader("liquid_shader_for_test");
ei_end_material();
//----------------shader_for_test end ---
//    Generated by Liquid v2.3.5 (buildtime=20:51:12.30)
//    Scene : R:/MyDocuments/maya/projects/default/volume_liquidShader_anim
//    User  : yaoyansi

//############################### option #
ei_options("cameraShape1_option");
ei_contrast(0.05);
ei_samples(0,16);
ei_filter(4,3);
//transform motion=0, deform motion=0
ei_motion(0);
ei_trace_depth(4,4,4,4,4,4);
ei_displace(0);
ei_face(3);
ei_end_options();
// maya settings: focal=35.000000, aperture = 41.599998, aspect=1.333333
//Depth of Field on camera "|camera1_group|camera1|cameraShape1" is turned off in Maya

//############################### camera #
ei_camera("|camera1_group|camera1|cameraShape1_object");
//beauty channel
ei_output("R:/MyDocuments/maya/projects/default/rmanpix/volume_liquidShader_anim.cameraShape1.2.elvishray.bmp","bmp",1);
//mode=rgba
ei_output_variable("color",11);
ei_end_output();
// AOV
// AOV end
ei_focal(35);
ei_aperture(32);
ei_aspect(1.33333);
ei_resolution(200,150);
ei_clip(0.1,10000);
ei_end_camera();
//----------------------------------
ei_instance("|camera1_group|camera1|cameraShape1");
ei_element("|camera1_group|camera1|cameraShape1_object");
ei_transform(0.99969,4.33681e-019,-0.0248809,0,   -0.00492679,0.980199,-0.197954,0,   0.0243882,0.198015,0.979896,0,   0.212616,4.55134,8.44803,1);
ei_end_instance();

ei_shader("volume_shell", "liquidShader3");
ei_end_shader();

ei_shader("simple_volume", "liquidShader2");
ei_shader_param_vector("vol_color",1,1,0);
ei_shader_param_scalar("vol_density",5);
ei_shader_param_scalar("step_size",0.2);
ei_shader_param_scalar("vol_radius",3);
ei_shader_param_vector("vol_offset",0,0,0);
ei_shader_param_scalar("absorption",0.3);
ei_shader_param_scalar("anisotropic",0.4);
ei_end_shader();

ei_shader("shadowvol_shell", "liquidShader1");
ei_end_shader();

ei_material("liquidShader3SG");
ei_surface_shader("liquidShader3");
ei_volume_shader("liquidShader2" );
ei_shadow_shader("liquidShader1" );
ei_end_material();
ei_shader("maya_phong", "phong1");
ei_shader_param_vector("color_",0.803922,0.664462,0.110342);
ei_shader_param_vector("transparency",0,0,0);
ei_shader_param_vector("ambientColor",0,0,0);
ei_shader_param_vector("incandescence",0,0,0);
ei_shader_param_int("liq_UserDefinedNormal",0);
ei_shader_param_vector("normalCamera",1,1,1);
ei_shader_param_scalar("diffuse",0.8);
ei_shader_param_scalar("translucence",0);
ei_shader_param_scalar("translucenceDepth",0.5);
ei_shader_param_scalar("translucenceFocus",0.5);
ei_shader_param_scalar("cosinePower",20);
ei_shader_param_vector("specularColor",0.5,0.5,0.5);
ei_shader_param_scalar("reflectivity",0.5);
ei_shader_param_vector("reflectedColor",0,0,0);
ei_shader_param_index("matteOpacityMode",2);
ei_shader_param_scalar("matteOpacity",1);
ei_shader_param_index("reflectionLimit",1);
ei_shader_param_vector("outColor",0,0,0);
ei_shader_param_vector("outTransparency",0,0,0);
ei_end_shader();

ei_material("phong1SG");
ei_surface_shader("phong1");
ei_end_material();

//worldPrologue

// Renderer::exportLight("_pointLight1_pointLightShape1");

// Renderer::exportPointLight()
ei_shader("pointlight", "|pointLight1|pointLightShape1_shader");
ei_shader_param_vector("lightcolor",1,1,1);
ei_shader_param_scalar("intensity",1);
ei_end_shader();
ei_light("|pointLight1|pointLightShape1_object");
ei_light_shader("|pointLight1|pointLightShape1_shader");
ei_origin(0,0,0);
ei_end_light();
ei_instance("|pointLight1|pointLightShape1");
ei_element("|pointLight1|pointLightShape1_object");
ei_transform(1,0,0,0,   0,1,0,0,   0,0,1,0,   0,5.23026,6.38383,1);
ei_declare("|pCube1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|pPlane1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_end_instance();

// Renderer::exportOneGeometry_Mesh(|pCube1|pCubeShape1, 0, 0

//############################### mesh #
//shape full path name=|pCube1|pCubeShape1
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|pCube1|pCubeShape1" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### vertex deform positions(optional)
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|pCube1|pCubeShape1
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|pPlane1|pPlaneShape1, 0, 0

//############################### mesh #
//shape full path name=|pPlane1|pPlaneShape1
//### UV(map1), size=4
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|pPlane1|pPlaneShape1" );
{
eiTag tag;
//vertex positions(required), size=6
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( 7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( -7.346750, 0.000000, -5.814621 );
ei_tab_add_vector( -7.346750, 0.000000, -5.814621 );
ei_tab_add_vector( 7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( 7.346750, 0.000000, -5.814621 );
ei_end_tab();
//### vertex deform positions(optional)
//### N ###(optional)
tag = eiNULL_TAG;
ei_declare("N", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_variable("N", &tag);
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_end_tab();
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.000000, 0.000000 );
ei_tab_add_vector2( 1.000000, 0.000000 );
ei_tab_add_vector2( 0.000000, 0.791455 );
ei_tab_add_vector2( 0.000000, 0.791455 );
ei_tab_add_vector2( 1.000000, 0.000000 );
ei_tab_add_vector2( 1.000000, 0.791455 );
ei_end_tab();
//### triangles(required) size=6
tag = ei_tab(EI_TYPE_INDEX, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_end_tab();
}//|pPlane1|pPlaneShape1
ei_end_object();
//--------------------------
//ribNode->name=|pCube1|pCubeShape1
//ribNode's transform node=|pCube1
//ribNode->object(0)->getDataPtr()->getFullPathName()=|pCube1|pCubeShape1
ei_instance("|pCube1");
ei_mtl("liquidShader3SG");
//shape name=|pCube1|pCubeShape1
//shape full path name=|pCube1|pCubeShape1
ei_element("|pCube1|pCubeShape1");
ei_transform(3.46703,0,0,0,   0,3.46703,0,0,   0,0,3.46703,0,   0,2.96559,0,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|pCube1_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|pPlane1|pPlaneShape1
//ribNode's transform node=|pPlane1
//ribNode->object(0)->getDataPtr()->getFullPathName()=|pPlane1|pPlaneShape1
ei_instance("|pPlane1");
ei_mtl("phong1SG");
//shape name=|pPlane1|pPlaneShape1
//shape full path name=|pPlane1|pPlaneShape1
ei_element("|pPlane1|pPlaneShape1");
ei_transform(2.5307,0,0,0,   0,2.5307,0,0,   0,0,2.5307,0,   0.186074,0,0.080088,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|pPlane1_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//Renderer::worldEpilogue()
ei_instgroup("cameraShape1");
//camera
ei_add_instance("|camera1_group|camera1|cameraShape1");
//light(s)
ei_add_instance("|pointLight1|pointLightShape1");
//mesh(s)
ei_add_instance("|pCube1");
ei_add_instance("|pPlane1");
ei_end_instgroup();
// in batch render mode
ei_render( "cameraShape1", "|camera1_group|camera1|cameraShape1", "cameraShape1_option" );
ei_end_context();
//------------------------------------------------

ei_context();
ei_verbose(6);
ei_link("eiIMG");
ei_link("eiSHADER");
ei_link("eiSHADER_maya");
//----------------shader_for_test begin---
ei_shader("maya_surfaceShader", "liquid_shader_for_test");
ei_shader_param_vector("outColor",1,0,0);
ei_end_shader();
ei_material("liquid_material_for_test");
ei_surface_shader("liquid_shader_for_test");
ei_end_material();
//----------------shader_for_test end ---
//    Generated by Liquid v2.3.5 (buildtime=20:51:12.30)
//    Scene : R:/MyDocuments/maya/projects/default/volume_liquidShader_anim
//    User  : yaoyansi

//############################### option #
ei_options("cameraShape1_option");
ei_contrast(0.05);
ei_samples(0,16);
ei_filter(4,3);
//transform motion=0, deform motion=0
ei_motion(0);
ei_trace_depth(4,4,4,4,4,4);
ei_displace(0);
ei_face(3);
ei_end_options();
// maya settings: focal=35.000000, aperture = 41.599998, aspect=1.333333
//Depth of Field on camera "|camera1_group|camera1|cameraShape1" is turned off in Maya

//############################### camera #
ei_camera("|camera1_group|camera1|cameraShape1_object");
//beauty channel
ei_output("R:/MyDocuments/maya/projects/default/rmanpix/volume_liquidShader_anim.cameraShape1.3.elvishray.bmp","bmp",1);
//mode=rgba
ei_output_variable("color",11);
ei_end_output();
// AOV
// AOV end
ei_focal(35);
ei_aperture(32);
ei_aspect(1.33333);
ei_resolution(200,150);
ei_clip(0.1,10000);
ei_end_camera();
//----------------------------------
ei_instance("|camera1_group|camera1|cameraShape1");
ei_element("|camera1_group|camera1|cameraShape1_object");
ei_transform(0.999526,0,-0.0307902,0,   -0.00611712,0.980066,-0.198577,0,   0.0301764,0.198671,0.979602,0,   0.26098,4.55134,8.41803,1);
ei_end_instance();

ei_shader("volume_shell", "liquidShader3");
ei_end_shader();

ei_shader("simple_volume", "liquidShader2");
ei_shader_param_vector("vol_color",1,1,0);
ei_shader_param_scalar("vol_density",5);
ei_shader_param_scalar("step_size",0.2);
ei_shader_param_scalar("vol_radius",3);
ei_shader_param_vector("vol_offset",0,0,0);
ei_shader_param_scalar("absorption",0.3);
ei_shader_param_scalar("anisotropic",0.4);
ei_end_shader();

ei_shader("shadowvol_shell", "liquidShader1");
ei_end_shader();

ei_material("liquidShader3SG");
ei_surface_shader("liquidShader3");
ei_volume_shader("liquidShader2" );
ei_shadow_shader("liquidShader1" );
ei_end_material();
ei_shader("maya_phong", "phong1");
ei_shader_param_vector("color_",0.803922,0.664462,0.110342);
ei_shader_param_vector("transparency",0,0,0);
ei_shader_param_vector("ambientColor",0,0,0);
ei_shader_param_vector("incandescence",0,0,0);
ei_shader_param_int("liq_UserDefinedNormal",0);
ei_shader_param_vector("normalCamera",1,1,1);
ei_shader_param_scalar("diffuse",0.8);
ei_shader_param_scalar("translucence",0);
ei_shader_param_scalar("translucenceDepth",0.5);
ei_shader_param_scalar("translucenceFocus",0.5);
ei_shader_param_scalar("cosinePower",20);
ei_shader_param_vector("specularColor",0.5,0.5,0.5);
ei_shader_param_scalar("reflectivity",0.5);
ei_shader_param_vector("reflectedColor",0,0,0);
ei_shader_param_index("matteOpacityMode",2);
ei_shader_param_scalar("matteOpacity",1);
ei_shader_param_index("reflectionLimit",1);
ei_shader_param_vector("outColor",0,0,0);
ei_shader_param_vector("outTransparency",0,0,0);
ei_end_shader();

ei_material("phong1SG");
ei_surface_shader("phong1");
ei_end_material();

//worldPrologue

// Renderer::exportLight("_pointLight1_pointLightShape1");

// Renderer::exportPointLight()
ei_shader("pointlight", "|pointLight1|pointLightShape1_shader");
ei_shader_param_vector("lightcolor",1,1,1);
ei_shader_param_scalar("intensity",1);
ei_end_shader();
ei_light("|pointLight1|pointLightShape1_object");
ei_light_shader("|pointLight1|pointLightShape1_shader");
ei_origin(0,0,0);
ei_end_light();
ei_instance("|pointLight1|pointLightShape1");
ei_element("|pointLight1|pointLightShape1_object");
ei_transform(1,0,0,0,   0,1,0,0,   0,0,1,0,   0,5.23026,6.38383,1);
ei_declare("|pCube1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|pPlane1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_end_instance();

// Renderer::exportOneGeometry_Mesh(|pCube1|pCubeShape1, 0, 0

//############################### mesh #
//shape full path name=|pCube1|pCubeShape1
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|pCube1|pCubeShape1" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### vertex deform positions(optional)
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|pCube1|pCubeShape1
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|pPlane1|pPlaneShape1, 0, 0

//############################### mesh #
//shape full path name=|pPlane1|pPlaneShape1
//### UV(map1), size=4
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|pPlane1|pPlaneShape1" );
{
eiTag tag;
//vertex positions(required), size=6
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( 7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( -7.346750, 0.000000, -5.814621 );
ei_tab_add_vector( -7.346750, 0.000000, -5.814621 );
ei_tab_add_vector( 7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( 7.346750, 0.000000, -5.814621 );
ei_end_tab();
//### vertex deform positions(optional)
//### N ###(optional)
tag = eiNULL_TAG;
ei_declare("N", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_variable("N", &tag);
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_end_tab();
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.000000, 0.000000 );
ei_tab_add_vector2( 1.000000, 0.000000 );
ei_tab_add_vector2( 0.000000, 0.791455 );
ei_tab_add_vector2( 0.000000, 0.791455 );
ei_tab_add_vector2( 1.000000, 0.000000 );
ei_tab_add_vector2( 1.000000, 0.791455 );
ei_end_tab();
//### triangles(required) size=6
tag = ei_tab(EI_TYPE_INDEX, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_end_tab();
}//|pPlane1|pPlaneShape1
ei_end_object();
//--------------------------
//ribNode->name=|pCube1|pCubeShape1
//ribNode's transform node=|pCube1
//ribNode->object(0)->getDataPtr()->getFullPathName()=|pCube1|pCubeShape1
ei_instance("|pCube1");
ei_mtl("liquidShader3SG");
//shape name=|pCube1|pCubeShape1
//shape full path name=|pCube1|pCubeShape1
ei_element("|pCube1|pCubeShape1");
ei_transform(3.46703,0,0,0,   0,3.46703,0,0,   0,0,3.46703,0,   0,2.96559,0,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|pCube1_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|pPlane1|pPlaneShape1
//ribNode's transform node=|pPlane1
//ribNode->object(0)->getDataPtr()->getFullPathName()=|pPlane1|pPlaneShape1
ei_instance("|pPlane1");
ei_mtl("phong1SG");
//shape name=|pPlane1|pPlaneShape1
//shape full path name=|pPlane1|pPlaneShape1
ei_element("|pPlane1|pPlaneShape1");
ei_transform(2.5307,0,0,0,   0,2.5307,0,0,   0,0,2.5307,0,   0.186074,0,0.080088,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|pPlane1_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//Renderer::worldEpilogue()
ei_instgroup("cameraShape1");
//camera
ei_add_instance("|camera1_group|camera1|cameraShape1");
//light(s)
ei_add_instance("|pointLight1|pointLightShape1");
//mesh(s)
ei_add_instance("|pCube1");
ei_add_instance("|pPlane1");
ei_end_instgroup();
// in batch render mode
ei_render( "cameraShape1", "|camera1_group|camera1|cameraShape1", "cameraShape1_option" );
ei_end_context();
//------------------------------------------------

ei_context();
ei_verbose(6);
ei_link("eiIMG");
ei_link("eiSHADER");
ei_link("eiSHADER_maya");
//----------------shader_for_test begin---
ei_shader("maya_surfaceShader", "liquid_shader_for_test");
ei_shader_param_vector("outColor",1,0,0);
ei_end_shader();
ei_material("liquid_material_for_test");
ei_surface_shader("liquid_shader_for_test");
ei_end_material();
//----------------shader_for_test end ---
//    Generated by Liquid v2.3.5 (buildtime=20:51:12.30)
//    Scene : R:/MyDocuments/maya/projects/default/volume_liquidShader_anim
//    User  : yaoyansi

//############################### option #
ei_options("cameraShape1_option");
ei_contrast(0.05);
ei_samples(0,16);
ei_filter(4,3);
//transform motion=0, deform motion=0
ei_motion(0);
ei_trace_depth(4,4,4,4,4,4);
ei_displace(0);
ei_face(3);
ei_end_options();
// maya settings: focal=35.000000, aperture = 41.599998, aspect=1.333333
//Depth of Field on camera "|camera1_group|camera1|cameraShape1" is turned off in Maya

//############################### camera #
ei_camera("|camera1_group|camera1|cameraShape1_object");
//beauty channel
ei_output("R:/MyDocuments/maya/projects/default/rmanpix/volume_liquidShader_anim.cameraShape1.4.elvishray.bmp","bmp",1);
//mode=rgba
ei_output_variable("color",11);
ei_end_output();
// AOV
// AOV end
ei_focal(35);
ei_aperture(32);
ei_aspect(1.33333);
ei_resolution(200,150);
ei_clip(0.1,10000);
ei_end_camera();
//----------------------------------
ei_instance("|camera1_group|camera1|cameraShape1");
ei_element("|camera1_group|camera1|cameraShape1_object");
ei_transform(0.999189,8.67362e-019,-0.0402759,0,   -0.00804432,0.979851,-0.199568,0,   0.0394644,0.19973,0.979056,0,   0.337913,4.55134,8.36939,1);
ei_end_instance();

ei_shader("volume_shell", "liquidShader3");
ei_end_shader();

ei_shader("simple_volume", "liquidShader2");
ei_shader_param_vector("vol_color",1,1,0);
ei_shader_param_scalar("vol_density",5);
ei_shader_param_scalar("step_size",0.2);
ei_shader_param_scalar("vol_radius",3);
ei_shader_param_vector("vol_offset",0,0,0);
ei_shader_param_scalar("absorption",0.3);
ei_shader_param_scalar("anisotropic",0.4);
ei_end_shader();

ei_shader("shadowvol_shell", "liquidShader1");
ei_end_shader();

ei_material("liquidShader3SG");
ei_surface_shader("liquidShader3");
ei_volume_shader("liquidShader2" );
ei_shadow_shader("liquidShader1" );
ei_end_material();
ei_shader("maya_phong", "phong1");
ei_shader_param_vector("color_",0.803922,0.664462,0.110342);
ei_shader_param_vector("transparency",0,0,0);
ei_shader_param_vector("ambientColor",0,0,0);
ei_shader_param_vector("incandescence",0,0,0);
ei_shader_param_int("liq_UserDefinedNormal",0);
ei_shader_param_vector("normalCamera",1,1,1);
ei_shader_param_scalar("diffuse",0.8);
ei_shader_param_scalar("translucence",0);
ei_shader_param_scalar("translucenceDepth",0.5);
ei_shader_param_scalar("translucenceFocus",0.5);
ei_shader_param_scalar("cosinePower",20);
ei_shader_param_vector("specularColor",0.5,0.5,0.5);
ei_shader_param_scalar("reflectivity",0.5);
ei_shader_param_vector("reflectedColor",0,0,0);
ei_shader_param_index("matteOpacityMode",2);
ei_shader_param_scalar("matteOpacity",1);
ei_shader_param_index("reflectionLimit",1);
ei_shader_param_vector("outColor",0,0,0);
ei_shader_param_vector("outTransparency",0,0,0);
ei_end_shader();

ei_material("phong1SG");
ei_surface_shader("phong1");
ei_end_material();

//worldPrologue

// Renderer::exportLight("_pointLight1_pointLightShape1");

// Renderer::exportPointLight()
ei_shader("pointlight", "|pointLight1|pointLightShape1_shader");
ei_shader_param_vector("lightcolor",1,1,1);
ei_shader_param_scalar("intensity",1);
ei_end_shader();
ei_light("|pointLight1|pointLightShape1_object");
ei_light_shader("|pointLight1|pointLightShape1_shader");
ei_origin(0,0,0);
ei_end_light();
ei_instance("|pointLight1|pointLightShape1");
ei_element("|pointLight1|pointLightShape1_object");
ei_transform(1,0,0,0,   0,1,0,0,   0,0,1,0,   0,5.23026,6.38383,1);
ei_declare("|pCube1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|pPlane1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_end_instance();

// Renderer::exportOneGeometry_Mesh(|pCube1|pCubeShape1, 0, 0

//############################### mesh #
//shape full path name=|pCube1|pCubeShape1
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|pCube1|pCubeShape1" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### vertex deform positions(optional)
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|pCube1|pCubeShape1
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|pPlane1|pPlaneShape1, 0, 0

//############################### mesh #
//shape full path name=|pPlane1|pPlaneShape1
//### UV(map1), size=4
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|pPlane1|pPlaneShape1" );
{
eiTag tag;
//vertex positions(required), size=6
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( 7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( -7.346750, 0.000000, -5.814621 );
ei_tab_add_vector( -7.346750, 0.000000, -5.814621 );
ei_tab_add_vector( 7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( 7.346750, 0.000000, -5.814621 );
ei_end_tab();
//### vertex deform positions(optional)
//### N ###(optional)
tag = eiNULL_TAG;
ei_declare("N", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_variable("N", &tag);
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_end_tab();
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.000000, 0.000000 );
ei_tab_add_vector2( 1.000000, 0.000000 );
ei_tab_add_vector2( 0.000000, 0.791455 );
ei_tab_add_vector2( 0.000000, 0.791455 );
ei_tab_add_vector2( 1.000000, 0.000000 );
ei_tab_add_vector2( 1.000000, 0.791455 );
ei_end_tab();
//### triangles(required) size=6
tag = ei_tab(EI_TYPE_INDEX, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_end_tab();
}//|pPlane1|pPlaneShape1
ei_end_object();
//--------------------------
//ribNode->name=|pCube1|pCubeShape1
//ribNode's transform node=|pCube1
//ribNode->object(0)->getDataPtr()->getFullPathName()=|pCube1|pCubeShape1
ei_instance("|pCube1");
ei_mtl("liquidShader3SG");
//shape name=|pCube1|pCubeShape1
//shape full path name=|pCube1|pCubeShape1
ei_element("|pCube1|pCubeShape1");
ei_transform(3.46703,0,0,0,   0,3.46703,0,0,   0,0,3.46703,0,   0,2.96559,0,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|pCube1_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|pPlane1|pPlaneShape1
//ribNode's transform node=|pPlane1
//ribNode->object(0)->getDataPtr()->getFullPathName()=|pPlane1|pPlaneShape1
ei_instance("|pPlane1");
ei_mtl("phong1SG");
//shape name=|pPlane1|pPlaneShape1
//shape full path name=|pPlane1|pPlaneShape1
ei_element("|pPlane1|pPlaneShape1");
ei_transform(2.5307,0,0,0,   0,2.5307,0,0,   0,0,2.5307,0,   0.186074,0,0.080088,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|pPlane1_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//Renderer::worldEpilogue()
ei_instgroup("cameraShape1");
//camera
ei_add_instance("|camera1_group|camera1|cameraShape1");
//light(s)
ei_add_instance("|pointLight1|pointLightShape1");
//mesh(s)
ei_add_instance("|pCube1");
ei_add_instance("|pPlane1");
ei_end_instgroup();
// in batch render mode
ei_render( "cameraShape1", "|camera1_group|camera1|cameraShape1", "cameraShape1_option" );
ei_end_context();
//------------------------------------------------

ei_context();
ei_verbose(6);
ei_link("eiIMG");
ei_link("eiSHADER");
ei_link("eiSHADER_maya");
//----------------shader_for_test begin---
ei_shader("maya_surfaceShader", "liquid_shader_for_test");
ei_shader_param_vector("outColor",1,0,0);
ei_end_shader();
ei_material("liquid_material_for_test");
ei_surface_shader("liquid_shader_for_test");
ei_end_material();
//----------------shader_for_test end ---
//    Generated by Liquid v2.3.5 (buildtime=20:51:12.30)
//    Scene : R:/MyDocuments/maya/projects/default/volume_liquidShader_anim
//    User  : yaoyansi

//############################### option #
ei_options("cameraShape1_option");
ei_contrast(0.05);
ei_samples(0,16);
ei_filter(4,3);
//transform motion=0, deform motion=0
ei_motion(0);
ei_trace_depth(4,4,4,4,4,4);
ei_displace(0);
ei_face(3);
ei_end_options();
// maya settings: focal=35.000000, aperture = 41.599998, aspect=1.333333
//Depth of Field on camera "|camera1_group|camera1|cameraShape1" is turned off in Maya

//############################### camera #
ei_camera("|camera1_group|camera1|cameraShape1_object");
//beauty channel
ei_output("R:/MyDocuments/maya/projects/default/rmanpix/volume_liquidShader_anim.cameraShape1.5.elvishray.bmp","bmp",1);
//mode=rgba
ei_output_variable("color",11);
ei_end_output();
// AOV
// AOV end
ei_focal(35);
ei_aperture(32);
ei_aspect(1.33333);
ei_resolution(200,150);
ei_clip(0.1,10000);
ei_end_camera();
//----------------------------------
ei_instance("|camera1_group|camera1|cameraShape1");
ei_element("|camera1_group|camera1|cameraShape1_object");
ei_transform(0.99859,0,-0.0530792,0,   -0.0106776,0.979558,-0.20088,0,   0.0519942,0.201163,0.978177,0,   0.440407,4.55134,8.30326,1);
ei_end_instance();

ei_shader("volume_shell", "liquidShader3");
ei_end_shader();

ei_shader("simple_volume", "liquidShader2");
ei_shader_param_vector("vol_color",1,1,0);
ei_shader_param_scalar("vol_density",5);
ei_shader_param_scalar("step_size",0.2);
ei_shader_param_scalar("vol_radius",3);
ei_shader_param_vector("vol_offset",0,0,0);
ei_shader_param_scalar("absorption",0.3);
ei_shader_param_scalar("anisotropic",0.4);
ei_end_shader();

ei_shader("shadowvol_shell", "liquidShader1");
ei_end_shader();

ei_material("liquidShader3SG");
ei_surface_shader("liquidShader3");
ei_volume_shader("liquidShader2" );
ei_shadow_shader("liquidShader1" );
ei_end_material();
ei_shader("maya_phong", "phong1");
ei_shader_param_vector("color_",0.803922,0.664462,0.110342);
ei_shader_param_vector("transparency",0,0,0);
ei_shader_param_vector("ambientColor",0,0,0);
ei_shader_param_vector("incandescence",0,0,0);
ei_shader_param_int("liq_UserDefinedNormal",0);
ei_shader_param_vector("normalCamera",1,1,1);
ei_shader_param_scalar("diffuse",0.8);
ei_shader_param_scalar("translucence",0);
ei_shader_param_scalar("translucenceDepth",0.5);
ei_shader_param_scalar("translucenceFocus",0.5);
ei_shader_param_scalar("cosinePower",20);
ei_shader_param_vector("specularColor",0.5,0.5,0.5);
ei_shader_param_scalar("reflectivity",0.5);
ei_shader_param_vector("reflectedColor",0,0,0);
ei_shader_param_index("matteOpacityMode",2);
ei_shader_param_scalar("matteOpacity",1);
ei_shader_param_index("reflectionLimit",1);
ei_shader_param_vector("outColor",0,0,0);
ei_shader_param_vector("outTransparency",0,0,0);
ei_end_shader();

ei_material("phong1SG");
ei_surface_shader("phong1");
ei_end_material();

//worldPrologue

// Renderer::exportLight("_pointLight1_pointLightShape1");

// Renderer::exportPointLight()
ei_shader("pointlight", "|pointLight1|pointLightShape1_shader");
ei_shader_param_vector("lightcolor",1,1,1);
ei_shader_param_scalar("intensity",1);
ei_end_shader();
ei_light("|pointLight1|pointLightShape1_object");
ei_light_shader("|pointLight1|pointLightShape1_shader");
ei_origin(0,0,0);
ei_end_light();
ei_instance("|pointLight1|pointLightShape1");
ei_element("|pointLight1|pointLightShape1_object");
ei_transform(1,0,0,0,   0,1,0,0,   0,0,1,0,   0,5.23026,6.38383,1);
ei_declare("|pCube1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|pPlane1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_end_instance();

// Renderer::exportOneGeometry_Mesh(|pCube1|pCubeShape1, 0, 0

//############################### mesh #
//shape full path name=|pCube1|pCubeShape1
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|pCube1|pCubeShape1" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### vertex deform positions(optional)
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|pCube1|pCubeShape1
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|pPlane1|pPlaneShape1, 0, 0

//############################### mesh #
//shape full path name=|pPlane1|pPlaneShape1
//### UV(map1), size=4
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|pPlane1|pPlaneShape1" );
{
eiTag tag;
//vertex positions(required), size=6
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( 7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( -7.346750, 0.000000, -5.814621 );
ei_tab_add_vector( -7.346750, 0.000000, -5.814621 );
ei_tab_add_vector( 7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( 7.346750, 0.000000, -5.814621 );
ei_end_tab();
//### vertex deform positions(optional)
//### N ###(optional)
tag = eiNULL_TAG;
ei_declare("N", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_variable("N", &tag);
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_end_tab();
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.000000, 0.000000 );
ei_tab_add_vector2( 1.000000, 0.000000 );
ei_tab_add_vector2( 0.000000, 0.791455 );
ei_tab_add_vector2( 0.000000, 0.791455 );
ei_tab_add_vector2( 1.000000, 0.000000 );
ei_tab_add_vector2( 1.000000, 0.791455 );
ei_end_tab();
//### triangles(required) size=6
tag = ei_tab(EI_TYPE_INDEX, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_end_tab();
}//|pPlane1|pPlaneShape1
ei_end_object();
//--------------------------
//ribNode->name=|pCube1|pCubeShape1
//ribNode's transform node=|pCube1
//ribNode->object(0)->getDataPtr()->getFullPathName()=|pCube1|pCubeShape1
ei_instance("|pCube1");
ei_mtl("liquidShader3SG");
//shape name=|pCube1|pCubeShape1
//shape full path name=|pCube1|pCubeShape1
ei_element("|pCube1|pCubeShape1");
ei_transform(3.46703,0,0,0,   0,3.46703,0,0,   0,0,3.46703,0,   0,2.96559,0,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|pCube1_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|pPlane1|pPlaneShape1
//ribNode's transform node=|pPlane1
//ribNode->object(0)->getDataPtr()->getFullPathName()=|pPlane1|pPlaneShape1
ei_instance("|pPlane1");
ei_mtl("phong1SG");
//shape name=|pPlane1|pPlaneShape1
//shape full path name=|pPlane1|pPlaneShape1
ei_element("|pPlane1|pPlaneShape1");
ei_transform(2.5307,0,0,0,   0,2.5307,0,0,   0,0,2.5307,0,   0.186074,0,0.080088,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|pPlane1_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//Renderer::worldEpilogue()
ei_instgroup("cameraShape1");
//camera
ei_add_instance("|camera1_group|camera1|cameraShape1");
//light(s)
ei_add_instance("|pointLight1|pointLightShape1");
//mesh(s)
ei_add_instance("|pCube1");
ei_add_instance("|pPlane1");
ei_end_instgroup();
// in batch render mode
ei_render( "cameraShape1", "|camera1_group|camera1|cameraShape1", "cameraShape1_option" );
ei_end_context();
//------------------------------------------------

ei_context();
ei_verbose(6);
ei_link("eiIMG");
ei_link("eiSHADER");
ei_link("eiSHADER_maya");
//----------------shader_for_test begin---
ei_shader("maya_surfaceShader", "liquid_shader_for_test");
ei_shader_param_vector("outColor",1,0,0);
ei_end_shader();
ei_material("liquid_material_for_test");
ei_surface_shader("liquid_shader_for_test");
ei_end_material();
//----------------shader_for_test end ---
//    Generated by Liquid v2.3.5 (buildtime=20:51:12.30)
//    Scene : R:/MyDocuments/maya/projects/default/volume_liquidShader_anim
//    User  : yaoyansi

//############################### option #
ei_options("cameraShape1_option");
ei_contrast(0.05);
ei_samples(0,16);
ei_filter(4,3);
//transform motion=0, deform motion=0
ei_motion(0);
ei_trace_depth(4,4,4,4,4,4);
ei_displace(0);
ei_face(3);
ei_end_options();
// maya settings: focal=35.000000, aperture = 41.599998, aspect=1.333333
//Depth of Field on camera "|camera1_group|camera1|cameraShape1" is turned off in Maya

//############################### camera #
ei_camera("|camera1_group|camera1|cameraShape1_object");
//beauty channel
ei_output("R:/MyDocuments/maya/projects/default/rmanpix/volume_liquidShader_anim.cameraShape1.6.elvishray.bmp","bmp",1);
//mode=rgba
ei_output_variable("color",11);
ei_end_output();
// AOV
// AOV end
ei_focal(35);
ei_aperture(32);
ei_aspect(1.33333);
ei_resolution(200,150);
ei_clip(0.1,10000);
ei_end_camera();
//----------------------------------
ei_instance("|camera1_group|camera1|cameraShape1");
ei_element("|camera1_group|camera1|cameraShape1_object");
ei_transform(0.997619,-8.67362e-019,-0.0689612,0,   -0.0139948,0.979192,-0.202455,0,   0.0675262,0.202938,0.976861,0,   0.565454,4.55134,8.22076,1);
ei_end_instance();

ei_shader("volume_shell", "liquidShader3");
ei_end_shader();

ei_shader("simple_volume", "liquidShader2");
ei_shader_param_vector("vol_color",1,1,0);
ei_shader_param_scalar("vol_density",5);
ei_shader_param_scalar("step_size",0.2);
ei_shader_param_scalar("vol_radius",3);
ei_shader_param_vector("vol_offset",0,0,0);
ei_shader_param_scalar("absorption",0.3);
ei_shader_param_scalar("anisotropic",0.4);
ei_end_shader();

ei_shader("shadowvol_shell", "liquidShader1");
ei_end_shader();

ei_material("liquidShader3SG");
ei_surface_shader("liquidShader3");
ei_volume_shader("liquidShader2" );
ei_shadow_shader("liquidShader1" );
ei_end_material();
ei_shader("maya_phong", "phong1");
ei_shader_param_vector("color_",0.803922,0.664462,0.110342);
ei_shader_param_vector("transparency",0,0,0);
ei_shader_param_vector("ambientColor",0,0,0);
ei_shader_param_vector("incandescence",0,0,0);
ei_shader_param_int("liq_UserDefinedNormal",0);
ei_shader_param_vector("normalCamera",1,1,1);
ei_shader_param_scalar("diffuse",0.8);
ei_shader_param_scalar("translucence",0);
ei_shader_param_scalar("translucenceDepth",0.5);
ei_shader_param_scalar("translucenceFocus",0.5);
ei_shader_param_scalar("cosinePower",20);
ei_shader_param_vector("specularColor",0.5,0.5,0.5);
ei_shader_param_scalar("reflectivity",0.5);
ei_shader_param_vector("reflectedColor",0,0,0);
ei_shader_param_index("matteOpacityMode",2);
ei_shader_param_scalar("matteOpacity",1);
ei_shader_param_index("reflectionLimit",1);
ei_shader_param_vector("outColor",0,0,0);
ei_shader_param_vector("outTransparency",0,0,0);
ei_end_shader();

ei_material("phong1SG");
ei_surface_shader("phong1");
ei_end_material();

//worldPrologue

// Renderer::exportLight("_pointLight1_pointLightShape1");

// Renderer::exportPointLight()
ei_shader("pointlight", "|pointLight1|pointLightShape1_shader");
ei_shader_param_vector("lightcolor",1,1,1);
ei_shader_param_scalar("intensity",1);
ei_end_shader();
ei_light("|pointLight1|pointLightShape1_object");
ei_light_shader("|pointLight1|pointLightShape1_shader");
ei_origin(0,0,0);
ei_end_light();
ei_instance("|pointLight1|pointLightShape1");
ei_element("|pointLight1|pointLightShape1_object");
ei_transform(1,0,0,0,   0,1,0,0,   0,0,1,0,   0,5.23026,6.38383,1);
ei_declare("|pCube1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|pPlane1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_end_instance();

// Renderer::exportOneGeometry_Mesh(|pCube1|pCubeShape1, 0, 0

//############################### mesh #
//shape full path name=|pCube1|pCubeShape1
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|pCube1|pCubeShape1" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### vertex deform positions(optional)
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|pCube1|pCubeShape1
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|pPlane1|pPlaneShape1, 0, 0

//############################### mesh #
//shape full path name=|pPlane1|pPlaneShape1
//### UV(map1), size=4
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|pPlane1|pPlaneShape1" );
{
eiTag tag;
//vertex positions(required), size=6
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( 7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( -7.346750, 0.000000, -5.814621 );
ei_tab_add_vector( -7.346750, 0.000000, -5.814621 );
ei_tab_add_vector( 7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( 7.346750, 0.000000, -5.814621 );
ei_end_tab();
//### vertex deform positions(optional)
//### N ###(optional)
tag = eiNULL_TAG;
ei_declare("N", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_variable("N", &tag);
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_end_tab();
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.000000, 0.000000 );
ei_tab_add_vector2( 1.000000, 0.000000 );
ei_tab_add_vector2( 0.000000, 0.791455 );
ei_tab_add_vector2( 0.000000, 0.791455 );
ei_tab_add_vector2( 1.000000, 0.000000 );
ei_tab_add_vector2( 1.000000, 0.791455 );
ei_end_tab();
//### triangles(required) size=6
tag = ei_tab(EI_TYPE_INDEX, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_end_tab();
}//|pPlane1|pPlaneShape1
ei_end_object();
//--------------------------
//ribNode->name=|pCube1|pCubeShape1
//ribNode's transform node=|pCube1
//ribNode->object(0)->getDataPtr()->getFullPathName()=|pCube1|pCubeShape1
ei_instance("|pCube1");
ei_mtl("liquidShader3SG");
//shape name=|pCube1|pCubeShape1
//shape full path name=|pCube1|pCubeShape1
ei_element("|pCube1|pCubeShape1");
ei_transform(3.46703,0,0,0,   0,3.46703,0,0,   0,0,3.46703,0,   0,2.96559,0,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|pCube1_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|pPlane1|pPlaneShape1
//ribNode's transform node=|pPlane1
//ribNode->object(0)->getDataPtr()->getFullPathName()=|pPlane1|pPlaneShape1
ei_instance("|pPlane1");
ei_mtl("phong1SG");
//shape name=|pPlane1|pPlaneShape1
//shape full path name=|pPlane1|pPlaneShape1
ei_element("|pPlane1|pPlaneShape1");
ei_transform(2.5307,0,0,0,   0,2.5307,0,0,   0,0,2.5307,0,   0.186074,0,0.080088,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|pPlane1_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//Renderer::worldEpilogue()
ei_instgroup("cameraShape1");
//camera
ei_add_instance("|camera1_group|camera1|cameraShape1");
//light(s)
ei_add_instance("|pointLight1|pointLightShape1");
//mesh(s)
ei_add_instance("|pCube1");
ei_add_instance("|pPlane1");
ei_end_instgroup();
// in batch render mode
ei_render( "cameraShape1", "|camera1_group|camera1|cameraShape1", "cameraShape1_option" );
ei_end_context();
//------------------------------------------------

ei_context();
ei_verbose(6);
ei_link("eiIMG");
ei_link("eiSHADER");
ei_link("eiSHADER_maya");
//----------------shader_for_test begin---
ei_shader("maya_surfaceShader", "liquid_shader_for_test");
ei_shader_param_vector("outColor",1,0,0);
ei_end_shader();
ei_material("liquid_material_for_test");
ei_surface_shader("liquid_shader_for_test");
ei_end_material();
//----------------shader_for_test end ---
//    Generated by Liquid v2.3.5 (buildtime=20:51:12.30)
//    Scene : R:/MyDocuments/maya/projects/default/volume_liquidShader_anim
//    User  : yaoyansi

//############################### option #
ei_options("cameraShape1_option");
ei_contrast(0.05);
ei_samples(0,16);
ei_filter(4,3);
//transform motion=0, deform motion=0
ei_motion(0);
ei_trace_depth(4,4,4,4,4,4);
ei_displace(0);
ei_face(3);
ei_end_options();
// maya settings: focal=35.000000, aperture = 41.599998, aspect=1.333333
//Depth of Field on camera "|camera1_group|camera1|cameraShape1" is turned off in Maya

//############################### camera #
ei_camera("|camera1_group|camera1|cameraShape1_object");
//beauty channel
ei_output("R:/MyDocuments/maya/projects/default/rmanpix/volume_liquidShader_anim.cameraShape1.7.elvishray.bmp","bmp",1);
//mode=rgba
ei_output_variable("color",11);
ei_end_output();
// AOV
// AOV end
ei_focal(35);
ei_aperture(32);
ei_aspect(1.33333);
ei_resolution(200,150);
ei_clip(0.1,10000);
ei_end_camera();
//----------------------------------
ei_instance("|camera1_group|camera1|cameraShape1");
ei_element("|camera1_group|camera1|cameraShape1_object");
ei_transform(0.996148,-1.73472e-018,-0.0876909,0,   -0.0179785,0.978757,-0.204232,0,   0.0858281,0.205022,0.974987,0,   0.710047,4.55134,8.123,1);
ei_end_instance();

ei_shader("volume_shell", "liquidShader3");
ei_end_shader();

ei_shader("simple_volume", "liquidShader2");
ei_shader_param_vector("vol_color",1,1,0);
ei_shader_param_scalar("vol_density",5);
ei_shader_param_scalar("step_size",0.2);
ei_shader_param_scalar("vol_radius",3);
ei_shader_param_vector("vol_offset",0,0,0);
ei_shader_param_scalar("absorption",0.3);
ei_shader_param_scalar("anisotropic",0.4);
ei_end_shader();

ei_shader("shadowvol_shell", "liquidShader1");
ei_end_shader();

ei_material("liquidShader3SG");
ei_surface_shader("liquidShader3");
ei_volume_shader("liquidShader2" );
ei_shadow_shader("liquidShader1" );
ei_end_material();
ei_shader("maya_phong", "phong1");
ei_shader_param_vector("color_",0.803922,0.664462,0.110342);
ei_shader_param_vector("transparency",0,0,0);
ei_shader_param_vector("ambientColor",0,0,0);
ei_shader_param_vector("incandescence",0,0,0);
ei_shader_param_int("liq_UserDefinedNormal",0);
ei_shader_param_vector("normalCamera",1,1,1);
ei_shader_param_scalar("diffuse",0.8);
ei_shader_param_scalar("translucence",0);
ei_shader_param_scalar("translucenceDepth",0.5);
ei_shader_param_scalar("translucenceFocus",0.5);
ei_shader_param_scalar("cosinePower",20);
ei_shader_param_vector("specularColor",0.5,0.5,0.5);
ei_shader_param_scalar("reflectivity",0.5);
ei_shader_param_vector("reflectedColor",0,0,0);
ei_shader_param_index("matteOpacityMode",2);
ei_shader_param_scalar("matteOpacity",1);
ei_shader_param_index("reflectionLimit",1);
ei_shader_param_vector("outColor",0,0,0);
ei_shader_param_vector("outTransparency",0,0,0);
ei_end_shader();

ei_material("phong1SG");
ei_surface_shader("phong1");
ei_end_material();

//worldPrologue

// Renderer::exportLight("_pointLight1_pointLightShape1");

// Renderer::exportPointLight()
ei_shader("pointlight", "|pointLight1|pointLightShape1_shader");
ei_shader_param_vector("lightcolor",1,1,1);
ei_shader_param_scalar("intensity",1);
ei_end_shader();
ei_light("|pointLight1|pointLightShape1_object");
ei_light_shader("|pointLight1|pointLightShape1_shader");
ei_origin(0,0,0);
ei_end_light();
ei_instance("|pointLight1|pointLightShape1");
ei_element("|pointLight1|pointLightShape1_object");
ei_transform(1,0,0,0,   0,1,0,0,   0,0,1,0,   0,5.23026,6.38383,1);
ei_declare("|pCube1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|pPlane1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_end_instance();

// Renderer::exportOneGeometry_Mesh(|pCube1|pCubeShape1, 0, 0

//############################### mesh #
//shape full path name=|pCube1|pCubeShape1
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|pCube1|pCubeShape1" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### vertex deform positions(optional)
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|pCube1|pCubeShape1
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|pPlane1|pPlaneShape1, 0, 0

//############################### mesh #
//shape full path name=|pPlane1|pPlaneShape1
//### UV(map1), size=4
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|pPlane1|pPlaneShape1" );
{
eiTag tag;
//vertex positions(required), size=6
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( 7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( -7.346750, 0.000000, -5.814621 );
ei_tab_add_vector( -7.346750, 0.000000, -5.814621 );
ei_tab_add_vector( 7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( 7.346750, 0.000000, -5.814621 );
ei_end_tab();
//### vertex deform positions(optional)
//### N ###(optional)
tag = eiNULL_TAG;
ei_declare("N", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_variable("N", &tag);
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_end_tab();
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.000000, 0.000000 );
ei_tab_add_vector2( 1.000000, 0.000000 );
ei_tab_add_vector2( 0.000000, 0.791455 );
ei_tab_add_vector2( 0.000000, 0.791455 );
ei_tab_add_vector2( 1.000000, 0.000000 );
ei_tab_add_vector2( 1.000000, 0.791455 );
ei_end_tab();
//### triangles(required) size=6
tag = ei_tab(EI_TYPE_INDEX, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_end_tab();
}//|pPlane1|pPlaneShape1
ei_end_object();
//--------------------------
//ribNode->name=|pCube1|pCubeShape1
//ribNode's transform node=|pCube1
//ribNode->object(0)->getDataPtr()->getFullPathName()=|pCube1|pCubeShape1
ei_instance("|pCube1");
ei_mtl("liquidShader3SG");
//shape name=|pCube1|pCubeShape1
//shape full path name=|pCube1|pCubeShape1
ei_element("|pCube1|pCubeShape1");
ei_transform(3.46703,0,0,0,   0,3.46703,0,0,   0,0,3.46703,0,   0,2.96559,0,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|pCube1_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|pPlane1|pPlaneShape1
//ribNode's transform node=|pPlane1
//ribNode->object(0)->getDataPtr()->getFullPathName()=|pPlane1|pPlaneShape1
ei_instance("|pPlane1");
ei_mtl("phong1SG");
//shape name=|pPlane1|pPlaneShape1
//shape full path name=|pPlane1|pPlaneShape1
ei_element("|pPlane1|pPlaneShape1");
ei_transform(2.5307,0,0,0,   0,2.5307,0,0,   0,0,2.5307,0,   0.186074,0,0.080088,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|pPlane1_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//Renderer::worldEpilogue()
ei_instgroup("cameraShape1");
//camera
ei_add_instance("|camera1_group|camera1|cameraShape1");
//light(s)
ei_add_instance("|pointLight1|pointLightShape1");
//mesh(s)
ei_add_instance("|pCube1");
ei_add_instance("|pPlane1");
ei_end_instgroup();
// in batch render mode
ei_render( "cameraShape1", "|camera1_group|camera1|cameraShape1", "cameraShape1_option" );
ei_end_context();
//------------------------------------------------

ei_context();
ei_verbose(6);
ei_link("eiIMG");
ei_link("eiSHADER");
ei_link("eiSHADER_maya");
//----------------shader_for_test begin---
ei_shader("maya_surfaceShader", "liquid_shader_for_test");
ei_shader_param_vector("outColor",1,0,0);
ei_end_shader();
ei_material("liquid_material_for_test");
ei_surface_shader("liquid_shader_for_test");
ei_end_material();
//----------------shader_for_test end ---
//    Generated by Liquid v2.3.5 (buildtime=20:51:12.30)
//    Scene : R:/MyDocuments/maya/projects/default/volume_liquidShader_anim
//    User  : yaoyansi

//############################### option #
ei_options("cameraShape1_option");
ei_contrast(0.05);
ei_samples(0,16);
ei_filter(4,3);
//transform motion=0, deform motion=0
ei_motion(0);
ei_trace_depth(4,4,4,4,4,4);
ei_displace(0);
ei_face(3);
ei_end_options();
// maya settings: focal=35.000000, aperture = 41.599998, aspect=1.333333
//Depth of Field on camera "|camera1_group|camera1|cameraShape1" is turned off in Maya

//############################### camera #
ei_camera("|camera1_group|camera1|cameraShape1_object");
//beauty channel
ei_output("R:/MyDocuments/maya/projects/default/rmanpix/volume_liquidShader_anim.cameraShape1.8.elvishray.bmp","bmp",1);
//mode=rgba
ei_output_variable("color",11);
ei_end_output();
// AOV
// AOV end
ei_focal(35);
ei_aperture(32);
ei_aspect(1.33333);
ei_resolution(200,150);
ei_clip(0.1,10000);
ei_end_camera();
//----------------------------------
ei_instance("|camera1_group|camera1|cameraShape1");
ei_element("|camera1_group|camera1|cameraShape1_object");
ei_transform(0.994038,0,-0.109035,0,   -0.0226118,0.97826,-0.206145,0,   0.106665,0.207381,0.972428,0,   0.87118,4.55134,8.01112,1);
ei_end_instance();

ei_shader("volume_shell", "liquidShader3");
ei_end_shader();

ei_shader("simple_volume", "liquidShader2");
ei_shader_param_vector("vol_color",1,1,0);
ei_shader_param_scalar("vol_density",5);
ei_shader_param_scalar("step_size",0.2);
ei_shader_param_scalar("vol_radius",3);
ei_shader_param_vector("vol_offset",0,0,0);
ei_shader_param_scalar("absorption",0.3);
ei_shader_param_scalar("anisotropic",0.4);
ei_end_shader();

ei_shader("shadowvol_shell", "liquidShader1");
ei_end_shader();

ei_material("liquidShader3SG");
ei_surface_shader("liquidShader3");
ei_volume_shader("liquidShader2" );
ei_shadow_shader("liquidShader1" );
ei_end_material();
ei_shader("maya_phong", "phong1");
ei_shader_param_vector("color_",0.803922,0.664462,0.110342);
ei_shader_param_vector("transparency",0,0,0);
ei_shader_param_vector("ambientColor",0,0,0);
ei_shader_param_vector("incandescence",0,0,0);
ei_shader_param_int("liq_UserDefinedNormal",0);
ei_shader_param_vector("normalCamera",1,1,1);
ei_shader_param_scalar("diffuse",0.8);
ei_shader_param_scalar("translucence",0);
ei_shader_param_scalar("translucenceDepth",0.5);
ei_shader_param_scalar("translucenceFocus",0.5);
ei_shader_param_scalar("cosinePower",20);
ei_shader_param_vector("specularColor",0.5,0.5,0.5);
ei_shader_param_scalar("reflectivity",0.5);
ei_shader_param_vector("reflectedColor",0,0,0);
ei_shader_param_index("matteOpacityMode",2);
ei_shader_param_scalar("matteOpacity",1);
ei_shader_param_index("reflectionLimit",1);
ei_shader_param_vector("outColor",0,0,0);
ei_shader_param_vector("outTransparency",0,0,0);
ei_end_shader();

ei_material("phong1SG");
ei_surface_shader("phong1");
ei_end_material();

//worldPrologue

// Renderer::exportLight("_pointLight1_pointLightShape1");

// Renderer::exportPointLight()
ei_shader("pointlight", "|pointLight1|pointLightShape1_shader");
ei_shader_param_vector("lightcolor",1,1,1);
ei_shader_param_scalar("intensity",1);
ei_end_shader();
ei_light("|pointLight1|pointLightShape1_object");
ei_light_shader("|pointLight1|pointLightShape1_shader");
ei_origin(0,0,0);
ei_end_light();
ei_instance("|pointLight1|pointLightShape1");
ei_element("|pointLight1|pointLightShape1_object");
ei_transform(1,0,0,0,   0,1,0,0,   0,0,1,0,   0,5.23026,6.38383,1);
ei_declare("|pCube1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|pPlane1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_end_instance();

// Renderer::exportOneGeometry_Mesh(|pCube1|pCubeShape1, 0, 0

//############################### mesh #
//shape full path name=|pCube1|pCubeShape1
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|pCube1|pCubeShape1" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### vertex deform positions(optional)
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|pCube1|pCubeShape1
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|pPlane1|pPlaneShape1, 0, 0

//############################### mesh #
//shape full path name=|pPlane1|pPlaneShape1
//### UV(map1), size=4
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|pPlane1|pPlaneShape1" );
{
eiTag tag;
//vertex positions(required), size=6
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( 7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( -7.346750, 0.000000, -5.814621 );
ei_tab_add_vector( -7.346750, 0.000000, -5.814621 );
ei_tab_add_vector( 7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( 7.346750, 0.000000, -5.814621 );
ei_end_tab();
//### vertex deform positions(optional)
//### N ###(optional)
tag = eiNULL_TAG;
ei_declare("N", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_variable("N", &tag);
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_end_tab();
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.000000, 0.000000 );
ei_tab_add_vector2( 1.000000, 0.000000 );
ei_tab_add_vector2( 0.000000, 0.791455 );
ei_tab_add_vector2( 0.000000, 0.791455 );
ei_tab_add_vector2( 1.000000, 0.000000 );
ei_tab_add_vector2( 1.000000, 0.791455 );
ei_end_tab();
//### triangles(required) size=6
tag = ei_tab(EI_TYPE_INDEX, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_end_tab();
}//|pPlane1|pPlaneShape1
ei_end_object();
//--------------------------
//ribNode->name=|pCube1|pCubeShape1
//ribNode's transform node=|pCube1
//ribNode->object(0)->getDataPtr()->getFullPathName()=|pCube1|pCubeShape1
ei_instance("|pCube1");
ei_mtl("liquidShader3SG");
//shape name=|pCube1|pCubeShape1
//shape full path name=|pCube1|pCubeShape1
ei_element("|pCube1|pCubeShape1");
ei_transform(3.46703,0,0,0,   0,3.46703,0,0,   0,0,3.46703,0,   0,2.96559,0,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|pCube1_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|pPlane1|pPlaneShape1
//ribNode's transform node=|pPlane1
//ribNode->object(0)->getDataPtr()->getFullPathName()=|pPlane1|pPlaneShape1
ei_instance("|pPlane1");
ei_mtl("phong1SG");
//shape name=|pPlane1|pPlaneShape1
//shape full path name=|pPlane1|pPlaneShape1
ei_element("|pPlane1|pPlaneShape1");
ei_transform(2.5307,0,0,0,   0,2.5307,0,0,   0,0,2.5307,0,   0.186074,0,0.080088,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|pPlane1_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//Renderer::worldEpilogue()
ei_instgroup("cameraShape1");
//camera
ei_add_instance("|camera1_group|camera1|cameraShape1");
//light(s)
ei_add_instance("|pointLight1|pointLightShape1");
//mesh(s)
ei_add_instance("|pCube1");
ei_add_instance("|pPlane1");
ei_end_instgroup();
// in batch render mode
ei_render( "cameraShape1", "|camera1_group|camera1|cameraShape1", "cameraShape1_option" );
ei_end_context();
//------------------------------------------------

ei_context();
ei_verbose(6);
ei_link("eiIMG");
ei_link("eiSHADER");
ei_link("eiSHADER_maya");
//----------------shader_for_test begin---
ei_shader("maya_surfaceShader", "liquid_shader_for_test");
ei_shader_param_vector("outColor",1,0,0);
ei_end_shader();
ei_material("liquid_material_for_test");
ei_surface_shader("liquid_shader_for_test");
ei_end_material();
//----------------shader_for_test end ---
//    Generated by Liquid v2.3.5 (buildtime=20:51:12.30)
//    Scene : R:/MyDocuments/maya/projects/default/volume_liquidShader_anim
//    User  : yaoyansi

//############################### option #
ei_options("cameraShape1_option");
ei_contrast(0.05);
ei_samples(0,16);
ei_filter(4,3);
//transform motion=0, deform motion=0
ei_motion(0);
ei_trace_depth(4,4,4,4,4,4);
ei_displace(0);
ei_face(3);
ei_end_options();
// maya settings: focal=35.000000, aperture = 41.599998, aspect=1.333333
//Depth of Field on camera "|camera1_group|camera1|cameraShape1" is turned off in Maya

//############################### camera #
ei_camera("|camera1_group|camera1|cameraShape1_object");
//beauty channel
ei_output("R:/MyDocuments/maya/projects/default/rmanpix/volume_liquidShader_anim.cameraShape1.9.elvishray.bmp","bmp",1);
//mode=rgba
ei_output_variable("color",11);
ei_end_output();
// AOV
// AOV end
ei_focal(35);
ei_aperture(32);
ei_aspect(1.33333);
ei_resolution(200,150);
ei_clip(0.1,10000);
ei_end_camera();
//----------------------------------
ei_instance("|camera1_group|camera1|cameraShape1");
ei_element("|camera1_group|camera1|cameraShape1_object");
ei_transform(0.99115,0,-0.132748,0,   -0.0278748,0.977705,-0.208125,0,   0.129788,0.209983,0.969052,0,   1.04585,4.55134,7.88624,1);
ei_end_instance();

ei_shader("volume_shell", "liquidShader3");
ei_end_shader();

ei_shader("simple_volume", "liquidShader2");
ei_shader_param_vector("vol_color",1,1,0);
ei_shader_param_scalar("vol_density",5);
ei_shader_param_scalar("step_size",0.2);
ei_shader_param_scalar("vol_radius",3);
ei_shader_param_vector("vol_offset",0,0,0);
ei_shader_param_scalar("absorption",0.3);
ei_shader_param_scalar("anisotropic",0.4);
ei_end_shader();

ei_shader("shadowvol_shell", "liquidShader1");
ei_end_shader();

ei_material("liquidShader3SG");
ei_surface_shader("liquidShader3");
ei_volume_shader("liquidShader2" );
ei_shadow_shader("liquidShader1" );
ei_end_material();
ei_shader("maya_phong", "phong1");
ei_shader_param_vector("color_",0.803922,0.664462,0.110342);
ei_shader_param_vector("transparency",0,0,0);
ei_shader_param_vector("ambientColor",0,0,0);
ei_shader_param_vector("incandescence",0,0,0);
ei_shader_param_int("liq_UserDefinedNormal",0);
ei_shader_param_vector("normalCamera",1,1,1);
ei_shader_param_scalar("diffuse",0.8);
ei_shader_param_scalar("translucence",0);
ei_shader_param_scalar("translucenceDepth",0.5);
ei_shader_param_scalar("translucenceFocus",0.5);
ei_shader_param_scalar("cosinePower",20);
ei_shader_param_vector("specularColor",0.5,0.5,0.5);
ei_shader_param_scalar("reflectivity",0.5);
ei_shader_param_vector("reflectedColor",0,0,0);
ei_shader_param_index("matteOpacityMode",2);
ei_shader_param_scalar("matteOpacity",1);
ei_shader_param_index("reflectionLimit",1);
ei_shader_param_vector("outColor",0,0,0);
ei_shader_param_vector("outTransparency",0,0,0);
ei_end_shader();

ei_material("phong1SG");
ei_surface_shader("phong1");
ei_end_material();

//worldPrologue

// Renderer::exportLight("_pointLight1_pointLightShape1");

// Renderer::exportPointLight()
ei_shader("pointlight", "|pointLight1|pointLightShape1_shader");
ei_shader_param_vector("lightcolor",1,1,1);
ei_shader_param_scalar("intensity",1);
ei_end_shader();
ei_light("|pointLight1|pointLightShape1_object");
ei_light_shader("|pointLight1|pointLightShape1_shader");
ei_origin(0,0,0);
ei_end_light();
ei_instance("|pointLight1|pointLightShape1");
ei_element("|pointLight1|pointLightShape1_object");
ei_transform(1,0,0,0,   0,1,0,0,   0,0,1,0,   0,5.23026,6.38383,1);
ei_declare("|pCube1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|pPlane1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_end_instance();

// Renderer::exportOneGeometry_Mesh(|pCube1|pCubeShape1, 0, 0

//############################### mesh #
//shape full path name=|pCube1|pCubeShape1
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|pCube1|pCubeShape1" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### vertex deform positions(optional)
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|pCube1|pCubeShape1
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|pPlane1|pPlaneShape1, 0, 0

//############################### mesh #
//shape full path name=|pPlane1|pPlaneShape1
//### UV(map1), size=4
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|pPlane1|pPlaneShape1" );
{
eiTag tag;
//vertex positions(required), size=6
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( 7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( -7.346750, 0.000000, -5.814621 );
ei_tab_add_vector( -7.346750, 0.000000, -5.814621 );
ei_tab_add_vector( 7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( 7.346750, 0.000000, -5.814621 );
ei_end_tab();
//### vertex deform positions(optional)
//### N ###(optional)
tag = eiNULL_TAG;
ei_declare("N", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_variable("N", &tag);
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_end_tab();
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.000000, 0.000000 );
ei_tab_add_vector2( 1.000000, 0.000000 );
ei_tab_add_vector2( 0.000000, 0.791455 );
ei_tab_add_vector2( 0.000000, 0.791455 );
ei_tab_add_vector2( 1.000000, 0.000000 );
ei_tab_add_vector2( 1.000000, 0.791455 );
ei_end_tab();
//### triangles(required) size=6
tag = ei_tab(EI_TYPE_INDEX, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_end_tab();
}//|pPlane1|pPlaneShape1
ei_end_object();
//--------------------------
//ribNode->name=|pCube1|pCubeShape1
//ribNode's transform node=|pCube1
//ribNode->object(0)->getDataPtr()->getFullPathName()=|pCube1|pCubeShape1
ei_instance("|pCube1");
ei_mtl("liquidShader3SG");
//shape name=|pCube1|pCubeShape1
//shape full path name=|pCube1|pCubeShape1
ei_element("|pCube1|pCubeShape1");
ei_transform(3.46703,0,0,0,   0,3.46703,0,0,   0,0,3.46703,0,   0,2.96559,0,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|pCube1_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|pPlane1|pPlaneShape1
//ribNode's transform node=|pPlane1
//ribNode->object(0)->getDataPtr()->getFullPathName()=|pPlane1|pPlaneShape1
ei_instance("|pPlane1");
ei_mtl("phong1SG");
//shape name=|pPlane1|pPlaneShape1
//shape full path name=|pPlane1|pPlaneShape1
ei_element("|pPlane1|pPlaneShape1");
ei_transform(2.5307,0,0,0,   0,2.5307,0,0,   0,0,2.5307,0,   0.186074,0,0.080088,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|pPlane1_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//Renderer::worldEpilogue()
ei_instgroup("cameraShape1");
//camera
ei_add_instance("|camera1_group|camera1|cameraShape1");
//light(s)
ei_add_instance("|pointLight1|pointLightShape1");
//mesh(s)
ei_add_instance("|pCube1");
ei_add_instance("|pPlane1");
ei_end_instgroup();
// in batch render mode
ei_render( "cameraShape1", "|camera1_group|camera1|cameraShape1", "cameraShape1_option" );
ei_end_context();
//------------------------------------------------

ei_context();
ei_verbose(6);
ei_link("eiIMG");
ei_link("eiSHADER");
ei_link("eiSHADER_maya");
//----------------shader_for_test begin---
ei_shader("maya_surfaceShader", "liquid_shader_for_test");
ei_shader_param_vector("outColor",1,0,0);
ei_end_shader();
ei_material("liquid_material_for_test");
ei_surface_shader("liquid_shader_for_test");
ei_end_material();
//----------------shader_for_test end ---
//    Generated by Liquid v2.3.5 (buildtime=20:51:12.30)
//    Scene : R:/MyDocuments/maya/projects/default/volume_liquidShader_anim
//    User  : yaoyansi

//############################### option #
ei_options("cameraShape1_option");
ei_contrast(0.05);
ei_samples(0,16);
ei_filter(4,3);
//transform motion=0, deform motion=0
ei_motion(0);
ei_trace_depth(4,4,4,4,4,4);
ei_displace(0);
ei_face(3);
ei_end_options();
// maya settings: focal=35.000000, aperture = 41.599998, aspect=1.333333
//Depth of Field on camera "|camera1_group|camera1|cameraShape1" is turned off in Maya

//############################### camera #
ei_camera("|camera1_group|camera1|cameraShape1_object");
//beauty channel
ei_output("R:/MyDocuments/maya/projects/default/rmanpix/volume_liquidShader_anim.cameraShape1.10.elvishray.bmp","bmp",1);
//mode=rgba
ei_output_variable("color",11);
ei_end_output();
// AOV
// AOV end
ei_focal(35);
ei_aperture(32);
ei_aspect(1.33333);
ei_resolution(200,150);
ei_clip(0.1,10000);
ei_end_camera();
//----------------------------------
ei_instance("|camera1_group|camera1|cameraShape1");
ei_element("|camera1_group|camera1|cameraShape1_object");
ei_transform(0.987349,0,-0.158564,0,   -0.0337413,0.977097,-0.210101,0,   0.154932,0.212793,0.964736,0,   1.23104,4.55134,7.74949,1);
ei_end_instance();

ei_shader("volume_shell", "liquidShader3");
ei_end_shader();

ei_shader("simple_volume", "liquidShader2");
ei_shader_param_vector("vol_color",1,1,0);
ei_shader_param_scalar("vol_density",5);
ei_shader_param_scalar("step_size",0.2);
ei_shader_param_scalar("vol_radius",3);
ei_shader_param_vector("vol_offset",0,0,0);
ei_shader_param_scalar("absorption",0.3);
ei_shader_param_scalar("anisotropic",0.4);
ei_end_shader();

ei_shader("shadowvol_shell", "liquidShader1");
ei_end_shader();

ei_material("liquidShader3SG");
ei_surface_shader("liquidShader3");
ei_volume_shader("liquidShader2" );
ei_shadow_shader("liquidShader1" );
ei_end_material();
ei_shader("maya_phong", "phong1");
ei_shader_param_vector("color_",0.803922,0.664462,0.110342);
ei_shader_param_vector("transparency",0,0,0);
ei_shader_param_vector("ambientColor",0,0,0);
ei_shader_param_vector("incandescence",0,0,0);
ei_shader_param_int("liq_UserDefinedNormal",0);
ei_shader_param_vector("normalCamera",1,1,1);
ei_shader_param_scalar("diffuse",0.8);
ei_shader_param_scalar("translucence",0);
ei_shader_param_scalar("translucenceDepth",0.5);
ei_shader_param_scalar("translucenceFocus",0.5);
ei_shader_param_scalar("cosinePower",20);
ei_shader_param_vector("specularColor",0.5,0.5,0.5);
ei_shader_param_scalar("reflectivity",0.5);
ei_shader_param_vector("reflectedColor",0,0,0);
ei_shader_param_index("matteOpacityMode",2);
ei_shader_param_scalar("matteOpacity",1);
ei_shader_param_index("reflectionLimit",1);
ei_shader_param_vector("outColor",0,0,0);
ei_shader_param_vector("outTransparency",0,0,0);
ei_end_shader();

ei_material("phong1SG");
ei_surface_shader("phong1");
ei_end_material();

//worldPrologue

// Renderer::exportLight("_pointLight1_pointLightShape1");

// Renderer::exportPointLight()
ei_shader("pointlight", "|pointLight1|pointLightShape1_shader");
ei_shader_param_vector("lightcolor",1,1,1);
ei_shader_param_scalar("intensity",1);
ei_end_shader();
ei_light("|pointLight1|pointLightShape1_object");
ei_light_shader("|pointLight1|pointLightShape1_shader");
ei_origin(0,0,0);
ei_end_light();
ei_instance("|pointLight1|pointLightShape1");
ei_element("|pointLight1|pointLightShape1_object");
ei_transform(1,0,0,0,   0,1,0,0,   0,0,1,0,   0,5.23026,6.38383,1);
ei_declare("|pCube1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|pPlane1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_end_instance();

// Renderer::exportOneGeometry_Mesh(|pCube1|pCubeShape1, 0, 0

//############################### mesh #
//shape full path name=|pCube1|pCubeShape1
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|pCube1|pCubeShape1" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### vertex deform positions(optional)
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|pCube1|pCubeShape1
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|pPlane1|pPlaneShape1, 0, 0

//############################### mesh #
//shape full path name=|pPlane1|pPlaneShape1
//### UV(map1), size=4
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|pPlane1|pPlaneShape1" );
{
eiTag tag;
//vertex positions(required), size=6
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( 7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( -7.346750, 0.000000, -5.814621 );
ei_tab_add_vector( -7.346750, 0.000000, -5.814621 );
ei_tab_add_vector( 7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( 7.346750, 0.000000, -5.814621 );
ei_end_tab();
//### vertex deform positions(optional)
//### N ###(optional)
tag = eiNULL_TAG;
ei_declare("N", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_variable("N", &tag);
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_end_tab();
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.000000, 0.000000 );
ei_tab_add_vector2( 1.000000, 0.000000 );
ei_tab_add_vector2( 0.000000, 0.791455 );
ei_tab_add_vector2( 0.000000, 0.791455 );
ei_tab_add_vector2( 1.000000, 0.000000 );
ei_tab_add_vector2( 1.000000, 0.791455 );
ei_end_tab();
//### triangles(required) size=6
tag = ei_tab(EI_TYPE_INDEX, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_end_tab();
}//|pPlane1|pPlaneShape1
ei_end_object();
//--------------------------
//ribNode->name=|pCube1|pCubeShape1
//ribNode's transform node=|pCube1
//ribNode->object(0)->getDataPtr()->getFullPathName()=|pCube1|pCubeShape1
ei_instance("|pCube1");
ei_mtl("liquidShader3SG");
//shape name=|pCube1|pCubeShape1
//shape full path name=|pCube1|pCubeShape1
ei_element("|pCube1|pCubeShape1");
ei_transform(3.46703,0,0,0,   0,3.46703,0,0,   0,0,3.46703,0,   0,2.96559,0,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|pCube1_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|pPlane1|pPlaneShape1
//ribNode's transform node=|pPlane1
//ribNode->object(0)->getDataPtr()->getFullPathName()=|pPlane1|pPlaneShape1
ei_instance("|pPlane1");
ei_mtl("phong1SG");
//shape name=|pPlane1|pPlaneShape1
//shape full path name=|pPlane1|pPlaneShape1
ei_element("|pPlane1|pPlaneShape1");
ei_transform(2.5307,0,0,0,   0,2.5307,0,0,   0,0,2.5307,0,   0.186074,0,0.080088,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|pPlane1_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//Renderer::worldEpilogue()
ei_instgroup("cameraShape1");
//camera
ei_add_instance("|camera1_group|camera1|cameraShape1");
//light(s)
ei_add_instance("|pointLight1|pointLightShape1");
//mesh(s)
ei_add_instance("|pCube1");
ei_add_instance("|pPlane1");
ei_end_instgroup();
// in batch render mode
ei_render( "cameraShape1", "|camera1_group|camera1|cameraShape1", "cameraShape1_option" );
ei_end_context();
//------------------------------------------------

ei_context();
ei_verbose(6);
ei_link("eiIMG");
ei_link("eiSHADER");
ei_link("eiSHADER_maya");
//----------------shader_for_test begin---
ei_shader("maya_surfaceShader", "liquid_shader_for_test");
ei_shader_param_vector("outColor",1,0,0);
ei_end_shader();
ei_material("liquid_material_for_test");
ei_surface_shader("liquid_shader_for_test");
ei_end_material();
//----------------shader_for_test end ---
//    Generated by Liquid v2.3.5 (buildtime=20:51:12.30)
//    Scene : R:/MyDocuments/maya/projects/default/volume_liquidShader_anim
//    User  : yaoyansi

//############################### option #
ei_options("cameraShape1_option");
ei_contrast(0.05);
ei_samples(0,16);
ei_filter(4,3);
//transform motion=0, deform motion=0
ei_motion(0);
ei_trace_depth(4,4,4,4,4,4);
ei_displace(0);
ei_face(3);
ei_end_options();
// maya settings: focal=35.000000, aperture = 41.599998, aspect=1.333333
//Depth of Field on camera "|camera1_group|camera1|cameraShape1" is turned off in Maya

//############################### camera #
ei_camera("|camera1_group|camera1|cameraShape1_object");
//beauty channel
ei_output("R:/MyDocuments/maya/projects/default/rmanpix/volume_liquidShader_anim.cameraShape1.11.elvishray.bmp","bmp",1);
//mode=rgba
ei_output_variable("color",11);
ei_end_output();
// AOV
// AOV end
ei_focal(35);
ei_aperture(32);
ei_aspect(1.33333);
ei_resolution(200,150);
ei_clip(0.1,10000);
ei_end_camera();
//----------------------------------
ei_instance("|camera1_group|camera1|cameraShape1");
ei_element("|camera1_group|camera1|cameraShape1_object");
ei_transform(0.982513,3.46945e-018,-0.186192,0,   -0.0401763,0.976442,-0.212006,0,   0.181805,0.215779,0.959368,0,   1.42374,4.55134,7.60199,1);
ei_end_instance();

ei_shader("volume_shell", "liquidShader3");
ei_end_shader();

ei_shader("simple_volume", "liquidShader2");
ei_shader_param_vector("vol_color",1,1,0);
ei_shader_param_scalar("vol_density",5);
ei_shader_param_scalar("step_size",0.2);
ei_shader_param_scalar("vol_radius",3);
ei_shader_param_vector("vol_offset",0,0,0);
ei_shader_param_scalar("absorption",0.3);
ei_shader_param_scalar("anisotropic",0.4);
ei_end_shader();

ei_shader("shadowvol_shell", "liquidShader1");
ei_end_shader();

ei_material("liquidShader3SG");
ei_surface_shader("liquidShader3");
ei_volume_shader("liquidShader2" );
ei_shadow_shader("liquidShader1" );
ei_end_material();
ei_shader("maya_phong", "phong1");
ei_shader_param_vector("color_",0.803922,0.664462,0.110342);
ei_shader_param_vector("transparency",0,0,0);
ei_shader_param_vector("ambientColor",0,0,0);
ei_shader_param_vector("incandescence",0,0,0);
ei_shader_param_int("liq_UserDefinedNormal",0);
ei_shader_param_vector("normalCamera",1,1,1);
ei_shader_param_scalar("diffuse",0.8);
ei_shader_param_scalar("translucence",0);
ei_shader_param_scalar("translucenceDepth",0.5);
ei_shader_param_scalar("translucenceFocus",0.5);
ei_shader_param_scalar("cosinePower",20);
ei_shader_param_vector("specularColor",0.5,0.5,0.5);
ei_shader_param_scalar("reflectivity",0.5);
ei_shader_param_vector("reflectedColor",0,0,0);
ei_shader_param_index("matteOpacityMode",2);
ei_shader_param_scalar("matteOpacity",1);
ei_shader_param_index("reflectionLimit",1);
ei_shader_param_vector("outColor",0,0,0);
ei_shader_param_vector("outTransparency",0,0,0);
ei_end_shader();

ei_material("phong1SG");
ei_surface_shader("phong1");
ei_end_material();

//worldPrologue

// Renderer::exportLight("_pointLight1_pointLightShape1");

// Renderer::exportPointLight()
ei_shader("pointlight", "|pointLight1|pointLightShape1_shader");
ei_shader_param_vector("lightcolor",1,1,1);
ei_shader_param_scalar("intensity",1);
ei_end_shader();
ei_light("|pointLight1|pointLightShape1_object");
ei_light_shader("|pointLight1|pointLightShape1_shader");
ei_origin(0,0,0);
ei_end_light();
ei_instance("|pointLight1|pointLightShape1");
ei_element("|pointLight1|pointLightShape1_object");
ei_transform(1,0,0,0,   0,1,0,0,   0,0,1,0,   0,5.23026,6.38383,1);
ei_declare("|pCube1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|pPlane1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_end_instance();

// Renderer::exportOneGeometry_Mesh(|pCube1|pCubeShape1, 0, 0

//############################### mesh #
//shape full path name=|pCube1|pCubeShape1
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|pCube1|pCubeShape1" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### vertex deform positions(optional)
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|pCube1|pCubeShape1
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|pPlane1|pPlaneShape1, 0, 0

//############################### mesh #
//shape full path name=|pPlane1|pPlaneShape1
//### UV(map1), size=4
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|pPlane1|pPlaneShape1" );
{
eiTag tag;
//vertex positions(required), size=6
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( 7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( -7.346750, 0.000000, -5.814621 );
ei_tab_add_vector( -7.346750, 0.000000, -5.814621 );
ei_tab_add_vector( 7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( 7.346750, 0.000000, -5.814621 );
ei_end_tab();
//### vertex deform positions(optional)
//### N ###(optional)
tag = eiNULL_TAG;
ei_declare("N", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_variable("N", &tag);
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_end_tab();
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.000000, 0.000000 );
ei_tab_add_vector2( 1.000000, 0.000000 );
ei_tab_add_vector2( 0.000000, 0.791455 );
ei_tab_add_vector2( 0.000000, 0.791455 );
ei_tab_add_vector2( 1.000000, 0.000000 );
ei_tab_add_vector2( 1.000000, 0.791455 );
ei_end_tab();
//### triangles(required) size=6
tag = ei_tab(EI_TYPE_INDEX, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_end_tab();
}//|pPlane1|pPlaneShape1
ei_end_object();
//--------------------------
//ribNode->name=|pCube1|pCubeShape1
//ribNode's transform node=|pCube1
//ribNode->object(0)->getDataPtr()->getFullPathName()=|pCube1|pCubeShape1
ei_instance("|pCube1");
ei_mtl("liquidShader3SG");
//shape name=|pCube1|pCubeShape1
//shape full path name=|pCube1|pCubeShape1
ei_element("|pCube1|pCubeShape1");
ei_transform(3.46703,0,0,0,   0,3.46703,0,0,   0,0,3.46703,0,   0,2.96559,0,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|pCube1_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|pPlane1|pPlaneShape1
//ribNode's transform node=|pPlane1
//ribNode->object(0)->getDataPtr()->getFullPathName()=|pPlane1|pPlaneShape1
ei_instance("|pPlane1");
ei_mtl("phong1SG");
//shape name=|pPlane1|pPlaneShape1
//shape full path name=|pPlane1|pPlaneShape1
ei_element("|pPlane1|pPlaneShape1");
ei_transform(2.5307,0,0,0,   0,2.5307,0,0,   0,0,2.5307,0,   0.186074,0,0.080088,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|pPlane1_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//Renderer::worldEpilogue()
ei_instgroup("cameraShape1");
//camera
ei_add_instance("|camera1_group|camera1|cameraShape1");
//light(s)
ei_add_instance("|pointLight1|pointLightShape1");
//mesh(s)
ei_add_instance("|pCube1");
ei_add_instance("|pPlane1");
ei_end_instgroup();
// in batch render mode
ei_render( "cameraShape1", "|camera1_group|camera1|cameraShape1", "cameraShape1_option" );
ei_end_context();
//------------------------------------------------

ei_context();
ei_verbose(6);
ei_link("eiIMG");
ei_link("eiSHADER");
ei_link("eiSHADER_maya");
//----------------shader_for_test begin---
ei_shader("maya_surfaceShader", "liquid_shader_for_test");
ei_shader_param_vector("outColor",1,0,0);
ei_end_shader();
ei_material("liquid_material_for_test");
ei_surface_shader("liquid_shader_for_test");
ei_end_material();
//----------------shader_for_test end ---
//    Generated by Liquid v2.3.5 (buildtime=20:51:12.30)
//    Scene : R:/MyDocuments/maya/projects/default/volume_liquidShader_anim
//    User  : yaoyansi

//############################### option #
ei_options("cameraShape1_option");
ei_contrast(0.05);
ei_samples(0,16);
ei_filter(4,3);
//transform motion=0, deform motion=0
ei_motion(0);
ei_trace_depth(4,4,4,4,4,4);
ei_displace(0);
ei_face(3);
ei_end_options();
// maya settings: focal=35.000000, aperture = 41.599998, aspect=1.333333
//Depth of Field on camera "|camera1_group|camera1|cameraShape1" is turned off in Maya

//############################### camera #
ei_camera("|camera1_group|camera1|cameraShape1_object");
//beauty channel
ei_output("R:/MyDocuments/maya/projects/default/rmanpix/volume_liquidShader_anim.cameraShape1.12.elvishray.bmp","bmp",1);
//mode=rgba
ei_output_variable("color",11);
ei_end_output();
// AOV
// AOV end
ei_focal(35);
ei_aperture(32);
ei_aspect(1.33333);
ei_resolution(200,150);
ei_clip(0.1,10000);
ei_end_camera();
//----------------------------------
ei_instance("|camera1_group|camera1|cameraShape1");
ei_element("|camera1_group|camera1|cameraShape1_object");
ei_transform(0.976546,0,-0.21531,0,   -0.0471337,0.975745,-0.213776,0,   0.210088,0.218911,0.95286,0,   1.62096,4.55134,7.44487,1);
ei_end_instance();

ei_shader("volume_shell", "liquidShader3");
ei_end_shader();

ei_shader("simple_volume", "liquidShader2");
ei_shader_param_vector("vol_color",1,1,0);
ei_shader_param_scalar("vol_density",5);
ei_shader_param_scalar("step_size",0.2);
ei_shader_param_scalar("vol_radius",3);
ei_shader_param_vector("vol_offset",0,0,0);
ei_shader_param_scalar("absorption",0.3);
ei_shader_param_scalar("anisotropic",0.4);
ei_end_shader();

ei_shader("shadowvol_shell", "liquidShader1");
ei_end_shader();

ei_material("liquidShader3SG");
ei_surface_shader("liquidShader3");
ei_volume_shader("liquidShader2" );
ei_shadow_shader("liquidShader1" );
ei_end_material();
ei_shader("maya_phong", "phong1");
ei_shader_param_vector("color_",0.803922,0.664462,0.110342);
ei_shader_param_vector("transparency",0,0,0);
ei_shader_param_vector("ambientColor",0,0,0);
ei_shader_param_vector("incandescence",0,0,0);
ei_shader_param_int("liq_UserDefinedNormal",0);
ei_shader_param_vector("normalCamera",1,1,1);
ei_shader_param_scalar("diffuse",0.8);
ei_shader_param_scalar("translucence",0);
ei_shader_param_scalar("translucenceDepth",0.5);
ei_shader_param_scalar("translucenceFocus",0.5);
ei_shader_param_scalar("cosinePower",20);
ei_shader_param_vector("specularColor",0.5,0.5,0.5);
ei_shader_param_scalar("reflectivity",0.5);
ei_shader_param_vector("reflectedColor",0,0,0);
ei_shader_param_index("matteOpacityMode",2);
ei_shader_param_scalar("matteOpacity",1);
ei_shader_param_index("reflectionLimit",1);
ei_shader_param_vector("outColor",0,0,0);
ei_shader_param_vector("outTransparency",0,0,0);
ei_end_shader();

ei_material("phong1SG");
ei_surface_shader("phong1");
ei_end_material();

//worldPrologue

// Renderer::exportLight("_pointLight1_pointLightShape1");

// Renderer::exportPointLight()
ei_shader("pointlight", "|pointLight1|pointLightShape1_shader");
ei_shader_param_vector("lightcolor",1,1,1);
ei_shader_param_scalar("intensity",1);
ei_end_shader();
ei_light("|pointLight1|pointLightShape1_object");
ei_light_shader("|pointLight1|pointLightShape1_shader");
ei_origin(0,0,0);
ei_end_light();
ei_instance("|pointLight1|pointLightShape1");
ei_element("|pointLight1|pointLightShape1_object");
ei_transform(1,0,0,0,   0,1,0,0,   0,0,1,0,   0,5.23026,6.38383,1);
ei_declare("|pCube1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|pPlane1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_end_instance();

// Renderer::exportOneGeometry_Mesh(|pCube1|pCubeShape1, 0, 0

//############################### mesh #
//shape full path name=|pCube1|pCubeShape1
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|pCube1|pCubeShape1" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### vertex deform positions(optional)
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|pCube1|pCubeShape1
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|pPlane1|pPlaneShape1, 0, 0

//############################### mesh #
//shape full path name=|pPlane1|pPlaneShape1
//### UV(map1), size=4
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|pPlane1|pPlaneShape1" );
{
eiTag tag;
//vertex positions(required), size=6
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( 7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( -7.346750, 0.000000, -5.814621 );
ei_tab_add_vector( -7.346750, 0.000000, -5.814621 );
ei_tab_add_vector( 7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( 7.346750, 0.000000, -5.814621 );
ei_end_tab();
//### vertex deform positions(optional)
//### N ###(optional)
tag = eiNULL_TAG;
ei_declare("N", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_variable("N", &tag);
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_end_tab();
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.000000, 0.000000 );
ei_tab_add_vector2( 1.000000, 0.000000 );
ei_tab_add_vector2( 0.000000, 0.791455 );
ei_tab_add_vector2( 0.000000, 0.791455 );
ei_tab_add_vector2( 1.000000, 0.000000 );
ei_tab_add_vector2( 1.000000, 0.791455 );
ei_end_tab();
//### triangles(required) size=6
tag = ei_tab(EI_TYPE_INDEX, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_end_tab();
}//|pPlane1|pPlaneShape1
ei_end_object();
//--------------------------
//ribNode->name=|pCube1|pCubeShape1
//ribNode's transform node=|pCube1
//ribNode->object(0)->getDataPtr()->getFullPathName()=|pCube1|pCubeShape1
ei_instance("|pCube1");
ei_mtl("liquidShader3SG");
//shape name=|pCube1|pCubeShape1
//shape full path name=|pCube1|pCubeShape1
ei_element("|pCube1|pCubeShape1");
ei_transform(3.46703,0,0,0,   0,3.46703,0,0,   0,0,3.46703,0,   0,2.96559,0,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|pCube1_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|pPlane1|pPlaneShape1
//ribNode's transform node=|pPlane1
//ribNode->object(0)->getDataPtr()->getFullPathName()=|pPlane1|pPlaneShape1
ei_instance("|pPlane1");
ei_mtl("phong1SG");
//shape name=|pPlane1|pPlaneShape1
//shape full path name=|pPlane1|pPlaneShape1
ei_element("|pPlane1|pPlaneShape1");
ei_transform(2.5307,0,0,0,   0,2.5307,0,0,   0,0,2.5307,0,   0.186074,0,0.080088,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|pPlane1_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//Renderer::worldEpilogue()
ei_instgroup("cameraShape1");
//camera
ei_add_instance("|camera1_group|camera1|cameraShape1");
//light(s)
ei_add_instance("|pointLight1|pointLightShape1");
//mesh(s)
ei_add_instance("|pCube1");
ei_add_instance("|pPlane1");
ei_end_instgroup();
// in batch render mode
ei_render( "cameraShape1", "|camera1_group|camera1|cameraShape1", "cameraShape1_option" );
ei_end_context();
//------------------------------------------------

ei_context();
ei_verbose(6);
ei_link("eiIMG");
ei_link("eiSHADER");
ei_link("eiSHADER_maya");
//----------------shader_for_test begin---
ei_shader("maya_surfaceShader", "liquid_shader_for_test");
ei_shader_param_vector("outColor",1,0,0);
ei_end_shader();
ei_material("liquid_material_for_test");
ei_surface_shader("liquid_shader_for_test");
ei_end_material();
//----------------shader_for_test end ---
//    Generated by Liquid v2.3.5 (buildtime=20:51:12.30)
//    Scene : R:/MyDocuments/maya/projects/default/volume_liquidShader_anim
//    User  : yaoyansi

//############################### option #
ei_options("cameraShape1_option");
ei_contrast(0.05);
ei_samples(0,16);
ei_filter(4,3);
//transform motion=0, deform motion=0
ei_motion(0);
ei_trace_depth(4,4,4,4,4,4);
ei_displace(0);
ei_face(3);
ei_end_options();
// maya settings: focal=35.000000, aperture = 41.599998, aspect=1.333333
//Depth of Field on camera "|camera1_group|camera1|cameraShape1" is turned off in Maya

//############################### camera #
ei_camera("|camera1_group|camera1|cameraShape1_object");
//beauty channel
ei_output("R:/MyDocuments/maya/projects/default/rmanpix/volume_liquidShader_anim.cameraShape1.13.elvishray.bmp","bmp",1);
//mode=rgba
ei_output_variable("color",11);
ei_end_output();
// AOV
// AOV end
ei_focal(35);
ei_aperture(32);
ei_aspect(1.33333);
ei_resolution(200,150);
ei_clip(0.1,10000);
ei_end_camera();
//----------------------------------
ei_instance("|camera1_group|camera1|cameraShape1");
ei_element("|camera1_group|camera1|cameraShape1_object");
ei_transform(0.969379,0,-0.245568,0,   -0.0545556,0.97501,-0.215359,0,   0.239431,0.222161,0.945155,0,   1.81968,4.55134,7.27926,1);
ei_end_instance();

ei_shader("volume_shell", "liquidShader3");
ei_end_shader();

ei_shader("simple_volume", "liquidShader2");
ei_shader_param_vector("vol_color",1,1,0);
ei_shader_param_scalar("vol_density",5);
ei_shader_param_scalar("step_size",0.2);
ei_shader_param_scalar("vol_radius",3);
ei_shader_param_vector("vol_offset",0,0,0);
ei_shader_param_scalar("absorption",0.3);
ei_shader_param_scalar("anisotropic",0.4);
ei_end_shader();

ei_shader("shadowvol_shell", "liquidShader1");
ei_end_shader();

ei_material("liquidShader3SG");
ei_surface_shader("liquidShader3");
ei_volume_shader("liquidShader2" );
ei_shadow_shader("liquidShader1" );
ei_end_material();
ei_shader("maya_phong", "phong1");
ei_shader_param_vector("color_",0.803922,0.664462,0.110342);
ei_shader_param_vector("transparency",0,0,0);
ei_shader_param_vector("ambientColor",0,0,0);
ei_shader_param_vector("incandescence",0,0,0);
ei_shader_param_int("liq_UserDefinedNormal",0);
ei_shader_param_vector("normalCamera",1,1,1);
ei_shader_param_scalar("diffuse",0.8);
ei_shader_param_scalar("translucence",0);
ei_shader_param_scalar("translucenceDepth",0.5);
ei_shader_param_scalar("translucenceFocus",0.5);
ei_shader_param_scalar("cosinePower",20);
ei_shader_param_vector("specularColor",0.5,0.5,0.5);
ei_shader_param_scalar("reflectivity",0.5);
ei_shader_param_vector("reflectedColor",0,0,0);
ei_shader_param_index("matteOpacityMode",2);
ei_shader_param_scalar("matteOpacity",1);
ei_shader_param_index("reflectionLimit",1);
ei_shader_param_vector("outColor",0,0,0);
ei_shader_param_vector("outTransparency",0,0,0);
ei_end_shader();

ei_material("phong1SG");
ei_surface_shader("phong1");
ei_end_material();

//worldPrologue

// Renderer::exportLight("_pointLight1_pointLightShape1");

// Renderer::exportPointLight()
ei_shader("pointlight", "|pointLight1|pointLightShape1_shader");
ei_shader_param_vector("lightcolor",1,1,1);
ei_shader_param_scalar("intensity",1);
ei_end_shader();
ei_light("|pointLight1|pointLightShape1_object");
ei_light_shader("|pointLight1|pointLightShape1_shader");
ei_origin(0,0,0);
ei_end_light();
ei_instance("|pointLight1|pointLightShape1");
ei_element("|pointLight1|pointLightShape1_object");
ei_transform(1,0,0,0,   0,1,0,0,   0,0,1,0,   0,5.23026,6.38383,1);
ei_declare("|pCube1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|pPlane1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_end_instance();

// Renderer::exportOneGeometry_Mesh(|pCube1|pCubeShape1, 0, 0

//############################### mesh #
//shape full path name=|pCube1|pCubeShape1
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|pCube1|pCubeShape1" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### vertex deform positions(optional)
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|pCube1|pCubeShape1
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|pPlane1|pPlaneShape1, 0, 0

//############################### mesh #
//shape full path name=|pPlane1|pPlaneShape1
//### UV(map1), size=4
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|pPlane1|pPlaneShape1" );
{
eiTag tag;
//vertex positions(required), size=6
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( 7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( -7.346750, 0.000000, -5.814621 );
ei_tab_add_vector( -7.346750, 0.000000, -5.814621 );
ei_tab_add_vector( 7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( 7.346750, 0.000000, -5.814621 );
ei_end_tab();
//### vertex deform positions(optional)
//### N ###(optional)
tag = eiNULL_TAG;
ei_declare("N", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_variable("N", &tag);
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_end_tab();
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.000000, 0.000000 );
ei_tab_add_vector2( 1.000000, 0.000000 );
ei_tab_add_vector2( 0.000000, 0.791455 );
ei_tab_add_vector2( 0.000000, 0.791455 );
ei_tab_add_vector2( 1.000000, 0.000000 );
ei_tab_add_vector2( 1.000000, 0.791455 );
ei_end_tab();
//### triangles(required) size=6
tag = ei_tab(EI_TYPE_INDEX, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_end_tab();
}//|pPlane1|pPlaneShape1
ei_end_object();
//--------------------------
//ribNode->name=|pCube1|pCubeShape1
//ribNode's transform node=|pCube1
//ribNode->object(0)->getDataPtr()->getFullPathName()=|pCube1|pCubeShape1
ei_instance("|pCube1");
ei_mtl("liquidShader3SG");
//shape name=|pCube1|pCubeShape1
//shape full path name=|pCube1|pCubeShape1
ei_element("|pCube1|pCubeShape1");
ei_transform(3.46703,0,0,0,   0,3.46703,0,0,   0,0,3.46703,0,   0,2.96559,0,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|pCube1_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|pPlane1|pPlaneShape1
//ribNode's transform node=|pPlane1
//ribNode->object(0)->getDataPtr()->getFullPathName()=|pPlane1|pPlaneShape1
ei_instance("|pPlane1");
ei_mtl("phong1SG");
//shape name=|pPlane1|pPlaneShape1
//shape full path name=|pPlane1|pPlaneShape1
ei_element("|pPlane1|pPlaneShape1");
ei_transform(2.5307,0,0,0,   0,2.5307,0,0,   0,0,2.5307,0,   0.186074,0,0.080088,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|pPlane1_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//Renderer::worldEpilogue()
ei_instgroup("cameraShape1");
//camera
ei_add_instance("|camera1_group|camera1|cameraShape1");
//light(s)
ei_add_instance("|pointLight1|pointLightShape1");
//mesh(s)
ei_add_instance("|pCube1");
ei_add_instance("|pPlane1");
ei_end_instgroup();
// in batch render mode
ei_render( "cameraShape1", "|camera1_group|camera1|cameraShape1", "cameraShape1_option" );
ei_end_context();
//------------------------------------------------

ei_context();
ei_verbose(6);
ei_link("eiIMG");
ei_link("eiSHADER");
ei_link("eiSHADER_maya");
//----------------shader_for_test begin---
ei_shader("maya_surfaceShader", "liquid_shader_for_test");
ei_shader_param_vector("outColor",1,0,0);
ei_end_shader();
ei_material("liquid_material_for_test");
ei_surface_shader("liquid_shader_for_test");
ei_end_material();
//----------------shader_for_test end ---
//    Generated by Liquid v2.3.5 (buildtime=20:51:12.30)
//    Scene : R:/MyDocuments/maya/projects/default/volume_liquidShader_anim
//    User  : yaoyansi

//############################### option #
ei_options("cameraShape1_option");
ei_contrast(0.05);
ei_samples(0,16);
ei_filter(4,3);
//transform motion=0, deform motion=0
ei_motion(0);
ei_trace_depth(4,4,4,4,4,4);
ei_displace(0);
ei_face(3);
ei_end_options();
// maya settings: focal=35.000000, aperture = 41.599998, aspect=1.333333
//Depth of Field on camera "|camera1_group|camera1|cameraShape1" is turned off in Maya

//############################### camera #
ei_camera("|camera1_group|camera1|cameraShape1_object");
//beauty channel
ei_output("R:/MyDocuments/maya/projects/default/rmanpix/volume_liquidShader_anim.cameraShape1.14.elvishray.bmp","bmp",1);
//mode=rgba
ei_output_variable("color",11);
ei_end_output();
// AOV
// AOV end
ei_focal(35);
ei_aperture(32);
ei_aspect(1.33333);
ei_resolution(200,150);
ei_clip(0.1,10000);
ei_end_camera();
//----------------------------------
ei_instance("|camera1_group|camera1|cameraShape1");
ei_element("|camera1_group|camera1|cameraShape1_object");
ei_transform(0.96099,-3.46945e-018,-0.276583,0,   -0.0623726,0.974241,-0.216714,0,   0.269459,0.225511,0.936235,0,   2.0169,4.55134,7.10627,1);
ei_end_instance();

ei_shader("volume_shell", "liquidShader3");
ei_end_shader();

ei_shader("simple_volume", "liquidShader2");
ei_shader_param_vector("vol_color",1,1,0);
ei_shader_param_scalar("vol_density",5);
ei_shader_param_scalar("step_size",0.2);
ei_shader_param_scalar("vol_radius",3);
ei_shader_param_vector("vol_offset",0,0,0);
ei_shader_param_scalar("absorption",0.3);
ei_shader_param_scalar("anisotropic",0.4);
ei_end_shader();

ei_shader("shadowvol_shell", "liquidShader1");
ei_end_shader();

ei_material("liquidShader3SG");
ei_surface_shader("liquidShader3");
ei_volume_shader("liquidShader2" );
ei_shadow_shader("liquidShader1" );
ei_end_material();
ei_shader("maya_phong", "phong1");
ei_shader_param_vector("color_",0.803922,0.664462,0.110342);
ei_shader_param_vector("transparency",0,0,0);
ei_shader_param_vector("ambientColor",0,0,0);
ei_shader_param_vector("incandescence",0,0,0);
ei_shader_param_int("liq_UserDefinedNormal",0);
ei_shader_param_vector("normalCamera",1,1,1);
ei_shader_param_scalar("diffuse",0.8);
ei_shader_param_scalar("translucence",0);
ei_shader_param_scalar("translucenceDepth",0.5);
ei_shader_param_scalar("translucenceFocus",0.5);
ei_shader_param_scalar("cosinePower",20);
ei_shader_param_vector("specularColor",0.5,0.5,0.5);
ei_shader_param_scalar("reflectivity",0.5);
ei_shader_param_vector("reflectedColor",0,0,0);
ei_shader_param_index("matteOpacityMode",2);
ei_shader_param_scalar("matteOpacity",1);
ei_shader_param_index("reflectionLimit",1);
ei_shader_param_vector("outColor",0,0,0);
ei_shader_param_vector("outTransparency",0,0,0);
ei_end_shader();

ei_material("phong1SG");
ei_surface_shader("phong1");
ei_end_material();

//worldPrologue

// Renderer::exportLight("_pointLight1_pointLightShape1");

// Renderer::exportPointLight()
ei_shader("pointlight", "|pointLight1|pointLightShape1_shader");
ei_shader_param_vector("lightcolor",1,1,1);
ei_shader_param_scalar("intensity",1);
ei_end_shader();
ei_light("|pointLight1|pointLightShape1_object");
ei_light_shader("|pointLight1|pointLightShape1_shader");
ei_origin(0,0,0);
ei_end_light();
ei_instance("|pointLight1|pointLightShape1");
ei_element("|pointLight1|pointLightShape1_object");
ei_transform(1,0,0,0,   0,1,0,0,   0,0,1,0,   0,5.23026,6.38383,1);
ei_declare("|pCube1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|pPlane1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_end_instance();

// Renderer::exportOneGeometry_Mesh(|pCube1|pCubeShape1, 0, 0

//############################### mesh #
//shape full path name=|pCube1|pCubeShape1
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|pCube1|pCubeShape1" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### vertex deform positions(optional)
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|pCube1|pCubeShape1
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|pPlane1|pPlaneShape1, 0, 0

//############################### mesh #
//shape full path name=|pPlane1|pPlaneShape1
//### UV(map1), size=4
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|pPlane1|pPlaneShape1" );
{
eiTag tag;
//vertex positions(required), size=6
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( 7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( -7.346750, 0.000000, -5.814621 );
ei_tab_add_vector( -7.346750, 0.000000, -5.814621 );
ei_tab_add_vector( 7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( 7.346750, 0.000000, -5.814621 );
ei_end_tab();
//### vertex deform positions(optional)
//### N ###(optional)
tag = eiNULL_TAG;
ei_declare("N", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_variable("N", &tag);
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_end_tab();
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.000000, 0.000000 );
ei_tab_add_vector2( 1.000000, 0.000000 );
ei_tab_add_vector2( 0.000000, 0.791455 );
ei_tab_add_vector2( 0.000000, 0.791455 );
ei_tab_add_vector2( 1.000000, 0.000000 );
ei_tab_add_vector2( 1.000000, 0.791455 );
ei_end_tab();
//### triangles(required) size=6
tag = ei_tab(EI_TYPE_INDEX, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_end_tab();
}//|pPlane1|pPlaneShape1
ei_end_object();
//--------------------------
//ribNode->name=|pCube1|pCubeShape1
//ribNode's transform node=|pCube1
//ribNode->object(0)->getDataPtr()->getFullPathName()=|pCube1|pCubeShape1
ei_instance("|pCube1");
ei_mtl("liquidShader3SG");
//shape name=|pCube1|pCubeShape1
//shape full path name=|pCube1|pCubeShape1
ei_element("|pCube1|pCubeShape1");
ei_transform(3.46703,0,0,0,   0,3.46703,0,0,   0,0,3.46703,0,   0,2.96559,0,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|pCube1_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|pPlane1|pPlaneShape1
//ribNode's transform node=|pPlane1
//ribNode->object(0)->getDataPtr()->getFullPathName()=|pPlane1|pPlaneShape1
ei_instance("|pPlane1");
ei_mtl("phong1SG");
//shape name=|pPlane1|pPlaneShape1
//shape full path name=|pPlane1|pPlaneShape1
ei_element("|pPlane1|pPlaneShape1");
ei_transform(2.5307,0,0,0,   0,2.5307,0,0,   0,0,2.5307,0,   0.186074,0,0.080088,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|pPlane1_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//Renderer::worldEpilogue()
ei_instgroup("cameraShape1");
//camera
ei_add_instance("|camera1_group|camera1|cameraShape1");
//light(s)
ei_add_instance("|pointLight1|pointLightShape1");
//mesh(s)
ei_add_instance("|pCube1");
ei_add_instance("|pPlane1");
ei_end_instgroup();
// in batch render mode
ei_render( "cameraShape1", "|camera1_group|camera1|cameraShape1", "cameraShape1_option" );
ei_end_context();
//------------------------------------------------

ei_context();
ei_verbose(6);
ei_link("eiIMG");
ei_link("eiSHADER");
ei_link("eiSHADER_maya");
//----------------shader_for_test begin---
ei_shader("maya_surfaceShader", "liquid_shader_for_test");
ei_shader_param_vector("outColor",1,0,0);
ei_end_shader();
ei_material("liquid_material_for_test");
ei_surface_shader("liquid_shader_for_test");
ei_end_material();
//----------------shader_for_test end ---
//    Generated by Liquid v2.3.5 (buildtime=20:51:12.30)
//    Scene : R:/MyDocuments/maya/projects/default/volume_liquidShader_anim
//    User  : yaoyansi

//############################### option #
ei_options("cameraShape1_option");
ei_contrast(0.05);
ei_samples(0,16);
ei_filter(4,3);
//transform motion=0, deform motion=0
ei_motion(0);
ei_trace_depth(4,4,4,4,4,4);
ei_displace(0);
ei_face(3);
ei_end_options();
// maya settings: focal=35.000000, aperture = 41.599998, aspect=1.333333
//Depth of Field on camera "|camera1_group|camera1|cameraShape1" is turned off in Maya

//############################### camera #
ei_camera("|camera1_group|camera1|cameraShape1_object");
//beauty channel
ei_output("R:/MyDocuments/maya/projects/default/rmanpix/volume_liquidShader_anim.cameraShape1.15.elvishray.bmp","bmp",1);
//mode=rgba
ei_output_variable("color",11);
ei_end_output();
// AOV
// AOV end
ei_focal(35);
ei_aperture(32);
ei_aspect(1.33333);
ei_resolution(200,150);
ei_clip(0.1,10000);
ei_end_camera();
//----------------------------------
ei_instance("|camera1_group|camera1|cameraShape1");
ei_element("|camera1_group|camera1|cameraShape1_object");
ei_transform(0.951402,0,-0.307952,0,   -0.0705051,0.973439,-0.217822,0,   0.299772,0.228948,0.926131,0,   2.20961,4.55134,6.92704,1);
ei_end_instance();

ei_shader("volume_shell", "liquidShader3");
ei_end_shader();

ei_shader("simple_volume", "liquidShader2");
ei_shader_param_vector("vol_color",1,1,0);
ei_shader_param_scalar("vol_density",5);
ei_shader_param_scalar("step_size",0.2);
ei_shader_param_scalar("vol_radius",3);
ei_shader_param_vector("vol_offset",0,0,0);
ei_shader_param_scalar("absorption",0.3);
ei_shader_param_scalar("anisotropic",0.4);
ei_end_shader();

ei_shader("shadowvol_shell", "liquidShader1");
ei_end_shader();

ei_material("liquidShader3SG");
ei_surface_shader("liquidShader3");
ei_volume_shader("liquidShader2" );
ei_shadow_shader("liquidShader1" );
ei_end_material();
ei_shader("maya_phong", "phong1");
ei_shader_param_vector("color_",0.803922,0.664462,0.110342);
ei_shader_param_vector("transparency",0,0,0);
ei_shader_param_vector("ambientColor",0,0,0);
ei_shader_param_vector("incandescence",0,0,0);
ei_shader_param_int("liq_UserDefinedNormal",0);
ei_shader_param_vector("normalCamera",1,1,1);
ei_shader_param_scalar("diffuse",0.8);
ei_shader_param_scalar("translucence",0);
ei_shader_param_scalar("translucenceDepth",0.5);
ei_shader_param_scalar("translucenceFocus",0.5);
ei_shader_param_scalar("cosinePower",20);
ei_shader_param_vector("specularColor",0.5,0.5,0.5);
ei_shader_param_scalar("reflectivity",0.5);
ei_shader_param_vector("reflectedColor",0,0,0);
ei_shader_param_index("matteOpacityMode",2);
ei_shader_param_scalar("matteOpacity",1);
ei_shader_param_index("reflectionLimit",1);
ei_shader_param_vector("outColor",0,0,0);
ei_shader_param_vector("outTransparency",0,0,0);
ei_end_shader();

ei_material("phong1SG");
ei_surface_shader("phong1");
ei_end_material();

//worldPrologue

// Renderer::exportLight("_pointLight1_pointLightShape1");

// Renderer::exportPointLight()
ei_shader("pointlight", "|pointLight1|pointLightShape1_shader");
ei_shader_param_vector("lightcolor",1,1,1);
ei_shader_param_scalar("intensity",1);
ei_end_shader();
ei_light("|pointLight1|pointLightShape1_object");
ei_light_shader("|pointLight1|pointLightShape1_shader");
ei_origin(0,0,0);
ei_end_light();
ei_instance("|pointLight1|pointLightShape1");
ei_element("|pointLight1|pointLightShape1_object");
ei_transform(1,0,0,0,   0,1,0,0,   0,0,1,0,   0,5.23026,6.38383,1);
ei_declare("|pCube1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|pPlane1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_end_instance();

// Renderer::exportOneGeometry_Mesh(|pCube1|pCubeShape1, 0, 0

//############################### mesh #
//shape full path name=|pCube1|pCubeShape1
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|pCube1|pCubeShape1" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### vertex deform positions(optional)
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|pCube1|pCubeShape1
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|pPlane1|pPlaneShape1, 0, 0

//############################### mesh #
//shape full path name=|pPlane1|pPlaneShape1
//### UV(map1), size=4
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|pPlane1|pPlaneShape1" );
{
eiTag tag;
//vertex positions(required), size=6
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( 7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( -7.346750, 0.000000, -5.814621 );
ei_tab_add_vector( -7.346750, 0.000000, -5.814621 );
ei_tab_add_vector( 7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( 7.346750, 0.000000, -5.814621 );
ei_end_tab();
//### vertex deform positions(optional)
//### N ###(optional)
tag = eiNULL_TAG;
ei_declare("N", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_variable("N", &tag);
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_end_tab();
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.000000, 0.000000 );
ei_tab_add_vector2( 1.000000, 0.000000 );
ei_tab_add_vector2( 0.000000, 0.791455 );
ei_tab_add_vector2( 0.000000, 0.791455 );
ei_tab_add_vector2( 1.000000, 0.000000 );
ei_tab_add_vector2( 1.000000, 0.791455 );
ei_end_tab();
//### triangles(required) size=6
tag = ei_tab(EI_TYPE_INDEX, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_end_tab();
}//|pPlane1|pPlaneShape1
ei_end_object();
//--------------------------
//ribNode->name=|pCube1|pCubeShape1
//ribNode's transform node=|pCube1
//ribNode->object(0)->getDataPtr()->getFullPathName()=|pCube1|pCubeShape1
ei_instance("|pCube1");
ei_mtl("liquidShader3SG");
//shape name=|pCube1|pCubeShape1
//shape full path name=|pCube1|pCubeShape1
ei_element("|pCube1|pCubeShape1");
ei_transform(3.46703,0,0,0,   0,3.46703,0,0,   0,0,3.46703,0,   0,2.96559,0,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|pCube1_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|pPlane1|pPlaneShape1
//ribNode's transform node=|pPlane1
//ribNode->object(0)->getDataPtr()->getFullPathName()=|pPlane1|pPlaneShape1
ei_instance("|pPlane1");
ei_mtl("phong1SG");
//shape name=|pPlane1|pPlaneShape1
//shape full path name=|pPlane1|pPlaneShape1
ei_element("|pPlane1|pPlaneShape1");
ei_transform(2.5307,0,0,0,   0,2.5307,0,0,   0,0,2.5307,0,   0.186074,0,0.080088,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|pPlane1_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//Renderer::worldEpilogue()
ei_instgroup("cameraShape1");
//camera
ei_add_instance("|camera1_group|camera1|cameraShape1");
//light(s)
ei_add_instance("|pointLight1|pointLightShape1");
//mesh(s)
ei_add_instance("|pCube1");
ei_add_instance("|pPlane1");
ei_end_instgroup();
// in batch render mode
ei_render( "cameraShape1", "|camera1_group|camera1|cameraShape1", "cameraShape1_option" );
ei_end_context();
//------------------------------------------------

ei_context();
ei_verbose(6);
ei_link("eiIMG");
ei_link("eiSHADER");
ei_link("eiSHADER_maya");
//----------------shader_for_test begin---
ei_shader("maya_surfaceShader", "liquid_shader_for_test");
ei_shader_param_vector("outColor",1,0,0);
ei_end_shader();
ei_material("liquid_material_for_test");
ei_surface_shader("liquid_shader_for_test");
ei_end_material();
//----------------shader_for_test end ---
//    Generated by Liquid v2.3.5 (buildtime=20:51:12.30)
//    Scene : R:/MyDocuments/maya/projects/default/volume_liquidShader_anim
//    User  : yaoyansi

//############################### option #
ei_options("cameraShape1_option");
ei_contrast(0.05);
ei_samples(0,16);
ei_filter(4,3);
//transform motion=0, deform motion=0
ei_motion(0);
ei_trace_depth(4,4,4,4,4,4);
ei_displace(0);
ei_face(3);
ei_end_options();
// maya settings: focal=35.000000, aperture = 41.599998, aspect=1.333333
//Depth of Field on camera "|camera1_group|camera1|cameraShape1" is turned off in Maya

//############################### camera #
ei_camera("|camera1_group|camera1|cameraShape1_object");
//beauty channel
ei_output("R:/MyDocuments/maya/projects/default/rmanpix/volume_liquidShader_anim.cameraShape1.16.elvishray.bmp","bmp",1);
//mode=rgba
ei_output_variable("color",11);
ei_end_output();
// AOV
// AOV end
ei_focal(35);
ei_aperture(32);
ei_aspect(1.33333);
ei_resolution(200,150);
ei_clip(0.1,10000);
ei_end_camera();
//----------------------------------
ei_instance("|camera1_group|camera1|cameraShape1");
ei_element("|camera1_group|camera1|cameraShape1_object");
ei_transform(0.940696,0,-0.33925,0,   -0.0788657,0.972603,-0.218684,0,   0.329956,0.232471,0.914924,0,   2.3948,4.55134,6.74269,1);
ei_end_instance();

ei_shader("volume_shell", "liquidShader3");
ei_end_shader();

ei_shader("simple_volume", "liquidShader2");
ei_shader_param_vector("vol_color",1,1,0);
ei_shader_param_scalar("vol_density",5);
ei_shader_param_scalar("step_size",0.2);
ei_shader_param_scalar("vol_radius",3);
ei_shader_param_vector("vol_offset",0,0,0);
ei_shader_param_scalar("absorption",0.3);
ei_shader_param_scalar("anisotropic",0.4);
ei_end_shader();

ei_shader("shadowvol_shell", "liquidShader1");
ei_end_shader();

ei_material("liquidShader3SG");
ei_surface_shader("liquidShader3");
ei_volume_shader("liquidShader2" );
ei_shadow_shader("liquidShader1" );
ei_end_material();
ei_shader("maya_phong", "phong1");
ei_shader_param_vector("color_",0.803922,0.664462,0.110342);
ei_shader_param_vector("transparency",0,0,0);
ei_shader_param_vector("ambientColor",0,0,0);
ei_shader_param_vector("incandescence",0,0,0);
ei_shader_param_int("liq_UserDefinedNormal",0);
ei_shader_param_vector("normalCamera",1,1,1);
ei_shader_param_scalar("diffuse",0.8);
ei_shader_param_scalar("translucence",0);
ei_shader_param_scalar("translucenceDepth",0.5);
ei_shader_param_scalar("translucenceFocus",0.5);
ei_shader_param_scalar("cosinePower",20);
ei_shader_param_vector("specularColor",0.5,0.5,0.5);
ei_shader_param_scalar("reflectivity",0.5);
ei_shader_param_vector("reflectedColor",0,0,0);
ei_shader_param_index("matteOpacityMode",2);
ei_shader_param_scalar("matteOpacity",1);
ei_shader_param_index("reflectionLimit",1);
ei_shader_param_vector("outColor",0,0,0);
ei_shader_param_vector("outTransparency",0,0,0);
ei_end_shader();

ei_material("phong1SG");
ei_surface_shader("phong1");
ei_end_material();

//worldPrologue

// Renderer::exportLight("_pointLight1_pointLightShape1");

// Renderer::exportPointLight()
ei_shader("pointlight", "|pointLight1|pointLightShape1_shader");
ei_shader_param_vector("lightcolor",1,1,1);
ei_shader_param_scalar("intensity",1);
ei_end_shader();
ei_light("|pointLight1|pointLightShape1_object");
ei_light_shader("|pointLight1|pointLightShape1_shader");
ei_origin(0,0,0);
ei_end_light();
ei_instance("|pointLight1|pointLightShape1");
ei_element("|pointLight1|pointLightShape1_object");
ei_transform(1,0,0,0,   0,1,0,0,   0,0,1,0,   0,5.23026,6.38383,1);
ei_declare("|pCube1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|pPlane1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_end_instance();

// Renderer::exportOneGeometry_Mesh(|pCube1|pCubeShape1, 0, 0

//############################### mesh #
//shape full path name=|pCube1|pCubeShape1
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|pCube1|pCubeShape1" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### vertex deform positions(optional)
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|pCube1|pCubeShape1
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|pPlane1|pPlaneShape1, 0, 0

//############################### mesh #
//shape full path name=|pPlane1|pPlaneShape1
//### UV(map1), size=4
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|pPlane1|pPlaneShape1" );
{
eiTag tag;
//vertex positions(required), size=6
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( 7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( -7.346750, 0.000000, -5.814621 );
ei_tab_add_vector( -7.346750, 0.000000, -5.814621 );
ei_tab_add_vector( 7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( 7.346750, 0.000000, -5.814621 );
ei_end_tab();
//### vertex deform positions(optional)
//### N ###(optional)
tag = eiNULL_TAG;
ei_declare("N", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_variable("N", &tag);
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_end_tab();
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.000000, 0.000000 );
ei_tab_add_vector2( 1.000000, 0.000000 );
ei_tab_add_vector2( 0.000000, 0.791455 );
ei_tab_add_vector2( 0.000000, 0.791455 );
ei_tab_add_vector2( 1.000000, 0.000000 );
ei_tab_add_vector2( 1.000000, 0.791455 );
ei_end_tab();
//### triangles(required) size=6
tag = ei_tab(EI_TYPE_INDEX, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_end_tab();
}//|pPlane1|pPlaneShape1
ei_end_object();
//--------------------------
//ribNode->name=|pCube1|pCubeShape1
//ribNode's transform node=|pCube1
//ribNode->object(0)->getDataPtr()->getFullPathName()=|pCube1|pCubeShape1
ei_instance("|pCube1");
ei_mtl("liquidShader3SG");
//shape name=|pCube1|pCubeShape1
//shape full path name=|pCube1|pCubeShape1
ei_element("|pCube1|pCubeShape1");
ei_transform(3.46703,0,0,0,   0,3.46703,0,0,   0,0,3.46703,0,   0,2.96559,0,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|pCube1_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|pPlane1|pPlaneShape1
//ribNode's transform node=|pPlane1
//ribNode->object(0)->getDataPtr()->getFullPathName()=|pPlane1|pPlaneShape1
ei_instance("|pPlane1");
ei_mtl("phong1SG");
//shape name=|pPlane1|pPlaneShape1
//shape full path name=|pPlane1|pPlaneShape1
ei_element("|pPlane1|pPlaneShape1");
ei_transform(2.5307,0,0,0,   0,2.5307,0,0,   0,0,2.5307,0,   0.186074,0,0.080088,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|pPlane1_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//Renderer::worldEpilogue()
ei_instgroup("cameraShape1");
//camera
ei_add_instance("|camera1_group|camera1|cameraShape1");
//light(s)
ei_add_instance("|pointLight1|pointLightShape1");
//mesh(s)
ei_add_instance("|pCube1");
ei_add_instance("|pPlane1");
ei_end_instgroup();
// in batch render mode
ei_render( "cameraShape1", "|camera1_group|camera1|cameraShape1", "cameraShape1_option" );
ei_end_context();
//------------------------------------------------

ei_context();
ei_verbose(6);
ei_link("eiIMG");
ei_link("eiSHADER");
ei_link("eiSHADER_maya");
//----------------shader_for_test begin---
ei_shader("maya_surfaceShader", "liquid_shader_for_test");
ei_shader_param_vector("outColor",1,0,0);
ei_end_shader();
ei_material("liquid_material_for_test");
ei_surface_shader("liquid_shader_for_test");
ei_end_material();
//----------------shader_for_test end ---
//    Generated by Liquid v2.3.5 (buildtime=20:51:12.30)
//    Scene : R:/MyDocuments/maya/projects/default/volume_liquidShader_anim
//    User  : yaoyansi

//############################### option #
ei_options("cameraShape1_option");
ei_contrast(0.05);
ei_samples(0,16);
ei_filter(4,3);
//transform motion=0, deform motion=0
ei_motion(0);
ei_trace_depth(4,4,4,4,4,4);
ei_displace(0);
ei_face(3);
ei_end_options();
// maya settings: focal=35.000000, aperture = 41.599998, aspect=1.333333
//Depth of Field on camera "|camera1_group|camera1|cameraShape1" is turned off in Maya

//############################### camera #
ei_camera("|camera1_group|camera1|cameraShape1_object");
//beauty channel
ei_output("R:/MyDocuments/maya/projects/default/rmanpix/volume_liquidShader_anim.cameraShape1.17.elvishray.bmp","bmp",1);
//mode=rgba
ei_output_variable("color",11);
ei_end_output();
// AOV
// AOV end
ei_focal(35);
ei_aperture(32);
ei_aspect(1.33333);
ei_resolution(200,150);
ei_clip(0.1,10000);
ei_end_camera();
//----------------------------------
ei_instance("|camera1_group|camera1|cameraShape1");
ei_element("|camera1_group|camera1|cameraShape1_object");
ei_transform(0.929014,6.93889e-018,-0.370045,0,   -0.0873635,0.971731,-0.21933,0,   0.359585,0.236089,0.902752,0,   2.56947,4.55134,6.55435,1);
ei_end_instance();

ei_shader("volume_shell", "liquidShader3");
ei_end_shader();

ei_shader("simple_volume", "liquidShader2");
ei_shader_param_vector("vol_color",1,1,0);
ei_shader_param_scalar("vol_density",5);
ei_shader_param_scalar("step_size",0.2);
ei_shader_param_scalar("vol_radius",3);
ei_shader_param_vector("vol_offset",0,0,0);
ei_shader_param_scalar("absorption",0.3);
ei_shader_param_scalar("anisotropic",0.4);
ei_end_shader();

ei_shader("shadowvol_shell", "liquidShader1");
ei_end_shader();

ei_material("liquidShader3SG");
ei_surface_shader("liquidShader3");
ei_volume_shader("liquidShader2" );
ei_shadow_shader("liquidShader1" );
ei_end_material();
ei_shader("maya_phong", "phong1");
ei_shader_param_vector("color_",0.803922,0.664462,0.110342);
ei_shader_param_vector("transparency",0,0,0);
ei_shader_param_vector("ambientColor",0,0,0);
ei_shader_param_vector("incandescence",0,0,0);
ei_shader_param_int("liq_UserDefinedNormal",0);
ei_shader_param_vector("normalCamera",1,1,1);
ei_shader_param_scalar("diffuse",0.8);
ei_shader_param_scalar("translucence",0);
ei_shader_param_scalar("translucenceDepth",0.5);
ei_shader_param_scalar("translucenceFocus",0.5);
ei_shader_param_scalar("cosinePower",20);
ei_shader_param_vector("specularColor",0.5,0.5,0.5);
ei_shader_param_scalar("reflectivity",0.5);
ei_shader_param_vector("reflectedColor",0,0,0);
ei_shader_param_index("matteOpacityMode",2);
ei_shader_param_scalar("matteOpacity",1);
ei_shader_param_index("reflectionLimit",1);
ei_shader_param_vector("outColor",0,0,0);
ei_shader_param_vector("outTransparency",0,0,0);
ei_end_shader();

ei_material("phong1SG");
ei_surface_shader("phong1");
ei_end_material();

//worldPrologue

// Renderer::exportLight("_pointLight1_pointLightShape1");

// Renderer::exportPointLight()
ei_shader("pointlight", "|pointLight1|pointLightShape1_shader");
ei_shader_param_vector("lightcolor",1,1,1);
ei_shader_param_scalar("intensity",1);
ei_end_shader();
ei_light("|pointLight1|pointLightShape1_object");
ei_light_shader("|pointLight1|pointLightShape1_shader");
ei_origin(0,0,0);
ei_end_light();
ei_instance("|pointLight1|pointLightShape1");
ei_element("|pointLight1|pointLightShape1_object");
ei_transform(1,0,0,0,   0,1,0,0,   0,0,1,0,   0,5.23026,6.38383,1);
ei_declare("|pCube1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|pPlane1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_end_instance();

// Renderer::exportOneGeometry_Mesh(|pCube1|pCubeShape1, 0, 0

//############################### mesh #
//shape full path name=|pCube1|pCubeShape1
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|pCube1|pCubeShape1" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### vertex deform positions(optional)
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|pCube1|pCubeShape1
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|pPlane1|pPlaneShape1, 0, 0

//############################### mesh #
//shape full path name=|pPlane1|pPlaneShape1
//### UV(map1), size=4
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|pPlane1|pPlaneShape1" );
{
eiTag tag;
//vertex positions(required), size=6
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( 7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( -7.346750, 0.000000, -5.814621 );
ei_tab_add_vector( -7.346750, 0.000000, -5.814621 );
ei_tab_add_vector( 7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( 7.346750, 0.000000, -5.814621 );
ei_end_tab();
//### vertex deform positions(optional)
//### N ###(optional)
tag = eiNULL_TAG;
ei_declare("N", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_variable("N", &tag);
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_end_tab();
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.000000, 0.000000 );
ei_tab_add_vector2( 1.000000, 0.000000 );
ei_tab_add_vector2( 0.000000, 0.791455 );
ei_tab_add_vector2( 0.000000, 0.791455 );
ei_tab_add_vector2( 1.000000, 0.000000 );
ei_tab_add_vector2( 1.000000, 0.791455 );
ei_end_tab();
//### triangles(required) size=6
tag = ei_tab(EI_TYPE_INDEX, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_end_tab();
}//|pPlane1|pPlaneShape1
ei_end_object();
//--------------------------
//ribNode->name=|pCube1|pCubeShape1
//ribNode's transform node=|pCube1
//ribNode->object(0)->getDataPtr()->getFullPathName()=|pCube1|pCubeShape1
ei_instance("|pCube1");
ei_mtl("liquidShader3SG");
//shape name=|pCube1|pCubeShape1
//shape full path name=|pCube1|pCubeShape1
ei_element("|pCube1|pCubeShape1");
ei_transform(3.46703,0,0,0,   0,3.46703,0,0,   0,0,3.46703,0,   0,2.96559,0,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|pCube1_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|pPlane1|pPlaneShape1
//ribNode's transform node=|pPlane1
//ribNode->object(0)->getDataPtr()->getFullPathName()=|pPlane1|pPlaneShape1
ei_instance("|pPlane1");
ei_mtl("phong1SG");
//shape name=|pPlane1|pPlaneShape1
//shape full path name=|pPlane1|pPlaneShape1
ei_element("|pPlane1|pPlaneShape1");
ei_transform(2.5307,0,0,0,   0,2.5307,0,0,   0,0,2.5307,0,   0.186074,0,0.080088,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|pPlane1_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//Renderer::worldEpilogue()
ei_instgroup("cameraShape1");
//camera
ei_add_instance("|camera1_group|camera1|cameraShape1");
//light(s)
ei_add_instance("|pointLight1|pointLightShape1");
//mesh(s)
ei_add_instance("|pCube1");
ei_add_instance("|pPlane1");
ei_end_instgroup();
// in batch render mode
ei_render( "cameraShape1", "|camera1_group|camera1|cameraShape1", "cameraShape1_option" );
ei_end_context();
//------------------------------------------------

ei_context();
ei_verbose(6);
ei_link("eiIMG");
ei_link("eiSHADER");
ei_link("eiSHADER_maya");
//----------------shader_for_test begin---
ei_shader("maya_surfaceShader", "liquid_shader_for_test");
ei_shader_param_vector("outColor",1,0,0);
ei_end_shader();
ei_material("liquid_material_for_test");
ei_surface_shader("liquid_shader_for_test");
ei_end_material();
//----------------shader_for_test end ---
//    Generated by Liquid v2.3.5 (buildtime=20:51:12.30)
//    Scene : R:/MyDocuments/maya/projects/default/volume_liquidShader_anim
//    User  : yaoyansi

//############################### option #
ei_options("cameraShape1_option");
ei_contrast(0.05);
ei_samples(0,16);
ei_filter(4,3);
//transform motion=0, deform motion=0
ei_motion(0);
ei_trace_depth(4,4,4,4,4,4);
ei_displace(0);
ei_face(3);
ei_end_options();
// maya settings: focal=35.000000, aperture = 41.599998, aspect=1.333333
//Depth of Field on camera "|camera1_group|camera1|cameraShape1" is turned off in Maya

//############################### camera #
ei_camera("|camera1_group|camera1|cameraShape1_object");
//beauty channel
ei_output("R:/MyDocuments/maya/projects/default/rmanpix/volume_liquidShader_anim.cameraShape1.18.elvishray.bmp","bmp",1);
//mode=rgba
ei_output_variable("color",11);
ei_end_output();
// AOV
// AOV end
ei_focal(35);
ei_aperture(32);
ei_aspect(1.33333);
ei_resolution(200,150);
ei_clip(0.1,10000);
ei_end_camera();
//----------------------------------
ei_instance("|camera1_group|camera1|cameraShape1");
ei_element("|camera1_group|camera1|cameraShape1_object");
ei_transform(0.916557,0,-0.399903,0,   -0.0959076,0.970816,-0.219815,0,   0.388232,0.239827,0.889808,0,   2.7306,4.55134,6.36314,1);
ei_end_instance();

ei_shader("volume_shell", "liquidShader3");
ei_end_shader();

ei_shader("simple_volume", "liquidShader2");
ei_shader_param_vector("vol_color",1,1,0);
ei_shader_param_scalar("vol_density",5);
ei_shader_param_scalar("step_size",0.2);
ei_shader_param_scalar("vol_radius",3);
ei_shader_param_vector("vol_offset",0,0,0);
ei_shader_param_scalar("absorption",0.3);
ei_shader_param_scalar("anisotropic",0.4);
ei_end_shader();

ei_shader("shadowvol_shell", "liquidShader1");
ei_end_shader();

ei_material("liquidShader3SG");
ei_surface_shader("liquidShader3");
ei_volume_shader("liquidShader2" );
ei_shadow_shader("liquidShader1" );
ei_end_material();
ei_shader("maya_phong", "phong1");
ei_shader_param_vector("color_",0.803922,0.664462,0.110342);
ei_shader_param_vector("transparency",0,0,0);
ei_shader_param_vector("ambientColor",0,0,0);
ei_shader_param_vector("incandescence",0,0,0);
ei_shader_param_int("liq_UserDefinedNormal",0);
ei_shader_param_vector("normalCamera",1,1,1);
ei_shader_param_scalar("diffuse",0.8);
ei_shader_param_scalar("translucence",0);
ei_shader_param_scalar("translucenceDepth",0.5);
ei_shader_param_scalar("translucenceFocus",0.5);
ei_shader_param_scalar("cosinePower",20);
ei_shader_param_vector("specularColor",0.5,0.5,0.5);
ei_shader_param_scalar("reflectivity",0.5);
ei_shader_param_vector("reflectedColor",0,0,0);
ei_shader_param_index("matteOpacityMode",2);
ei_shader_param_scalar("matteOpacity",1);
ei_shader_param_index("reflectionLimit",1);
ei_shader_param_vector("outColor",0,0,0);
ei_shader_param_vector("outTransparency",0,0,0);
ei_end_shader();

ei_material("phong1SG");
ei_surface_shader("phong1");
ei_end_material();

//worldPrologue

// Renderer::exportLight("_pointLight1_pointLightShape1");

// Renderer::exportPointLight()
ei_shader("pointlight", "|pointLight1|pointLightShape1_shader");
ei_shader_param_vector("lightcolor",1,1,1);
ei_shader_param_scalar("intensity",1);
ei_end_shader();
ei_light("|pointLight1|pointLightShape1_object");
ei_light_shader("|pointLight1|pointLightShape1_shader");
ei_origin(0,0,0);
ei_end_light();
ei_instance("|pointLight1|pointLightShape1");
ei_element("|pointLight1|pointLightShape1_object");
ei_transform(1,0,0,0,   0,1,0,0,   0,0,1,0,   0,5.23026,6.38383,1);
ei_declare("|pCube1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|pPlane1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_end_instance();

// Renderer::exportOneGeometry_Mesh(|pCube1|pCubeShape1, 0, 0

//############################### mesh #
//shape full path name=|pCube1|pCubeShape1
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|pCube1|pCubeShape1" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### vertex deform positions(optional)
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|pCube1|pCubeShape1
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|pPlane1|pPlaneShape1, 0, 0

//############################### mesh #
//shape full path name=|pPlane1|pPlaneShape1
//### UV(map1), size=4
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|pPlane1|pPlaneShape1" );
{
eiTag tag;
//vertex positions(required), size=6
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( 7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( -7.346750, 0.000000, -5.814621 );
ei_tab_add_vector( -7.346750, 0.000000, -5.814621 );
ei_tab_add_vector( 7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( 7.346750, 0.000000, -5.814621 );
ei_end_tab();
//### vertex deform positions(optional)
//### N ###(optional)
tag = eiNULL_TAG;
ei_declare("N", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_variable("N", &tag);
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_end_tab();
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.000000, 0.000000 );
ei_tab_add_vector2( 1.000000, 0.000000 );
ei_tab_add_vector2( 0.000000, 0.791455 );
ei_tab_add_vector2( 0.000000, 0.791455 );
ei_tab_add_vector2( 1.000000, 0.000000 );
ei_tab_add_vector2( 1.000000, 0.791455 );
ei_end_tab();
//### triangles(required) size=6
tag = ei_tab(EI_TYPE_INDEX, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_end_tab();
}//|pPlane1|pPlaneShape1
ei_end_object();
//--------------------------
//ribNode->name=|pCube1|pCubeShape1
//ribNode's transform node=|pCube1
//ribNode->object(0)->getDataPtr()->getFullPathName()=|pCube1|pCubeShape1
ei_instance("|pCube1");
ei_mtl("liquidShader3SG");
//shape name=|pCube1|pCubeShape1
//shape full path name=|pCube1|pCubeShape1
ei_element("|pCube1|pCubeShape1");
ei_transform(3.46703,0,0,0,   0,3.46703,0,0,   0,0,3.46703,0,   0,2.96559,0,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|pCube1_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|pPlane1|pPlaneShape1
//ribNode's transform node=|pPlane1
//ribNode->object(0)->getDataPtr()->getFullPathName()=|pPlane1|pPlaneShape1
ei_instance("|pPlane1");
ei_mtl("phong1SG");
//shape name=|pPlane1|pPlaneShape1
//shape full path name=|pPlane1|pPlaneShape1
ei_element("|pPlane1|pPlaneShape1");
ei_transform(2.5307,0,0,0,   0,2.5307,0,0,   0,0,2.5307,0,   0.186074,0,0.080088,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|pPlane1_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//Renderer::worldEpilogue()
ei_instgroup("cameraShape1");
//camera
ei_add_instance("|camera1_group|camera1|cameraShape1");
//light(s)
ei_add_instance("|pointLight1|pointLightShape1");
//mesh(s)
ei_add_instance("|pCube1");
ei_add_instance("|pPlane1");
ei_end_instgroup();
// in batch render mode
ei_render( "cameraShape1", "|camera1_group|camera1|cameraShape1", "cameraShape1_option" );
ei_end_context();
//------------------------------------------------

ei_context();
ei_verbose(6);
ei_link("eiIMG");
ei_link("eiSHADER");
ei_link("eiSHADER_maya");
//----------------shader_for_test begin---
ei_shader("maya_surfaceShader", "liquid_shader_for_test");
ei_shader_param_vector("outColor",1,0,0);
ei_end_shader();
ei_material("liquid_material_for_test");
ei_surface_shader("liquid_shader_for_test");
ei_end_material();
//----------------shader_for_test end ---
//    Generated by Liquid v2.3.5 (buildtime=20:51:12.30)
//    Scene : R:/MyDocuments/maya/projects/default/volume_liquidShader_anim
//    User  : yaoyansi

//############################### option #
ei_options("cameraShape1_option");
ei_contrast(0.05);
ei_samples(0,16);
ei_filter(4,3);
//transform motion=0, deform motion=0
ei_motion(0);
ei_trace_depth(4,4,4,4,4,4);
ei_displace(0);
ei_face(3);
ei_end_options();
// maya settings: focal=35.000000, aperture = 41.599998, aspect=1.333333
//Depth of Field on camera "|camera1_group|camera1|cameraShape1" is turned off in Maya

//############################### camera #
ei_camera("|camera1_group|camera1|cameraShape1_object");
//beauty channel
ei_output("R:/MyDocuments/maya/projects/default/rmanpix/volume_liquidShader_anim.cameraShape1.19.elvishray.bmp","bmp",1);
//mode=rgba
ei_output_variable("color",11);
ei_end_output();
// AOV
// AOV end
ei_focal(35);
ei_aperture(32);
ei_aspect(1.33333);
ei_resolution(200,150);
ei_clip(0.1,10000);
ei_end_camera();
//----------------------------------
ei_instance("|camera1_group|camera1|cameraShape1");
ei_element("|camera1_group|camera1|cameraShape1_object");
ei_transform(0.903591,0,-0.428396,0,   -0.104411,0.969844,-0.220229,0,   0.415477,0.243726,0.876342,0,   2.87519,4.55134,6.17019,1);
ei_end_instance();

ei_shader("volume_shell", "liquidShader3");
ei_end_shader();

ei_shader("simple_volume", "liquidShader2");
ei_shader_param_vector("vol_color",1,1,0);
ei_shader_param_scalar("vol_density",5);
ei_shader_param_scalar("step_size",0.2);
ei_shader_param_scalar("vol_radius",3);
ei_shader_param_vector("vol_offset",0,0,0);
ei_shader_param_scalar("absorption",0.3);
ei_shader_param_scalar("anisotropic",0.4);
ei_end_shader();

ei_shader("shadowvol_shell", "liquidShader1");
ei_end_shader();

ei_material("liquidShader3SG");
ei_surface_shader("liquidShader3");
ei_volume_shader("liquidShader2" );
ei_shadow_shader("liquidShader1" );
ei_end_material();
ei_shader("maya_phong", "phong1");
ei_shader_param_vector("color_",0.803922,0.664462,0.110342);
ei_shader_param_vector("transparency",0,0,0);
ei_shader_param_vector("ambientColor",0,0,0);
ei_shader_param_vector("incandescence",0,0,0);
ei_shader_param_int("liq_UserDefinedNormal",0);
ei_shader_param_vector("normalCamera",1,1,1);
ei_shader_param_scalar("diffuse",0.8);
ei_shader_param_scalar("translucence",0);
ei_shader_param_scalar("translucenceDepth",0.5);
ei_shader_param_scalar("translucenceFocus",0.5);
ei_shader_param_scalar("cosinePower",20);
ei_shader_param_vector("specularColor",0.5,0.5,0.5);
ei_shader_param_scalar("reflectivity",0.5);
ei_shader_param_vector("reflectedColor",0,0,0);
ei_shader_param_index("matteOpacityMode",2);
ei_shader_param_scalar("matteOpacity",1);
ei_shader_param_index("reflectionLimit",1);
ei_shader_param_vector("outColor",0,0,0);
ei_shader_param_vector("outTransparency",0,0,0);
ei_end_shader();

ei_material("phong1SG");
ei_surface_shader("phong1");
ei_end_material();

//worldPrologue

// Renderer::exportLight("_pointLight1_pointLightShape1");

// Renderer::exportPointLight()
ei_shader("pointlight", "|pointLight1|pointLightShape1_shader");
ei_shader_param_vector("lightcolor",1,1,1);
ei_shader_param_scalar("intensity",1);
ei_end_shader();
ei_light("|pointLight1|pointLightShape1_object");
ei_light_shader("|pointLight1|pointLightShape1_shader");
ei_origin(0,0,0);
ei_end_light();
ei_instance("|pointLight1|pointLightShape1");
ei_element("|pointLight1|pointLightShape1_object");
ei_transform(1,0,0,0,   0,1,0,0,   0,0,1,0,   0,5.23026,6.38383,1);
ei_declare("|pCube1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|pPlane1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_end_instance();

// Renderer::exportOneGeometry_Mesh(|pCube1|pCubeShape1, 0, 0

//############################### mesh #
//shape full path name=|pCube1|pCubeShape1
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|pCube1|pCubeShape1" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### vertex deform positions(optional)
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|pCube1|pCubeShape1
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|pPlane1|pPlaneShape1, 0, 0

//############################### mesh #
//shape full path name=|pPlane1|pPlaneShape1
//### UV(map1), size=4
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|pPlane1|pPlaneShape1" );
{
eiTag tag;
//vertex positions(required), size=6
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( 7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( -7.346750, 0.000000, -5.814621 );
ei_tab_add_vector( -7.346750, 0.000000, -5.814621 );
ei_tab_add_vector( 7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( 7.346750, 0.000000, -5.814621 );
ei_end_tab();
//### vertex deform positions(optional)
//### N ###(optional)
tag = eiNULL_TAG;
ei_declare("N", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_variable("N", &tag);
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_end_tab();
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.000000, 0.000000 );
ei_tab_add_vector2( 1.000000, 0.000000 );
ei_tab_add_vector2( 0.000000, 0.791455 );
ei_tab_add_vector2( 0.000000, 0.791455 );
ei_tab_add_vector2( 1.000000, 0.000000 );
ei_tab_add_vector2( 1.000000, 0.791455 );
ei_end_tab();
//### triangles(required) size=6
tag = ei_tab(EI_TYPE_INDEX, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_end_tab();
}//|pPlane1|pPlaneShape1
ei_end_object();
//--------------------------
//ribNode->name=|pCube1|pCubeShape1
//ribNode's transform node=|pCube1
//ribNode->object(0)->getDataPtr()->getFullPathName()=|pCube1|pCubeShape1
ei_instance("|pCube1");
ei_mtl("liquidShader3SG");
//shape name=|pCube1|pCubeShape1
//shape full path name=|pCube1|pCubeShape1
ei_element("|pCube1|pCubeShape1");
ei_transform(3.46703,0,0,0,   0,3.46703,0,0,   0,0,3.46703,0,   0,2.96559,0,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|pCube1_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|pPlane1|pPlaneShape1
//ribNode's transform node=|pPlane1
//ribNode->object(0)->getDataPtr()->getFullPathName()=|pPlane1|pPlaneShape1
ei_instance("|pPlane1");
ei_mtl("phong1SG");
//shape name=|pPlane1|pPlaneShape1
//shape full path name=|pPlane1|pPlaneShape1
ei_element("|pPlane1|pPlaneShape1");
ei_transform(2.5307,0,0,0,   0,2.5307,0,0,   0,0,2.5307,0,   0.186074,0,0.080088,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|pPlane1_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//Renderer::worldEpilogue()
ei_instgroup("cameraShape1");
//camera
ei_add_instance("|camera1_group|camera1|cameraShape1");
//light(s)
ei_add_instance("|pointLight1|pointLightShape1");
//mesh(s)
ei_add_instance("|pCube1");
ei_add_instance("|pPlane1");
ei_end_instgroup();
// in batch render mode
ei_render( "cameraShape1", "|camera1_group|camera1|cameraShape1", "cameraShape1_option" );
ei_end_context();
//------------------------------------------------

ei_context();
ei_verbose(6);
ei_link("eiIMG");
ei_link("eiSHADER");
ei_link("eiSHADER_maya");
//----------------shader_for_test begin---
ei_shader("maya_surfaceShader", "liquid_shader_for_test");
ei_shader_param_vector("outColor",1,0,0);
ei_end_shader();
ei_material("liquid_material_for_test");
ei_surface_shader("liquid_shader_for_test");
ei_end_material();
//----------------shader_for_test end ---
//    Generated by Liquid v2.3.5 (buildtime=20:51:12.30)
//    Scene : R:/MyDocuments/maya/projects/default/volume_liquidShader_anim
//    User  : yaoyansi

//############################### option #
ei_options("cameraShape1_option");
ei_contrast(0.05);
ei_samples(0,16);
ei_filter(4,3);
//transform motion=0, deform motion=0
ei_motion(0);
ei_trace_depth(4,4,4,4,4,4);
ei_displace(0);
ei_face(3);
ei_end_options();
// maya settings: focal=35.000000, aperture = 41.599998, aspect=1.333333
//Depth of Field on camera "|camera1_group|camera1|cameraShape1" is turned off in Maya

//############################### camera #
ei_camera("|camera1_group|camera1|cameraShape1_object");
//beauty channel
ei_output("R:/MyDocuments/maya/projects/default/rmanpix/volume_liquidShader_anim.cameraShape1.20.elvishray.bmp","bmp",1);
//mode=rgba
ei_output_variable("color",11);
ei_end_output();
// AOV
// AOV end
ei_focal(35);
ei_aperture(32);
ei_aspect(1.33333);
ei_resolution(200,150);
ei_clip(0.1,10000);
ei_end_camera();
//----------------------------------
ei_instance("|camera1_group|camera1|cameraShape1");
ei_element("|camera1_group|camera1|cameraShape1_object");
ei_transform(0.890437,-6.93889e-018,-0.455107,0,   -0.112796,0.9688,-0.22069,0,   0.440907,0.247845,0.862655,0,   3.00024,4.55134,5.97663,1);
ei_end_instance();

ei_shader("volume_shell", "liquidShader3");
ei_end_shader();

ei_shader("simple_volume", "liquidShader2");
ei_shader_param_vector("vol_color",1,1,0);
ei_shader_param_scalar("vol_density",5);
ei_shader_param_scalar("step_size",0.2);
ei_shader_param_scalar("vol_radius",3);
ei_shader_param_vector("vol_offset",0,0,0);
ei_shader_param_scalar("absorption",0.3);
ei_shader_param_scalar("anisotropic",0.4);
ei_end_shader();

ei_shader("shadowvol_shell", "liquidShader1");
ei_end_shader();

ei_material("liquidShader3SG");
ei_surface_shader("liquidShader3");
ei_volume_shader("liquidShader2" );
ei_shadow_shader("liquidShader1" );
ei_end_material();
ei_shader("maya_phong", "phong1");
ei_shader_param_vector("color_",0.803922,0.664462,0.110342);
ei_shader_param_vector("transparency",0,0,0);
ei_shader_param_vector("ambientColor",0,0,0);
ei_shader_param_vector("incandescence",0,0,0);
ei_shader_param_int("liq_UserDefinedNormal",0);
ei_shader_param_vector("normalCamera",1,1,1);
ei_shader_param_scalar("diffuse",0.8);
ei_shader_param_scalar("translucence",0);
ei_shader_param_scalar("translucenceDepth",0.5);
ei_shader_param_scalar("translucenceFocus",0.5);
ei_shader_param_scalar("cosinePower",20);
ei_shader_param_vector("specularColor",0.5,0.5,0.5);
ei_shader_param_scalar("reflectivity",0.5);
ei_shader_param_vector("reflectedColor",0,0,0);
ei_shader_param_index("matteOpacityMode",2);
ei_shader_param_scalar("matteOpacity",1);
ei_shader_param_index("reflectionLimit",1);
ei_shader_param_vector("outColor",0,0,0);
ei_shader_param_vector("outTransparency",0,0,0);
ei_end_shader();

ei_material("phong1SG");
ei_surface_shader("phong1");
ei_end_material();

//worldPrologue

// Renderer::exportLight("_pointLight1_pointLightShape1");

// Renderer::exportPointLight()
ei_shader("pointlight", "|pointLight1|pointLightShape1_shader");
ei_shader_param_vector("lightcolor",1,1,1);
ei_shader_param_scalar("intensity",1);
ei_end_shader();
ei_light("|pointLight1|pointLightShape1_object");
ei_light_shader("|pointLight1|pointLightShape1_shader");
ei_origin(0,0,0);
ei_end_light();
ei_instance("|pointLight1|pointLightShape1");
ei_element("|pointLight1|pointLightShape1_object");
ei_transform(1,0,0,0,   0,1,0,0,   0,0,1,0,   0,5.23026,6.38383,1);
ei_declare("|pCube1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|pPlane1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_end_instance();

// Renderer::exportOneGeometry_Mesh(|pCube1|pCubeShape1, 0, 0

//############################### mesh #
//shape full path name=|pCube1|pCubeShape1
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|pCube1|pCubeShape1" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### vertex deform positions(optional)
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|pCube1|pCubeShape1
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|pPlane1|pPlaneShape1, 0, 0

//############################### mesh #
//shape full path name=|pPlane1|pPlaneShape1
//### UV(map1), size=4
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|pPlane1|pPlaneShape1" );
{
eiTag tag;
//vertex positions(required), size=6
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( 7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( -7.346750, 0.000000, -5.814621 );
ei_tab_add_vector( -7.346750, 0.000000, -5.814621 );
ei_tab_add_vector( 7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( 7.346750, 0.000000, -5.814621 );
ei_end_tab();
//### vertex deform positions(optional)
//### N ###(optional)
tag = eiNULL_TAG;
ei_declare("N", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_variable("N", &tag);
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_end_tab();
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.000000, 0.000000 );
ei_tab_add_vector2( 1.000000, 0.000000 );
ei_tab_add_vector2( 0.000000, 0.791455 );
ei_tab_add_vector2( 0.000000, 0.791455 );
ei_tab_add_vector2( 1.000000, 0.000000 );
ei_tab_add_vector2( 1.000000, 0.791455 );
ei_end_tab();
//### triangles(required) size=6
tag = ei_tab(EI_TYPE_INDEX, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_end_tab();
}//|pPlane1|pPlaneShape1
ei_end_object();
//--------------------------
//ribNode->name=|pCube1|pCubeShape1
//ribNode's transform node=|pCube1
//ribNode->object(0)->getDataPtr()->getFullPathName()=|pCube1|pCubeShape1
ei_instance("|pCube1");
ei_mtl("liquidShader3SG");
//shape name=|pCube1|pCubeShape1
//shape full path name=|pCube1|pCubeShape1
ei_element("|pCube1|pCubeShape1");
ei_transform(3.46703,0,0,0,   0,3.46703,0,0,   0,0,3.46703,0,   0,2.96559,0,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|pCube1_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|pPlane1|pPlaneShape1
//ribNode's transform node=|pPlane1
//ribNode->object(0)->getDataPtr()->getFullPathName()=|pPlane1|pPlaneShape1
ei_instance("|pPlane1");
ei_mtl("phong1SG");
//shape name=|pPlane1|pPlaneShape1
//shape full path name=|pPlane1|pPlaneShape1
ei_element("|pPlane1|pPlaneShape1");
ei_transform(2.5307,0,0,0,   0,2.5307,0,0,   0,0,2.5307,0,   0.186074,0,0.080088,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|pPlane1_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//Renderer::worldEpilogue()
ei_instgroup("cameraShape1");
//camera
ei_add_instance("|camera1_group|camera1|cameraShape1");
//light(s)
ei_add_instance("|pointLight1|pointLightShape1");
//mesh(s)
ei_add_instance("|pCube1");
ei_add_instance("|pPlane1");
ei_end_instgroup();
// in batch render mode
ei_render( "cameraShape1", "|camera1_group|camera1|cameraShape1", "cameraShape1_option" );
ei_end_context();
//------------------------------------------------

ei_context();
ei_verbose(6);
ei_link("eiIMG");
ei_link("eiSHADER");
ei_link("eiSHADER_maya");
//----------------shader_for_test begin---
ei_shader("maya_surfaceShader", "liquid_shader_for_test");
ei_shader_param_vector("outColor",1,0,0);
ei_end_shader();
ei_material("liquid_material_for_test");
ei_surface_shader("liquid_shader_for_test");
ei_end_material();
//----------------shader_for_test end ---
//    Generated by Liquid v2.3.5 (buildtime=20:51:12.30)
//    Scene : R:/MyDocuments/maya/projects/default/volume_liquidShader_anim
//    User  : yaoyansi

//############################### option #
ei_options("cameraShape1_option");
ei_contrast(0.05);
ei_samples(0,16);
ei_filter(4,3);
//transform motion=0, deform motion=0
ei_motion(0);
ei_trace_depth(4,4,4,4,4,4);
ei_displace(0);
ei_face(3);
ei_end_options();
// maya settings: focal=35.000000, aperture = 41.599998, aspect=1.333333
//Depth of Field on camera "|camera1_group|camera1|cameraShape1" is turned off in Maya

//############################### camera #
ei_camera("|camera1_group|camera1|cameraShape1_object");
//beauty channel
ei_output("R:/MyDocuments/maya/projects/default/rmanpix/volume_liquidShader_anim.cameraShape1.21.elvishray.bmp","bmp",1);
//mode=rgba
ei_output_variable("color",11);
ei_end_output();
// AOV
// AOV end
ei_focal(35);
ei_aperture(32);
ei_aspect(1.33333);
ei_resolution(200,150);
ei_clip(0.1,10000);
ei_end_camera();
//----------------------------------
ei_instance("|camera1_group|camera1|cameraShape1");
ei_element("|camera1_group|camera1|cameraShape1_object");
ei_transform(0.877471,0,-0.479629,0,   -0.120991,0.96766,-0.22135,0,   0.464118,0.252259,0.849094,0,   3.10273,4.55134,5.78357,1);
ei_end_instance();

ei_shader("volume_shell", "liquidShader3");
ei_end_shader();

ei_shader("simple_volume", "liquidShader2");
ei_shader_param_vector("vol_color",1,1,0);
ei_shader_param_scalar("vol_density",5);
ei_shader_param_scalar("step_size",0.2);
ei_shader_param_scalar("vol_radius",3);
ei_shader_param_vector("vol_offset",0,0,0);
ei_shader_param_scalar("absorption",0.3);
ei_shader_param_scalar("anisotropic",0.4);
ei_end_shader();

ei_shader("shadowvol_shell", "liquidShader1");
ei_end_shader();

ei_material("liquidShader3SG");
ei_surface_shader("liquidShader3");
ei_volume_shader("liquidShader2" );
ei_shadow_shader("liquidShader1" );
ei_end_material();
ei_shader("maya_phong", "phong1");
ei_shader_param_vector("color_",0.803922,0.664462,0.110342);
ei_shader_param_vector("transparency",0,0,0);
ei_shader_param_vector("ambientColor",0,0,0);
ei_shader_param_vector("incandescence",0,0,0);
ei_shader_param_int("liq_UserDefinedNormal",0);
ei_shader_param_vector("normalCamera",1,1,1);
ei_shader_param_scalar("diffuse",0.8);
ei_shader_param_scalar("translucence",0);
ei_shader_param_scalar("translucenceDepth",0.5);
ei_shader_param_scalar("translucenceFocus",0.5);
ei_shader_param_scalar("cosinePower",20);
ei_shader_param_vector("specularColor",0.5,0.5,0.5);
ei_shader_param_scalar("reflectivity",0.5);
ei_shader_param_vector("reflectedColor",0,0,0);
ei_shader_param_index("matteOpacityMode",2);
ei_shader_param_scalar("matteOpacity",1);
ei_shader_param_index("reflectionLimit",1);
ei_shader_param_vector("outColor",0,0,0);
ei_shader_param_vector("outTransparency",0,0,0);
ei_end_shader();

ei_material("phong1SG");
ei_surface_shader("phong1");
ei_end_material();

//worldPrologue

// Renderer::exportLight("_pointLight1_pointLightShape1");

// Renderer::exportPointLight()
ei_shader("pointlight", "|pointLight1|pointLightShape1_shader");
ei_shader_param_vector("lightcolor",1,1,1);
ei_shader_param_scalar("intensity",1);
ei_end_shader();
ei_light("|pointLight1|pointLightShape1_object");
ei_light_shader("|pointLight1|pointLightShape1_shader");
ei_origin(0,0,0);
ei_end_light();
ei_instance("|pointLight1|pointLightShape1");
ei_element("|pointLight1|pointLightShape1_object");
ei_transform(1,0,0,0,   0,1,0,0,   0,0,1,0,   0,5.23026,6.38383,1);
ei_declare("|pCube1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|pPlane1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_end_instance();

// Renderer::exportOneGeometry_Mesh(|pCube1|pCubeShape1, 0, 0

//############################### mesh #
//shape full path name=|pCube1|pCubeShape1
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|pCube1|pCubeShape1" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### vertex deform positions(optional)
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|pCube1|pCubeShape1
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|pPlane1|pPlaneShape1, 0, 0

//############################### mesh #
//shape full path name=|pPlane1|pPlaneShape1
//### UV(map1), size=4
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|pPlane1|pPlaneShape1" );
{
eiTag tag;
//vertex positions(required), size=6
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( 7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( -7.346750, 0.000000, -5.814621 );
ei_tab_add_vector( -7.346750, 0.000000, -5.814621 );
ei_tab_add_vector( 7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( 7.346750, 0.000000, -5.814621 );
ei_end_tab();
//### vertex deform positions(optional)
//### N ###(optional)
tag = eiNULL_TAG;
ei_declare("N", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_variable("N", &tag);
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_end_tab();
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.000000, 0.000000 );
ei_tab_add_vector2( 1.000000, 0.000000 );
ei_tab_add_vector2( 0.000000, 0.791455 );
ei_tab_add_vector2( 0.000000, 0.791455 );
ei_tab_add_vector2( 1.000000, 0.000000 );
ei_tab_add_vector2( 1.000000, 0.791455 );
ei_end_tab();
//### triangles(required) size=6
tag = ei_tab(EI_TYPE_INDEX, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_end_tab();
}//|pPlane1|pPlaneShape1
ei_end_object();
//--------------------------
//ribNode->name=|pCube1|pCubeShape1
//ribNode's transform node=|pCube1
//ribNode->object(0)->getDataPtr()->getFullPathName()=|pCube1|pCubeShape1
ei_instance("|pCube1");
ei_mtl("liquidShader3SG");
//shape name=|pCube1|pCubeShape1
//shape full path name=|pCube1|pCubeShape1
ei_element("|pCube1|pCubeShape1");
ei_transform(3.46703,0,0,0,   0,3.46703,0,0,   0,0,3.46703,0,   0,2.96559,0,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|pCube1_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|pPlane1|pPlaneShape1
//ribNode's transform node=|pPlane1
//ribNode->object(0)->getDataPtr()->getFullPathName()=|pPlane1|pPlaneShape1
ei_instance("|pPlane1");
ei_mtl("phong1SG");
//shape name=|pPlane1|pPlaneShape1
//shape full path name=|pPlane1|pPlaneShape1
ei_element("|pPlane1|pPlaneShape1");
ei_transform(2.5307,0,0,0,   0,2.5307,0,0,   0,0,2.5307,0,   0.186074,0,0.080088,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|pPlane1_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//Renderer::worldEpilogue()
ei_instgroup("cameraShape1");
//camera
ei_add_instance("|camera1_group|camera1|cameraShape1");
//light(s)
ei_add_instance("|pointLight1|pointLightShape1");
//mesh(s)
ei_add_instance("|pCube1");
ei_add_instance("|pPlane1");
ei_end_instgroup();
// in batch render mode
ei_render( "cameraShape1", "|camera1_group|camera1|cameraShape1", "cameraShape1_option" );
ei_end_context();
//------------------------------------------------

ei_context();
ei_verbose(6);
ei_link("eiIMG");
ei_link("eiSHADER");
ei_link("eiSHADER_maya");
//----------------shader_for_test begin---
ei_shader("maya_surfaceShader", "liquid_shader_for_test");
ei_shader_param_vector("outColor",1,0,0);
ei_end_shader();
ei_material("liquid_material_for_test");
ei_surface_shader("liquid_shader_for_test");
ei_end_material();
//----------------shader_for_test end ---
//    Generated by Liquid v2.3.5 (buildtime=20:51:12.30)
//    Scene : R:/MyDocuments/maya/projects/default/volume_liquidShader_anim
//    User  : yaoyansi

//############################### option #
ei_options("cameraShape1_option");
ei_contrast(0.05);
ei_samples(0,16);
ei_filter(4,3);
//transform motion=0, deform motion=0
ei_motion(0);
ei_trace_depth(4,4,4,4,4,4);
ei_displace(0);
ei_face(3);
ei_end_options();
// maya settings: focal=35.000000, aperture = 41.599998, aspect=1.333333
//Depth of Field on camera "|camera1_group|camera1|cameraShape1" is turned off in Maya

//############################### camera #
ei_camera("|camera1_group|camera1|cameraShape1_object");
//beauty channel
ei_output("R:/MyDocuments/maya/projects/default/rmanpix/volume_liquidShader_anim.cameraShape1.22.elvishray.bmp","bmp",1);
//mode=rgba
ei_output_variable("color",11);
ei_end_output();
// AOV
// AOV end
ei_focal(35);
ei_aperture(32);
ei_aspect(1.33333);
ei_resolution(200,150);
ei_clip(0.1,10000);
ei_end_camera();
//----------------------------------
ei_instance("|camera1_group|camera1|cameraShape1");
ei_element("|camera1_group|camera1|cameraShape1_object");
ei_transform(0.86512,1.38778e-017,-0.501565,0,   -0.128936,0.966394,-0.222393,0,   0.48471,0.257067,0.836046,0,   3.17966,4.55134,5.59215,1);
ei_end_instance();

ei_shader("volume_shell", "liquidShader3");
ei_end_shader();

ei_shader("simple_volume", "liquidShader2");
ei_shader_param_vector("vol_color",1,1,0);
ei_shader_param_scalar("vol_density",5);
ei_shader_param_scalar("step_size",0.2);
ei_shader_param_scalar("vol_radius",3);
ei_shader_param_vector("vol_offset",0,0,0);
ei_shader_param_scalar("absorption",0.3);
ei_shader_param_scalar("anisotropic",0.4);
ei_end_shader();

ei_shader("shadowvol_shell", "liquidShader1");
ei_end_shader();

ei_material("liquidShader3SG");
ei_surface_shader("liquidShader3");
ei_volume_shader("liquidShader2" );
ei_shadow_shader("liquidShader1" );
ei_end_material();
ei_shader("maya_phong", "phong1");
ei_shader_param_vector("color_",0.803922,0.664462,0.110342);
ei_shader_param_vector("transparency",0,0,0);
ei_shader_param_vector("ambientColor",0,0,0);
ei_shader_param_vector("incandescence",0,0,0);
ei_shader_param_int("liq_UserDefinedNormal",0);
ei_shader_param_vector("normalCamera",1,1,1);
ei_shader_param_scalar("diffuse",0.8);
ei_shader_param_scalar("translucence",0);
ei_shader_param_scalar("translucenceDepth",0.5);
ei_shader_param_scalar("translucenceFocus",0.5);
ei_shader_param_scalar("cosinePower",20);
ei_shader_param_vector("specularColor",0.5,0.5,0.5);
ei_shader_param_scalar("reflectivity",0.5);
ei_shader_param_vector("reflectedColor",0,0,0);
ei_shader_param_index("matteOpacityMode",2);
ei_shader_param_scalar("matteOpacity",1);
ei_shader_param_index("reflectionLimit",1);
ei_shader_param_vector("outColor",0,0,0);
ei_shader_param_vector("outTransparency",0,0,0);
ei_end_shader();

ei_material("phong1SG");
ei_surface_shader("phong1");
ei_end_material();

//worldPrologue

// Renderer::exportLight("_pointLight1_pointLightShape1");

// Renderer::exportPointLight()
ei_shader("pointlight", "|pointLight1|pointLightShape1_shader");
ei_shader_param_vector("lightcolor",1,1,1);
ei_shader_param_scalar("intensity",1);
ei_end_shader();
ei_light("|pointLight1|pointLightShape1_object");
ei_light_shader("|pointLight1|pointLightShape1_shader");
ei_origin(0,0,0);
ei_end_light();
ei_instance("|pointLight1|pointLightShape1");
ei_element("|pointLight1|pointLightShape1_object");
ei_transform(1,0,0,0,   0,1,0,0,   0,0,1,0,   0,5.23026,6.38383,1);
ei_declare("|pCube1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|pPlane1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_end_instance();

// Renderer::exportOneGeometry_Mesh(|pCube1|pCubeShape1, 0, 0

//############################### mesh #
//shape full path name=|pCube1|pCubeShape1
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|pCube1|pCubeShape1" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### vertex deform positions(optional)
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|pCube1|pCubeShape1
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|pPlane1|pPlaneShape1, 0, 0

//############################### mesh #
//shape full path name=|pPlane1|pPlaneShape1
//### UV(map1), size=4
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|pPlane1|pPlaneShape1" );
{
eiTag tag;
//vertex positions(required), size=6
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( 7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( -7.346750, 0.000000, -5.814621 );
ei_tab_add_vector( -7.346750, 0.000000, -5.814621 );
ei_tab_add_vector( 7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( 7.346750, 0.000000, -5.814621 );
ei_end_tab();
//### vertex deform positions(optional)
//### N ###(optional)
tag = eiNULL_TAG;
ei_declare("N", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_variable("N", &tag);
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_end_tab();
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.000000, 0.000000 );
ei_tab_add_vector2( 1.000000, 0.000000 );
ei_tab_add_vector2( 0.000000, 0.791455 );
ei_tab_add_vector2( 0.000000, 0.791455 );
ei_tab_add_vector2( 1.000000, 0.000000 );
ei_tab_add_vector2( 1.000000, 0.791455 );
ei_end_tab();
//### triangles(required) size=6
tag = ei_tab(EI_TYPE_INDEX, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_end_tab();
}//|pPlane1|pPlaneShape1
ei_end_object();
//--------------------------
//ribNode->name=|pCube1|pCubeShape1
//ribNode's transform node=|pCube1
//ribNode->object(0)->getDataPtr()->getFullPathName()=|pCube1|pCubeShape1
ei_instance("|pCube1");
ei_mtl("liquidShader3SG");
//shape name=|pCube1|pCubeShape1
//shape full path name=|pCube1|pCubeShape1
ei_element("|pCube1|pCubeShape1");
ei_transform(3.46703,0,0,0,   0,3.46703,0,0,   0,0,3.46703,0,   0,2.96559,0,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|pCube1_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|pPlane1|pPlaneShape1
//ribNode's transform node=|pPlane1
//ribNode->object(0)->getDataPtr()->getFullPathName()=|pPlane1|pPlaneShape1
ei_instance("|pPlane1");
ei_mtl("phong1SG");
//shape name=|pPlane1|pPlaneShape1
//shape full path name=|pPlane1|pPlaneShape1
ei_element("|pPlane1|pPlaneShape1");
ei_transform(2.5307,0,0,0,   0,2.5307,0,0,   0,0,2.5307,0,   0.186074,0,0.080088,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|pPlane1_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//Renderer::worldEpilogue()
ei_instgroup("cameraShape1");
//camera
ei_add_instance("|camera1_group|camera1|cameraShape1");
//light(s)
ei_add_instance("|pointLight1|pointLightShape1");
//mesh(s)
ei_add_instance("|pCube1");
ei_add_instance("|pPlane1");
ei_end_instgroup();
// in batch render mode
ei_render( "cameraShape1", "|camera1_group|camera1|cameraShape1", "cameraShape1_option" );
ei_end_context();
//------------------------------------------------

ei_context();
ei_verbose(6);
ei_link("eiIMG");
ei_link("eiSHADER");
ei_link("eiSHADER_maya");
//----------------shader_for_test begin---
ei_shader("maya_surfaceShader", "liquid_shader_for_test");
ei_shader_param_vector("outColor",1,0,0);
ei_end_shader();
ei_material("liquid_material_for_test");
ei_surface_shader("liquid_shader_for_test");
ei_end_material();
//----------------shader_for_test end ---
//    Generated by Liquid v2.3.5 (buildtime=20:51:12.30)
//    Scene : R:/MyDocuments/maya/projects/default/volume_liquidShader_anim
//    User  : yaoyansi

//############################### option #
ei_options("cameraShape1_option");
ei_contrast(0.05);
ei_samples(0,16);
ei_filter(4,3);
//transform motion=0, deform motion=0
ei_motion(0);
ei_trace_depth(4,4,4,4,4,4);
ei_displace(0);
ei_face(3);
ei_end_options();
// maya settings: focal=35.000000, aperture = 41.599998, aspect=1.333333
//Depth of Field on camera "|camera1_group|camera1|cameraShape1" is turned off in Maya

//############################### camera #
ei_camera("|camera1_group|camera1|cameraShape1_object");
//beauty channel
ei_output("R:/MyDocuments/maya/projects/default/rmanpix/volume_liquidShader_anim.cameraShape1.23.elvishray.bmp","bmp",1);
//mode=rgba
ei_output_variable("color",11);
ei_end_output();
// AOV
// AOV end
ei_focal(35);
ei_aperture(32);
ei_aspect(1.33333);
ei_resolution(200,150);
ei_clip(0.1,10000);
ei_end_camera();
//----------------------------------
ei_instance("|camera1_group|camera1|cameraShape1");
ei_element("|camera1_group|camera1|cameraShape1_object");
ei_transform(0.853855,-1.38778e-017,-0.520511,0,   -0.136574,0.964963,-0.224038,0,   0.502275,0.262385,0.823938,0,   3.22803,4.55134,5.4035,1);
ei_end_instance();

ei_shader("volume_shell", "liquidShader3");
ei_end_shader();

ei_shader("simple_volume", "liquidShader2");
ei_shader_param_vector("vol_color",1,1,0);
ei_shader_param_scalar("vol_density",5);
ei_shader_param_scalar("step_size",0.2);
ei_shader_param_scalar("vol_radius",3);
ei_shader_param_vector("vol_offset",0,0,0);
ei_shader_param_scalar("absorption",0.3);
ei_shader_param_scalar("anisotropic",0.4);
ei_end_shader();

ei_shader("shadowvol_shell", "liquidShader1");
ei_end_shader();

ei_material("liquidShader3SG");
ei_surface_shader("liquidShader3");
ei_volume_shader("liquidShader2" );
ei_shadow_shader("liquidShader1" );
ei_end_material();
ei_shader("maya_phong", "phong1");
ei_shader_param_vector("color_",0.803922,0.664462,0.110342);
ei_shader_param_vector("transparency",0,0,0);
ei_shader_param_vector("ambientColor",0,0,0);
ei_shader_param_vector("incandescence",0,0,0);
ei_shader_param_int("liq_UserDefinedNormal",0);
ei_shader_param_vector("normalCamera",1,1,1);
ei_shader_param_scalar("diffuse",0.8);
ei_shader_param_scalar("translucence",0);
ei_shader_param_scalar("translucenceDepth",0.5);
ei_shader_param_scalar("translucenceFocus",0.5);
ei_shader_param_scalar("cosinePower",20);
ei_shader_param_vector("specularColor",0.5,0.5,0.5);
ei_shader_param_scalar("reflectivity",0.5);
ei_shader_param_vector("reflectedColor",0,0,0);
ei_shader_param_index("matteOpacityMode",2);
ei_shader_param_scalar("matteOpacity",1);
ei_shader_param_index("reflectionLimit",1);
ei_shader_param_vector("outColor",0,0,0);
ei_shader_param_vector("outTransparency",0,0,0);
ei_end_shader();

ei_material("phong1SG");
ei_surface_shader("phong1");
ei_end_material();

//worldPrologue

// Renderer::exportLight("_pointLight1_pointLightShape1");

// Renderer::exportPointLight()
ei_shader("pointlight", "|pointLight1|pointLightShape1_shader");
ei_shader_param_vector("lightcolor",1,1,1);
ei_shader_param_scalar("intensity",1);
ei_end_shader();
ei_light("|pointLight1|pointLightShape1_object");
ei_light_shader("|pointLight1|pointLightShape1_shader");
ei_origin(0,0,0);
ei_end_light();
ei_instance("|pointLight1|pointLightShape1");
ei_element("|pointLight1|pointLightShape1_object");
ei_transform(1,0,0,0,   0,1,0,0,   0,0,1,0,   0,5.23026,6.38383,1);
ei_declare("|pCube1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|pPlane1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_end_instance();

// Renderer::exportOneGeometry_Mesh(|pCube1|pCubeShape1, 0, 0

//############################### mesh #
//shape full path name=|pCube1|pCubeShape1
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|pCube1|pCubeShape1" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### vertex deform positions(optional)
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|pCube1|pCubeShape1
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|pPlane1|pPlaneShape1, 0, 0

//############################### mesh #
//shape full path name=|pPlane1|pPlaneShape1
//### UV(map1), size=4
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|pPlane1|pPlaneShape1" );
{
eiTag tag;
//vertex positions(required), size=6
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( 7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( -7.346750, 0.000000, -5.814621 );
ei_tab_add_vector( -7.346750, 0.000000, -5.814621 );
ei_tab_add_vector( 7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( 7.346750, 0.000000, -5.814621 );
ei_end_tab();
//### vertex deform positions(optional)
//### N ###(optional)
tag = eiNULL_TAG;
ei_declare("N", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_variable("N", &tag);
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_end_tab();
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.000000, 0.000000 );
ei_tab_add_vector2( 1.000000, 0.000000 );
ei_tab_add_vector2( 0.000000, 0.791455 );
ei_tab_add_vector2( 0.000000, 0.791455 );
ei_tab_add_vector2( 1.000000, 0.000000 );
ei_tab_add_vector2( 1.000000, 0.791455 );
ei_end_tab();
//### triangles(required) size=6
tag = ei_tab(EI_TYPE_INDEX, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_end_tab();
}//|pPlane1|pPlaneShape1
ei_end_object();
//--------------------------
//ribNode->name=|pCube1|pCubeShape1
//ribNode's transform node=|pCube1
//ribNode->object(0)->getDataPtr()->getFullPathName()=|pCube1|pCubeShape1
ei_instance("|pCube1");
ei_mtl("liquidShader3SG");
//shape name=|pCube1|pCubeShape1
//shape full path name=|pCube1|pCubeShape1
ei_element("|pCube1|pCubeShape1");
ei_transform(3.46703,0,0,0,   0,3.46703,0,0,   0,0,3.46703,0,   0,2.96559,0,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|pCube1_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|pPlane1|pPlaneShape1
//ribNode's transform node=|pPlane1
//ribNode->object(0)->getDataPtr()->getFullPathName()=|pPlane1|pPlaneShape1
ei_instance("|pPlane1");
ei_mtl("phong1SG");
//shape name=|pPlane1|pPlaneShape1
//shape full path name=|pPlane1|pPlaneShape1
ei_element("|pPlane1|pPlaneShape1");
ei_transform(2.5307,0,0,0,   0,2.5307,0,0,   0,0,2.5307,0,   0.186074,0,0.080088,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|pPlane1_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//Renderer::worldEpilogue()
ei_instgroup("cameraShape1");
//camera
ei_add_instance("|camera1_group|camera1|cameraShape1");
//light(s)
ei_add_instance("|pointLight1|pointLightShape1");
//mesh(s)
ei_add_instance("|pCube1");
ei_add_instance("|pPlane1");
ei_end_instgroup();
// in batch render mode
ei_render( "cameraShape1", "|camera1_group|camera1|cameraShape1", "cameraShape1_option" );
ei_end_context();
//------------------------------------------------

ei_context();
ei_verbose(6);
ei_link("eiIMG");
ei_link("eiSHADER");
ei_link("eiSHADER_maya");
//----------------shader_for_test begin---
ei_shader("maya_surfaceShader", "liquid_shader_for_test");
ei_shader_param_vector("outColor",1,0,0);
ei_end_shader();
ei_material("liquid_material_for_test");
ei_surface_shader("liquid_shader_for_test");
ei_end_material();
//----------------shader_for_test end ---
//    Generated by Liquid v2.3.5 (buildtime=20:51:12.30)
//    Scene : R:/MyDocuments/maya/projects/default/volume_liquidShader_anim
//    User  : yaoyansi

//############################### option #
ei_options("cameraShape1_option");
ei_contrast(0.05);
ei_samples(0,16);
ei_filter(4,3);
//transform motion=0, deform motion=0
ei_motion(0);
ei_trace_depth(4,4,4,4,4,4);
ei_displace(0);
ei_face(3);
ei_end_options();
// maya settings: focal=35.000000, aperture = 41.599998, aspect=1.333333
//Depth of Field on camera "|camera1_group|camera1|cameraShape1" is turned off in Maya

//############################### camera #
ei_camera("|camera1_group|camera1|cameraShape1_object");
//beauty channel
ei_output("R:/MyDocuments/maya/projects/default/rmanpix/volume_liquidShader_anim.cameraShape1.24.elvishray.bmp","bmp",1);
//mode=rgba
ei_output_variable("color",11);
ei_end_output();
// AOV
// AOV end
ei_focal(35);
ei_aperture(32);
ei_aspect(1.33333);
ei_resolution(200,150);
ei_clip(0.1,10000);
ei_end_camera();
//----------------------------------
ei_instance("|camera1_group|camera1|cameraShape1");
ei_element("|camera1_group|camera1|cameraShape1_object");
ei_transform(0.844194,0,-0.536038,0,   -0.143848,0.963321,-0.226542,0,   0.516376,0.268353,0.813229,0,   3.24482,4.55134,5.21872,1);
ei_end_instance();

ei_shader("volume_shell", "liquidShader3");
ei_end_shader();

ei_shader("simple_volume", "liquidShader2");
ei_shader_param_vector("vol_color",1,1,0);
ei_shader_param_scalar("vol_density",5);
ei_shader_param_scalar("step_size",0.2);
ei_shader_param_scalar("vol_radius",3);
ei_shader_param_vector("vol_offset",0,0,0);
ei_shader_param_scalar("absorption",0.3);
ei_shader_param_scalar("anisotropic",0.4);
ei_end_shader();

ei_shader("shadowvol_shell", "liquidShader1");
ei_end_shader();

ei_material("liquidShader3SG");
ei_surface_shader("liquidShader3");
ei_volume_shader("liquidShader2" );
ei_shadow_shader("liquidShader1" );
ei_end_material();
ei_shader("maya_phong", "phong1");
ei_shader_param_vector("color_",0.803922,0.664462,0.110342);
ei_shader_param_vector("transparency",0,0,0);
ei_shader_param_vector("ambientColor",0,0,0);
ei_shader_param_vector("incandescence",0,0,0);
ei_shader_param_int("liq_UserDefinedNormal",0);
ei_shader_param_vector("normalCamera",1,1,1);
ei_shader_param_scalar("diffuse",0.8);
ei_shader_param_scalar("translucence",0);
ei_shader_param_scalar("translucenceDepth",0.5);
ei_shader_param_scalar("translucenceFocus",0.5);
ei_shader_param_scalar("cosinePower",20);
ei_shader_param_vector("specularColor",0.5,0.5,0.5);
ei_shader_param_scalar("reflectivity",0.5);
ei_shader_param_vector("reflectedColor",0,0,0);
ei_shader_param_index("matteOpacityMode",2);
ei_shader_param_scalar("matteOpacity",1);
ei_shader_param_index("reflectionLimit",1);
ei_shader_param_vector("outColor",0,0,0);
ei_shader_param_vector("outTransparency",0,0,0);
ei_end_shader();

ei_material("phong1SG");
ei_surface_shader("phong1");
ei_end_material();

//worldPrologue

// Renderer::exportLight("_pointLight1_pointLightShape1");

// Renderer::exportPointLight()
ei_shader("pointlight", "|pointLight1|pointLightShape1_shader");
ei_shader_param_vector("lightcolor",1,1,1);
ei_shader_param_scalar("intensity",1);
ei_end_shader();
ei_light("|pointLight1|pointLightShape1_object");
ei_light_shader("|pointLight1|pointLightShape1_shader");
ei_origin(0,0,0);
ei_end_light();
ei_instance("|pointLight1|pointLightShape1");
ei_element("|pointLight1|pointLightShape1_object");
ei_transform(1,0,0,0,   0,1,0,0,   0,0,1,0,   0,5.23026,6.38383,1);
ei_declare("|pCube1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|pPlane1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_end_instance();

// Renderer::exportOneGeometry_Mesh(|pCube1|pCubeShape1, 0, 0

//############################### mesh #
//shape full path name=|pCube1|pCubeShape1
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|pCube1|pCubeShape1" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### vertex deform positions(optional)
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|pCube1|pCubeShape1
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|pPlane1|pPlaneShape1, 0, 0

//############################### mesh #
//shape full path name=|pPlane1|pPlaneShape1
//### UV(map1), size=4
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|pPlane1|pPlaneShape1" );
{
eiTag tag;
//vertex positions(required), size=6
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( 7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( -7.346750, 0.000000, -5.814621 );
ei_tab_add_vector( -7.346750, 0.000000, -5.814621 );
ei_tab_add_vector( 7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( 7.346750, 0.000000, -5.814621 );
ei_end_tab();
//### vertex deform positions(optional)
//### N ###(optional)
tag = eiNULL_TAG;
ei_declare("N", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_variable("N", &tag);
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_end_tab();
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.000000, 0.000000 );
ei_tab_add_vector2( 1.000000, 0.000000 );
ei_tab_add_vector2( 0.000000, 0.791455 );
ei_tab_add_vector2( 0.000000, 0.791455 );
ei_tab_add_vector2( 1.000000, 0.000000 );
ei_tab_add_vector2( 1.000000, 0.791455 );
ei_end_tab();
//### triangles(required) size=6
tag = ei_tab(EI_TYPE_INDEX, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_end_tab();
}//|pPlane1|pPlaneShape1
ei_end_object();
//--------------------------
//ribNode->name=|pCube1|pCubeShape1
//ribNode's transform node=|pCube1
//ribNode->object(0)->getDataPtr()->getFullPathName()=|pCube1|pCubeShape1
ei_instance("|pCube1");
ei_mtl("liquidShader3SG");
//shape name=|pCube1|pCubeShape1
//shape full path name=|pCube1|pCubeShape1
ei_element("|pCube1|pCubeShape1");
ei_transform(3.46703,0,0,0,   0,3.46703,0,0,   0,0,3.46703,0,   0,2.96559,0,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|pCube1_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|pPlane1|pPlaneShape1
//ribNode's transform node=|pPlane1
//ribNode->object(0)->getDataPtr()->getFullPathName()=|pPlane1|pPlaneShape1
ei_instance("|pPlane1");
ei_mtl("phong1SG");
//shape name=|pPlane1|pPlaneShape1
//shape full path name=|pPlane1|pPlaneShape1
ei_element("|pPlane1|pPlaneShape1");
ei_transform(2.5307,0,0,0,   0,2.5307,0,0,   0,0,2.5307,0,   0.186074,0,0.080088,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|pPlane1_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//Renderer::worldEpilogue()
ei_instgroup("cameraShape1");
//camera
ei_add_instance("|camera1_group|camera1|cameraShape1");
//light(s)
ei_add_instance("|pointLight1|pointLightShape1");
//mesh(s)
ei_add_instance("|pCube1");
ei_add_instance("|pPlane1");
ei_end_instgroup();
// in batch render mode
ei_render( "cameraShape1", "|camera1_group|camera1|cameraShape1", "cameraShape1_option" );
ei_end_context();
//------------------------------------------------

ei_context();
ei_verbose(6);
ei_link("eiIMG");
ei_link("eiSHADER");
ei_link("eiSHADER_maya");
//----------------shader_for_test begin---
ei_shader("maya_surfaceShader", "liquid_shader_for_test");
ei_shader_param_vector("outColor",1,0,0);
ei_end_shader();
ei_material("liquid_material_for_test");
ei_surface_shader("liquid_shader_for_test");
ei_end_material();
//----------------shader_for_test end ---
//    Generated by Liquid v2.3.5 (buildtime=20:51:12.30)
//    Scene : R:/MyDocuments/maya/projects/default/volume_liquidShader_anim
//    User  : yaoyansi

//############################### option #
ei_options("cameraShape1_option");
ei_contrast(0.05);
ei_samples(0,16);
ei_filter(4,3);
//transform motion=0, deform motion=0
ei_motion(0);
ei_trace_depth(4,4,4,4,4,4);
ei_displace(0);
ei_face(3);
ei_end_options();
// maya settings: focal=35.000000, aperture = 41.599998, aspect=1.333333
//Depth of Field on camera "|camera1_group|camera1|cameraShape1" is turned off in Maya

//############################### camera #
ei_camera("|camera1_group|camera1|cameraShape1_object");
//beauty channel
ei_output("R:/MyDocuments/maya/projects/default/rmanpix/volume_liquidShader_anim.cameraShape1.25.elvishray.bmp","bmp",1);
//mode=rgba
ei_output_variable("color",11);
ei_end_output();
// AOV
// AOV end
ei_focal(35);
ei_aperture(32);
ei_aspect(1.33333);
ei_resolution(200,150);
ei_clip(0.1,10000);
ei_end_camera();
//----------------------------------
ei_instance("|camera1_group|camera1|cameraShape1");
ei_element("|camera1_group|camera1|cameraShape1_object");
ei_transform(0.834933,1.38778e-017,-0.550352,0,   -0.151338,0.961449,-0.229593,0,   0.529135,0.274984,0.802745,0,   3.24481,4.55134,5.03151,1);
ei_end_instance();

ei_shader("volume_shell", "liquidShader3");
ei_end_shader();

ei_shader("simple_volume", "liquidShader2");
ei_shader_param_vector("vol_color",1,1,0);
ei_shader_param_scalar("vol_density",5);
ei_shader_param_scalar("step_size",0.2);
ei_shader_param_scalar("vol_radius",3);
ei_shader_param_vector("vol_offset",0,0,0);
ei_shader_param_scalar("absorption",0.3);
ei_shader_param_scalar("anisotropic",0.4);
ei_end_shader();

ei_shader("shadowvol_shell", "liquidShader1");
ei_end_shader();

ei_material("liquidShader3SG");
ei_surface_shader("liquidShader3");
ei_volume_shader("liquidShader2" );
ei_shadow_shader("liquidShader1" );
ei_end_material();
ei_shader("maya_phong", "phong1");
ei_shader_param_vector("color_",0.803922,0.664462,0.110342);
ei_shader_param_vector("transparency",0,0,0);
ei_shader_param_vector("ambientColor",0,0,0);
ei_shader_param_vector("incandescence",0,0,0);
ei_shader_param_int("liq_UserDefinedNormal",0);
ei_shader_param_vector("normalCamera",1,1,1);
ei_shader_param_scalar("diffuse",0.8);
ei_shader_param_scalar("translucence",0);
ei_shader_param_scalar("translucenceDepth",0.5);
ei_shader_param_scalar("translucenceFocus",0.5);
ei_shader_param_scalar("cosinePower",20);
ei_shader_param_vector("specularColor",0.5,0.5,0.5);
ei_shader_param_scalar("reflectivity",0.5);
ei_shader_param_vector("reflectedColor",0,0,0);
ei_shader_param_index("matteOpacityMode",2);
ei_shader_param_scalar("matteOpacity",1);
ei_shader_param_index("reflectionLimit",1);
ei_shader_param_vector("outColor",0,0,0);
ei_shader_param_vector("outTransparency",0,0,0);
ei_end_shader();

ei_material("phong1SG");
ei_surface_shader("phong1");
ei_end_material();

//worldPrologue

// Renderer::exportLight("_pointLight1_pointLightShape1");

// Renderer::exportPointLight()
ei_shader("pointlight", "|pointLight1|pointLightShape1_shader");
ei_shader_param_vector("lightcolor",1,1,1);
ei_shader_param_scalar("intensity",1);
ei_end_shader();
ei_light("|pointLight1|pointLightShape1_object");
ei_light_shader("|pointLight1|pointLightShape1_shader");
ei_origin(0,0,0);
ei_end_light();
ei_instance("|pointLight1|pointLightShape1");
ei_element("|pointLight1|pointLightShape1_object");
ei_transform(1,0,0,0,   0,1,0,0,   0,0,1,0,   0,5.23026,6.38383,1);
ei_declare("|pCube1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|pPlane1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_end_instance();

// Renderer::exportOneGeometry_Mesh(|pCube1|pCubeShape1, 0, 0

//############################### mesh #
//shape full path name=|pCube1|pCubeShape1
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|pCube1|pCubeShape1" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### vertex deform positions(optional)
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|pCube1|pCubeShape1
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|pPlane1|pPlaneShape1, 0, 0

//############################### mesh #
//shape full path name=|pPlane1|pPlaneShape1
//### UV(map1), size=4
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|pPlane1|pPlaneShape1" );
{
eiTag tag;
//vertex positions(required), size=6
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( 7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( -7.346750, 0.000000, -5.814621 );
ei_tab_add_vector( -7.346750, 0.000000, -5.814621 );
ei_tab_add_vector( 7.346750, -0.000000, 5.814621 );
ei_tab_add_vector( 7.346750, 0.000000, -5.814621 );
ei_end_tab();
//### vertex deform positions(optional)
//### N ###(optional)
tag = eiNULL_TAG;
ei_declare("N", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_variable("N", &tag);
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, 1.000000, 0.000000 );
ei_end_tab();
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.000000, 0.000000 );
ei_tab_add_vector2( 1.000000, 0.000000 );
ei_tab_add_vector2( 0.000000, 0.791455 );
ei_tab_add_vector2( 0.000000, 0.791455 );
ei_tab_add_vector2( 1.000000, 0.000000 );
ei_tab_add_vector2( 1.000000, 0.791455 );
ei_end_tab();
//### triangles(required) size=6
tag = ei_tab(EI_TYPE_INDEX, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_end_tab();
}//|pPlane1|pPlaneShape1
ei_end_object();
//--------------------------
//ribNode->name=|pCube1|pCubeShape1
//ribNode's transform node=|pCube1
//ribNode->object(0)->getDataPtr()->getFullPathName()=|pCube1|pCubeShape1
ei_instance("|pCube1");
ei_mtl("liquidShader3SG");
//shape name=|pCube1|pCubeShape1
//shape full path name=|pCube1|pCubeShape1
ei_element("|pCube1|pCubeShape1");
ei_transform(3.46703,0,0,0,   0,3.46703,0,0,   0,0,3.46703,0,   0,2.96559,0,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|pCube1_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|pPlane1|pPlaneShape1
//ribNode's transform node=|pPlane1
//ribNode->object(0)->getDataPtr()->getFullPathName()=|pPlane1|pPlaneShape1
ei_instance("|pPlane1");
ei_mtl("phong1SG");
//shape name=|pPlane1|pPlaneShape1
//shape full path name=|pPlane1|pPlaneShape1
ei_element("|pPlane1|pPlaneShape1");
ei_transform(2.5307,0,0,0,   0,2.5307,0,0,   0,0,2.5307,0,   0.186074,0,0.080088,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|pPlane1_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//Renderer::worldEpilogue()
ei_instgroup("cameraShape1");
//camera
ei_add_instance("|camera1_group|camera1|cameraShape1");
//light(s)
ei_add_instance("|pointLight1|pointLightShape1");
//mesh(s)
ei_add_instance("|pCube1");
ei_add_instance("|pPlane1");
ei_end_instgroup();
// in batch render mode
ei_render( "cameraShape1", "|camera1_group|camera1|cameraShape1", "cameraShape1_option" );
ei_end_context();
//------------------------------------------------

ei_context();
ei_verbose(6);
ei_link("eiIMG");
ei_link("eiSHADER");
ei_link("eiSHADER_maya");
//----------------shader_for_test begin---
ei_shader("maya_surfaceShader", "liquid_shader_for_test");
ei_shader_param_vector("outColor",1,0,0);
ei_end_shader();
ei_material("liquid_material_for_test");
ei_surface_shader("liquid_shader_for_test");
ei_end_material();
//----------------shader_for_test end ---
//    Generated by Liquid v2.3.5 (buildtime=20:51:12.30)
//    Scene : R:/MyDocuments/maya/projects/default/volume_liquidShader_anim
//    User  : yaoyansi

//############################### option #
ei_options("cameraShape1_option");
ei_contrast(0.05);
ei_samples(0,16);
ei_filter(4,3);
//transform motion=0, deform motion=0
ei_motion(0);
