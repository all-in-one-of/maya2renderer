  >1 liqRibTranslator::doIt()-->if(checkSettings()==true)
    >2 RendererMgr::setFactory(elvishray)
    >2 RendererMgr::install()
      >3 Renderer::Renderer()
    >2 RendererMgr::prologue()
    >2 Renderer::openLog(R:/MyDocuments/maya/projects/default/rib/checker_anim.cameraShape1.elvishray.20.bmp)
      >3 OutputMgr::setOutputImagePath(R:/MyDocuments/maya/projects/default/rib/checker_anim.cameraShape1.elvishray.20.bmp)
      >3 OutputMgr::add(0)
      >3 OutputMgr::add(1)
      >3 OutputMgr::add(2)
      >3 OutputMgr::init()
        >4 OutputMgr::createOutput(0)
          >5 OutputBase::OutputBase()
          >5 OutputCall::OutputCall()
        >4 OutputMgr::createOutput(1)
          >5 OutputBase::OutputBase()
          >5 OutputESS::OutputESS(R:/MyDocuments/maya/projects/default/rib/checker_anim.cameraShape1.elvishray.20.bmp)
        >4 OutputMgr::createOutput(2)
          >5 OutputBase::OutputBase()
          >5 OutputESA::OutputESA(R:/MyDocuments/maya/projects/default/rib/checker_anim.cameraShape1.elvishray.20.bmp)
        >4 OutputCall::init()
        >4 OutputESS::init()
        >4 OutputESA::init()
    >2 Renderer::canExport()
    >2 liqRibTranslatorNew::_doItNew(args,defaultRenderLayer)
      >3 liqRibTranslatorNew::_doItNewWithoutRenderScript(arg,defaultRenderLayer)
        >4 liqRibTranslator::verifyOutputDirectories()
          >5 liqRibTranslator::verifyResourceDir(RIB, rib, 0)
          >5 liqRibTranslator::verifyResourceDir(Texture, rmantex, 0)
          >5 liqRibTranslator::verifyResourceDir(Picture, rmanpix/, 0)
          >5 liqRibTranslator::verifyResourceDir(Temp Files, rmantmp/, 0)
        >4 liqRibTranslator::generateRenderScriptName()
        >4 liqRibTranslator::generateTempMayaSceneName()
        >4 tFrameScriptJobMgr::setCommonParameters(checker_animFrame1)
        >4 liqRibTranslatorNew::processOneFrame(0, liqglo__)
          >5 liqRibTranslatorNew::buildJobs__()
            >6 liqRibTranslatorNew::buildShadowJobs__()
              >7 tJobScriptMgr::buildShadowJob(thisJob___, 0)
              >7 tJobScriptMgr::buildShadowCameraJob(thisJob___, 0)
            >6 tRibCameraMgr::gatherDataForJob(liqglo___, ,jobList__,0,1)
            >6 liqRibTranslator::generateFileName(4,cameraShape1)
            >6 liqRibTranslator::generateFileName(5,cameraShape1)
              >7 liqRibTranslator::generateImageName(, job(cameraShape1)), 
          >5 liqRibTranslatorNew::calaculateSamplingTime(1)
          >5 liqRibTranslatorNew::scanScene__(1,0)
            >6 tJobScriptMgr::scanScene(1,0, htable__, count, returnStatus__)
              >7 liqRibHT::insert(|pointLight1|pointLightShape1,lframe,0,3,0,matrix,,-1)
                >8 liqRibHT::hash(|pointLight1|pointLightShape1,0)
                >8 liqRibHT::find(|pointLight1|pointLightShape1,|pointLight1|pointLightShape1,3)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pointLight1|pointLightShape1,0,3,-1)
                  >9 liqRibNode::parseVectorAttributes(pointLight1,,2)
                  >9 liqRibNode::parseVectorAttributes(pointLight1,,3)
                  >9 liqRibNode::parseVectorAttributes(pointLight1,,4)
                  >9 liqRibNode::findShadingGroup(|pointLight1|pointLightShape1,3)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pointLight1|pointLightShape1,3)
                    >10 liqRibLightData::liqRibLightData(|pointLight1|pointLightShape1)
                      >11 liqRibData::addAdditionalSurfaceParameters(pointLightShape1)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
              >7 liqRibHT::insert(|pointLight2|pointLightShape2,lframe,0,3,1,matrix,,-1)
                >8 liqRibHT::hash(|pointLight2|pointLightShape2,1)
                >8 liqRibHT::find(|pointLight2|pointLightShape2,|pointLight2|pointLightShape2,3)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pointLight2|pointLightShape2,0,3,-1)
                  >9 liqRibNode::parseVectorAttributes(pointLight2,,2)
                  >9 liqRibNode::parseVectorAttributes(pointLight2,,3)
                  >9 liqRibNode::parseVectorAttributes(pointLight2,,4)
                  >9 liqRibNode::findShadingGroup(|pointLight2|pointLightShape2,3)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pointLight2|pointLightShape2,3)
                    >10 liqRibLightData::liqRibLightData(|pointLight2|pointLightShape2)
                      >11 liqRibData::addAdditionalSurfaceParameters(pointLightShape2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 tLocatorMgr::scanScene(1,0,htable__,count__,returnStatus__)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
              >7 liqRibHT::insert(|persp|perspShape,lframe,0,0,2,matrix,,-1)
                >8 liqRibHT::hash(|persp|perspShape,2)
                >8 liqRibHT::find(|persp|perspShape,|persp|perspShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|persp|perspShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(persp,,2)
                  >9 liqRibNode::parseVectorAttributes(persp,,3)
                  >9 liqRibNode::parseVectorAttributes(persp,,4)
                  >9 liqRibNode::findShadingGroup(|persp|perspShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|persp|perspShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
              >7 liqRibHT::insert(|top|topShape,lframe,0,0,3,matrix,,-1)
                >8 liqRibHT::hash(|top|topShape,3)
                >8 liqRibHT::find(|top|topShape,|top|topShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|top|topShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(top,,2)
                  >9 liqRibNode::parseVectorAttributes(top,,3)
                  >9 liqRibNode::parseVectorAttributes(top,,4)
                  >9 liqRibNode::findShadingGroup(|top|topShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|top|topShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
              >7 liqRibHT::insert(|front|frontShape,lframe,0,0,4,matrix,,-1)
                >8 liqRibHT::hash(|front|frontShape,4)
                >8 liqRibHT::find(|front|frontShape,|front|frontShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|front|frontShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(front,,2)
                  >9 liqRibNode::parseVectorAttributes(front,,3)
                  >9 liqRibNode::parseVectorAttributes(front,,4)
                  >9 liqRibNode::findShadingGroup(|front|frontShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|front|frontShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
              >7 liqRibHT::insert(|side|sideShape,lframe,0,0,5,matrix,,-1)
                >8 liqRibHT::hash(|side|sideShape,5)
                >8 liqRibHT::find(|side|sideShape,|side|sideShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|side|sideShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(side,,2)
                  >9 liqRibNode::parseVectorAttributes(side,,3)
                  >9 liqRibNode::parseVectorAttributes(side,,4)
                  >9 liqRibNode::findShadingGroup(|side|sideShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|side|sideShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
              >7 liqRibHT::insert(|pPlane2|pPlaneShape11,lframe,0,0,6,matrix,,-1)
                >8 liqRibHT::hash(|pPlane2|pPlaneShape11,6)
                >8 liqRibHT::find(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pPlane2|pPlaneShape11,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(pPlane2,,2)
                  >9 liqRibNode::parseVectorAttributes(pPlane2,,3)
                  >9 liqRibNode::parseVectorAttributes(pPlane2,,4)
                  >9 liqRibNode::findShadingGroup(|pPlane2|pPlaneShape11,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getColor(&shader,&color)
                  >9 liqRibNode::getOpacity(&shader,&color)
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pPlane2|pPlaneShape11,0)
                    >10 liqRibMeshData::liqRibMeshData(|pPlane2|pPlaneShape11)
                      >11 liqRibData::addAdditionalSurfaceParameters(pPlaneShape11)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
              >7 liqRibHT::insert(|camera1_group|camera1|cameraShape1,lframe,0,0,7,matrix,,-1)
                >8 liqRibHT::hash(|camera1_group|camera1|cameraShape1,7)
                >8 liqRibHT::find(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|camera1_group|camera1|cameraShape1,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(camera1,,2)
                  >9 liqRibNode::parseVectorAttributes(camera1,,3)
                  >9 liqRibNode::parseVectorAttributes(camera1,,4)
                  >9 liqRibNode::findShadingGroup(|camera1_group|camera1|cameraShape1,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|camera1_group|camera1|cameraShape1,0)
                    >10 liqRibCameraData::liqRibCameraData(|camera1_group|camera1|cameraShape1)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
              >7 liqRibHT::insert(|camera1_group|camera1_aim|camera1_aimShape,lframe,0,0,8,matrix,,-1)
                >8 liqRibHT::hash(|camera1_group|camera1_aim|camera1_aimShape,8)
                >8 liqRibHT::find(|camera1_group|camera1_aim|camera1_aimShape,|camera1_group|camera1_aim|camera1_aimShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|camera1_group|camera1_aim|camera1_aimShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(camera1_aim,,2)
                  >9 liqRibNode::parseVectorAttributes(camera1_aim,,3)
                  >9 liqRibNode::parseVectorAttributes(camera1_aim,,4)
                  >9 liqRibNode::findShadingGroup(|camera1_group|camera1_aim|camera1_aimShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|camera1_group|camera1_aim|camera1_aimShape,0)
            >6 liqRibTranslatorNew::dealwithParticleInstancedObjects(0,1,9)
            >6 liqRibTranslatorNew::getCameraData(iter__,0)
              >7 liqRibTranslator::getCameraInfo(|camera1_group|camera1|cameraShape1,)
                >8 liqRibTranslator::portFieldOfView(224,150,&horizontal,&vertical,&fnCamera)
                  >9 liqRibTranslator::computeViewingFrustum(1.49333,,&left,&right,&bottom,&top,|camera1_group|camera1|cameraShape1)
              >7 liqRibTranslator::getCameraFilmOffset(|camera1_group|camera1|cameraShape1,)
              >7 liqRibTranslator::getCameraTransform(|camera1_group|camera1|cameraShape1,)
          >5 liqRibTranslatorNew::doTextures(size=0)
            >6 Renderer::frameEpilogue(txtList_.size=0)
          >5 liqRibTranslatorNew::doShadows(size=0)
            >6 Renderer::doShadows(shadowList_.size=0)
          >5 Renderer::setRenderScriptFormatAndCompress(0,0)
          >5 Renderer::isHeroPassReady(cameraShape1)
          >5 Renderer::HeroPassBegin(cameraShape1)
          >5 tHeroRibWriterMgr::write(liqglo___,cameraShape1,1,0)
            >6 liqRibTranslatorNew::ribPrologue__(cameraShape1)
              >7 Renderer::ribPrologue_begin(cameraShape1)
                >8 Renderer::dummyPhongShader()
              >7 Renderer::ribPrologue_comment(2.3.5 (buildtime=20:51:12.30),R:/MyDocuments/maya/projects/default/checker_anim,yaoyansi,time)
              >7 Renderer::ribPrologue_options(cameraShape1)
            >6 liqRibTranslatorNew::framePrologue__(1,cameraShape1)
              >7 Renderer::framePrologue(1,cameraShape1)
            >6 ShaderMgr::exportShaderGraph()
              >7 ConvertShadingNetwork::exportShaderGraph()
                >8 ConvertShadingNetwork::beforeExport()
                >8 ConvertShadingNetwork::__export()
                  >9 ConvertShadingNetwork::canShadingGroupExported(phong1SG)
                  >9 Renderer::getValidShaderPlugsInShadingGroup()
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,surfaceShader)
                    >10 ConvertShadingNetwork::canShaderExported(phong1)
                    >10 ConvertShadingNetwork::exportShaderBegin(phong1)
                    >10 ConvertShadingNetwork::convertShadingNetworkToRSL(phong1,surfaceShader)
                      >11 Visitor::initShaderData(phong1,surfaceShader)
                      >11 ConvertShadingNetwork::getUpstreamConvertibleNodes(phong1, nodes, numConnections)
                        >12 ConvertShadingNetwork::nodeIsConvertible(phong1)
                          >13 ShaderMgr::hasShaderType(phong)
                        >12 ShaderMgr::getValidConnection(phong1)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.color)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraX)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraX)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraY)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraY)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraZ)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraZ)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                          >13 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                            >14 ShaderMgr::hasShaderType(shadingEngine)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                        >12 ConvertShadingNetwork::getUpstreamConvertibleNodes(checker1, nodes, numConnections)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                          >13 ShaderMgr::getValidConnection(checker1)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1R)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1R)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1G)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1G)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1B)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1B)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2R)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2R)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2G)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2G)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2B)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2B)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.uCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.uCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.vCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.vCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                              >15 ShaderMgr::hasShaderType(place2dTexture)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                            >14 ConvertShadingNetwork::nodeIsConvertible(phong1)
                              >15 ShaderMgr::hasShaderType(phong)
                          >13 ConvertShadingNetwork::getUpstreamConvertibleNodes(place2dTexture1, nodes, numConnections)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                              >15 ShaderMgr::hasShaderType(place2dTexture)
                            >14 ShaderMgr::getValidConnection(place2dTexture1)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uCoord)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uCoord)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.vCoord)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.vCoord)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverage)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverage)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseUV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseUV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offset)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offset)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                              >15 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                                >16 ShaderMgr::hasShaderType(animCurveTU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                              >15 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                                >16 ShaderMgr::hasShaderType(animCurveTU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatUV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatUV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrame)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrame)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                              >15 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                >16 ShaderMgr::hasShaderType(checker)
                      >11 Visitor::preOutput(phong1)
                      >11 Visitor::outputBegin(phong1)
                      >11 ConvertShadingNetwork::traverseGraphAndOutputNodeFunctions( nodes, numConnections)
                        >12 Visitor::outputUpstreamShader(place2dTexture1)
                          >13 ShaderOutputVisitor::_outputUpstreamShader(place2dTexture1,place2dTexture)
                            >14 Visitor::visitPlace2dTexture(place2dTexture1)
                              >15 OutputHelper::beginRSL(maya_place2dTexture,place2dTexture1)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.uvCoord)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.coverageU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.coverageV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.mirrorU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.mirrorV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.noiseU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.noiseV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.offsetU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.offsetV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.repeatU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                                    >18 ShaderMgr::hasShaderType(animCurveTU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.repeatV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                                    >18 ShaderMgr::hasShaderType(animCurveTU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.rotateFrame)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.rotateUV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.stagger)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.translateFrameU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.translateFrameV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.wrapU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.wrapV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.outUV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                    >18 ShaderMgr::hasShaderType(checker)
                              >15 OutputHelper::endRSL()
                        >12 ShaderMgr::getValidConnection(place2dTexture1)
                        >12 ConvertShadingNetwork::decrementDownstreamConnections(place2dTexture1, nodes, numConnections, validConnections)
                        >12 ConvertShadingNetwork::getNodeVariables(place2dTexture1, validConnections,  inputSrc, inputDes, outputSrc)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.vCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.vCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverage)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverage)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offset)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offset)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                              >15 ShaderMgr::hasShaderType(animCurveTU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                              >15 ShaderMgr::hasShaderType(animCurveTU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrame)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrame)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                            >14 ConvertShadingNetwork::nodeIsConvertible(checker1)
                              >15 ShaderMgr::hasShaderType(checker)
                          >13 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture1,outUV,place2dTexture1.outUV, outputVars)
                            >14 Visitor::addShaderMethodVariavles(place2dTexture1,outUV,float,2,)
                        >12 Visitor::addShaderMethodBody(place2dTexture1,,,place2dTexture1.outUV124)
                        >12 Visitor::outputUpstreamShader(checker1)
                          >13 ShaderOutputVisitor::_outputUpstreamShader(checker1,checker)
                            >14 Visitor::visitChecker(checker1)
                              >15 OutputHelper::beginRSL(maya_checker,checker1)
                              >15 ShaderMgr::convertibleConnection(checker1.alphaGain)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                              >15 ShaderMgr::convertibleConnection(checker1.alphaIsLuminance)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                              >15 ShaderMgr::convertibleConnection(checker1.alphaOffset)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                              >15 ShaderMgr::convertibleConnection(checker1.color1)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                              >15 ShaderMgr::convertibleConnection(checker1.color2)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                              >15 ShaderMgr::convertibleConnection(checker1.colorGain)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                              >15 ShaderMgr::convertibleConnection(checker1.colorOffset)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                              >15 ShaderMgr::convertibleConnection(checker1.contrast)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                              >15 ShaderMgr::convertibleConnection(checker1.defaultColor)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                              >15 ShaderMgr::convertibleConnection(checker1.filter)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                              >15 ShaderMgr::convertibleConnection(checker1.filterOffset)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                              >15 ShaderMgr::convertibleConnection(checker1.invert)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                              >15 ShaderMgr::convertibleConnection(checker1.uvCoord)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                                    >18 ShaderMgr::hasShaderType(place2dTexture)
                              >15 ShaderMgr::convertibleConnection(checker1.outAlpha)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                              >15 ShaderMgr::convertibleConnection(checker1.outColor)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(phong1)
                                    >18 ShaderMgr::hasShaderType(phong)
                              >15 OutputHelper::endRSL()
                        >12 ShaderMgr::getValidConnection(checker1)
                        >12 ConvertShadingNetwork::decrementDownstreamConnections(checker1, nodes, numConnections, validConnections)
                        >12 ConvertShadingNetwork::getNodeVariables(checker1, validConnections,  inputSrc, inputDes, outputSrc)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1R)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1R)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1G)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1G)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1B)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1B)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2R)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2R)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2G)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2G)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2B)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2B)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.uCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.uCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.vCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.vCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                              >15 ShaderMgr::hasShaderType(place2dTexture)
                          >13 ConvertShadingNetwork::addNodeInputVariable(checker1.uvCoord, inputSrc, inputDes)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                              >15 ShaderMgr::hasShaderType(place2dTexture)
                            >14 ShaderMgr::getValidConnection(place2dTexture1)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                            >14 ConvertShadingNetwork::nodeIsConvertible(phong1)
                              >15 ShaderMgr::hasShaderType(phong)
                          >13 ConvertShadingNetwork::addNodeOutputVariable(checker1,outColor,checker1.outColor, outputVars)
                            >14 Visitor::addShaderMethodVariavles(checker1,outColor,color,-1,)
                        >12 Visitor::addShaderMethodBody(checker1,place2dTexture1.outUV124,checker1.uvCoord124,checker1.outColor124)
                        >12 Visitor::outputUpstreamShader(phong1)
                          >13 ShaderOutputVisitor::_outputUpstreamShader(phong1,phong)
                            >14 Visitor::visitPhong(phong1)
                              >15 OutputHelper::beginRSL(maya_phong,phong1)
                              >15 ShaderMgr::convertibleConnection(phong1.ambientColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                              >15 ShaderMgr::convertibleConnection(phong1.color)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.color)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                    >18 ShaderMgr::hasShaderType(checker)
                              >15 ShaderMgr::convertibleConnection(phong1.cosinePower)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                              >15 ShaderMgr::convertibleConnection(phong1.diffuse)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                              >15 ShaderMgr::convertibleConnection(phong1.incandescence)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                              >15 ShaderMgr::convertibleConnection(phong1.matteOpacityMode)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                              >15 ShaderMgr::convertibleConnection(phong1.matteOpacity)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                              >15 OutputHelper::add_liq_UserDefinedNormal(phong1)
                              >15 ShaderMgr::convertibleConnection(phong1.normalCamera)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                              >15 ShaderMgr::convertibleConnection(phong1.specularColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                              >15 ShaderMgr::convertibleConnection(phong1.reflectivity)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                              >15 ShaderMgr::convertibleConnection(phong1.reflectedColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                              >15 ShaderMgr::convertibleConnection(phong1.reflectionLimit)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                              >15 ShaderMgr::convertibleConnection(phong1.translucence)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                              >15 ShaderMgr::convertibleConnection(phong1.translucenceDepth)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                              >15 ShaderMgr::convertibleConnection(phong1.translucenceFocus)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                              >15 ShaderMgr::convertibleConnection(phong1.transparency)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                              >15 ShaderMgr::convertibleConnection(phong1.outColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                                    >18 ShaderMgr::hasShaderType(shadingEngine)
                              >15 ShaderMgr::convertibleConnection(phong1.outTransparency)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                              >15 OutputHelper::endRSL()
                        >12 ShaderMgr::getValidConnection(phong1)
                        >12 ConvertShadingNetwork::decrementDownstreamConnections(phong1, nodes, numConnections, validConnections)
                        >12 ConvertShadingNetwork::getNodeVariables(phong1, validConnections,  inputSrc, inputDes, outputSrc)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.colorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.colorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.colorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.colorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.colorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.colorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.color)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                            >14 ConvertShadingNetwork::nodeIsConvertible(checker1)
                              >15 ShaderMgr::hasShaderType(checker)
                          >13 ConvertShadingNetwork::addNodeInputVariable(phong1.color, inputSrc, inputDes)
                            >14 ConvertShadingNetwork::nodeIsConvertible(checker1)
                              >15 ShaderMgr::hasShaderType(checker)
                            >14 ShaderMgr::getValidConnection(checker1)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.transparencyR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.transparencyG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.transparencyB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraX)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraX)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraY)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraY)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraZ)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraZ)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.specularColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.specularColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.specularColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                            >14 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                              >15 ShaderMgr::hasShaderType(shadingEngine)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                        >12 Visitor::addShaderMethodBody(phong1,checker1.outColor124,phong1.color124,)
                      >11 ConvertShadingNetwork::outputShaderMethod()
                        >12 Visitor::outputShaderMethod()
                      >11 Visitor::outputEnd()
                      >11 Visitor::postOutput()
                    >10 ConvertShadingNetwork::exportShaderEnd(phong1)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,displacementShader)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,volumeShader)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,liqShadowShader)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,liqEnvironmentShader)
                  >9 ConvertShadingNetwork::exportShadingGroupBegin(phong1SG)
                  >9 ConvertShadingNetwork::outputShadingGroup(phong1SG)
                    >10 Visitor::outputShadingGroup(phong1SG)
                  >9 ConvertShadingNetwork::exportShadingGroupEnd(phong1SG)
                >8  ConvertShadingNetwork::afterExport()
            >6 liqRibTranslatorNew::worldPrologue__(cameraShape1)
              >7 Renderer::worldPrologue(cameraShape1)
            >6 liqRibTranslatorNew::lightBlock__(cameraShape1)
              >7 Renderer::writeLight_pre(|pointLight1|pointLightShape1,cameraShape1)
              >7 liqRibObj::writeObject(,cameraShape1,0)
                >8 liqRibLightData::write(,job=cameraShape1,0)
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::write(|pointLight1|pointLightShape1,,cameraShape1,ref=0)
                      >11 liqRibData::getFullPathName()
                    >10 er_writeLightData.cpp::_write(|pointLight1|pointLightShape1,cameraShape1,...)
                      >11 Renderer::exportPointLight(pointlight,pointLightShape1,...)
                        >12 addLightGroupForLight(|pointLight1|pointLightShape1)
              >7 Renderer::writeLight_post(|pointLight1|pointLightShape1,cameraShape1)
              >7 Renderer::writeLight_pre(|pointLight2|pointLightShape2,cameraShape1)
              >7 liqRibObj::writeObject(,cameraShape1,0)
                >8 liqRibLightData::write(,job=cameraShape1,0)
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::write(|pointLight2|pointLightShape2,,cameraShape1,ref=0)
                      >11 liqRibData::getFullPathName()
                    >10 er_writeLightData.cpp::_write(|pointLight2|pointLightShape2,cameraShape1,...)
                      >11 Renderer::exportPointLight(pointlight,pointLightShape2,...)
                        >12 addLightGroupForLight(|pointLight2|pointLightShape2)
              >7 Renderer::writeLight_post(|pointLight2|pointLightShape2,cameraShape1)
            >6 liqRibTranslatorNew::coordSysBlock__(cameraShape1)
              >7 Renderer::coordSysBlock__(cameraShape1)
            >6 liqRibTranslatorNew::objectBlock__(cameraShape1)
              >7 liqRibTranslatorNew::objectBlock_data(cameraShape1)
                >8 liqRibTranslatorNew::getShadowSetObject(cameraShape1)
                >8 liqRibTranslatorNew::oneObjectBlock_data(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::exportOneObject_data(|pPlane2|pPlaneShape11,cameraShape1)
                    >10 Renderer::_writeObject(|pPlane2|pPlaneShape11,cameraShape1,0,0,0)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.1.rib,cameraShape1,0)
                        >12 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.1.rib,job=cameraShape1,0)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|pPlane2|pPlaneShape11,R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.1.rib,cameraShape1,ref=0)
                              >15 liqRibData::getFullPathName()
                            >14 er_writeMeshData.cpp::_write1(|pPlane2|pPlaneShape11,cameraShape1)
                              >15 liqRibHT::find(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                              >15 _exportVertexFromNodePlug(|pPlane2|pPlaneShape11,0)
                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqRibData::getFullPathName()
                >8 liqRibTranslatorNew::oneObjectBlock_data(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 Renderer::exportOneObject_data(|camera1_group|camera1|cameraShape1,cameraShape1)
                    >10 Renderer::_writeObject(|camera1_group|camera1|cameraShape1,cameraShape1,0,0,0)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_camera1_group_camera1_cameraShape1.1.rib,cameraShape1,0)
                        >12 liqRibCameraData::write(R:/MyDocuments/maya/projects/default/rib/_camera1_group_camera1_cameraShape1.1.rib,job=cameraShape1,0)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|camera1_group|camera1|cameraShape1,R:/MyDocuments/maya/projects/default/rib/_camera1_group_camera1_cameraShape1.1.rib,cameraShape1,ref=0)
                              >15 liqRibData::getFullPathName()
                            >14 er_writeCameraData.cpp::_write_camera(|camera1_group|camera1|cameraShape1,cameraShape1)
                              >15 liqRibHT::find(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,0)
                              >15 Renderer::gatherCameraShaders(cameraShaders.size=0,|camera1_group|camera1|cameraShape1,liqEnvironmentShader)
                              >15 Renderer::cameraOutput(cameraShape1)
              >7 liqRibTranslatorNew::objectBlock_reference(cameraShape1)
                >8 Renderer::objectBlock_reference_begin()
                >8 liqRibTranslatorNew::preGeometryMel()
                  >9 Renderer::preGeometryMel()
                >8 liqRibTranslatorNew::getShadowSetObject(cameraShape1)
                >8 liqRibTranslatorNew::oneObjectBlock_reference(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_begin(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_block0(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 liqRibTranslatorNew::tRiIlluminate(cameraShape1,|pPlane2|pPlaneShape11)
                    >10 Renderer::exportLightLinks(cameraShape1,|pPlane2|pPlaneShape11,lightedByWhichLightShapes.size=2)
                  >9 liqRibTranslatorNew::checkSurfaceShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                  >9 liqRibTranslatorNew::checkDisplacementShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                  >9 liqRibTranslatorNew::checkVolumeShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                  >9 Renderer::oneObjectBlock_reference_attribute_block1(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 liqRibTranslatorNew::writeShader_(1,|pPlane2|pPlaneShape11,v=0,s=0,c=0,,|pPlane2|pPlaneShape11,cameraShape1)
                    >10 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                  >9 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|pPlane2|pPlaneShape11)
                  >9 Renderer::exportOneObject_reference(|pPlane2|pPlaneShape11,cameraShape1)
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::oneObjectBlock_reference_attribute_end(|pPlane2|pPlaneShape11,cameraShape1)
                >8 liqRibTranslatorNew::oneObjectBlock_reference(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_begin(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_block0(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 liqRibTranslatorNew::tRiIlluminate(cameraShape1,|camera1_group|camera1|cameraShape1)
                    >10 Renderer::exportLightLinks(cameraShape1,|camera1_group|camera1|cameraShape1,lightedByWhichLightShapes.size=0)
                  >9 liqRibTranslatorNew::checkSurfaceShader(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,,,)
                  >9 liqRibTranslatorNew::checkDisplacementShader(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,,,)
                  >9 liqRibTranslatorNew::checkVolumeShader(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,,,)
                  >9 Renderer::oneObjectBlock_reference_attribute_block1(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 liqRibTranslatorNew::writeShader_(1,|camera1_group|camera1|cameraShape1,v=0,s=0,c=0,,|camera1_group|camera1|cameraShape1,cameraShape1)
                    >10 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,0)
                  >9 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|camera1_group|camera1|cameraShape1)
                  >9 Renderer::exportOneObject_reference(|camera1_group|camera1|cameraShape1,cameraShape1)
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::oneObjectBlock_reference_attribute_end(|camera1_group|camera1|cameraShape1,cameraShape1)
                >8 Renderer::objectBlock_reference_end()
            >6 liqRibTranslatorNew::worldEpilogue__()
              >7 liqRibTranslator::worldEpilogue()
                >8 Renderer::worldEpilogue()
            >6 liqRibTranslatorNew::frameEpilogue__(1)
              >7 Renderer::frameEpilogue(1)
            >6 liqRibTranslatorNew::ribEpilogue__(cameraShape1)
              >7 Renderer::ribPrologue_end(cameraShape1)
                >8 Renderer::cookInstanceGroup()
                >8 Renderer::render()
                  >9 Renderer::renderPreview(200,150,0,0,cameraShape1,cameraShape1,cameraShape1_option)
                    >10 Renderer::_renderPreview(200,150,0,0,cameraShape1,|camera1_group|camera1,cameraShape1_option)
          >5 Renderer::HeroPassEnd(cameraShape1)
        >4 liqRenderScript::addJob(job.title=checker_animFrame1,0)
          >5 liqRenderScript::popNextJobID()
        >4 tFrameScriptJobMgr::setCommonParameters(checker_animFrame1)
        >4 liqRibTranslatorNew::processOneFrame(1, liqglo__)
          >5 liqRibTranslatorNew::buildJobs__()
            >6 liqRibTranslatorNew::buildShadowJobs__()
              >7 tJobScriptMgr::buildShadowJob(thisJob___, 0)
              >7 tJobScriptMgr::buildShadowCameraJob(thisJob___, 0)
            >6 tRibCameraMgr::gatherDataForJob(liqglo___, ,jobList__,0,1)
            >6 liqRibTranslator::generateFileName(4,cameraShape1)
            >6 liqRibTranslator::generateFileName(5,cameraShape1)
              >7 liqRibTranslator::generateImageName(, job(cameraShape1)), 
          >5 liqRibTranslatorNew::calaculateSamplingTime(2)
          >5 liqRibTranslatorNew::scanScene__(2,0)
            >6 tJobScriptMgr::scanScene(2,0, htable__, count, returnStatus__)
              >7 liqRibHT::insert(|pointLight1|pointLightShape1,lframe,0,3,0,matrix,,-1)
                >8 liqRibHT::hash(|pointLight1|pointLightShape1,0)
                >8 liqRibHT::find(|pointLight1|pointLightShape1,|pointLight1|pointLightShape1,3)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pointLight1|pointLightShape1,0,3,-1)
                  >9 liqRibNode::parseVectorAttributes(pointLight1,,2)
                  >9 liqRibNode::parseVectorAttributes(pointLight1,,3)
                  >9 liqRibNode::parseVectorAttributes(pointLight1,,4)
                  >9 liqRibNode::findShadingGroup(|pointLight1|pointLightShape1,3)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pointLight1|pointLightShape1,3)
                    >10 liqRibLightData::liqRibLightData(|pointLight1|pointLightShape1)
                      >11 liqRibData::addAdditionalSurfaceParameters(pointLightShape1)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
              >7 liqRibHT::insert(|pointLight2|pointLightShape2,lframe,0,3,1,matrix,,-1)
                >8 liqRibHT::hash(|pointLight2|pointLightShape2,1)
                >8 liqRibHT::find(|pointLight2|pointLightShape2,|pointLight2|pointLightShape2,3)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pointLight2|pointLightShape2,0,3,-1)
                  >9 liqRibNode::parseVectorAttributes(pointLight2,,2)
                  >9 liqRibNode::parseVectorAttributes(pointLight2,,3)
                  >9 liqRibNode::parseVectorAttributes(pointLight2,,4)
                  >9 liqRibNode::findShadingGroup(|pointLight2|pointLightShape2,3)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pointLight2|pointLightShape2,3)
                    >10 liqRibLightData::liqRibLightData(|pointLight2|pointLightShape2)
                      >11 liqRibData::addAdditionalSurfaceParameters(pointLightShape2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 tLocatorMgr::scanScene(2,0,htable__,count__,returnStatus__)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,2,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,2,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,2,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,2,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,2,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,2,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,2,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,2,0,&count)
              >7 liqRibHT::insert(|persp|perspShape,lframe,0,0,2,matrix,,-1)
                >8 liqRibHT::hash(|persp|perspShape,2)
                >8 liqRibHT::find(|persp|perspShape,|persp|perspShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|persp|perspShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(persp,,2)
                  >9 liqRibNode::parseVectorAttributes(persp,,3)
                  >9 liqRibNode::parseVectorAttributes(persp,,4)
                  >9 liqRibNode::findShadingGroup(|persp|perspShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|persp|perspShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,2,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,2,0,&count)
              >7 liqRibHT::insert(|top|topShape,lframe,0,0,3,matrix,,-1)
                >8 liqRibHT::hash(|top|topShape,3)
                >8 liqRibHT::find(|top|topShape,|top|topShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|top|topShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(top,,2)
                  >9 liqRibNode::parseVectorAttributes(top,,3)
                  >9 liqRibNode::parseVectorAttributes(top,,4)
                  >9 liqRibNode::findShadingGroup(|top|topShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|top|topShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,2,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,2,0,&count)
              >7 liqRibHT::insert(|front|frontShape,lframe,0,0,4,matrix,,-1)
                >8 liqRibHT::hash(|front|frontShape,4)
                >8 liqRibHT::find(|front|frontShape,|front|frontShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|front|frontShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(front,,2)
                  >9 liqRibNode::parseVectorAttributes(front,,3)
                  >9 liqRibNode::parseVectorAttributes(front,,4)
                  >9 liqRibNode::findShadingGroup(|front|frontShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|front|frontShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,2,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,2,0,&count)
              >7 liqRibHT::insert(|side|sideShape,lframe,0,0,5,matrix,,-1)
                >8 liqRibHT::hash(|side|sideShape,5)
                >8 liqRibHT::find(|side|sideShape,|side|sideShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|side|sideShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(side,,2)
                  >9 liqRibNode::parseVectorAttributes(side,,3)
                  >9 liqRibNode::parseVectorAttributes(side,,4)
                  >9 liqRibNode::findShadingGroup(|side|sideShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|side|sideShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,2,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,2,0,&count)
              >7 liqRibHT::insert(|pPlane2|pPlaneShape11,lframe,0,0,6,matrix,,-1)
                >8 liqRibHT::hash(|pPlane2|pPlaneShape11,6)
                >8 liqRibHT::find(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pPlane2|pPlaneShape11,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(pPlane2,,2)
                  >9 liqRibNode::parseVectorAttributes(pPlane2,,3)
                  >9 liqRibNode::parseVectorAttributes(pPlane2,,4)
                  >9 liqRibNode::findShadingGroup(|pPlane2|pPlaneShape11,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getColor(&shader,&color)
                  >9 liqRibNode::getOpacity(&shader,&color)
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pPlane2|pPlaneShape11,0)
                    >10 liqRibMeshData::liqRibMeshData(|pPlane2|pPlaneShape11)
                      >11 liqRibData::addAdditionalSurfaceParameters(pPlaneShape11)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,2,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,2,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,2,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,2,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,2,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,2,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,2,0,&count)
              >7 liqRibHT::insert(|camera1_group|camera1|cameraShape1,lframe,0,0,7,matrix,,-1)
                >8 liqRibHT::hash(|camera1_group|camera1|cameraShape1,7)
                >8 liqRibHT::find(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|camera1_group|camera1|cameraShape1,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(camera1,,2)
                  >9 liqRibNode::parseVectorAttributes(camera1,,3)
                  >9 liqRibNode::parseVectorAttributes(camera1,,4)
                  >9 liqRibNode::findShadingGroup(|camera1_group|camera1|cameraShape1,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|camera1_group|camera1|cameraShape1,0)
                    >10 liqRibCameraData::liqRibCameraData(|camera1_group|camera1|cameraShape1)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,2,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,2,0,&count)
              >7 liqRibHT::insert(|camera1_group|camera1_aim|camera1_aimShape,lframe,0,0,8,matrix,,-1)
                >8 liqRibHT::hash(|camera1_group|camera1_aim|camera1_aimShape,8)
                >8 liqRibHT::find(|camera1_group|camera1_aim|camera1_aimShape,|camera1_group|camera1_aim|camera1_aimShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|camera1_group|camera1_aim|camera1_aimShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(camera1_aim,,2)
                  >9 liqRibNode::parseVectorAttributes(camera1_aim,,3)
                  >9 liqRibNode::parseVectorAttributes(camera1_aim,,4)
                  >9 liqRibNode::findShadingGroup(|camera1_group|camera1_aim|camera1_aimShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|camera1_group|camera1_aim|camera1_aimShape,0)
            >6 liqRibTranslatorNew::dealwithParticleInstancedObjects(0,2,9)
            >6 liqRibTranslatorNew::getCameraData(iter__,0)
              >7 liqRibTranslator::getCameraInfo(|camera1_group|camera1|cameraShape1,)
                >8 liqRibTranslator::portFieldOfView(224,150,&horizontal,&vertical,&fnCamera)
                  >9 liqRibTranslator::computeViewingFrustum(1.49333,,&left,&right,&bottom,&top,|camera1_group|camera1|cameraShape1)
              >7 liqRibTranslator::getCameraFilmOffset(|camera1_group|camera1|cameraShape1,)
              >7 liqRibTranslator::getCameraTransform(|camera1_group|camera1|cameraShape1,)
          >5 liqRibTranslatorNew::doTextures(size=0)
            >6 Renderer::frameEpilogue(txtList_.size=0)
          >5 liqRibTranslatorNew::doShadows(size=0)
            >6 Renderer::doShadows(shadowList_.size=0)
          >5 Renderer::setRenderScriptFormatAndCompress(0,0)
          >5 Renderer::isHeroPassReady(cameraShape1)
          >5 Renderer::HeroPassBegin(cameraShape1)
          >5 tHeroRibWriterMgr::write(liqglo___,cameraShape1,2,0)
            >6 liqRibTranslatorNew::ribPrologue__(cameraShape1)
              >7 Renderer::ribPrologue_begin(cameraShape1)
                >8 Renderer::dummyPhongShader()
              >7 Renderer::ribPrologue_comment(2.3.5 (buildtime=20:51:12.30),R:/MyDocuments/maya/projects/default/checker_anim,yaoyansi,time)
              >7 Renderer::ribPrologue_options(cameraShape1)
            >6 liqRibTranslatorNew::framePrologue__(2,cameraShape1)
              >7 Renderer::framePrologue(2,cameraShape1)
            >6 ShaderMgr::exportShaderGraph()
              >7 ConvertShadingNetwork::exportShaderGraph()
                >8 ConvertShadingNetwork::beforeExport()
                >8 ConvertShadingNetwork::__export()
                  >9 ConvertShadingNetwork::canShadingGroupExported(phong1SG)
                  >9 Renderer::getValidShaderPlugsInShadingGroup()
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,surfaceShader)
                    >10 ConvertShadingNetwork::canShaderExported(phong1)
                    >10 ConvertShadingNetwork::exportShaderBegin(phong1)
                    >10 ConvertShadingNetwork::convertShadingNetworkToRSL(phong1,surfaceShader)
                      >11 Visitor::initShaderData(phong1,surfaceShader)
                      >11 ConvertShadingNetwork::getUpstreamConvertibleNodes(phong1, nodes, numConnections)
                        >12 ConvertShadingNetwork::nodeIsConvertible(phong1)
                          >13 ShaderMgr::hasShaderType(phong)
                        >12 ShaderMgr::getValidConnection(phong1)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.color)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraX)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraX)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraY)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraY)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraZ)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraZ)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                          >13 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                            >14 ShaderMgr::hasShaderType(shadingEngine)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                        >12 ConvertShadingNetwork::getUpstreamConvertibleNodes(checker1, nodes, numConnections)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                          >13 ShaderMgr::getValidConnection(checker1)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1R)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1R)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1G)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1G)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1B)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1B)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2R)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2R)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2G)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2G)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2B)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2B)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.uCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.uCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.vCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.vCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                              >15 ShaderMgr::hasShaderType(place2dTexture)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                            >14 ConvertShadingNetwork::nodeIsConvertible(phong1)
                              >15 ShaderMgr::hasShaderType(phong)
                          >13 ConvertShadingNetwork::getUpstreamConvertibleNodes(place2dTexture1, nodes, numConnections)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                              >15 ShaderMgr::hasShaderType(place2dTexture)
                            >14 ShaderMgr::getValidConnection(place2dTexture1)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uCoord)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uCoord)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.vCoord)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.vCoord)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverage)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverage)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseUV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseUV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offset)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offset)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                              >15 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                                >16 ShaderMgr::hasShaderType(animCurveTU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                              >15 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                                >16 ShaderMgr::hasShaderType(animCurveTU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatUV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatUV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrame)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrame)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                              >15 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                >16 ShaderMgr::hasShaderType(checker)
                      >11 Visitor::preOutput(phong1)
                      >11 Visitor::outputBegin(phong1)
                      >11 ConvertShadingNetwork::traverseGraphAndOutputNodeFunctions( nodes, numConnections)
                        >12 Visitor::outputUpstreamShader(place2dTexture1)
                          >13 ShaderOutputVisitor::_outputUpstreamShader(place2dTexture1,place2dTexture)
                            >14 Visitor::visitPlace2dTexture(place2dTexture1)
                              >15 OutputHelper::beginRSL(maya_place2dTexture,place2dTexture1)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.uvCoord)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.coverageU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.coverageV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.mirrorU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.mirrorV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.noiseU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.noiseV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.offsetU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.offsetV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.repeatU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                                    >18 ShaderMgr::hasShaderType(animCurveTU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.repeatV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                                    >18 ShaderMgr::hasShaderType(animCurveTU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.rotateFrame)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.rotateUV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.stagger)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.translateFrameU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.translateFrameV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.wrapU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.wrapV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.outUV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                    >18 ShaderMgr::hasShaderType(checker)
                              >15 OutputHelper::endRSL()
                        >12 ShaderMgr::getValidConnection(place2dTexture1)
                        >12 ConvertShadingNetwork::decrementDownstreamConnections(place2dTexture1, nodes, numConnections, validConnections)
                        >12 ConvertShadingNetwork::getNodeVariables(place2dTexture1, validConnections,  inputSrc, inputDes, outputSrc)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.vCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.vCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverage)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverage)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offset)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offset)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                              >15 ShaderMgr::hasShaderType(animCurveTU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                              >15 ShaderMgr::hasShaderType(animCurveTU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrame)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrame)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                            >14 ConvertShadingNetwork::nodeIsConvertible(checker1)
                              >15 ShaderMgr::hasShaderType(checker)
                          >13 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture1,outUV,place2dTexture1.outUV, outputVars)
                            >14 Visitor::addShaderMethodVariavles(place2dTexture1,outUV,float,2,)
                        >12 Visitor::addShaderMethodBody(place2dTexture1,,,place2dTexture1.outUV124)
                        >12 Visitor::outputUpstreamShader(checker1)
                          >13 ShaderOutputVisitor::_outputUpstreamShader(checker1,checker)
                            >14 Visitor::visitChecker(checker1)
                              >15 OutputHelper::beginRSL(maya_checker,checker1)
                              >15 ShaderMgr::convertibleConnection(checker1.alphaGain)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                              >15 ShaderMgr::convertibleConnection(checker1.alphaIsLuminance)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                              >15 ShaderMgr::convertibleConnection(checker1.alphaOffset)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                              >15 ShaderMgr::convertibleConnection(checker1.color1)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                              >15 ShaderMgr::convertibleConnection(checker1.color2)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                              >15 ShaderMgr::convertibleConnection(checker1.colorGain)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                              >15 ShaderMgr::convertibleConnection(checker1.colorOffset)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                              >15 ShaderMgr::convertibleConnection(checker1.contrast)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                              >15 ShaderMgr::convertibleConnection(checker1.defaultColor)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                              >15 ShaderMgr::convertibleConnection(checker1.filter)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                              >15 ShaderMgr::convertibleConnection(checker1.filterOffset)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                              >15 ShaderMgr::convertibleConnection(checker1.invert)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                              >15 ShaderMgr::convertibleConnection(checker1.uvCoord)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                                    >18 ShaderMgr::hasShaderType(place2dTexture)
                              >15 ShaderMgr::convertibleConnection(checker1.outAlpha)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                              >15 ShaderMgr::convertibleConnection(checker1.outColor)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(phong1)
                                    >18 ShaderMgr::hasShaderType(phong)
                              >15 OutputHelper::endRSL()
                        >12 ShaderMgr::getValidConnection(checker1)
                        >12 ConvertShadingNetwork::decrementDownstreamConnections(checker1, nodes, numConnections, validConnections)
                        >12 ConvertShadingNetwork::getNodeVariables(checker1, validConnections,  inputSrc, inputDes, outputSrc)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1R)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1R)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1G)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1G)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1B)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1B)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2R)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2R)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2G)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2G)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2B)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2B)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.uCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.uCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.vCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.vCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                              >15 ShaderMgr::hasShaderType(place2dTexture)
                          >13 ConvertShadingNetwork::addNodeInputVariable(checker1.uvCoord, inputSrc, inputDes)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                              >15 ShaderMgr::hasShaderType(place2dTexture)
                            >14 ShaderMgr::getValidConnection(place2dTexture1)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                            >14 ConvertShadingNetwork::nodeIsConvertible(phong1)
                              >15 ShaderMgr::hasShaderType(phong)
                          >13 ConvertShadingNetwork::addNodeOutputVariable(checker1,outColor,checker1.outColor, outputVars)
                            >14 Visitor::addShaderMethodVariavles(checker1,outColor,color,-1,)
                        >12 Visitor::addShaderMethodBody(checker1,place2dTexture1.outUV124,checker1.uvCoord124,checker1.outColor124)
                        >12 Visitor::outputUpstreamShader(phong1)
                          >13 ShaderOutputVisitor::_outputUpstreamShader(phong1,phong)
                            >14 Visitor::visitPhong(phong1)
                              >15 OutputHelper::beginRSL(maya_phong,phong1)
                              >15 ShaderMgr::convertibleConnection(phong1.ambientColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                              >15 ShaderMgr::convertibleConnection(phong1.color)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.color)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                    >18 ShaderMgr::hasShaderType(checker)
                              >15 ShaderMgr::convertibleConnection(phong1.cosinePower)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                              >15 ShaderMgr::convertibleConnection(phong1.diffuse)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                              >15 ShaderMgr::convertibleConnection(phong1.incandescence)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                              >15 ShaderMgr::convertibleConnection(phong1.matteOpacityMode)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                              >15 ShaderMgr::convertibleConnection(phong1.matteOpacity)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                              >15 OutputHelper::add_liq_UserDefinedNormal(phong1)
                              >15 ShaderMgr::convertibleConnection(phong1.normalCamera)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                              >15 ShaderMgr::convertibleConnection(phong1.specularColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                              >15 ShaderMgr::convertibleConnection(phong1.reflectivity)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                              >15 ShaderMgr::convertibleConnection(phong1.reflectedColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                              >15 ShaderMgr::convertibleConnection(phong1.reflectionLimit)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                              >15 ShaderMgr::convertibleConnection(phong1.translucence)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                              >15 ShaderMgr::convertibleConnection(phong1.translucenceDepth)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                              >15 ShaderMgr::convertibleConnection(phong1.translucenceFocus)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                              >15 ShaderMgr::convertibleConnection(phong1.transparency)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                              >15 ShaderMgr::convertibleConnection(phong1.outColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                                    >18 ShaderMgr::hasShaderType(shadingEngine)
                              >15 ShaderMgr::convertibleConnection(phong1.outTransparency)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                              >15 OutputHelper::endRSL()
                        >12 ShaderMgr::getValidConnection(phong1)
                        >12 ConvertShadingNetwork::decrementDownstreamConnections(phong1, nodes, numConnections, validConnections)
                        >12 ConvertShadingNetwork::getNodeVariables(phong1, validConnections,  inputSrc, inputDes, outputSrc)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.colorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.colorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.colorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.colorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.colorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.colorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.color)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                            >14 ConvertShadingNetwork::nodeIsConvertible(checker1)
                              >15 ShaderMgr::hasShaderType(checker)
                          >13 ConvertShadingNetwork::addNodeInputVariable(phong1.color, inputSrc, inputDes)
                            >14 ConvertShadingNetwork::nodeIsConvertible(checker1)
                              >15 ShaderMgr::hasShaderType(checker)
                            >14 ShaderMgr::getValidConnection(checker1)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.transparencyR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.transparencyG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.transparencyB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraX)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraX)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraY)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraY)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraZ)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraZ)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.specularColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.specularColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.specularColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                            >14 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                              >15 ShaderMgr::hasShaderType(shadingEngine)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                        >12 Visitor::addShaderMethodBody(phong1,checker1.outColor124,phong1.color124,)
                      >11 ConvertShadingNetwork::outputShaderMethod()
                        >12 Visitor::outputShaderMethod()
                      >11 Visitor::outputEnd()
                      >11 Visitor::postOutput()
                    >10 ConvertShadingNetwork::exportShaderEnd(phong1)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,displacementShader)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,volumeShader)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,liqShadowShader)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,liqEnvironmentShader)
                  >9 ConvertShadingNetwork::exportShadingGroupBegin(phong1SG)
                  >9 ConvertShadingNetwork::outputShadingGroup(phong1SG)
                    >10 Visitor::outputShadingGroup(phong1SG)
                  >9 ConvertShadingNetwork::exportShadingGroupEnd(phong1SG)
                >8  ConvertShadingNetwork::afterExport()
            >6 liqRibTranslatorNew::worldPrologue__(cameraShape1)
              >7 Renderer::worldPrologue(cameraShape1)
            >6 liqRibTranslatorNew::lightBlock__(cameraShape1)
              >7 Renderer::writeLight_pre(|pointLight1|pointLightShape1,cameraShape1)
              >7 liqRibObj::writeObject(,cameraShape1,0)
                >8 liqRibLightData::write(,job=cameraShape1,0)
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::write(|pointLight1|pointLightShape1,,cameraShape1,ref=0)
                      >11 liqRibData::getFullPathName()
                    >10 er_writeLightData.cpp::_write(|pointLight1|pointLightShape1,cameraShape1,...)
                      >11 Renderer::exportPointLight(pointlight,pointLightShape1,...)
                        >12 addLightGroupForLight(|pointLight1|pointLightShape1)
              >7 Renderer::writeLight_post(|pointLight1|pointLightShape1,cameraShape1)
              >7 Renderer::writeLight_pre(|pointLight2|pointLightShape2,cameraShape1)
              >7 liqRibObj::writeObject(,cameraShape1,0)
                >8 liqRibLightData::write(,job=cameraShape1,0)
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::write(|pointLight2|pointLightShape2,,cameraShape1,ref=0)
                      >11 liqRibData::getFullPathName()
                    >10 er_writeLightData.cpp::_write(|pointLight2|pointLightShape2,cameraShape1,...)
                      >11 Renderer::exportPointLight(pointlight,pointLightShape2,...)
                        >12 addLightGroupForLight(|pointLight2|pointLightShape2)
              >7 Renderer::writeLight_post(|pointLight2|pointLightShape2,cameraShape1)
            >6 liqRibTranslatorNew::coordSysBlock__(cameraShape1)
              >7 Renderer::coordSysBlock__(cameraShape1)
            >6 liqRibTranslatorNew::objectBlock__(cameraShape1)
              >7 liqRibTranslatorNew::objectBlock_data(cameraShape1)
                >8 liqRibTranslatorNew::getShadowSetObject(cameraShape1)
                >8 liqRibTranslatorNew::oneObjectBlock_data(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::exportOneObject_data(|pPlane2|pPlaneShape11,cameraShape1)
                    >10 Renderer::_writeObject(|pPlane2|pPlaneShape11,cameraShape1,0,0,0)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.2.rib,cameraShape1,0)
                        >12 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.2.rib,job=cameraShape1,0)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|pPlane2|pPlaneShape11,R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.2.rib,cameraShape1,ref=0)
                              >15 liqRibData::getFullPathName()
                            >14 er_writeMeshData.cpp::_write1(|pPlane2|pPlaneShape11,cameraShape1)
                              >15 liqRibHT::find(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                              >15 _exportVertexFromNodePlug(|pPlane2|pPlaneShape11,0)
                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqRibData::getFullPathName()
                >8 liqRibTranslatorNew::oneObjectBlock_data(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 Renderer::exportOneObject_data(|camera1_group|camera1|cameraShape1,cameraShape1)
                    >10 Renderer::_writeObject(|camera1_group|camera1|cameraShape1,cameraShape1,0,0,0)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_camera1_group_camera1_cameraShape1.2.rib,cameraShape1,0)
                        >12 liqRibCameraData::write(R:/MyDocuments/maya/projects/default/rib/_camera1_group_camera1_cameraShape1.2.rib,job=cameraShape1,0)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|camera1_group|camera1|cameraShape1,R:/MyDocuments/maya/projects/default/rib/_camera1_group_camera1_cameraShape1.2.rib,cameraShape1,ref=0)
                              >15 liqRibData::getFullPathName()
                            >14 er_writeCameraData.cpp::_write_camera(|camera1_group|camera1|cameraShape1,cameraShape1)
                              >15 liqRibHT::find(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,0)
                              >15 Renderer::gatherCameraShaders(cameraShaders.size=0,|camera1_group|camera1|cameraShape1,liqEnvironmentShader)
                              >15 Renderer::cameraOutput(cameraShape1)
              >7 liqRibTranslatorNew::objectBlock_reference(cameraShape1)
                >8 Renderer::objectBlock_reference_begin()
                >8 liqRibTranslatorNew::preGeometryMel()
                  >9 Renderer::preGeometryMel()
                >8 liqRibTranslatorNew::getShadowSetObject(cameraShape1)
                >8 liqRibTranslatorNew::oneObjectBlock_reference(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_begin(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_block0(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 liqRibTranslatorNew::tRiIlluminate(cameraShape1,|pPlane2|pPlaneShape11)
                    >10 Renderer::exportLightLinks(cameraShape1,|pPlane2|pPlaneShape11,lightedByWhichLightShapes.size=2)
                  >9 liqRibTranslatorNew::checkSurfaceShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                  >9 liqRibTranslatorNew::checkDisplacementShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                  >9 liqRibTranslatorNew::checkVolumeShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                  >9 Renderer::oneObjectBlock_reference_attribute_block1(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 liqRibTranslatorNew::writeShader_(1,|pPlane2|pPlaneShape11,v=0,s=0,c=0,,|pPlane2|pPlaneShape11,cameraShape1)
                    >10 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                  >9 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|pPlane2|pPlaneShape11)
                  >9 Renderer::exportOneObject_reference(|pPlane2|pPlaneShape11,cameraShape1)
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::oneObjectBlock_reference_attribute_end(|pPlane2|pPlaneShape11,cameraShape1)
                >8 liqRibTranslatorNew::oneObjectBlock_reference(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_begin(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_block0(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 liqRibTranslatorNew::tRiIlluminate(cameraShape1,|camera1_group|camera1|cameraShape1)
                    >10 Renderer::exportLightLinks(cameraShape1,|camera1_group|camera1|cameraShape1,lightedByWhichLightShapes.size=0)
                  >9 liqRibTranslatorNew::checkSurfaceShader(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,,,)
                  >9 liqRibTranslatorNew::checkDisplacementShader(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,,,)
                  >9 liqRibTranslatorNew::checkVolumeShader(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,,,)
                  >9 Renderer::oneObjectBlock_reference_attribute_block1(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 liqRibTranslatorNew::writeShader_(1,|camera1_group|camera1|cameraShape1,v=0,s=0,c=0,,|camera1_group|camera1|cameraShape1,cameraShape1)
                    >10 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,0)
                  >9 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|camera1_group|camera1|cameraShape1)
                  >9 Renderer::exportOneObject_reference(|camera1_group|camera1|cameraShape1,cameraShape1)
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::oneObjectBlock_reference_attribute_end(|camera1_group|camera1|cameraShape1,cameraShape1)
                >8 Renderer::objectBlock_reference_end()
            >6 liqRibTranslatorNew::worldEpilogue__()
              >7 liqRibTranslator::worldEpilogue()
                >8 Renderer::worldEpilogue()
            >6 liqRibTranslatorNew::frameEpilogue__(2)
              >7 Renderer::frameEpilogue(2)
            >6 liqRibTranslatorNew::ribEpilogue__(cameraShape1)
              >7 Renderer::ribPrologue_end(cameraShape1)
                >8 Renderer::cookInstanceGroup()
                >8 Renderer::render()
                  >9 Renderer::renderPreview(200,150,0,0,cameraShape1,cameraShape1,cameraShape1_option)
                    >10 Renderer::_renderPreview(200,150,0,0,cameraShape1,|camera1_group|camera1,cameraShape1_option)
          >5 Renderer::HeroPassEnd(cameraShape1)
        >4 liqRenderScript::addJob(job.title=checker_animFrame1,0)
          >5 liqRenderScript::popNextJobID()
        >4 tFrameScriptJobMgr::setCommonParameters(checker_animFrame2)
        >4 liqRibTranslatorNew::processOneFrame(2, liqglo__)
          >5 liqRibTranslatorNew::buildJobs__()
            >6 liqRibTranslatorNew::buildShadowJobs__()
              >7 tJobScriptMgr::buildShadowJob(thisJob___, 0)
              >7 tJobScriptMgr::buildShadowCameraJob(thisJob___, 0)
            >6 tRibCameraMgr::gatherDataForJob(liqglo___, ,jobList__,0,1)
            >6 liqRibTranslator::generateFileName(4,cameraShape1)
            >6 liqRibTranslator::generateFileName(5,cameraShape1)
              >7 liqRibTranslator::generateImageName(, job(cameraShape1)), 
          >5 liqRibTranslatorNew::calaculateSamplingTime(3)
          >5 liqRibTranslatorNew::scanScene__(3,0)
            >6 tJobScriptMgr::scanScene(3,0, htable__, count, returnStatus__)
              >7 liqRibHT::insert(|pointLight1|pointLightShape1,lframe,0,3,0,matrix,,-1)
                >8 liqRibHT::hash(|pointLight1|pointLightShape1,0)
                >8 liqRibHT::find(|pointLight1|pointLightShape1,|pointLight1|pointLightShape1,3)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pointLight1|pointLightShape1,0,3,-1)
                  >9 liqRibNode::parseVectorAttributes(pointLight1,,2)
                  >9 liqRibNode::parseVectorAttributes(pointLight1,,3)
                  >9 liqRibNode::parseVectorAttributes(pointLight1,,4)
                  >9 liqRibNode::findShadingGroup(|pointLight1|pointLightShape1,3)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pointLight1|pointLightShape1,3)
                    >10 liqRibLightData::liqRibLightData(|pointLight1|pointLightShape1)
                      >11 liqRibData::addAdditionalSurfaceParameters(pointLightShape1)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
              >7 liqRibHT::insert(|pointLight2|pointLightShape2,lframe,0,3,1,matrix,,-1)
                >8 liqRibHT::hash(|pointLight2|pointLightShape2,1)
                >8 liqRibHT::find(|pointLight2|pointLightShape2,|pointLight2|pointLightShape2,3)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pointLight2|pointLightShape2,0,3,-1)
                  >9 liqRibNode::parseVectorAttributes(pointLight2,,2)
                  >9 liqRibNode::parseVectorAttributes(pointLight2,,3)
                  >9 liqRibNode::parseVectorAttributes(pointLight2,,4)
                  >9 liqRibNode::findShadingGroup(|pointLight2|pointLightShape2,3)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pointLight2|pointLightShape2,3)
                    >10 liqRibLightData::liqRibLightData(|pointLight2|pointLightShape2)
                      >11 liqRibData::addAdditionalSurfaceParameters(pointLightShape2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 tLocatorMgr::scanScene(3,0,htable__,count__,returnStatus__)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,3,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,3,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,3,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,3,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,3,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,3,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,3,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,3,0,&count)
              >7 liqRibHT::insert(|persp|perspShape,lframe,0,0,2,matrix,,-1)
                >8 liqRibHT::hash(|persp|perspShape,2)
                >8 liqRibHT::find(|persp|perspShape,|persp|perspShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|persp|perspShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(persp,,2)
                  >9 liqRibNode::parseVectorAttributes(persp,,3)
                  >9 liqRibNode::parseVectorAttributes(persp,,4)
                  >9 liqRibNode::findShadingGroup(|persp|perspShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|persp|perspShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,3,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,3,0,&count)
              >7 liqRibHT::insert(|top|topShape,lframe,0,0,3,matrix,,-1)
                >8 liqRibHT::hash(|top|topShape,3)
                >8 liqRibHT::find(|top|topShape,|top|topShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|top|topShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(top,,2)
                  >9 liqRibNode::parseVectorAttributes(top,,3)
                  >9 liqRibNode::parseVectorAttributes(top,,4)
                  >9 liqRibNode::findShadingGroup(|top|topShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|top|topShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,3,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,3,0,&count)
              >7 liqRibHT::insert(|front|frontShape,lframe,0,0,4,matrix,,-1)
                >8 liqRibHT::hash(|front|frontShape,4)
                >8 liqRibHT::find(|front|frontShape,|front|frontShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|front|frontShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(front,,2)
                  >9 liqRibNode::parseVectorAttributes(front,,3)
                  >9 liqRibNode::parseVectorAttributes(front,,4)
                  >9 liqRibNode::findShadingGroup(|front|frontShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|front|frontShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,3,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,3,0,&count)
              >7 liqRibHT::insert(|side|sideShape,lframe,0,0,5,matrix,,-1)
                >8 liqRibHT::hash(|side|sideShape,5)
                >8 liqRibHT::find(|side|sideShape,|side|sideShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|side|sideShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(side,,2)
                  >9 liqRibNode::parseVectorAttributes(side,,3)
                  >9 liqRibNode::parseVectorAttributes(side,,4)
                  >9 liqRibNode::findShadingGroup(|side|sideShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|side|sideShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,3,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,3,0,&count)
              >7 liqRibHT::insert(|pPlane2|pPlaneShape11,lframe,0,0,6,matrix,,-1)
                >8 liqRibHT::hash(|pPlane2|pPlaneShape11,6)
                >8 liqRibHT::find(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pPlane2|pPlaneShape11,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(pPlane2,,2)
                  >9 liqRibNode::parseVectorAttributes(pPlane2,,3)
                  >9 liqRibNode::parseVectorAttributes(pPlane2,,4)
                  >9 liqRibNode::findShadingGroup(|pPlane2|pPlaneShape11,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getColor(&shader,&color)
                  >9 liqRibNode::getOpacity(&shader,&color)
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pPlane2|pPlaneShape11,0)
                    >10 liqRibMeshData::liqRibMeshData(|pPlane2|pPlaneShape11)
                      >11 liqRibData::addAdditionalSurfaceParameters(pPlaneShape11)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,3,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,3,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,3,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,3,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,3,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,3,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,3,0,&count)
              >7 liqRibHT::insert(|camera1_group|camera1|cameraShape1,lframe,0,0,7,matrix,,-1)
                >8 liqRibHT::hash(|camera1_group|camera1|cameraShape1,7)
                >8 liqRibHT::find(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|camera1_group|camera1|cameraShape1,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(camera1,,2)
                  >9 liqRibNode::parseVectorAttributes(camera1,,3)
                  >9 liqRibNode::parseVectorAttributes(camera1,,4)
                  >9 liqRibNode::findShadingGroup(|camera1_group|camera1|cameraShape1,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|camera1_group|camera1|cameraShape1,0)
                    >10 liqRibCameraData::liqRibCameraData(|camera1_group|camera1|cameraShape1)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,3,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,3,0,&count)
              >7 liqRibHT::insert(|camera1_group|camera1_aim|camera1_aimShape,lframe,0,0,8,matrix,,-1)
                >8 liqRibHT::hash(|camera1_group|camera1_aim|camera1_aimShape,8)
                >8 liqRibHT::find(|camera1_group|camera1_aim|camera1_aimShape,|camera1_group|camera1_aim|camera1_aimShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|camera1_group|camera1_aim|camera1_aimShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(camera1_aim,,2)
                  >9 liqRibNode::parseVectorAttributes(camera1_aim,,3)
                  >9 liqRibNode::parseVectorAttributes(camera1_aim,,4)
                  >9 liqRibNode::findShadingGroup(|camera1_group|camera1_aim|camera1_aimShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|camera1_group|camera1_aim|camera1_aimShape,0)
            >6 liqRibTranslatorNew::dealwithParticleInstancedObjects(0,3,9)
            >6 liqRibTranslatorNew::getCameraData(iter__,0)
              >7 liqRibTranslator::getCameraInfo(|camera1_group|camera1|cameraShape1,)
                >8 liqRibTranslator::portFieldOfView(224,150,&horizontal,&vertical,&fnCamera)
                  >9 liqRibTranslator::computeViewingFrustum(1.49333,,&left,&right,&bottom,&top,|camera1_group|camera1|cameraShape1)
              >7 liqRibTranslator::getCameraFilmOffset(|camera1_group|camera1|cameraShape1,)
              >7 liqRibTranslator::getCameraTransform(|camera1_group|camera1|cameraShape1,)
          >5 liqRibTranslatorNew::doTextures(size=0)
            >6 Renderer::frameEpilogue(txtList_.size=0)
          >5 liqRibTranslatorNew::doShadows(size=0)
            >6 Renderer::doShadows(shadowList_.size=0)
          >5 Renderer::setRenderScriptFormatAndCompress(0,0)
          >5 Renderer::isHeroPassReady(cameraShape1)
          >5 Renderer::HeroPassBegin(cameraShape1)
          >5 tHeroRibWriterMgr::write(liqglo___,cameraShape1,3,0)
            >6 liqRibTranslatorNew::ribPrologue__(cameraShape1)
              >7 Renderer::ribPrologue_begin(cameraShape1)
                >8 Renderer::dummyPhongShader()
              >7 Renderer::ribPrologue_comment(2.3.5 (buildtime=20:51:12.30),R:/MyDocuments/maya/projects/default/checker_anim,yaoyansi,time)
              >7 Renderer::ribPrologue_options(cameraShape1)
            >6 liqRibTranslatorNew::framePrologue__(3,cameraShape1)
              >7 Renderer::framePrologue(3,cameraShape1)
            >6 ShaderMgr::exportShaderGraph()
              >7 ConvertShadingNetwork::exportShaderGraph()
                >8 ConvertShadingNetwork::beforeExport()
                >8 ConvertShadingNetwork::__export()
                  >9 ConvertShadingNetwork::canShadingGroupExported(phong1SG)
                  >9 Renderer::getValidShaderPlugsInShadingGroup()
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,surfaceShader)
                    >10 ConvertShadingNetwork::canShaderExported(phong1)
                    >10 ConvertShadingNetwork::exportShaderBegin(phong1)
                    >10 ConvertShadingNetwork::convertShadingNetworkToRSL(phong1,surfaceShader)
                      >11 Visitor::initShaderData(phong1,surfaceShader)
                      >11 ConvertShadingNetwork::getUpstreamConvertibleNodes(phong1, nodes, numConnections)
                        >12 ConvertShadingNetwork::nodeIsConvertible(phong1)
                          >13 ShaderMgr::hasShaderType(phong)
                        >12 ShaderMgr::getValidConnection(phong1)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.color)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraX)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraX)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraY)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraY)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraZ)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraZ)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                          >13 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                            >14 ShaderMgr::hasShaderType(shadingEngine)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                        >12 ConvertShadingNetwork::getUpstreamConvertibleNodes(checker1, nodes, numConnections)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                          >13 ShaderMgr::getValidConnection(checker1)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1R)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1R)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1G)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1G)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1B)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1B)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2R)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2R)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2G)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2G)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2B)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2B)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.uCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.uCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.vCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.vCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                              >15 ShaderMgr::hasShaderType(place2dTexture)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                            >14 ConvertShadingNetwork::nodeIsConvertible(phong1)
                              >15 ShaderMgr::hasShaderType(phong)
                          >13 ConvertShadingNetwork::getUpstreamConvertibleNodes(place2dTexture1, nodes, numConnections)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                              >15 ShaderMgr::hasShaderType(place2dTexture)
                            >14 ShaderMgr::getValidConnection(place2dTexture1)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uCoord)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uCoord)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.vCoord)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.vCoord)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverage)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverage)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseUV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseUV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offset)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offset)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                              >15 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                                >16 ShaderMgr::hasShaderType(animCurveTU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                              >15 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                                >16 ShaderMgr::hasShaderType(animCurveTU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatUV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatUV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrame)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrame)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                              >15 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                >16 ShaderMgr::hasShaderType(checker)
                      >11 Visitor::preOutput(phong1)
                      >11 Visitor::outputBegin(phong1)
                      >11 ConvertShadingNetwork::traverseGraphAndOutputNodeFunctions( nodes, numConnections)
                        >12 Visitor::outputUpstreamShader(place2dTexture1)
                          >13 ShaderOutputVisitor::_outputUpstreamShader(place2dTexture1,place2dTexture)
                            >14 Visitor::visitPlace2dTexture(place2dTexture1)
                              >15 OutputHelper::beginRSL(maya_place2dTexture,place2dTexture1)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.uvCoord)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.coverageU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.coverageV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.mirrorU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.mirrorV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.noiseU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.noiseV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.offsetU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.offsetV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.repeatU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                                    >18 ShaderMgr::hasShaderType(animCurveTU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.repeatV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                                    >18 ShaderMgr::hasShaderType(animCurveTU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.rotateFrame)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.rotateUV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.stagger)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.translateFrameU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.translateFrameV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.wrapU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.wrapV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.outUV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                    >18 ShaderMgr::hasShaderType(checker)
                              >15 OutputHelper::endRSL()
                        >12 ShaderMgr::getValidConnection(place2dTexture1)
                        >12 ConvertShadingNetwork::decrementDownstreamConnections(place2dTexture1, nodes, numConnections, validConnections)
                        >12 ConvertShadingNetwork::getNodeVariables(place2dTexture1, validConnections,  inputSrc, inputDes, outputSrc)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.vCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.vCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverage)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverage)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offset)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offset)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                              >15 ShaderMgr::hasShaderType(animCurveTU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                              >15 ShaderMgr::hasShaderType(animCurveTU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrame)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrame)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                            >14 ConvertShadingNetwork::nodeIsConvertible(checker1)
                              >15 ShaderMgr::hasShaderType(checker)
                          >13 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture1,outUV,place2dTexture1.outUV, outputVars)
                            >14 Visitor::addShaderMethodVariavles(place2dTexture1,outUV,float,2,)
                        >12 Visitor::addShaderMethodBody(place2dTexture1,,,place2dTexture1.outUV124)
                        >12 Visitor::outputUpstreamShader(checker1)
                          >13 ShaderOutputVisitor::_outputUpstreamShader(checker1,checker)
                            >14 Visitor::visitChecker(checker1)
                              >15 OutputHelper::beginRSL(maya_checker,checker1)
                              >15 ShaderMgr::convertibleConnection(checker1.alphaGain)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                              >15 ShaderMgr::convertibleConnection(checker1.alphaIsLuminance)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                              >15 ShaderMgr::convertibleConnection(checker1.alphaOffset)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                              >15 ShaderMgr::convertibleConnection(checker1.color1)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                              >15 ShaderMgr::convertibleConnection(checker1.color2)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                              >15 ShaderMgr::convertibleConnection(checker1.colorGain)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                              >15 ShaderMgr::convertibleConnection(checker1.colorOffset)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                              >15 ShaderMgr::convertibleConnection(checker1.contrast)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                              >15 ShaderMgr::convertibleConnection(checker1.defaultColor)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                              >15 ShaderMgr::convertibleConnection(checker1.filter)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                              >15 ShaderMgr::convertibleConnection(checker1.filterOffset)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                              >15 ShaderMgr::convertibleConnection(checker1.invert)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                              >15 ShaderMgr::convertibleConnection(checker1.uvCoord)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                                    >18 ShaderMgr::hasShaderType(place2dTexture)
                              >15 ShaderMgr::convertibleConnection(checker1.outAlpha)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                              >15 ShaderMgr::convertibleConnection(checker1.outColor)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(phong1)
                                    >18 ShaderMgr::hasShaderType(phong)
                              >15 OutputHelper::endRSL()
                        >12 ShaderMgr::getValidConnection(checker1)
                        >12 ConvertShadingNetwork::decrementDownstreamConnections(checker1, nodes, numConnections, validConnections)
                        >12 ConvertShadingNetwork::getNodeVariables(checker1, validConnections,  inputSrc, inputDes, outputSrc)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1R)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1R)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1G)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1G)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1B)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1B)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2R)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2R)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2G)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2G)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2B)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2B)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.uCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.uCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.vCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.vCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                              >15 ShaderMgr::hasShaderType(place2dTexture)
                          >13 ConvertShadingNetwork::addNodeInputVariable(checker1.uvCoord, inputSrc, inputDes)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                              >15 ShaderMgr::hasShaderType(place2dTexture)
                            >14 ShaderMgr::getValidConnection(place2dTexture1)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                            >14 ConvertShadingNetwork::nodeIsConvertible(phong1)
                              >15 ShaderMgr::hasShaderType(phong)
                          >13 ConvertShadingNetwork::addNodeOutputVariable(checker1,outColor,checker1.outColor, outputVars)
                            >14 Visitor::addShaderMethodVariavles(checker1,outColor,color,-1,)
                        >12 Visitor::addShaderMethodBody(checker1,place2dTexture1.outUV124,checker1.uvCoord124,checker1.outColor124)
                        >12 Visitor::outputUpstreamShader(phong1)
                          >13 ShaderOutputVisitor::_outputUpstreamShader(phong1,phong)
                            >14 Visitor::visitPhong(phong1)
                              >15 OutputHelper::beginRSL(maya_phong,phong1)
                              >15 ShaderMgr::convertibleConnection(phong1.ambientColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                              >15 ShaderMgr::convertibleConnection(phong1.color)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.color)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                    >18 ShaderMgr::hasShaderType(checker)
                              >15 ShaderMgr::convertibleConnection(phong1.cosinePower)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                              >15 ShaderMgr::convertibleConnection(phong1.diffuse)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                              >15 ShaderMgr::convertibleConnection(phong1.incandescence)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                              >15 ShaderMgr::convertibleConnection(phong1.matteOpacityMode)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                              >15 ShaderMgr::convertibleConnection(phong1.matteOpacity)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                              >15 OutputHelper::add_liq_UserDefinedNormal(phong1)
                              >15 ShaderMgr::convertibleConnection(phong1.normalCamera)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                              >15 ShaderMgr::convertibleConnection(phong1.specularColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                              >15 ShaderMgr::convertibleConnection(phong1.reflectivity)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                              >15 ShaderMgr::convertibleConnection(phong1.reflectedColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                              >15 ShaderMgr::convertibleConnection(phong1.reflectionLimit)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                              >15 ShaderMgr::convertibleConnection(phong1.translucence)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                              >15 ShaderMgr::convertibleConnection(phong1.translucenceDepth)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                              >15 ShaderMgr::convertibleConnection(phong1.translucenceFocus)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                              >15 ShaderMgr::convertibleConnection(phong1.transparency)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                              >15 ShaderMgr::convertibleConnection(phong1.outColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                                    >18 ShaderMgr::hasShaderType(shadingEngine)
                              >15 ShaderMgr::convertibleConnection(phong1.outTransparency)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                              >15 OutputHelper::endRSL()
                        >12 ShaderMgr::getValidConnection(phong1)
                        >12 ConvertShadingNetwork::decrementDownstreamConnections(phong1, nodes, numConnections, validConnections)
                        >12 ConvertShadingNetwork::getNodeVariables(phong1, validConnections,  inputSrc, inputDes, outputSrc)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.colorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.colorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.colorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.colorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.colorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.colorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.color)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                            >14 ConvertShadingNetwork::nodeIsConvertible(checker1)
                              >15 ShaderMgr::hasShaderType(checker)
                          >13 ConvertShadingNetwork::addNodeInputVariable(phong1.color, inputSrc, inputDes)
                            >14 ConvertShadingNetwork::nodeIsConvertible(checker1)
                              >15 ShaderMgr::hasShaderType(checker)
                            >14 ShaderMgr::getValidConnection(checker1)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.transparencyR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.transparencyG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.transparencyB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraX)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraX)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraY)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraY)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraZ)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraZ)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.specularColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.specularColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.specularColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                            >14 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                              >15 ShaderMgr::hasShaderType(shadingEngine)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                        >12 Visitor::addShaderMethodBody(phong1,checker1.outColor124,phong1.color124,)
                      >11 ConvertShadingNetwork::outputShaderMethod()
                        >12 Visitor::outputShaderMethod()
                      >11 Visitor::outputEnd()
                      >11 Visitor::postOutput()
                    >10 ConvertShadingNetwork::exportShaderEnd(phong1)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,displacementShader)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,volumeShader)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,liqShadowShader)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,liqEnvironmentShader)
                  >9 ConvertShadingNetwork::exportShadingGroupBegin(phong1SG)
                  >9 ConvertShadingNetwork::outputShadingGroup(phong1SG)
                    >10 Visitor::outputShadingGroup(phong1SG)
                  >9 ConvertShadingNetwork::exportShadingGroupEnd(phong1SG)
                >8  ConvertShadingNetwork::afterExport()
            >6 liqRibTranslatorNew::worldPrologue__(cameraShape1)
              >7 Renderer::worldPrologue(cameraShape1)
            >6 liqRibTranslatorNew::lightBlock__(cameraShape1)
              >7 Renderer::writeLight_pre(|pointLight1|pointLightShape1,cameraShape1)
              >7 liqRibObj::writeObject(,cameraShape1,0)
                >8 liqRibLightData::write(,job=cameraShape1,0)
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::write(|pointLight1|pointLightShape1,,cameraShape1,ref=0)
                      >11 liqRibData::getFullPathName()
                    >10 er_writeLightData.cpp::_write(|pointLight1|pointLightShape1,cameraShape1,...)
                      >11 Renderer::exportPointLight(pointlight,pointLightShape1,...)
                        >12 addLightGroupForLight(|pointLight1|pointLightShape1)
              >7 Renderer::writeLight_post(|pointLight1|pointLightShape1,cameraShape1)
              >7 Renderer::writeLight_pre(|pointLight2|pointLightShape2,cameraShape1)
              >7 liqRibObj::writeObject(,cameraShape1,0)
                >8 liqRibLightData::write(,job=cameraShape1,0)
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::write(|pointLight2|pointLightShape2,,cameraShape1,ref=0)
                      >11 liqRibData::getFullPathName()
                    >10 er_writeLightData.cpp::_write(|pointLight2|pointLightShape2,cameraShape1,...)
                      >11 Renderer::exportPointLight(pointlight,pointLightShape2,...)
                        >12 addLightGroupForLight(|pointLight2|pointLightShape2)
              >7 Renderer::writeLight_post(|pointLight2|pointLightShape2,cameraShape1)
            >6 liqRibTranslatorNew::coordSysBlock__(cameraShape1)
              >7 Renderer::coordSysBlock__(cameraShape1)
            >6 liqRibTranslatorNew::objectBlock__(cameraShape1)
              >7 liqRibTranslatorNew::objectBlock_data(cameraShape1)
                >8 liqRibTranslatorNew::getShadowSetObject(cameraShape1)
                >8 liqRibTranslatorNew::oneObjectBlock_data(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::exportOneObject_data(|pPlane2|pPlaneShape11,cameraShape1)
                    >10 Renderer::_writeObject(|pPlane2|pPlaneShape11,cameraShape1,0,0,0)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.3.rib,cameraShape1,0)
                        >12 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.3.rib,job=cameraShape1,0)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|pPlane2|pPlaneShape11,R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.3.rib,cameraShape1,ref=0)
                              >15 liqRibData::getFullPathName()
                            >14 er_writeMeshData.cpp::_write1(|pPlane2|pPlaneShape11,cameraShape1)
                              >15 liqRibHT::find(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                              >15 _exportVertexFromNodePlug(|pPlane2|pPlaneShape11,0)
                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqRibData::getFullPathName()
                >8 liqRibTranslatorNew::oneObjectBlock_data(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 Renderer::exportOneObject_data(|camera1_group|camera1|cameraShape1,cameraShape1)
                    >10 Renderer::_writeObject(|camera1_group|camera1|cameraShape1,cameraShape1,0,0,0)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_camera1_group_camera1_cameraShape1.3.rib,cameraShape1,0)
                        >12 liqRibCameraData::write(R:/MyDocuments/maya/projects/default/rib/_camera1_group_camera1_cameraShape1.3.rib,job=cameraShape1,0)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|camera1_group|camera1|cameraShape1,R:/MyDocuments/maya/projects/default/rib/_camera1_group_camera1_cameraShape1.3.rib,cameraShape1,ref=0)
                              >15 liqRibData::getFullPathName()
                            >14 er_writeCameraData.cpp::_write_camera(|camera1_group|camera1|cameraShape1,cameraShape1)
                              >15 liqRibHT::find(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,0)
                              >15 Renderer::gatherCameraShaders(cameraShaders.size=0,|camera1_group|camera1|cameraShape1,liqEnvironmentShader)
                              >15 Renderer::cameraOutput(cameraShape1)
              >7 liqRibTranslatorNew::objectBlock_reference(cameraShape1)
                >8 Renderer::objectBlock_reference_begin()
                >8 liqRibTranslatorNew::preGeometryMel()
                  >9 Renderer::preGeometryMel()
                >8 liqRibTranslatorNew::getShadowSetObject(cameraShape1)
                >8 liqRibTranslatorNew::oneObjectBlock_reference(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_begin(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_block0(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 liqRibTranslatorNew::tRiIlluminate(cameraShape1,|pPlane2|pPlaneShape11)
                    >10 Renderer::exportLightLinks(cameraShape1,|pPlane2|pPlaneShape11,lightedByWhichLightShapes.size=2)
                  >9 liqRibTranslatorNew::checkSurfaceShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                  >9 liqRibTranslatorNew::checkDisplacementShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                  >9 liqRibTranslatorNew::checkVolumeShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                  >9 Renderer::oneObjectBlock_reference_attribute_block1(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 liqRibTranslatorNew::writeShader_(1,|pPlane2|pPlaneShape11,v=0,s=0,c=0,,|pPlane2|pPlaneShape11,cameraShape1)
                    >10 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                  >9 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|pPlane2|pPlaneShape11)
                  >9 Renderer::exportOneObject_reference(|pPlane2|pPlaneShape11,cameraShape1)
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::oneObjectBlock_reference_attribute_end(|pPlane2|pPlaneShape11,cameraShape1)
                >8 liqRibTranslatorNew::oneObjectBlock_reference(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_begin(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_block0(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 liqRibTranslatorNew::tRiIlluminate(cameraShape1,|camera1_group|camera1|cameraShape1)
                    >10 Renderer::exportLightLinks(cameraShape1,|camera1_group|camera1|cameraShape1,lightedByWhichLightShapes.size=0)
                  >9 liqRibTranslatorNew::checkSurfaceShader(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,,,)
                  >9 liqRibTranslatorNew::checkDisplacementShader(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,,,)
                  >9 liqRibTranslatorNew::checkVolumeShader(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,,,)
                  >9 Renderer::oneObjectBlock_reference_attribute_block1(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 liqRibTranslatorNew::writeShader_(1,|camera1_group|camera1|cameraShape1,v=0,s=0,c=0,,|camera1_group|camera1|cameraShape1,cameraShape1)
                    >10 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,0)
                  >9 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|camera1_group|camera1|cameraShape1)
                  >9 Renderer::exportOneObject_reference(|camera1_group|camera1|cameraShape1,cameraShape1)
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::oneObjectBlock_reference_attribute_end(|camera1_group|camera1|cameraShape1,cameraShape1)
                >8 Renderer::objectBlock_reference_end()
            >6 liqRibTranslatorNew::worldEpilogue__()
              >7 liqRibTranslator::worldEpilogue()
                >8 Renderer::worldEpilogue()
            >6 liqRibTranslatorNew::frameEpilogue__(3)
              >7 Renderer::frameEpilogue(3)
            >6 liqRibTranslatorNew::ribEpilogue__(cameraShape1)
              >7 Renderer::ribPrologue_end(cameraShape1)
                >8 Renderer::cookInstanceGroup()
                >8 Renderer::render()
                  >9 Renderer::renderPreview(200,150,0,0,cameraShape1,cameraShape1,cameraShape1_option)
                    >10 Renderer::_renderPreview(200,150,0,0,cameraShape1,|camera1_group|camera1,cameraShape1_option)
          >5 Renderer::HeroPassEnd(cameraShape1)
        >4 liqRenderScript::addJob(job.title=checker_animFrame2,0)
          >5 liqRenderScript::popNextJobID()
        >4 tFrameScriptJobMgr::setCommonParameters(checker_animFrame3)
        >4 liqRibTranslatorNew::processOneFrame(3, liqglo__)
          >5 liqRibTranslatorNew::buildJobs__()
            >6 liqRibTranslatorNew::buildShadowJobs__()
              >7 tJobScriptMgr::buildShadowJob(thisJob___, 0)
              >7 tJobScriptMgr::buildShadowCameraJob(thisJob___, 0)
            >6 tRibCameraMgr::gatherDataForJob(liqglo___, ,jobList__,0,1)
            >6 liqRibTranslator::generateFileName(4,cameraShape1)
            >6 liqRibTranslator::generateFileName(5,cameraShape1)
              >7 liqRibTranslator::generateImageName(, job(cameraShape1)), 
          >5 liqRibTranslatorNew::calaculateSamplingTime(4)
          >5 liqRibTranslatorNew::scanScene__(4,0)
            >6 tJobScriptMgr::scanScene(4,0, htable__, count, returnStatus__)
              >7 liqRibHT::insert(|pointLight1|pointLightShape1,lframe,0,3,0,matrix,,-1)
                >8 liqRibHT::hash(|pointLight1|pointLightShape1,0)
                >8 liqRibHT::find(|pointLight1|pointLightShape1,|pointLight1|pointLightShape1,3)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pointLight1|pointLightShape1,0,3,-1)
                  >9 liqRibNode::parseVectorAttributes(pointLight1,,2)
                  >9 liqRibNode::parseVectorAttributes(pointLight1,,3)
                  >9 liqRibNode::parseVectorAttributes(pointLight1,,4)
                  >9 liqRibNode::findShadingGroup(|pointLight1|pointLightShape1,3)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pointLight1|pointLightShape1,3)
                    >10 liqRibLightData::liqRibLightData(|pointLight1|pointLightShape1)
                      >11 liqRibData::addAdditionalSurfaceParameters(pointLightShape1)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
              >7 liqRibHT::insert(|pointLight2|pointLightShape2,lframe,0,3,1,matrix,,-1)
                >8 liqRibHT::hash(|pointLight2|pointLightShape2,1)
                >8 liqRibHT::find(|pointLight2|pointLightShape2,|pointLight2|pointLightShape2,3)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pointLight2|pointLightShape2,0,3,-1)
                  >9 liqRibNode::parseVectorAttributes(pointLight2,,2)
                  >9 liqRibNode::parseVectorAttributes(pointLight2,,3)
                  >9 liqRibNode::parseVectorAttributes(pointLight2,,4)
                  >9 liqRibNode::findShadingGroup(|pointLight2|pointLightShape2,3)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pointLight2|pointLightShape2,3)
                    >10 liqRibLightData::liqRibLightData(|pointLight2|pointLightShape2)
                      >11 liqRibData::addAdditionalSurfaceParameters(pointLightShape2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 tLocatorMgr::scanScene(4,0,htable__,count__,returnStatus__)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,4,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,4,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,4,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,4,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,4,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,4,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,4,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,4,0,&count)
              >7 liqRibHT::insert(|persp|perspShape,lframe,0,0,2,matrix,,-1)
                >8 liqRibHT::hash(|persp|perspShape,2)
                >8 liqRibHT::find(|persp|perspShape,|persp|perspShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|persp|perspShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(persp,,2)
                  >9 liqRibNode::parseVectorAttributes(persp,,3)
                  >9 liqRibNode::parseVectorAttributes(persp,,4)
                  >9 liqRibNode::findShadingGroup(|persp|perspShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|persp|perspShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,4,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,4,0,&count)
              >7 liqRibHT::insert(|top|topShape,lframe,0,0,3,matrix,,-1)
                >8 liqRibHT::hash(|top|topShape,3)
                >8 liqRibHT::find(|top|topShape,|top|topShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|top|topShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(top,,2)
                  >9 liqRibNode::parseVectorAttributes(top,,3)
                  >9 liqRibNode::parseVectorAttributes(top,,4)
                  >9 liqRibNode::findShadingGroup(|top|topShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|top|topShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,4,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,4,0,&count)
              >7 liqRibHT::insert(|front|frontShape,lframe,0,0,4,matrix,,-1)
                >8 liqRibHT::hash(|front|frontShape,4)
                >8 liqRibHT::find(|front|frontShape,|front|frontShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|front|frontShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(front,,2)
                  >9 liqRibNode::parseVectorAttributes(front,,3)
                  >9 liqRibNode::parseVectorAttributes(front,,4)
                  >9 liqRibNode::findShadingGroup(|front|frontShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|front|frontShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,4,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,4,0,&count)
              >7 liqRibHT::insert(|side|sideShape,lframe,0,0,5,matrix,,-1)
                >8 liqRibHT::hash(|side|sideShape,5)
                >8 liqRibHT::find(|side|sideShape,|side|sideShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|side|sideShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(side,,2)
                  >9 liqRibNode::parseVectorAttributes(side,,3)
                  >9 liqRibNode::parseVectorAttributes(side,,4)
                  >9 liqRibNode::findShadingGroup(|side|sideShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|side|sideShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,4,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,4,0,&count)
              >7 liqRibHT::insert(|pPlane2|pPlaneShape11,lframe,0,0,6,matrix,,-1)
                >8 liqRibHT::hash(|pPlane2|pPlaneShape11,6)
                >8 liqRibHT::find(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pPlane2|pPlaneShape11,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(pPlane2,,2)
                  >9 liqRibNode::parseVectorAttributes(pPlane2,,3)
                  >9 liqRibNode::parseVectorAttributes(pPlane2,,4)
                  >9 liqRibNode::findShadingGroup(|pPlane2|pPlaneShape11,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getColor(&shader,&color)
                  >9 liqRibNode::getOpacity(&shader,&color)
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pPlane2|pPlaneShape11,0)
                    >10 liqRibMeshData::liqRibMeshData(|pPlane2|pPlaneShape11)
                      >11 liqRibData::addAdditionalSurfaceParameters(pPlaneShape11)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,4,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,4,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,4,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,4,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,4,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,4,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,4,0,&count)
              >7 liqRibHT::insert(|camera1_group|camera1|cameraShape1,lframe,0,0,7,matrix,,-1)
                >8 liqRibHT::hash(|camera1_group|camera1|cameraShape1,7)
                >8 liqRibHT::find(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|camera1_group|camera1|cameraShape1,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(camera1,,2)
                  >9 liqRibNode::parseVectorAttributes(camera1,,3)
                  >9 liqRibNode::parseVectorAttributes(camera1,,4)
                  >9 liqRibNode::findShadingGroup(|camera1_group|camera1|cameraShape1,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|camera1_group|camera1|cameraShape1,0)
                    >10 liqRibCameraData::liqRibCameraData(|camera1_group|camera1|cameraShape1)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,4,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,4,0,&count)
              >7 liqRibHT::insert(|camera1_group|camera1_aim|camera1_aimShape,lframe,0,0,8,matrix,,-1)
                >8 liqRibHT::hash(|camera1_group|camera1_aim|camera1_aimShape,8)
                >8 liqRibHT::find(|camera1_group|camera1_aim|camera1_aimShape,|camera1_group|camera1_aim|camera1_aimShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|camera1_group|camera1_aim|camera1_aimShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(camera1_aim,,2)
                  >9 liqRibNode::parseVectorAttributes(camera1_aim,,3)
                  >9 liqRibNode::parseVectorAttributes(camera1_aim,,4)
                  >9 liqRibNode::findShadingGroup(|camera1_group|camera1_aim|camera1_aimShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|camera1_group|camera1_aim|camera1_aimShape,0)
            >6 liqRibTranslatorNew::dealwithParticleInstancedObjects(0,4,9)
            >6 liqRibTranslatorNew::getCameraData(iter__,0)
              >7 liqRibTranslator::getCameraInfo(|camera1_group|camera1|cameraShape1,)
                >8 liqRibTranslator::portFieldOfView(224,150,&horizontal,&vertical,&fnCamera)
                  >9 liqRibTranslator::computeViewingFrustum(1.49333,,&left,&right,&bottom,&top,|camera1_group|camera1|cameraShape1)
              >7 liqRibTranslator::getCameraFilmOffset(|camera1_group|camera1|cameraShape1,)
              >7 liqRibTranslator::getCameraTransform(|camera1_group|camera1|cameraShape1,)
          >5 liqRibTranslatorNew::doTextures(size=0)
            >6 Renderer::frameEpilogue(txtList_.size=0)
          >5 liqRibTranslatorNew::doShadows(size=0)
            >6 Renderer::doShadows(shadowList_.size=0)
          >5 Renderer::setRenderScriptFormatAndCompress(0,0)
          >5 Renderer::isHeroPassReady(cameraShape1)
          >5 Renderer::HeroPassBegin(cameraShape1)
          >5 tHeroRibWriterMgr::write(liqglo___,cameraShape1,4,0)
            >6 liqRibTranslatorNew::ribPrologue__(cameraShape1)
              >7 Renderer::ribPrologue_begin(cameraShape1)
                >8 Renderer::dummyPhongShader()
              >7 Renderer::ribPrologue_comment(2.3.5 (buildtime=20:51:12.30),R:/MyDocuments/maya/projects/default/checker_anim,yaoyansi,time)
              >7 Renderer::ribPrologue_options(cameraShape1)
            >6 liqRibTranslatorNew::framePrologue__(4,cameraShape1)
              >7 Renderer::framePrologue(4,cameraShape1)
            >6 ShaderMgr::exportShaderGraph()
              >7 ConvertShadingNetwork::exportShaderGraph()
                >8 ConvertShadingNetwork::beforeExport()
                >8 ConvertShadingNetwork::__export()
                  >9 ConvertShadingNetwork::canShadingGroupExported(phong1SG)
                  >9 Renderer::getValidShaderPlugsInShadingGroup()
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,surfaceShader)
                    >10 ConvertShadingNetwork::canShaderExported(phong1)
                    >10 ConvertShadingNetwork::exportShaderBegin(phong1)
                    >10 ConvertShadingNetwork::convertShadingNetworkToRSL(phong1,surfaceShader)
                      >11 Visitor::initShaderData(phong1,surfaceShader)
                      >11 ConvertShadingNetwork::getUpstreamConvertibleNodes(phong1, nodes, numConnections)
                        >12 ConvertShadingNetwork::nodeIsConvertible(phong1)
                          >13 ShaderMgr::hasShaderType(phong)
                        >12 ShaderMgr::getValidConnection(phong1)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.color)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraX)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraX)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraY)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraY)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraZ)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraZ)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                          >13 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                            >14 ShaderMgr::hasShaderType(shadingEngine)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                        >12 ConvertShadingNetwork::getUpstreamConvertibleNodes(checker1, nodes, numConnections)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                          >13 ShaderMgr::getValidConnection(checker1)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1R)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1R)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1G)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1G)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1B)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1B)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2R)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2R)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2G)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2G)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2B)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2B)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.uCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.uCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.vCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.vCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                              >15 ShaderMgr::hasShaderType(place2dTexture)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                            >14 ConvertShadingNetwork::nodeIsConvertible(phong1)
                              >15 ShaderMgr::hasShaderType(phong)
                          >13 ConvertShadingNetwork::getUpstreamConvertibleNodes(place2dTexture1, nodes, numConnections)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                              >15 ShaderMgr::hasShaderType(place2dTexture)
                            >14 ShaderMgr::getValidConnection(place2dTexture1)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uCoord)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uCoord)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.vCoord)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.vCoord)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverage)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverage)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseUV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseUV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offset)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offset)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                              >15 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                                >16 ShaderMgr::hasShaderType(animCurveTU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                              >15 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                                >16 ShaderMgr::hasShaderType(animCurveTU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatUV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatUV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrame)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrame)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                              >15 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                >16 ShaderMgr::hasShaderType(checker)
                      >11 Visitor::preOutput(phong1)
                      >11 Visitor::outputBegin(phong1)
                      >11 ConvertShadingNetwork::traverseGraphAndOutputNodeFunctions( nodes, numConnections)
                        >12 Visitor::outputUpstreamShader(place2dTexture1)
                          >13 ShaderOutputVisitor::_outputUpstreamShader(place2dTexture1,place2dTexture)
                            >14 Visitor::visitPlace2dTexture(place2dTexture1)
                              >15 OutputHelper::beginRSL(maya_place2dTexture,place2dTexture1)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.uvCoord)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.coverageU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.coverageV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.mirrorU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.mirrorV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.noiseU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.noiseV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.offsetU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.offsetV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.repeatU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                                    >18 ShaderMgr::hasShaderType(animCurveTU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.repeatV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                                    >18 ShaderMgr::hasShaderType(animCurveTU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.rotateFrame)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.rotateUV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.stagger)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.translateFrameU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.translateFrameV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.wrapU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.wrapV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.outUV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                    >18 ShaderMgr::hasShaderType(checker)
                              >15 OutputHelper::endRSL()
                        >12 ShaderMgr::getValidConnection(place2dTexture1)
                        >12 ConvertShadingNetwork::decrementDownstreamConnections(place2dTexture1, nodes, numConnections, validConnections)
                        >12 ConvertShadingNetwork::getNodeVariables(place2dTexture1, validConnections,  inputSrc, inputDes, outputSrc)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.vCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.vCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverage)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverage)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offset)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offset)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                              >15 ShaderMgr::hasShaderType(animCurveTU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                              >15 ShaderMgr::hasShaderType(animCurveTU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrame)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrame)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                            >14 ConvertShadingNetwork::nodeIsConvertible(checker1)
                              >15 ShaderMgr::hasShaderType(checker)
                          >13 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture1,outUV,place2dTexture1.outUV, outputVars)
                            >14 Visitor::addShaderMethodVariavles(place2dTexture1,outUV,float,2,)
                        >12 Visitor::addShaderMethodBody(place2dTexture1,,,place2dTexture1.outUV124)
                        >12 Visitor::outputUpstreamShader(checker1)
                          >13 ShaderOutputVisitor::_outputUpstreamShader(checker1,checker)
                            >14 Visitor::visitChecker(checker1)
                              >15 OutputHelper::beginRSL(maya_checker,checker1)
                              >15 ShaderMgr::convertibleConnection(checker1.alphaGain)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                              >15 ShaderMgr::convertibleConnection(checker1.alphaIsLuminance)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                              >15 ShaderMgr::convertibleConnection(checker1.alphaOffset)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                              >15 ShaderMgr::convertibleConnection(checker1.color1)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                              >15 ShaderMgr::convertibleConnection(checker1.color2)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                              >15 ShaderMgr::convertibleConnection(checker1.colorGain)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                              >15 ShaderMgr::convertibleConnection(checker1.colorOffset)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                              >15 ShaderMgr::convertibleConnection(checker1.contrast)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                              >15 ShaderMgr::convertibleConnection(checker1.defaultColor)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                              >15 ShaderMgr::convertibleConnection(checker1.filter)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                              >15 ShaderMgr::convertibleConnection(checker1.filterOffset)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                              >15 ShaderMgr::convertibleConnection(checker1.invert)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                              >15 ShaderMgr::convertibleConnection(checker1.uvCoord)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                                    >18 ShaderMgr::hasShaderType(place2dTexture)
                              >15 ShaderMgr::convertibleConnection(checker1.outAlpha)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                              >15 ShaderMgr::convertibleConnection(checker1.outColor)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(phong1)
                                    >18 ShaderMgr::hasShaderType(phong)
                              >15 OutputHelper::endRSL()
                        >12 ShaderMgr::getValidConnection(checker1)
                        >12 ConvertShadingNetwork::decrementDownstreamConnections(checker1, nodes, numConnections, validConnections)
                        >12 ConvertShadingNetwork::getNodeVariables(checker1, validConnections,  inputSrc, inputDes, outputSrc)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1R)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1R)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1G)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1G)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1B)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1B)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2R)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2R)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2G)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2G)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2B)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2B)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.uCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.uCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.vCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.vCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                              >15 ShaderMgr::hasShaderType(place2dTexture)
                          >13 ConvertShadingNetwork::addNodeInputVariable(checker1.uvCoord, inputSrc, inputDes)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                              >15 ShaderMgr::hasShaderType(place2dTexture)
                            >14 ShaderMgr::getValidConnection(place2dTexture1)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                            >14 ConvertShadingNetwork::nodeIsConvertible(phong1)
                              >15 ShaderMgr::hasShaderType(phong)
                          >13 ConvertShadingNetwork::addNodeOutputVariable(checker1,outColor,checker1.outColor, outputVars)
                            >14 Visitor::addShaderMethodVariavles(checker1,outColor,color,-1,)
                        >12 Visitor::addShaderMethodBody(checker1,place2dTexture1.outUV124,checker1.uvCoord124,checker1.outColor124)
                        >12 Visitor::outputUpstreamShader(phong1)
                          >13 ShaderOutputVisitor::_outputUpstreamShader(phong1,phong)
                            >14 Visitor::visitPhong(phong1)
                              >15 OutputHelper::beginRSL(maya_phong,phong1)
                              >15 ShaderMgr::convertibleConnection(phong1.ambientColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                              >15 ShaderMgr::convertibleConnection(phong1.color)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.color)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                    >18 ShaderMgr::hasShaderType(checker)
                              >15 ShaderMgr::convertibleConnection(phong1.cosinePower)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                              >15 ShaderMgr::convertibleConnection(phong1.diffuse)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                              >15 ShaderMgr::convertibleConnection(phong1.incandescence)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                              >15 ShaderMgr::convertibleConnection(phong1.matteOpacityMode)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                              >15 ShaderMgr::convertibleConnection(phong1.matteOpacity)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                              >15 OutputHelper::add_liq_UserDefinedNormal(phong1)
                              >15 ShaderMgr::convertibleConnection(phong1.normalCamera)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                              >15 ShaderMgr::convertibleConnection(phong1.specularColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                              >15 ShaderMgr::convertibleConnection(phong1.reflectivity)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                              >15 ShaderMgr::convertibleConnection(phong1.reflectedColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                              >15 ShaderMgr::convertibleConnection(phong1.reflectionLimit)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                              >15 ShaderMgr::convertibleConnection(phong1.translucence)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                              >15 ShaderMgr::convertibleConnection(phong1.translucenceDepth)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                              >15 ShaderMgr::convertibleConnection(phong1.translucenceFocus)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                              >15 ShaderMgr::convertibleConnection(phong1.transparency)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                              >15 ShaderMgr::convertibleConnection(phong1.outColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                                    >18 ShaderMgr::hasShaderType(shadingEngine)
                              >15 ShaderMgr::convertibleConnection(phong1.outTransparency)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                              >15 OutputHelper::endRSL()
                        >12 ShaderMgr::getValidConnection(phong1)
                        >12 ConvertShadingNetwork::decrementDownstreamConnections(phong1, nodes, numConnections, validConnections)
                        >12 ConvertShadingNetwork::getNodeVariables(phong1, validConnections,  inputSrc, inputDes, outputSrc)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.colorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.colorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.colorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.colorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.colorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.colorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.color)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                            >14 ConvertShadingNetwork::nodeIsConvertible(checker1)
                              >15 ShaderMgr::hasShaderType(checker)
                          >13 ConvertShadingNetwork::addNodeInputVariable(phong1.color, inputSrc, inputDes)
                            >14 ConvertShadingNetwork::nodeIsConvertible(checker1)
                              >15 ShaderMgr::hasShaderType(checker)
                            >14 ShaderMgr::getValidConnection(checker1)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.transparencyR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.transparencyG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.transparencyB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraX)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraX)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraY)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraY)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraZ)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraZ)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.specularColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.specularColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.specularColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                            >14 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                              >15 ShaderMgr::hasShaderType(shadingEngine)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                        >12 Visitor::addShaderMethodBody(phong1,checker1.outColor124,phong1.color124,)
                      >11 ConvertShadingNetwork::outputShaderMethod()
                        >12 Visitor::outputShaderMethod()
                      >11 Visitor::outputEnd()
                      >11 Visitor::postOutput()
                    >10 ConvertShadingNetwork::exportShaderEnd(phong1)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,displacementShader)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,volumeShader)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,liqShadowShader)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,liqEnvironmentShader)
                  >9 ConvertShadingNetwork::exportShadingGroupBegin(phong1SG)
                  >9 ConvertShadingNetwork::outputShadingGroup(phong1SG)
                    >10 Visitor::outputShadingGroup(phong1SG)
                  >9 ConvertShadingNetwork::exportShadingGroupEnd(phong1SG)
                >8  ConvertShadingNetwork::afterExport()
            >6 liqRibTranslatorNew::worldPrologue__(cameraShape1)
              >7 Renderer::worldPrologue(cameraShape1)
            >6 liqRibTranslatorNew::lightBlock__(cameraShape1)
              >7 Renderer::writeLight_pre(|pointLight1|pointLightShape1,cameraShape1)
              >7 liqRibObj::writeObject(,cameraShape1,0)
                >8 liqRibLightData::write(,job=cameraShape1,0)
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::write(|pointLight1|pointLightShape1,,cameraShape1,ref=0)
                      >11 liqRibData::getFullPathName()
                    >10 er_writeLightData.cpp::_write(|pointLight1|pointLightShape1,cameraShape1,...)
                      >11 Renderer::exportPointLight(pointlight,pointLightShape1,...)
                        >12 addLightGroupForLight(|pointLight1|pointLightShape1)
              >7 Renderer::writeLight_post(|pointLight1|pointLightShape1,cameraShape1)
              >7 Renderer::writeLight_pre(|pointLight2|pointLightShape2,cameraShape1)
              >7 liqRibObj::writeObject(,cameraShape1,0)
                >8 liqRibLightData::write(,job=cameraShape1,0)
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::write(|pointLight2|pointLightShape2,,cameraShape1,ref=0)
                      >11 liqRibData::getFullPathName()
                    >10 er_writeLightData.cpp::_write(|pointLight2|pointLightShape2,cameraShape1,...)
                      >11 Renderer::exportPointLight(pointlight,pointLightShape2,...)
                        >12 addLightGroupForLight(|pointLight2|pointLightShape2)
              >7 Renderer::writeLight_post(|pointLight2|pointLightShape2,cameraShape1)
            >6 liqRibTranslatorNew::coordSysBlock__(cameraShape1)
              >7 Renderer::coordSysBlock__(cameraShape1)
            >6 liqRibTranslatorNew::objectBlock__(cameraShape1)
              >7 liqRibTranslatorNew::objectBlock_data(cameraShape1)
                >8 liqRibTranslatorNew::getShadowSetObject(cameraShape1)
                >8 liqRibTranslatorNew::oneObjectBlock_data(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::exportOneObject_data(|pPlane2|pPlaneShape11,cameraShape1)
                    >10 Renderer::_writeObject(|pPlane2|pPlaneShape11,cameraShape1,0,0,0)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.4.rib,cameraShape1,0)
                        >12 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.4.rib,job=cameraShape1,0)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|pPlane2|pPlaneShape11,R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.4.rib,cameraShape1,ref=0)
                              >15 liqRibData::getFullPathName()
                            >14 er_writeMeshData.cpp::_write1(|pPlane2|pPlaneShape11,cameraShape1)
                              >15 liqRibHT::find(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                              >15 _exportVertexFromNodePlug(|pPlane2|pPlaneShape11,0)
                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqRibData::getFullPathName()
                >8 liqRibTranslatorNew::oneObjectBlock_data(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 Renderer::exportOneObject_data(|camera1_group|camera1|cameraShape1,cameraShape1)
                    >10 Renderer::_writeObject(|camera1_group|camera1|cameraShape1,cameraShape1,0,0,0)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_camera1_group_camera1_cameraShape1.4.rib,cameraShape1,0)
                        >12 liqRibCameraData::write(R:/MyDocuments/maya/projects/default/rib/_camera1_group_camera1_cameraShape1.4.rib,job=cameraShape1,0)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|camera1_group|camera1|cameraShape1,R:/MyDocuments/maya/projects/default/rib/_camera1_group_camera1_cameraShape1.4.rib,cameraShape1,ref=0)
                              >15 liqRibData::getFullPathName()
                            >14 er_writeCameraData.cpp::_write_camera(|camera1_group|camera1|cameraShape1,cameraShape1)
                              >15 liqRibHT::find(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,0)
                              >15 Renderer::gatherCameraShaders(cameraShaders.size=0,|camera1_group|camera1|cameraShape1,liqEnvironmentShader)
                              >15 Renderer::cameraOutput(cameraShape1)
              >7 liqRibTranslatorNew::objectBlock_reference(cameraShape1)
                >8 Renderer::objectBlock_reference_begin()
                >8 liqRibTranslatorNew::preGeometryMel()
                  >9 Renderer::preGeometryMel()
                >8 liqRibTranslatorNew::getShadowSetObject(cameraShape1)
                >8 liqRibTranslatorNew::oneObjectBlock_reference(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_begin(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_block0(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 liqRibTranslatorNew::tRiIlluminate(cameraShape1,|pPlane2|pPlaneShape11)
                    >10 Renderer::exportLightLinks(cameraShape1,|pPlane2|pPlaneShape11,lightedByWhichLightShapes.size=2)
                  >9 liqRibTranslatorNew::checkSurfaceShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                  >9 liqRibTranslatorNew::checkDisplacementShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                  >9 liqRibTranslatorNew::checkVolumeShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                  >9 Renderer::oneObjectBlock_reference_attribute_block1(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 liqRibTranslatorNew::writeShader_(1,|pPlane2|pPlaneShape11,v=0,s=0,c=0,,|pPlane2|pPlaneShape11,cameraShape1)
                    >10 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                  >9 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|pPlane2|pPlaneShape11)
                  >9 Renderer::exportOneObject_reference(|pPlane2|pPlaneShape11,cameraShape1)
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::oneObjectBlock_reference_attribute_end(|pPlane2|pPlaneShape11,cameraShape1)
                >8 liqRibTranslatorNew::oneObjectBlock_reference(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_begin(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_block0(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 liqRibTranslatorNew::tRiIlluminate(cameraShape1,|camera1_group|camera1|cameraShape1)
                    >10 Renderer::exportLightLinks(cameraShape1,|camera1_group|camera1|cameraShape1,lightedByWhichLightShapes.size=0)
                  >9 liqRibTranslatorNew::checkSurfaceShader(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,,,)
                  >9 liqRibTranslatorNew::checkDisplacementShader(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,,,)
                  >9 liqRibTranslatorNew::checkVolumeShader(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,,,)
                  >9 Renderer::oneObjectBlock_reference_attribute_block1(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 liqRibTranslatorNew::writeShader_(1,|camera1_group|camera1|cameraShape1,v=0,s=0,c=0,,|camera1_group|camera1|cameraShape1,cameraShape1)
                    >10 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,0)
                  >9 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|camera1_group|camera1|cameraShape1)
                  >9 Renderer::exportOneObject_reference(|camera1_group|camera1|cameraShape1,cameraShape1)
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::oneObjectBlock_reference_attribute_end(|camera1_group|camera1|cameraShape1,cameraShape1)
                >8 Renderer::objectBlock_reference_end()
            >6 liqRibTranslatorNew::worldEpilogue__()
              >7 liqRibTranslator::worldEpilogue()
                >8 Renderer::worldEpilogue()
            >6 liqRibTranslatorNew::frameEpilogue__(4)
              >7 Renderer::frameEpilogue(4)
            >6 liqRibTranslatorNew::ribEpilogue__(cameraShape1)
              >7 Renderer::ribPrologue_end(cameraShape1)
                >8 Renderer::cookInstanceGroup()
                >8 Renderer::render()
                  >9 Renderer::renderPreview(200,150,0,0,cameraShape1,cameraShape1,cameraShape1_option)
                    >10 Renderer::_renderPreview(200,150,0,0,cameraShape1,|camera1_group|camera1,cameraShape1_option)
          >5 Renderer::HeroPassEnd(cameraShape1)
        >4 liqRenderScript::addJob(job.title=checker_animFrame3,0)
          >5 liqRenderScript::popNextJobID()
        >4 tFrameScriptJobMgr::setCommonParameters(checker_animFrame4)
        >4 liqRibTranslatorNew::processOneFrame(4, liqglo__)
          >5 liqRibTranslatorNew::buildJobs__()
            >6 liqRibTranslatorNew::buildShadowJobs__()
              >7 tJobScriptMgr::buildShadowJob(thisJob___, 0)
              >7 tJobScriptMgr::buildShadowCameraJob(thisJob___, 0)
            >6 tRibCameraMgr::gatherDataForJob(liqglo___, ,jobList__,0,1)
            >6 liqRibTranslator::generateFileName(4,cameraShape1)
            >6 liqRibTranslator::generateFileName(5,cameraShape1)
              >7 liqRibTranslator::generateImageName(, job(cameraShape1)), 
          >5 liqRibTranslatorNew::calaculateSamplingTime(5)
          >5 liqRibTranslatorNew::scanScene__(5,0)
            >6 tJobScriptMgr::scanScene(5,0, htable__, count, returnStatus__)
              >7 liqRibHT::insert(|pointLight1|pointLightShape1,lframe,0,3,0,matrix,,-1)
                >8 liqRibHT::hash(|pointLight1|pointLightShape1,0)
                >8 liqRibHT::find(|pointLight1|pointLightShape1,|pointLight1|pointLightShape1,3)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pointLight1|pointLightShape1,0,3,-1)
                  >9 liqRibNode::parseVectorAttributes(pointLight1,,2)
                  >9 liqRibNode::parseVectorAttributes(pointLight1,,3)
                  >9 liqRibNode::parseVectorAttributes(pointLight1,,4)
                  >9 liqRibNode::findShadingGroup(|pointLight1|pointLightShape1,3)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pointLight1|pointLightShape1,3)
                    >10 liqRibLightData::liqRibLightData(|pointLight1|pointLightShape1)
                      >11 liqRibData::addAdditionalSurfaceParameters(pointLightShape1)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
              >7 liqRibHT::insert(|pointLight2|pointLightShape2,lframe,0,3,1,matrix,,-1)
                >8 liqRibHT::hash(|pointLight2|pointLightShape2,1)
                >8 liqRibHT::find(|pointLight2|pointLightShape2,|pointLight2|pointLightShape2,3)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pointLight2|pointLightShape2,0,3,-1)
                  >9 liqRibNode::parseVectorAttributes(pointLight2,,2)
                  >9 liqRibNode::parseVectorAttributes(pointLight2,,3)
                  >9 liqRibNode::parseVectorAttributes(pointLight2,,4)
                  >9 liqRibNode::findShadingGroup(|pointLight2|pointLightShape2,3)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pointLight2|pointLightShape2,3)
                    >10 liqRibLightData::liqRibLightData(|pointLight2|pointLightShape2)
                      >11 liqRibData::addAdditionalSurfaceParameters(pointLightShape2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 tLocatorMgr::scanScene(5,0,htable__,count__,returnStatus__)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,5,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,5,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,5,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,5,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,5,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,5,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,5,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,5,0,&count)
              >7 liqRibHT::insert(|persp|perspShape,lframe,0,0,2,matrix,,-1)
                >8 liqRibHT::hash(|persp|perspShape,2)
                >8 liqRibHT::find(|persp|perspShape,|persp|perspShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|persp|perspShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(persp,,2)
                  >9 liqRibNode::parseVectorAttributes(persp,,3)
                  >9 liqRibNode::parseVectorAttributes(persp,,4)
                  >9 liqRibNode::findShadingGroup(|persp|perspShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|persp|perspShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,5,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,5,0,&count)
              >7 liqRibHT::insert(|top|topShape,lframe,0,0,3,matrix,,-1)
                >8 liqRibHT::hash(|top|topShape,3)
                >8 liqRibHT::find(|top|topShape,|top|topShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|top|topShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(top,,2)
                  >9 liqRibNode::parseVectorAttributes(top,,3)
                  >9 liqRibNode::parseVectorAttributes(top,,4)
                  >9 liqRibNode::findShadingGroup(|top|topShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|top|topShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,5,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,5,0,&count)
              >7 liqRibHT::insert(|front|frontShape,lframe,0,0,4,matrix,,-1)
                >8 liqRibHT::hash(|front|frontShape,4)
                >8 liqRibHT::find(|front|frontShape,|front|frontShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|front|frontShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(front,,2)
                  >9 liqRibNode::parseVectorAttributes(front,,3)
                  >9 liqRibNode::parseVectorAttributes(front,,4)
                  >9 liqRibNode::findShadingGroup(|front|frontShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|front|frontShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,5,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,5,0,&count)
              >7 liqRibHT::insert(|side|sideShape,lframe,0,0,5,matrix,,-1)
                >8 liqRibHT::hash(|side|sideShape,5)
                >8 liqRibHT::find(|side|sideShape,|side|sideShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|side|sideShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(side,,2)
                  >9 liqRibNode::parseVectorAttributes(side,,3)
                  >9 liqRibNode::parseVectorAttributes(side,,4)
                  >9 liqRibNode::findShadingGroup(|side|sideShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|side|sideShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,5,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,5,0,&count)
              >7 liqRibHT::insert(|pPlane2|pPlaneShape11,lframe,0,0,6,matrix,,-1)
                >8 liqRibHT::hash(|pPlane2|pPlaneShape11,6)
                >8 liqRibHT::find(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pPlane2|pPlaneShape11,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(pPlane2,,2)
                  >9 liqRibNode::parseVectorAttributes(pPlane2,,3)
                  >9 liqRibNode::parseVectorAttributes(pPlane2,,4)
                  >9 liqRibNode::findShadingGroup(|pPlane2|pPlaneShape11,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getColor(&shader,&color)
                  >9 liqRibNode::getOpacity(&shader,&color)
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pPlane2|pPlaneShape11,0)
                    >10 liqRibMeshData::liqRibMeshData(|pPlane2|pPlaneShape11)
                      >11 liqRibData::addAdditionalSurfaceParameters(pPlaneShape11)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,5,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,5,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,5,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,5,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,5,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,5,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,5,0,&count)
              >7 liqRibHT::insert(|camera1_group|camera1|cameraShape1,lframe,0,0,7,matrix,,-1)
                >8 liqRibHT::hash(|camera1_group|camera1|cameraShape1,7)
                >8 liqRibHT::find(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|camera1_group|camera1|cameraShape1,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(camera1,,2)
                  >9 liqRibNode::parseVectorAttributes(camera1,,3)
                  >9 liqRibNode::parseVectorAttributes(camera1,,4)
                  >9 liqRibNode::findShadingGroup(|camera1_group|camera1|cameraShape1,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|camera1_group|camera1|cameraShape1,0)
                    >10 liqRibCameraData::liqRibCameraData(|camera1_group|camera1|cameraShape1)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,5,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,5,0,&count)
              >7 liqRibHT::insert(|camera1_group|camera1_aim|camera1_aimShape,lframe,0,0,8,matrix,,-1)
                >8 liqRibHT::hash(|camera1_group|camera1_aim|camera1_aimShape,8)
                >8 liqRibHT::find(|camera1_group|camera1_aim|camera1_aimShape,|camera1_group|camera1_aim|camera1_aimShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|camera1_group|camera1_aim|camera1_aimShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(camera1_aim,,2)
                  >9 liqRibNode::parseVectorAttributes(camera1_aim,,3)
                  >9 liqRibNode::parseVectorAttributes(camera1_aim,,4)
                  >9 liqRibNode::findShadingGroup(|camera1_group|camera1_aim|camera1_aimShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|camera1_group|camera1_aim|camera1_aimShape,0)
            >6 liqRibTranslatorNew::dealwithParticleInstancedObjects(0,5,9)
            >6 liqRibTranslatorNew::getCameraData(iter__,0)
              >7 liqRibTranslator::getCameraInfo(|camera1_group|camera1|cameraShape1,)
                >8 liqRibTranslator::portFieldOfView(224,150,&horizontal,&vertical,&fnCamera)
                  >9 liqRibTranslator::computeViewingFrustum(1.49333,,&left,&right,&bottom,&top,|camera1_group|camera1|cameraShape1)
              >7 liqRibTranslator::getCameraFilmOffset(|camera1_group|camera1|cameraShape1,)
              >7 liqRibTranslator::getCameraTransform(|camera1_group|camera1|cameraShape1,)
          >5 liqRibTranslatorNew::doTextures(size=0)
            >6 Renderer::frameEpilogue(txtList_.size=0)
          >5 liqRibTranslatorNew::doShadows(size=0)
            >6 Renderer::doShadows(shadowList_.size=0)
          >5 Renderer::setRenderScriptFormatAndCompress(0,0)
          >5 Renderer::isHeroPassReady(cameraShape1)
          >5 Renderer::HeroPassBegin(cameraShape1)
          >5 tHeroRibWriterMgr::write(liqglo___,cameraShape1,5,0)
            >6 liqRibTranslatorNew::ribPrologue__(cameraShape1)
              >7 Renderer::ribPrologue_begin(cameraShape1)
                >8 Renderer::dummyPhongShader()
              >7 Renderer::ribPrologue_comment(2.3.5 (buildtime=20:51:12.30),R:/MyDocuments/maya/projects/default/checker_anim,yaoyansi,time)
              >7 Renderer::ribPrologue_options(cameraShape1)
            >6 liqRibTranslatorNew::framePrologue__(5,cameraShape1)
              >7 Renderer::framePrologue(5,cameraShape1)
            >6 ShaderMgr::exportShaderGraph()
              >7 ConvertShadingNetwork::exportShaderGraph()
                >8 ConvertShadingNetwork::beforeExport()
                >8 ConvertShadingNetwork::__export()
                  >9 ConvertShadingNetwork::canShadingGroupExported(phong1SG)
                  >9 Renderer::getValidShaderPlugsInShadingGroup()
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,surfaceShader)
                    >10 ConvertShadingNetwork::canShaderExported(phong1)
                    >10 ConvertShadingNetwork::exportShaderBegin(phong1)
                    >10 ConvertShadingNetwork::convertShadingNetworkToRSL(phong1,surfaceShader)
                      >11 Visitor::initShaderData(phong1,surfaceShader)
                      >11 ConvertShadingNetwork::getUpstreamConvertibleNodes(phong1, nodes, numConnections)
                        >12 ConvertShadingNetwork::nodeIsConvertible(phong1)
                          >13 ShaderMgr::hasShaderType(phong)
                        >12 ShaderMgr::getValidConnection(phong1)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.color)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraX)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraX)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraY)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraY)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraZ)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraZ)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                          >13 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                            >14 ShaderMgr::hasShaderType(shadingEngine)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                        >12 ConvertShadingNetwork::getUpstreamConvertibleNodes(checker1, nodes, numConnections)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                          >13 ShaderMgr::getValidConnection(checker1)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1R)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1R)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1G)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1G)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1B)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1B)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2R)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2R)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2G)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2G)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2B)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2B)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.uCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.uCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.vCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.vCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                              >15 ShaderMgr::hasShaderType(place2dTexture)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                            >14 ConvertShadingNetwork::nodeIsConvertible(phong1)
                              >15 ShaderMgr::hasShaderType(phong)
                          >13 ConvertShadingNetwork::getUpstreamConvertibleNodes(place2dTexture1, nodes, numConnections)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                              >15 ShaderMgr::hasShaderType(place2dTexture)
                            >14 ShaderMgr::getValidConnection(place2dTexture1)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uCoord)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uCoord)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.vCoord)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.vCoord)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverage)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverage)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseUV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseUV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offset)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offset)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                              >15 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                                >16 ShaderMgr::hasShaderType(animCurveTU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                              >15 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                                >16 ShaderMgr::hasShaderType(animCurveTU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatUV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatUV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrame)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrame)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                              >15 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                >16 ShaderMgr::hasShaderType(checker)
                      >11 Visitor::preOutput(phong1)
                      >11 Visitor::outputBegin(phong1)
                      >11 ConvertShadingNetwork::traverseGraphAndOutputNodeFunctions( nodes, numConnections)
                        >12 Visitor::outputUpstreamShader(place2dTexture1)
                          >13 ShaderOutputVisitor::_outputUpstreamShader(place2dTexture1,place2dTexture)
                            >14 Visitor::visitPlace2dTexture(place2dTexture1)
                              >15 OutputHelper::beginRSL(maya_place2dTexture,place2dTexture1)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.uvCoord)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.coverageU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.coverageV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.mirrorU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.mirrorV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.noiseU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.noiseV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.offsetU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.offsetV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.repeatU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                                    >18 ShaderMgr::hasShaderType(animCurveTU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.repeatV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                                    >18 ShaderMgr::hasShaderType(animCurveTU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.rotateFrame)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.rotateUV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.stagger)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.translateFrameU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.translateFrameV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.wrapU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.wrapV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.outUV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                    >18 ShaderMgr::hasShaderType(checker)
                              >15 OutputHelper::endRSL()
                        >12 ShaderMgr::getValidConnection(place2dTexture1)
                        >12 ConvertShadingNetwork::decrementDownstreamConnections(place2dTexture1, nodes, numConnections, validConnections)
                        >12 ConvertShadingNetwork::getNodeVariables(place2dTexture1, validConnections,  inputSrc, inputDes, outputSrc)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.vCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.vCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverage)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverage)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offset)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offset)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                              >15 ShaderMgr::hasShaderType(animCurveTU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                              >15 ShaderMgr::hasShaderType(animCurveTU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrame)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrame)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                            >14 ConvertShadingNetwork::nodeIsConvertible(checker1)
                              >15 ShaderMgr::hasShaderType(checker)
                          >13 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture1,outUV,place2dTexture1.outUV, outputVars)
                            >14 Visitor::addShaderMethodVariavles(place2dTexture1,outUV,float,2,)
                        >12 Visitor::addShaderMethodBody(place2dTexture1,,,place2dTexture1.outUV124)
                        >12 Visitor::outputUpstreamShader(checker1)
                          >13 ShaderOutputVisitor::_outputUpstreamShader(checker1,checker)
                            >14 Visitor::visitChecker(checker1)
                              >15 OutputHelper::beginRSL(maya_checker,checker1)
                              >15 ShaderMgr::convertibleConnection(checker1.alphaGain)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                              >15 ShaderMgr::convertibleConnection(checker1.alphaIsLuminance)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                              >15 ShaderMgr::convertibleConnection(checker1.alphaOffset)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                              >15 ShaderMgr::convertibleConnection(checker1.color1)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                              >15 ShaderMgr::convertibleConnection(checker1.color2)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                              >15 ShaderMgr::convertibleConnection(checker1.colorGain)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                              >15 ShaderMgr::convertibleConnection(checker1.colorOffset)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                              >15 ShaderMgr::convertibleConnection(checker1.contrast)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                              >15 ShaderMgr::convertibleConnection(checker1.defaultColor)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                              >15 ShaderMgr::convertibleConnection(checker1.filter)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                              >15 ShaderMgr::convertibleConnection(checker1.filterOffset)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                              >15 ShaderMgr::convertibleConnection(checker1.invert)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                              >15 ShaderMgr::convertibleConnection(checker1.uvCoord)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                                    >18 ShaderMgr::hasShaderType(place2dTexture)
                              >15 ShaderMgr::convertibleConnection(checker1.outAlpha)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                              >15 ShaderMgr::convertibleConnection(checker1.outColor)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(phong1)
                                    >18 ShaderMgr::hasShaderType(phong)
                              >15 OutputHelper::endRSL()
                        >12 ShaderMgr::getValidConnection(checker1)
                        >12 ConvertShadingNetwork::decrementDownstreamConnections(checker1, nodes, numConnections, validConnections)
                        >12 ConvertShadingNetwork::getNodeVariables(checker1, validConnections,  inputSrc, inputDes, outputSrc)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1R)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1R)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1G)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1G)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1B)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1B)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2R)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2R)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2G)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2G)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2B)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2B)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.uCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.uCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.vCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.vCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                              >15 ShaderMgr::hasShaderType(place2dTexture)
                          >13 ConvertShadingNetwork::addNodeInputVariable(checker1.uvCoord, inputSrc, inputDes)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                              >15 ShaderMgr::hasShaderType(place2dTexture)
                            >14 ShaderMgr::getValidConnection(place2dTexture1)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                            >14 ConvertShadingNetwork::nodeIsConvertible(phong1)
                              >15 ShaderMgr::hasShaderType(phong)
                          >13 ConvertShadingNetwork::addNodeOutputVariable(checker1,outColor,checker1.outColor, outputVars)
                            >14 Visitor::addShaderMethodVariavles(checker1,outColor,color,-1,)
                        >12 Visitor::addShaderMethodBody(checker1,place2dTexture1.outUV124,checker1.uvCoord124,checker1.outColor124)
                        >12 Visitor::outputUpstreamShader(phong1)
                          >13 ShaderOutputVisitor::_outputUpstreamShader(phong1,phong)
                            >14 Visitor::visitPhong(phong1)
                              >15 OutputHelper::beginRSL(maya_phong,phong1)
                              >15 ShaderMgr::convertibleConnection(phong1.ambientColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                              >15 ShaderMgr::convertibleConnection(phong1.color)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.color)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                    >18 ShaderMgr::hasShaderType(checker)
                              >15 ShaderMgr::convertibleConnection(phong1.cosinePower)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                              >15 ShaderMgr::convertibleConnection(phong1.diffuse)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                              >15 ShaderMgr::convertibleConnection(phong1.incandescence)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                              >15 ShaderMgr::convertibleConnection(phong1.matteOpacityMode)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                              >15 ShaderMgr::convertibleConnection(phong1.matteOpacity)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                              >15 OutputHelper::add_liq_UserDefinedNormal(phong1)
                              >15 ShaderMgr::convertibleConnection(phong1.normalCamera)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                              >15 ShaderMgr::convertibleConnection(phong1.specularColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                              >15 ShaderMgr::convertibleConnection(phong1.reflectivity)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                              >15 ShaderMgr::convertibleConnection(phong1.reflectedColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                              >15 ShaderMgr::convertibleConnection(phong1.reflectionLimit)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                              >15 ShaderMgr::convertibleConnection(phong1.translucence)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                              >15 ShaderMgr::convertibleConnection(phong1.translucenceDepth)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                              >15 ShaderMgr::convertibleConnection(phong1.translucenceFocus)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                              >15 ShaderMgr::convertibleConnection(phong1.transparency)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                              >15 ShaderMgr::convertibleConnection(phong1.outColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                                    >18 ShaderMgr::hasShaderType(shadingEngine)
                              >15 ShaderMgr::convertibleConnection(phong1.outTransparency)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                              >15 OutputHelper::endRSL()
                        >12 ShaderMgr::getValidConnection(phong1)
                        >12 ConvertShadingNetwork::decrementDownstreamConnections(phong1, nodes, numConnections, validConnections)
                        >12 ConvertShadingNetwork::getNodeVariables(phong1, validConnections,  inputSrc, inputDes, outputSrc)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.colorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.colorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.colorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.colorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.colorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.colorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.color)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                            >14 ConvertShadingNetwork::nodeIsConvertible(checker1)
                              >15 ShaderMgr::hasShaderType(checker)
                          >13 ConvertShadingNetwork::addNodeInputVariable(phong1.color, inputSrc, inputDes)
                            >14 ConvertShadingNetwork::nodeIsConvertible(checker1)
                              >15 ShaderMgr::hasShaderType(checker)
                            >14 ShaderMgr::getValidConnection(checker1)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.transparencyR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.transparencyG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.transparencyB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraX)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraX)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraY)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraY)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraZ)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraZ)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.specularColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.specularColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.specularColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                            >14 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                              >15 ShaderMgr::hasShaderType(shadingEngine)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                        >12 Visitor::addShaderMethodBody(phong1,checker1.outColor124,phong1.color124,)
                      >11 ConvertShadingNetwork::outputShaderMethod()
                        >12 Visitor::outputShaderMethod()
                      >11 Visitor::outputEnd()
                      >11 Visitor::postOutput()
                    >10 ConvertShadingNetwork::exportShaderEnd(phong1)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,displacementShader)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,volumeShader)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,liqShadowShader)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,liqEnvironmentShader)
                  >9 ConvertShadingNetwork::exportShadingGroupBegin(phong1SG)
                  >9 ConvertShadingNetwork::outputShadingGroup(phong1SG)
                    >10 Visitor::outputShadingGroup(phong1SG)
                  >9 ConvertShadingNetwork::exportShadingGroupEnd(phong1SG)
                >8  ConvertShadingNetwork::afterExport()
            >6 liqRibTranslatorNew::worldPrologue__(cameraShape1)
              >7 Renderer::worldPrologue(cameraShape1)
            >6 liqRibTranslatorNew::lightBlock__(cameraShape1)
              >7 Renderer::writeLight_pre(|pointLight1|pointLightShape1,cameraShape1)
              >7 liqRibObj::writeObject(,cameraShape1,0)
                >8 liqRibLightData::write(,job=cameraShape1,0)
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::write(|pointLight1|pointLightShape1,,cameraShape1,ref=0)
                      >11 liqRibData::getFullPathName()
                    >10 er_writeLightData.cpp::_write(|pointLight1|pointLightShape1,cameraShape1,...)
                      >11 Renderer::exportPointLight(pointlight,pointLightShape1,...)
                        >12 addLightGroupForLight(|pointLight1|pointLightShape1)
              >7 Renderer::writeLight_post(|pointLight1|pointLightShape1,cameraShape1)
              >7 Renderer::writeLight_pre(|pointLight2|pointLightShape2,cameraShape1)
              >7 liqRibObj::writeObject(,cameraShape1,0)
                >8 liqRibLightData::write(,job=cameraShape1,0)
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::write(|pointLight2|pointLightShape2,,cameraShape1,ref=0)
                      >11 liqRibData::getFullPathName()
                    >10 er_writeLightData.cpp::_write(|pointLight2|pointLightShape2,cameraShape1,...)
                      >11 Renderer::exportPointLight(pointlight,pointLightShape2,...)
                        >12 addLightGroupForLight(|pointLight2|pointLightShape2)
              >7 Renderer::writeLight_post(|pointLight2|pointLightShape2,cameraShape1)
            >6 liqRibTranslatorNew::coordSysBlock__(cameraShape1)
              >7 Renderer::coordSysBlock__(cameraShape1)
            >6 liqRibTranslatorNew::objectBlock__(cameraShape1)
              >7 liqRibTranslatorNew::objectBlock_data(cameraShape1)
                >8 liqRibTranslatorNew::getShadowSetObject(cameraShape1)
                >8 liqRibTranslatorNew::oneObjectBlock_data(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::exportOneObject_data(|pPlane2|pPlaneShape11,cameraShape1)
                    >10 Renderer::_writeObject(|pPlane2|pPlaneShape11,cameraShape1,0,0,0)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.5.rib,cameraShape1,0)
                        >12 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.5.rib,job=cameraShape1,0)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|pPlane2|pPlaneShape11,R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.5.rib,cameraShape1,ref=0)
                              >15 liqRibData::getFullPathName()
                            >14 er_writeMeshData.cpp::_write1(|pPlane2|pPlaneShape11,cameraShape1)
                              >15 liqRibHT::find(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                              >15 _exportVertexFromNodePlug(|pPlane2|pPlaneShape11,0)
                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqRibData::getFullPathName()
                >8 liqRibTranslatorNew::oneObjectBlock_data(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 Renderer::exportOneObject_data(|camera1_group|camera1|cameraShape1,cameraShape1)
                    >10 Renderer::_writeObject(|camera1_group|camera1|cameraShape1,cameraShape1,0,0,0)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_camera1_group_camera1_cameraShape1.5.rib,cameraShape1,0)
                        >12 liqRibCameraData::write(R:/MyDocuments/maya/projects/default/rib/_camera1_group_camera1_cameraShape1.5.rib,job=cameraShape1,0)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|camera1_group|camera1|cameraShape1,R:/MyDocuments/maya/projects/default/rib/_camera1_group_camera1_cameraShape1.5.rib,cameraShape1,ref=0)
                              >15 liqRibData::getFullPathName()
                            >14 er_writeCameraData.cpp::_write_camera(|camera1_group|camera1|cameraShape1,cameraShape1)
                              >15 liqRibHT::find(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,0)
                              >15 Renderer::gatherCameraShaders(cameraShaders.size=0,|camera1_group|camera1|cameraShape1,liqEnvironmentShader)
                              >15 Renderer::cameraOutput(cameraShape1)
              >7 liqRibTranslatorNew::objectBlock_reference(cameraShape1)
                >8 Renderer::objectBlock_reference_begin()
                >8 liqRibTranslatorNew::preGeometryMel()
                  >9 Renderer::preGeometryMel()
                >8 liqRibTranslatorNew::getShadowSetObject(cameraShape1)
                >8 liqRibTranslatorNew::oneObjectBlock_reference(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_begin(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_block0(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 liqRibTranslatorNew::tRiIlluminate(cameraShape1,|pPlane2|pPlaneShape11)
                    >10 Renderer::exportLightLinks(cameraShape1,|pPlane2|pPlaneShape11,lightedByWhichLightShapes.size=2)
                  >9 liqRibTranslatorNew::checkSurfaceShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                  >9 liqRibTranslatorNew::checkDisplacementShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                  >9 liqRibTranslatorNew::checkVolumeShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                  >9 Renderer::oneObjectBlock_reference_attribute_block1(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 liqRibTranslatorNew::writeShader_(1,|pPlane2|pPlaneShape11,v=0,s=0,c=0,,|pPlane2|pPlaneShape11,cameraShape1)
                    >10 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                  >9 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|pPlane2|pPlaneShape11)
                  >9 Renderer::exportOneObject_reference(|pPlane2|pPlaneShape11,cameraShape1)
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::oneObjectBlock_reference_attribute_end(|pPlane2|pPlaneShape11,cameraShape1)
                >8 liqRibTranslatorNew::oneObjectBlock_reference(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_begin(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_block0(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 liqRibTranslatorNew::tRiIlluminate(cameraShape1,|camera1_group|camera1|cameraShape1)
                    >10 Renderer::exportLightLinks(cameraShape1,|camera1_group|camera1|cameraShape1,lightedByWhichLightShapes.size=0)
                  >9 liqRibTranslatorNew::checkSurfaceShader(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,,,)
                  >9 liqRibTranslatorNew::checkDisplacementShader(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,,,)
                  >9 liqRibTranslatorNew::checkVolumeShader(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,,,)
                  >9 Renderer::oneObjectBlock_reference_attribute_block1(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 liqRibTranslatorNew::writeShader_(1,|camera1_group|camera1|cameraShape1,v=0,s=0,c=0,,|camera1_group|camera1|cameraShape1,cameraShape1)
                    >10 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,0)
                  >9 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|camera1_group|camera1|cameraShape1)
                  >9 Renderer::exportOneObject_reference(|camera1_group|camera1|cameraShape1,cameraShape1)
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::oneObjectBlock_reference_attribute_end(|camera1_group|camera1|cameraShape1,cameraShape1)
                >8 Renderer::objectBlock_reference_end()
            >6 liqRibTranslatorNew::worldEpilogue__()
              >7 liqRibTranslator::worldEpilogue()
                >8 Renderer::worldEpilogue()
            >6 liqRibTranslatorNew::frameEpilogue__(5)
              >7 Renderer::frameEpilogue(5)
            >6 liqRibTranslatorNew::ribEpilogue__(cameraShape1)
              >7 Renderer::ribPrologue_end(cameraShape1)
                >8 Renderer::cookInstanceGroup()
                >8 Renderer::render()
                  >9 Renderer::renderPreview(200,150,0,0,cameraShape1,cameraShape1,cameraShape1_option)
                    >10 Renderer::_renderPreview(200,150,0,0,cameraShape1,|camera1_group|camera1,cameraShape1_option)
          >5 Renderer::HeroPassEnd(cameraShape1)
        >4 liqRenderScript::addJob(job.title=checker_animFrame4,0)
          >5 liqRenderScript::popNextJobID()
        >4 tFrameScriptJobMgr::setCommonParameters(checker_animFrame5)
        >4 liqRibTranslatorNew::processOneFrame(5, liqglo__)
          >5 liqRibTranslatorNew::buildJobs__()
            >6 liqRibTranslatorNew::buildShadowJobs__()
              >7 tJobScriptMgr::buildShadowJob(thisJob___, 0)
              >7 tJobScriptMgr::buildShadowCameraJob(thisJob___, 0)
            >6 tRibCameraMgr::gatherDataForJob(liqglo___, ,jobList__,0,1)
            >6 liqRibTranslator::generateFileName(4,cameraShape1)
            >6 liqRibTranslator::generateFileName(5,cameraShape1)
              >7 liqRibTranslator::generateImageName(, job(cameraShape1)), 
          >5 liqRibTranslatorNew::calaculateSamplingTime(6)
          >5 liqRibTranslatorNew::scanScene__(6,0)
            >6 tJobScriptMgr::scanScene(6,0, htable__, count, returnStatus__)
              >7 liqRibHT::insert(|pointLight1|pointLightShape1,lframe,0,3,0,matrix,,-1)
                >8 liqRibHT::hash(|pointLight1|pointLightShape1,0)
                >8 liqRibHT::find(|pointLight1|pointLightShape1,|pointLight1|pointLightShape1,3)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pointLight1|pointLightShape1,0,3,-1)
                  >9 liqRibNode::parseVectorAttributes(pointLight1,,2)
                  >9 liqRibNode::parseVectorAttributes(pointLight1,,3)
                  >9 liqRibNode::parseVectorAttributes(pointLight1,,4)
                  >9 liqRibNode::findShadingGroup(|pointLight1|pointLightShape1,3)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pointLight1|pointLightShape1,3)
                    >10 liqRibLightData::liqRibLightData(|pointLight1|pointLightShape1)
                      >11 liqRibData::addAdditionalSurfaceParameters(pointLightShape1)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
              >7 liqRibHT::insert(|pointLight2|pointLightShape2,lframe,0,3,1,matrix,,-1)
                >8 liqRibHT::hash(|pointLight2|pointLightShape2,1)
                >8 liqRibHT::find(|pointLight2|pointLightShape2,|pointLight2|pointLightShape2,3)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pointLight2|pointLightShape2,0,3,-1)
                  >9 liqRibNode::parseVectorAttributes(pointLight2,,2)
                  >9 liqRibNode::parseVectorAttributes(pointLight2,,3)
                  >9 liqRibNode::parseVectorAttributes(pointLight2,,4)
                  >9 liqRibNode::findShadingGroup(|pointLight2|pointLightShape2,3)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pointLight2|pointLightShape2,3)
                    >10 liqRibLightData::liqRibLightData(|pointLight2|pointLightShape2)
                      >11 liqRibData::addAdditionalSurfaceParameters(pointLightShape2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 tLocatorMgr::scanScene(6,0,htable__,count__,returnStatus__)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
              >7 liqRibHT::insert(|persp|perspShape,lframe,0,0,2,matrix,,-1)
                >8 liqRibHT::hash(|persp|perspShape,2)
                >8 liqRibHT::find(|persp|perspShape,|persp|perspShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|persp|perspShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(persp,,2)
                  >9 liqRibNode::parseVectorAttributes(persp,,3)
                  >9 liqRibNode::parseVectorAttributes(persp,,4)
                  >9 liqRibNode::findShadingGroup(|persp|perspShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|persp|perspShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
              >7 liqRibHT::insert(|top|topShape,lframe,0,0,3,matrix,,-1)
                >8 liqRibHT::hash(|top|topShape,3)
                >8 liqRibHT::find(|top|topShape,|top|topShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|top|topShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(top,,2)
                  >9 liqRibNode::parseVectorAttributes(top,,3)
                  >9 liqRibNode::parseVectorAttributes(top,,4)
                  >9 liqRibNode::findShadingGroup(|top|topShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|top|topShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
              >7 liqRibHT::insert(|front|frontShape,lframe,0,0,4,matrix,,-1)
                >8 liqRibHT::hash(|front|frontShape,4)
                >8 liqRibHT::find(|front|frontShape,|front|frontShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|front|frontShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(front,,2)
                  >9 liqRibNode::parseVectorAttributes(front,,3)
                  >9 liqRibNode::parseVectorAttributes(front,,4)
                  >9 liqRibNode::findShadingGroup(|front|frontShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|front|frontShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
              >7 liqRibHT::insert(|side|sideShape,lframe,0,0,5,matrix,,-1)
                >8 liqRibHT::hash(|side|sideShape,5)
                >8 liqRibHT::find(|side|sideShape,|side|sideShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|side|sideShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(side,,2)
                  >9 liqRibNode::parseVectorAttributes(side,,3)
                  >9 liqRibNode::parseVectorAttributes(side,,4)
                  >9 liqRibNode::findShadingGroup(|side|sideShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|side|sideShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
              >7 liqRibHT::insert(|pPlane2|pPlaneShape11,lframe,0,0,6,matrix,,-1)
                >8 liqRibHT::hash(|pPlane2|pPlaneShape11,6)
                >8 liqRibHT::find(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pPlane2|pPlaneShape11,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(pPlane2,,2)
                  >9 liqRibNode::parseVectorAttributes(pPlane2,,3)
                  >9 liqRibNode::parseVectorAttributes(pPlane2,,4)
                  >9 liqRibNode::findShadingGroup(|pPlane2|pPlaneShape11,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getColor(&shader,&color)
                  >9 liqRibNode::getOpacity(&shader,&color)
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pPlane2|pPlaneShape11,0)
                    >10 liqRibMeshData::liqRibMeshData(|pPlane2|pPlaneShape11)
                      >11 liqRibData::addAdditionalSurfaceParameters(pPlaneShape11)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
              >7 liqRibHT::insert(|camera1_group|camera1|cameraShape1,lframe,0,0,7,matrix,,-1)
                >8 liqRibHT::hash(|camera1_group|camera1|cameraShape1,7)
                >8 liqRibHT::find(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|camera1_group|camera1|cameraShape1,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(camera1,,2)
                  >9 liqRibNode::parseVectorAttributes(camera1,,3)
                  >9 liqRibNode::parseVectorAttributes(camera1,,4)
                  >9 liqRibNode::findShadingGroup(|camera1_group|camera1|cameraShape1,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|camera1_group|camera1|cameraShape1,0)
                    >10 liqRibCameraData::liqRibCameraData(|camera1_group|camera1|cameraShape1)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
              >7 liqRibHT::insert(|camera1_group|camera1_aim|camera1_aimShape,lframe,0,0,8,matrix,,-1)
                >8 liqRibHT::hash(|camera1_group|camera1_aim|camera1_aimShape,8)
                >8 liqRibHT::find(|camera1_group|camera1_aim|camera1_aimShape,|camera1_group|camera1_aim|camera1_aimShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|camera1_group|camera1_aim|camera1_aimShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(camera1_aim,,2)
                  >9 liqRibNode::parseVectorAttributes(camera1_aim,,3)
                  >9 liqRibNode::parseVectorAttributes(camera1_aim,,4)
                  >9 liqRibNode::findShadingGroup(|camera1_group|camera1_aim|camera1_aimShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|camera1_group|camera1_aim|camera1_aimShape,0)
            >6 liqRibTranslatorNew::dealwithParticleInstancedObjects(0,6,9)
            >6 liqRibTranslatorNew::getCameraData(iter__,0)
              >7 liqRibTranslator::getCameraInfo(|camera1_group|camera1|cameraShape1,)
                >8 liqRibTranslator::portFieldOfView(224,150,&horizontal,&vertical,&fnCamera)
                  >9 liqRibTranslator::computeViewingFrustum(1.49333,,&left,&right,&bottom,&top,|camera1_group|camera1|cameraShape1)
              >7 liqRibTranslator::getCameraFilmOffset(|camera1_group|camera1|cameraShape1,)
              >7 liqRibTranslator::getCameraTransform(|camera1_group|camera1|cameraShape1,)
          >5 liqRibTranslatorNew::doTextures(size=0)
            >6 Renderer::frameEpilogue(txtList_.size=0)
          >5 liqRibTranslatorNew::doShadows(size=0)
            >6 Renderer::doShadows(shadowList_.size=0)
          >5 Renderer::setRenderScriptFormatAndCompress(0,0)
          >5 Renderer::isHeroPassReady(cameraShape1)
          >5 Renderer::HeroPassBegin(cameraShape1)
          >5 tHeroRibWriterMgr::write(liqglo___,cameraShape1,6,0)
            >6 liqRibTranslatorNew::ribPrologue__(cameraShape1)
              >7 Renderer::ribPrologue_begin(cameraShape1)
                >8 Renderer::dummyPhongShader()
              >7 Renderer::ribPrologue_comment(2.3.5 (buildtime=20:51:12.30),R:/MyDocuments/maya/projects/default/checker_anim,yaoyansi,time)
              >7 Renderer::ribPrologue_options(cameraShape1)
            >6 liqRibTranslatorNew::framePrologue__(6,cameraShape1)
              >7 Renderer::framePrologue(6,cameraShape1)
            >6 ShaderMgr::exportShaderGraph()
              >7 ConvertShadingNetwork::exportShaderGraph()
                >8 ConvertShadingNetwork::beforeExport()
                >8 ConvertShadingNetwork::__export()
                  >9 ConvertShadingNetwork::canShadingGroupExported(phong1SG)
                  >9 Renderer::getValidShaderPlugsInShadingGroup()
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,surfaceShader)
                    >10 ConvertShadingNetwork::canShaderExported(phong1)
                    >10 ConvertShadingNetwork::exportShaderBegin(phong1)
                    >10 ConvertShadingNetwork::convertShadingNetworkToRSL(phong1,surfaceShader)
                      >11 Visitor::initShaderData(phong1,surfaceShader)
                      >11 ConvertShadingNetwork::getUpstreamConvertibleNodes(phong1, nodes, numConnections)
                        >12 ConvertShadingNetwork::nodeIsConvertible(phong1)
                          >13 ShaderMgr::hasShaderType(phong)
                        >12 ShaderMgr::getValidConnection(phong1)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.color)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraX)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraX)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraY)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraY)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraZ)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraZ)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                          >13 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                            >14 ShaderMgr::hasShaderType(shadingEngine)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                        >12 ConvertShadingNetwork::getUpstreamConvertibleNodes(checker1, nodes, numConnections)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                          >13 ShaderMgr::getValidConnection(checker1)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1R)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1R)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1G)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1G)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1B)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1B)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2R)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2R)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2G)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2G)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2B)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2B)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.uCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.uCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.vCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.vCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                              >15 ShaderMgr::hasShaderType(place2dTexture)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                            >14 ConvertShadingNetwork::nodeIsConvertible(phong1)
                              >15 ShaderMgr::hasShaderType(phong)
                          >13 ConvertShadingNetwork::getUpstreamConvertibleNodes(place2dTexture1, nodes, numConnections)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                              >15 ShaderMgr::hasShaderType(place2dTexture)
                            >14 ShaderMgr::getValidConnection(place2dTexture1)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uCoord)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uCoord)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.vCoord)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.vCoord)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverage)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverage)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseUV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseUV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offset)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offset)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                              >15 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                                >16 ShaderMgr::hasShaderType(animCurveTU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                              >15 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                                >16 ShaderMgr::hasShaderType(animCurveTU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatUV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatUV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrame)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrame)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                              >15 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                >16 ShaderMgr::hasShaderType(checker)
                      >11 Visitor::preOutput(phong1)
                      >11 Visitor::outputBegin(phong1)
                      >11 ConvertShadingNetwork::traverseGraphAndOutputNodeFunctions( nodes, numConnections)
                        >12 Visitor::outputUpstreamShader(place2dTexture1)
                          >13 ShaderOutputVisitor::_outputUpstreamShader(place2dTexture1,place2dTexture)
                            >14 Visitor::visitPlace2dTexture(place2dTexture1)
                              >15 OutputHelper::beginRSL(maya_place2dTexture,place2dTexture1)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.uvCoord)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.coverageU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.coverageV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.mirrorU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.mirrorV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.noiseU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.noiseV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.offsetU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.offsetV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.repeatU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                                    >18 ShaderMgr::hasShaderType(animCurveTU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.repeatV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                                    >18 ShaderMgr::hasShaderType(animCurveTU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.rotateFrame)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.rotateUV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.stagger)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.translateFrameU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.translateFrameV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.wrapU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.wrapV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.outUV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                    >18 ShaderMgr::hasShaderType(checker)
                              >15 OutputHelper::endRSL()
                        >12 ShaderMgr::getValidConnection(place2dTexture1)
                        >12 ConvertShadingNetwork::decrementDownstreamConnections(place2dTexture1, nodes, numConnections, validConnections)
                        >12 ConvertShadingNetwork::getNodeVariables(place2dTexture1, validConnections,  inputSrc, inputDes, outputSrc)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.vCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.vCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverage)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverage)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offset)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offset)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                              >15 ShaderMgr::hasShaderType(animCurveTU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                              >15 ShaderMgr::hasShaderType(animCurveTU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrame)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrame)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                            >14 ConvertShadingNetwork::nodeIsConvertible(checker1)
                              >15 ShaderMgr::hasShaderType(checker)
                          >13 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture1,outUV,place2dTexture1.outUV, outputVars)
                            >14 Visitor::addShaderMethodVariavles(place2dTexture1,outUV,float,2,)
                        >12 Visitor::addShaderMethodBody(place2dTexture1,,,place2dTexture1.outUV124)
                        >12 Visitor::outputUpstreamShader(checker1)
                          >13 ShaderOutputVisitor::_outputUpstreamShader(checker1,checker)
                            >14 Visitor::visitChecker(checker1)
                              >15 OutputHelper::beginRSL(maya_checker,checker1)
                              >15 ShaderMgr::convertibleConnection(checker1.alphaGain)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                              >15 ShaderMgr::convertibleConnection(checker1.alphaIsLuminance)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                              >15 ShaderMgr::convertibleConnection(checker1.alphaOffset)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                              >15 ShaderMgr::convertibleConnection(checker1.color1)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                              >15 ShaderMgr::convertibleConnection(checker1.color2)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                              >15 ShaderMgr::convertibleConnection(checker1.colorGain)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                              >15 ShaderMgr::convertibleConnection(checker1.colorOffset)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                              >15 ShaderMgr::convertibleConnection(checker1.contrast)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                              >15 ShaderMgr::convertibleConnection(checker1.defaultColor)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                              >15 ShaderMgr::convertibleConnection(checker1.filter)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                              >15 ShaderMgr::convertibleConnection(checker1.filterOffset)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                              >15 ShaderMgr::convertibleConnection(checker1.invert)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                              >15 ShaderMgr::convertibleConnection(checker1.uvCoord)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                                    >18 ShaderMgr::hasShaderType(place2dTexture)
                              >15 ShaderMgr::convertibleConnection(checker1.outAlpha)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                              >15 ShaderMgr::convertibleConnection(checker1.outColor)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(phong1)
                                    >18 ShaderMgr::hasShaderType(phong)
                              >15 OutputHelper::endRSL()
                        >12 ShaderMgr::getValidConnection(checker1)
                        >12 ConvertShadingNetwork::decrementDownstreamConnections(checker1, nodes, numConnections, validConnections)
                        >12 ConvertShadingNetwork::getNodeVariables(checker1, validConnections,  inputSrc, inputDes, outputSrc)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1R)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1R)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1G)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1G)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1B)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1B)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2R)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2R)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2G)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2G)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2B)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2B)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.uCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.uCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.vCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.vCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                              >15 ShaderMgr::hasShaderType(place2dTexture)
                          >13 ConvertShadingNetwork::addNodeInputVariable(checker1.uvCoord, inputSrc, inputDes)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                              >15 ShaderMgr::hasShaderType(place2dTexture)
                            >14 ShaderMgr::getValidConnection(place2dTexture1)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                            >14 ConvertShadingNetwork::nodeIsConvertible(phong1)
                              >15 ShaderMgr::hasShaderType(phong)
                          >13 ConvertShadingNetwork::addNodeOutputVariable(checker1,outColor,checker1.outColor, outputVars)
                            >14 Visitor::addShaderMethodVariavles(checker1,outColor,color,-1,)
                        >12 Visitor::addShaderMethodBody(checker1,place2dTexture1.outUV124,checker1.uvCoord124,checker1.outColor124)
                        >12 Visitor::outputUpstreamShader(phong1)
                          >13 ShaderOutputVisitor::_outputUpstreamShader(phong1,phong)
                            >14 Visitor::visitPhong(phong1)
                              >15 OutputHelper::beginRSL(maya_phong,phong1)
                              >15 ShaderMgr::convertibleConnection(phong1.ambientColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                              >15 ShaderMgr::convertibleConnection(phong1.color)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.color)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                    >18 ShaderMgr::hasShaderType(checker)
                              >15 ShaderMgr::convertibleConnection(phong1.cosinePower)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                              >15 ShaderMgr::convertibleConnection(phong1.diffuse)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                              >15 ShaderMgr::convertibleConnection(phong1.incandescence)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                              >15 ShaderMgr::convertibleConnection(phong1.matteOpacityMode)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                              >15 ShaderMgr::convertibleConnection(phong1.matteOpacity)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                              >15 OutputHelper::add_liq_UserDefinedNormal(phong1)
                              >15 ShaderMgr::convertibleConnection(phong1.normalCamera)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                              >15 ShaderMgr::convertibleConnection(phong1.specularColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                              >15 ShaderMgr::convertibleConnection(phong1.reflectivity)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                              >15 ShaderMgr::convertibleConnection(phong1.reflectedColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                              >15 ShaderMgr::convertibleConnection(phong1.reflectionLimit)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                              >15 ShaderMgr::convertibleConnection(phong1.translucence)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                              >15 ShaderMgr::convertibleConnection(phong1.translucenceDepth)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                              >15 ShaderMgr::convertibleConnection(phong1.translucenceFocus)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                              >15 ShaderMgr::convertibleConnection(phong1.transparency)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                              >15 ShaderMgr::convertibleConnection(phong1.outColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                                    >18 ShaderMgr::hasShaderType(shadingEngine)
                              >15 ShaderMgr::convertibleConnection(phong1.outTransparency)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                              >15 OutputHelper::endRSL()
                        >12 ShaderMgr::getValidConnection(phong1)
                        >12 ConvertShadingNetwork::decrementDownstreamConnections(phong1, nodes, numConnections, validConnections)
                        >12 ConvertShadingNetwork::getNodeVariables(phong1, validConnections,  inputSrc, inputDes, outputSrc)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.colorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.colorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.colorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.colorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.colorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.colorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.color)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                            >14 ConvertShadingNetwork::nodeIsConvertible(checker1)
                              >15 ShaderMgr::hasShaderType(checker)
                          >13 ConvertShadingNetwork::addNodeInputVariable(phong1.color, inputSrc, inputDes)
                            >14 ConvertShadingNetwork::nodeIsConvertible(checker1)
                              >15 ShaderMgr::hasShaderType(checker)
                            >14 ShaderMgr::getValidConnection(checker1)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.transparencyR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.transparencyG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.transparencyB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraX)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraX)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraY)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraY)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraZ)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraZ)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.specularColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.specularColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.specularColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                            >14 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                              >15 ShaderMgr::hasShaderType(shadingEngine)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                        >12 Visitor::addShaderMethodBody(phong1,checker1.outColor124,phong1.color124,)
                      >11 ConvertShadingNetwork::outputShaderMethod()
                        >12 Visitor::outputShaderMethod()
                      >11 Visitor::outputEnd()
                      >11 Visitor::postOutput()
                    >10 ConvertShadingNetwork::exportShaderEnd(phong1)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,displacementShader)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,volumeShader)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,liqShadowShader)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,liqEnvironmentShader)
                  >9 ConvertShadingNetwork::exportShadingGroupBegin(phong1SG)
                  >9 ConvertShadingNetwork::outputShadingGroup(phong1SG)
                    >10 Visitor::outputShadingGroup(phong1SG)
                  >9 ConvertShadingNetwork::exportShadingGroupEnd(phong1SG)
                >8  ConvertShadingNetwork::afterExport()
            >6 liqRibTranslatorNew::worldPrologue__(cameraShape1)
              >7 Renderer::worldPrologue(cameraShape1)
            >6 liqRibTranslatorNew::lightBlock__(cameraShape1)
              >7 Renderer::writeLight_pre(|pointLight1|pointLightShape1,cameraShape1)
              >7 liqRibObj::writeObject(,cameraShape1,0)
                >8 liqRibLightData::write(,job=cameraShape1,0)
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::write(|pointLight1|pointLightShape1,,cameraShape1,ref=0)
                      >11 liqRibData::getFullPathName()
                    >10 er_writeLightData.cpp::_write(|pointLight1|pointLightShape1,cameraShape1,...)
                      >11 Renderer::exportPointLight(pointlight,pointLightShape1,...)
                        >12 addLightGroupForLight(|pointLight1|pointLightShape1)
              >7 Renderer::writeLight_post(|pointLight1|pointLightShape1,cameraShape1)
              >7 Renderer::writeLight_pre(|pointLight2|pointLightShape2,cameraShape1)
              >7 liqRibObj::writeObject(,cameraShape1,0)
                >8 liqRibLightData::write(,job=cameraShape1,0)
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::write(|pointLight2|pointLightShape2,,cameraShape1,ref=0)
                      >11 liqRibData::getFullPathName()
                    >10 er_writeLightData.cpp::_write(|pointLight2|pointLightShape2,cameraShape1,...)
                      >11 Renderer::exportPointLight(pointlight,pointLightShape2,...)
                        >12 addLightGroupForLight(|pointLight2|pointLightShape2)
              >7 Renderer::writeLight_post(|pointLight2|pointLightShape2,cameraShape1)
            >6 liqRibTranslatorNew::coordSysBlock__(cameraShape1)
              >7 Renderer::coordSysBlock__(cameraShape1)
            >6 liqRibTranslatorNew::objectBlock__(cameraShape1)
              >7 liqRibTranslatorNew::objectBlock_data(cameraShape1)
                >8 liqRibTranslatorNew::getShadowSetObject(cameraShape1)
                >8 liqRibTranslatorNew::oneObjectBlock_data(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::exportOneObject_data(|pPlane2|pPlaneShape11,cameraShape1)
                    >10 Renderer::_writeObject(|pPlane2|pPlaneShape11,cameraShape1,0,0,0)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.6.rib,cameraShape1,0)
                        >12 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.6.rib,job=cameraShape1,0)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|pPlane2|pPlaneShape11,R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.6.rib,cameraShape1,ref=0)
                              >15 liqRibData::getFullPathName()
                            >14 er_writeMeshData.cpp::_write1(|pPlane2|pPlaneShape11,cameraShape1)
                              >15 liqRibHT::find(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                              >15 _exportVertexFromNodePlug(|pPlane2|pPlaneShape11,0)
                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqRibData::getFullPathName()
                >8 liqRibTranslatorNew::oneObjectBlock_data(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 Renderer::exportOneObject_data(|camera1_group|camera1|cameraShape1,cameraShape1)
                    >10 Renderer::_writeObject(|camera1_group|camera1|cameraShape1,cameraShape1,0,0,0)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_camera1_group_camera1_cameraShape1.6.rib,cameraShape1,0)
                        >12 liqRibCameraData::write(R:/MyDocuments/maya/projects/default/rib/_camera1_group_camera1_cameraShape1.6.rib,job=cameraShape1,0)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|camera1_group|camera1|cameraShape1,R:/MyDocuments/maya/projects/default/rib/_camera1_group_camera1_cameraShape1.6.rib,cameraShape1,ref=0)
                              >15 liqRibData::getFullPathName()
                            >14 er_writeCameraData.cpp::_write_camera(|camera1_group|camera1|cameraShape1,cameraShape1)
                              >15 liqRibHT::find(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,0)
                              >15 Renderer::gatherCameraShaders(cameraShaders.size=0,|camera1_group|camera1|cameraShape1,liqEnvironmentShader)
                              >15 Renderer::cameraOutput(cameraShape1)
              >7 liqRibTranslatorNew::objectBlock_reference(cameraShape1)
                >8 Renderer::objectBlock_reference_begin()
                >8 liqRibTranslatorNew::preGeometryMel()
                  >9 Renderer::preGeometryMel()
                >8 liqRibTranslatorNew::getShadowSetObject(cameraShape1)
                >8 liqRibTranslatorNew::oneObjectBlock_reference(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_begin(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_block0(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 liqRibTranslatorNew::tRiIlluminate(cameraShape1,|pPlane2|pPlaneShape11)
                    >10 Renderer::exportLightLinks(cameraShape1,|pPlane2|pPlaneShape11,lightedByWhichLightShapes.size=2)
                  >9 liqRibTranslatorNew::checkSurfaceShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                  >9 liqRibTranslatorNew::checkDisplacementShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                  >9 liqRibTranslatorNew::checkVolumeShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                  >9 Renderer::oneObjectBlock_reference_attribute_block1(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 liqRibTranslatorNew::writeShader_(1,|pPlane2|pPlaneShape11,v=0,s=0,c=0,,|pPlane2|pPlaneShape11,cameraShape1)
                    >10 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                  >9 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|pPlane2|pPlaneShape11)
                  >9 Renderer::exportOneObject_reference(|pPlane2|pPlaneShape11,cameraShape1)
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::oneObjectBlock_reference_attribute_end(|pPlane2|pPlaneShape11,cameraShape1)
                >8 liqRibTranslatorNew::oneObjectBlock_reference(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_begin(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_block0(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 liqRibTranslatorNew::tRiIlluminate(cameraShape1,|camera1_group|camera1|cameraShape1)
                    >10 Renderer::exportLightLinks(cameraShape1,|camera1_group|camera1|cameraShape1,lightedByWhichLightShapes.size=0)
                  >9 liqRibTranslatorNew::checkSurfaceShader(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,,,)
                  >9 liqRibTranslatorNew::checkDisplacementShader(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,,,)
                  >9 liqRibTranslatorNew::checkVolumeShader(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,,,)
                  >9 Renderer::oneObjectBlock_reference_attribute_block1(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 liqRibTranslatorNew::writeShader_(1,|camera1_group|camera1|cameraShape1,v=0,s=0,c=0,,|camera1_group|camera1|cameraShape1,cameraShape1)
                    >10 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,0)
                  >9 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|camera1_group|camera1|cameraShape1)
                  >9 Renderer::exportOneObject_reference(|camera1_group|camera1|cameraShape1,cameraShape1)
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::oneObjectBlock_reference_attribute_end(|camera1_group|camera1|cameraShape1,cameraShape1)
                >8 Renderer::objectBlock_reference_end()
            >6 liqRibTranslatorNew::worldEpilogue__()
              >7 liqRibTranslator::worldEpilogue()
                >8 Renderer::worldEpilogue()
            >6 liqRibTranslatorNew::frameEpilogue__(6)
              >7 Renderer::frameEpilogue(6)
            >6 liqRibTranslatorNew::ribEpilogue__(cameraShape1)
              >7 Renderer::ribPrologue_end(cameraShape1)
                >8 Renderer::cookInstanceGroup()
                >8 Renderer::render()
                  >9 Renderer::renderPreview(200,150,0,0,cameraShape1,cameraShape1,cameraShape1_option)
                    >10 Renderer::_renderPreview(200,150,0,0,cameraShape1,|camera1_group|camera1,cameraShape1_option)
          >5 Renderer::HeroPassEnd(cameraShape1)
        >4 liqRenderScript::addJob(job.title=checker_animFrame5,0)
          >5 liqRenderScript::popNextJobID()
        >4 tFrameScriptJobMgr::setCommonParameters(checker_animFrame6)
        >4 liqRibTranslatorNew::processOneFrame(6, liqglo__)
          >5 liqRibTranslatorNew::buildJobs__()
            >6 liqRibTranslatorNew::buildShadowJobs__()
              >7 tJobScriptMgr::buildShadowJob(thisJob___, 0)
              >7 tJobScriptMgr::buildShadowCameraJob(thisJob___, 0)
            >6 tRibCameraMgr::gatherDataForJob(liqglo___, ,jobList__,0,1)
            >6 liqRibTranslator::generateFileName(4,cameraShape1)
            >6 liqRibTranslator::generateFileName(5,cameraShape1)
              >7 liqRibTranslator::generateImageName(, job(cameraShape1)), 
          >5 liqRibTranslatorNew::calaculateSamplingTime(7)
          >5 liqRibTranslatorNew::scanScene__(7,0)
            >6 tJobScriptMgr::scanScene(7,0, htable__, count, returnStatus__)
              >7 liqRibHT::insert(|pointLight1|pointLightShape1,lframe,0,3,0,matrix,,-1)
                >8 liqRibHT::hash(|pointLight1|pointLightShape1,0)
                >8 liqRibHT::find(|pointLight1|pointLightShape1,|pointLight1|pointLightShape1,3)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pointLight1|pointLightShape1,0,3,-1)
                  >9 liqRibNode::parseVectorAttributes(pointLight1,,2)
                  >9 liqRibNode::parseVectorAttributes(pointLight1,,3)
                  >9 liqRibNode::parseVectorAttributes(pointLight1,,4)
                  >9 liqRibNode::findShadingGroup(|pointLight1|pointLightShape1,3)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pointLight1|pointLightShape1,3)
                    >10 liqRibLightData::liqRibLightData(|pointLight1|pointLightShape1)
                      >11 liqRibData::addAdditionalSurfaceParameters(pointLightShape1)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
              >7 liqRibHT::insert(|pointLight2|pointLightShape2,lframe,0,3,1,matrix,,-1)
                >8 liqRibHT::hash(|pointLight2|pointLightShape2,1)
                >8 liqRibHT::find(|pointLight2|pointLightShape2,|pointLight2|pointLightShape2,3)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pointLight2|pointLightShape2,0,3,-1)
                  >9 liqRibNode::parseVectorAttributes(pointLight2,,2)
                  >9 liqRibNode::parseVectorAttributes(pointLight2,,3)
                  >9 liqRibNode::parseVectorAttributes(pointLight2,,4)
                  >9 liqRibNode::findShadingGroup(|pointLight2|pointLightShape2,3)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pointLight2|pointLightShape2,3)
                    >10 liqRibLightData::liqRibLightData(|pointLight2|pointLightShape2)
                      >11 liqRibData::addAdditionalSurfaceParameters(pointLightShape2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 tLocatorMgr::scanScene(7,0,htable__,count__,returnStatus__)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,7,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,7,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,7,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,7,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,7,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,7,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,7,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,7,0,&count)
              >7 liqRibHT::insert(|persp|perspShape,lframe,0,0,2,matrix,,-1)
                >8 liqRibHT::hash(|persp|perspShape,2)
                >8 liqRibHT::find(|persp|perspShape,|persp|perspShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|persp|perspShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(persp,,2)
                  >9 liqRibNode::parseVectorAttributes(persp,,3)
                  >9 liqRibNode::parseVectorAttributes(persp,,4)
                  >9 liqRibNode::findShadingGroup(|persp|perspShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|persp|perspShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,7,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,7,0,&count)
              >7 liqRibHT::insert(|top|topShape,lframe,0,0,3,matrix,,-1)
                >8 liqRibHT::hash(|top|topShape,3)
                >8 liqRibHT::find(|top|topShape,|top|topShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|top|topShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(top,,2)
                  >9 liqRibNode::parseVectorAttributes(top,,3)
                  >9 liqRibNode::parseVectorAttributes(top,,4)
                  >9 liqRibNode::findShadingGroup(|top|topShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|top|topShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,7,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,7,0,&count)
              >7 liqRibHT::insert(|front|frontShape,lframe,0,0,4,matrix,,-1)
                >8 liqRibHT::hash(|front|frontShape,4)
                >8 liqRibHT::find(|front|frontShape,|front|frontShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|front|frontShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(front,,2)
                  >9 liqRibNode::parseVectorAttributes(front,,3)
                  >9 liqRibNode::parseVectorAttributes(front,,4)
                  >9 liqRibNode::findShadingGroup(|front|frontShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|front|frontShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,7,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,7,0,&count)
              >7 liqRibHT::insert(|side|sideShape,lframe,0,0,5,matrix,,-1)
                >8 liqRibHT::hash(|side|sideShape,5)
                >8 liqRibHT::find(|side|sideShape,|side|sideShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|side|sideShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(side,,2)
                  >9 liqRibNode::parseVectorAttributes(side,,3)
                  >9 liqRibNode::parseVectorAttributes(side,,4)
                  >9 liqRibNode::findShadingGroup(|side|sideShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|side|sideShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,7,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,7,0,&count)
              >7 liqRibHT::insert(|pPlane2|pPlaneShape11,lframe,0,0,6,matrix,,-1)
                >8 liqRibHT::hash(|pPlane2|pPlaneShape11,6)
                >8 liqRibHT::find(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pPlane2|pPlaneShape11,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(pPlane2,,2)
                  >9 liqRibNode::parseVectorAttributes(pPlane2,,3)
                  >9 liqRibNode::parseVectorAttributes(pPlane2,,4)
                  >9 liqRibNode::findShadingGroup(|pPlane2|pPlaneShape11,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getColor(&shader,&color)
                  >9 liqRibNode::getOpacity(&shader,&color)
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pPlane2|pPlaneShape11,0)
                    >10 liqRibMeshData::liqRibMeshData(|pPlane2|pPlaneShape11)
                      >11 liqRibData::addAdditionalSurfaceParameters(pPlaneShape11)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,7,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,7,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,7,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,7,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,7,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,7,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,7,0,&count)
              >7 liqRibHT::insert(|camera1_group|camera1|cameraShape1,lframe,0,0,7,matrix,,-1)
                >8 liqRibHT::hash(|camera1_group|camera1|cameraShape1,7)
                >8 liqRibHT::find(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|camera1_group|camera1|cameraShape1,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(camera1,,2)
                  >9 liqRibNode::parseVectorAttributes(camera1,,3)
                  >9 liqRibNode::parseVectorAttributes(camera1,,4)
                  >9 liqRibNode::findShadingGroup(|camera1_group|camera1|cameraShape1,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|camera1_group|camera1|cameraShape1,0)
                    >10 liqRibCameraData::liqRibCameraData(|camera1_group|camera1|cameraShape1)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,7,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,7,0,&count)
              >7 liqRibHT::insert(|camera1_group|camera1_aim|camera1_aimShape,lframe,0,0,8,matrix,,-1)
                >8 liqRibHT::hash(|camera1_group|camera1_aim|camera1_aimShape,8)
                >8 liqRibHT::find(|camera1_group|camera1_aim|camera1_aimShape,|camera1_group|camera1_aim|camera1_aimShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|camera1_group|camera1_aim|camera1_aimShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(camera1_aim,,2)
                  >9 liqRibNode::parseVectorAttributes(camera1_aim,,3)
                  >9 liqRibNode::parseVectorAttributes(camera1_aim,,4)
                  >9 liqRibNode::findShadingGroup(|camera1_group|camera1_aim|camera1_aimShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|camera1_group|camera1_aim|camera1_aimShape,0)
            >6 liqRibTranslatorNew::dealwithParticleInstancedObjects(0,7,9)
            >6 liqRibTranslatorNew::getCameraData(iter__,0)
              >7 liqRibTranslator::getCameraInfo(|camera1_group|camera1|cameraShape1,)
                >8 liqRibTranslator::portFieldOfView(224,150,&horizontal,&vertical,&fnCamera)
                  >9 liqRibTranslator::computeViewingFrustum(1.49333,,&left,&right,&bottom,&top,|camera1_group|camera1|cameraShape1)
              >7 liqRibTranslator::getCameraFilmOffset(|camera1_group|camera1|cameraShape1,)
              >7 liqRibTranslator::getCameraTransform(|camera1_group|camera1|cameraShape1,)
          >5 liqRibTranslatorNew::doTextures(size=0)
            >6 Renderer::frameEpilogue(txtList_.size=0)
          >5 liqRibTranslatorNew::doShadows(size=0)
            >6 Renderer::doShadows(shadowList_.size=0)
          >5 Renderer::setRenderScriptFormatAndCompress(0,0)
          >5 Renderer::isHeroPassReady(cameraShape1)
          >5 Renderer::HeroPassBegin(cameraShape1)
          >5 tHeroRibWriterMgr::write(liqglo___,cameraShape1,7,0)
            >6 liqRibTranslatorNew::ribPrologue__(cameraShape1)
              >7 Renderer::ribPrologue_begin(cameraShape1)
                >8 Renderer::dummyPhongShader()
              >7 Renderer::ribPrologue_comment(2.3.5 (buildtime=20:51:12.30),R:/MyDocuments/maya/projects/default/checker_anim,yaoyansi,time)
              >7 Renderer::ribPrologue_options(cameraShape1)
            >6 liqRibTranslatorNew::framePrologue__(7,cameraShape1)
              >7 Renderer::framePrologue(7,cameraShape1)
            >6 ShaderMgr::exportShaderGraph()
              >7 ConvertShadingNetwork::exportShaderGraph()
                >8 ConvertShadingNetwork::beforeExport()
                >8 ConvertShadingNetwork::__export()
                  >9 ConvertShadingNetwork::canShadingGroupExported(phong1SG)
                  >9 Renderer::getValidShaderPlugsInShadingGroup()
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,surfaceShader)
                    >10 ConvertShadingNetwork::canShaderExported(phong1)
                    >10 ConvertShadingNetwork::exportShaderBegin(phong1)
                    >10 ConvertShadingNetwork::convertShadingNetworkToRSL(phong1,surfaceShader)
                      >11 Visitor::initShaderData(phong1,surfaceShader)
                      >11 ConvertShadingNetwork::getUpstreamConvertibleNodes(phong1, nodes, numConnections)
                        >12 ConvertShadingNetwork::nodeIsConvertible(phong1)
                          >13 ShaderMgr::hasShaderType(phong)
                        >12 ShaderMgr::getValidConnection(phong1)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.color)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraX)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraX)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraY)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraY)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraZ)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraZ)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                          >13 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                            >14 ShaderMgr::hasShaderType(shadingEngine)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                        >12 ConvertShadingNetwork::getUpstreamConvertibleNodes(checker1, nodes, numConnections)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                          >13 ShaderMgr::getValidConnection(checker1)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1R)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1R)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1G)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1G)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1B)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1B)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2R)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2R)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2G)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2G)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2B)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2B)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.uCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.uCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.vCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.vCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                              >15 ShaderMgr::hasShaderType(place2dTexture)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                            >14 ConvertShadingNetwork::nodeIsConvertible(phong1)
                              >15 ShaderMgr::hasShaderType(phong)
                          >13 ConvertShadingNetwork::getUpstreamConvertibleNodes(place2dTexture1, nodes, numConnections)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                              >15 ShaderMgr::hasShaderType(place2dTexture)
                            >14 ShaderMgr::getValidConnection(place2dTexture1)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uCoord)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uCoord)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.vCoord)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.vCoord)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverage)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverage)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseUV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseUV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offset)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offset)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                              >15 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                                >16 ShaderMgr::hasShaderType(animCurveTU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                              >15 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                                >16 ShaderMgr::hasShaderType(animCurveTU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatUV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatUV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrame)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrame)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                              >15 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                >16 ShaderMgr::hasShaderType(checker)
                      >11 Visitor::preOutput(phong1)
                      >11 Visitor::outputBegin(phong1)
                      >11 ConvertShadingNetwork::traverseGraphAndOutputNodeFunctions( nodes, numConnections)
                        >12 Visitor::outputUpstreamShader(place2dTexture1)
                          >13 ShaderOutputVisitor::_outputUpstreamShader(place2dTexture1,place2dTexture)
                            >14 Visitor::visitPlace2dTexture(place2dTexture1)
                              >15 OutputHelper::beginRSL(maya_place2dTexture,place2dTexture1)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.uvCoord)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.coverageU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.coverageV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.mirrorU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.mirrorV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.noiseU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.noiseV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.offsetU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.offsetV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.repeatU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                                    >18 ShaderMgr::hasShaderType(animCurveTU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.repeatV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                                    >18 ShaderMgr::hasShaderType(animCurveTU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.rotateFrame)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.rotateUV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.stagger)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.translateFrameU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.translateFrameV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.wrapU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.wrapV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.outUV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                    >18 ShaderMgr::hasShaderType(checker)
                              >15 OutputHelper::endRSL()
                        >12 ShaderMgr::getValidConnection(place2dTexture1)
                        >12 ConvertShadingNetwork::decrementDownstreamConnections(place2dTexture1, nodes, numConnections, validConnections)
                        >12 ConvertShadingNetwork::getNodeVariables(place2dTexture1, validConnections,  inputSrc, inputDes, outputSrc)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.vCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.vCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverage)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverage)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offset)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offset)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                              >15 ShaderMgr::hasShaderType(animCurveTU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                              >15 ShaderMgr::hasShaderType(animCurveTU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrame)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrame)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                            >14 ConvertShadingNetwork::nodeIsConvertible(checker1)
                              >15 ShaderMgr::hasShaderType(checker)
                          >13 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture1,outUV,place2dTexture1.outUV, outputVars)
                            >14 Visitor::addShaderMethodVariavles(place2dTexture1,outUV,float,2,)
                        >12 Visitor::addShaderMethodBody(place2dTexture1,,,place2dTexture1.outUV124)
                        >12 Visitor::outputUpstreamShader(checker1)
                          >13 ShaderOutputVisitor::_outputUpstreamShader(checker1,checker)
                            >14 Visitor::visitChecker(checker1)
                              >15 OutputHelper::beginRSL(maya_checker,checker1)
                              >15 ShaderMgr::convertibleConnection(checker1.alphaGain)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                              >15 ShaderMgr::convertibleConnection(checker1.alphaIsLuminance)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                              >15 ShaderMgr::convertibleConnection(checker1.alphaOffset)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                              >15 ShaderMgr::convertibleConnection(checker1.color1)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                              >15 ShaderMgr::convertibleConnection(checker1.color2)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                              >15 ShaderMgr::convertibleConnection(checker1.colorGain)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                              >15 ShaderMgr::convertibleConnection(checker1.colorOffset)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                              >15 ShaderMgr::convertibleConnection(checker1.contrast)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                              >15 ShaderMgr::convertibleConnection(checker1.defaultColor)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                              >15 ShaderMgr::convertibleConnection(checker1.filter)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                              >15 ShaderMgr::convertibleConnection(checker1.filterOffset)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                              >15 ShaderMgr::convertibleConnection(checker1.invert)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                              >15 ShaderMgr::convertibleConnection(checker1.uvCoord)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                                    >18 ShaderMgr::hasShaderType(place2dTexture)
                              >15 ShaderMgr::convertibleConnection(checker1.outAlpha)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                              >15 ShaderMgr::convertibleConnection(checker1.outColor)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(phong1)
                                    >18 ShaderMgr::hasShaderType(phong)
                              >15 OutputHelper::endRSL()
                        >12 ShaderMgr::getValidConnection(checker1)
                        >12 ConvertShadingNetwork::decrementDownstreamConnections(checker1, nodes, numConnections, validConnections)
                        >12 ConvertShadingNetwork::getNodeVariables(checker1, validConnections,  inputSrc, inputDes, outputSrc)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1R)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1R)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1G)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1G)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1B)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1B)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2R)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2R)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2G)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2G)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2B)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2B)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.uCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.uCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.vCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.vCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                              >15 ShaderMgr::hasShaderType(place2dTexture)
                          >13 ConvertShadingNetwork::addNodeInputVariable(checker1.uvCoord, inputSrc, inputDes)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                              >15 ShaderMgr::hasShaderType(place2dTexture)
                            >14 ShaderMgr::getValidConnection(place2dTexture1)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                            >14 ConvertShadingNetwork::nodeIsConvertible(phong1)
                              >15 ShaderMgr::hasShaderType(phong)
                          >13 ConvertShadingNetwork::addNodeOutputVariable(checker1,outColor,checker1.outColor, outputVars)
                            >14 Visitor::addShaderMethodVariavles(checker1,outColor,color,-1,)
                        >12 Visitor::addShaderMethodBody(checker1,place2dTexture1.outUV124,checker1.uvCoord124,checker1.outColor124)
                        >12 Visitor::outputUpstreamShader(phong1)
                          >13 ShaderOutputVisitor::_outputUpstreamShader(phong1,phong)
                            >14 Visitor::visitPhong(phong1)
                              >15 OutputHelper::beginRSL(maya_phong,phong1)
                              >15 ShaderMgr::convertibleConnection(phong1.ambientColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                              >15 ShaderMgr::convertibleConnection(phong1.color)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.color)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                    >18 ShaderMgr::hasShaderType(checker)
                              >15 ShaderMgr::convertibleConnection(phong1.cosinePower)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                              >15 ShaderMgr::convertibleConnection(phong1.diffuse)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                              >15 ShaderMgr::convertibleConnection(phong1.incandescence)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                              >15 ShaderMgr::convertibleConnection(phong1.matteOpacityMode)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                              >15 ShaderMgr::convertibleConnection(phong1.matteOpacity)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                              >15 OutputHelper::add_liq_UserDefinedNormal(phong1)
                              >15 ShaderMgr::convertibleConnection(phong1.normalCamera)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                              >15 ShaderMgr::convertibleConnection(phong1.specularColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                              >15 ShaderMgr::convertibleConnection(phong1.reflectivity)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                              >15 ShaderMgr::convertibleConnection(phong1.reflectedColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                              >15 ShaderMgr::convertibleConnection(phong1.reflectionLimit)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                              >15 ShaderMgr::convertibleConnection(phong1.translucence)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                              >15 ShaderMgr::convertibleConnection(phong1.translucenceDepth)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                              >15 ShaderMgr::convertibleConnection(phong1.translucenceFocus)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                              >15 ShaderMgr::convertibleConnection(phong1.transparency)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                              >15 ShaderMgr::convertibleConnection(phong1.outColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                                    >18 ShaderMgr::hasShaderType(shadingEngine)
                              >15 ShaderMgr::convertibleConnection(phong1.outTransparency)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                              >15 OutputHelper::endRSL()
                        >12 ShaderMgr::getValidConnection(phong1)
                        >12 ConvertShadingNetwork::decrementDownstreamConnections(phong1, nodes, numConnections, validConnections)
                        >12 ConvertShadingNetwork::getNodeVariables(phong1, validConnections,  inputSrc, inputDes, outputSrc)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.colorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.colorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.colorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.colorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.colorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.colorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.color)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                            >14 ConvertShadingNetwork::nodeIsConvertible(checker1)
                              >15 ShaderMgr::hasShaderType(checker)
                          >13 ConvertShadingNetwork::addNodeInputVariable(phong1.color, inputSrc, inputDes)
                            >14 ConvertShadingNetwork::nodeIsConvertible(checker1)
                              >15 ShaderMgr::hasShaderType(checker)
                            >14 ShaderMgr::getValidConnection(checker1)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.transparencyR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.transparencyG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.transparencyB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraX)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraX)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraY)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraY)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraZ)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraZ)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.specularColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.specularColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.specularColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                            >14 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                              >15 ShaderMgr::hasShaderType(shadingEngine)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                        >12 Visitor::addShaderMethodBody(phong1,checker1.outColor124,phong1.color124,)
                      >11 ConvertShadingNetwork::outputShaderMethod()
                        >12 Visitor::outputShaderMethod()
                      >11 Visitor::outputEnd()
                      >11 Visitor::postOutput()
                    >10 ConvertShadingNetwork::exportShaderEnd(phong1)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,displacementShader)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,volumeShader)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,liqShadowShader)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,liqEnvironmentShader)
                  >9 ConvertShadingNetwork::exportShadingGroupBegin(phong1SG)
                  >9 ConvertShadingNetwork::outputShadingGroup(phong1SG)
                    >10 Visitor::outputShadingGroup(phong1SG)
                  >9 ConvertShadingNetwork::exportShadingGroupEnd(phong1SG)
                >8  ConvertShadingNetwork::afterExport()
            >6 liqRibTranslatorNew::worldPrologue__(cameraShape1)
              >7 Renderer::worldPrologue(cameraShape1)
            >6 liqRibTranslatorNew::lightBlock__(cameraShape1)
              >7 Renderer::writeLight_pre(|pointLight1|pointLightShape1,cameraShape1)
              >7 liqRibObj::writeObject(,cameraShape1,0)
                >8 liqRibLightData::write(,job=cameraShape1,0)
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::write(|pointLight1|pointLightShape1,,cameraShape1,ref=0)
                      >11 liqRibData::getFullPathName()
                    >10 er_writeLightData.cpp::_write(|pointLight1|pointLightShape1,cameraShape1,...)
                      >11 Renderer::exportPointLight(pointlight,pointLightShape1,...)
                        >12 addLightGroupForLight(|pointLight1|pointLightShape1)
              >7 Renderer::writeLight_post(|pointLight1|pointLightShape1,cameraShape1)
              >7 Renderer::writeLight_pre(|pointLight2|pointLightShape2,cameraShape1)
              >7 liqRibObj::writeObject(,cameraShape1,0)
                >8 liqRibLightData::write(,job=cameraShape1,0)
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::write(|pointLight2|pointLightShape2,,cameraShape1,ref=0)
                      >11 liqRibData::getFullPathName()
                    >10 er_writeLightData.cpp::_write(|pointLight2|pointLightShape2,cameraShape1,...)
                      >11 Renderer::exportPointLight(pointlight,pointLightShape2,...)
                        >12 addLightGroupForLight(|pointLight2|pointLightShape2)
              >7 Renderer::writeLight_post(|pointLight2|pointLightShape2,cameraShape1)
            >6 liqRibTranslatorNew::coordSysBlock__(cameraShape1)
              >7 Renderer::coordSysBlock__(cameraShape1)
            >6 liqRibTranslatorNew::objectBlock__(cameraShape1)
              >7 liqRibTranslatorNew::objectBlock_data(cameraShape1)
                >8 liqRibTranslatorNew::getShadowSetObject(cameraShape1)
                >8 liqRibTranslatorNew::oneObjectBlock_data(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::exportOneObject_data(|pPlane2|pPlaneShape11,cameraShape1)
                    >10 Renderer::_writeObject(|pPlane2|pPlaneShape11,cameraShape1,0,0,0)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.7.rib,cameraShape1,0)
                        >12 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.7.rib,job=cameraShape1,0)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|pPlane2|pPlaneShape11,R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.7.rib,cameraShape1,ref=0)
                              >15 liqRibData::getFullPathName()
                            >14 er_writeMeshData.cpp::_write1(|pPlane2|pPlaneShape11,cameraShape1)
                              >15 liqRibHT::find(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                              >15 _exportVertexFromNodePlug(|pPlane2|pPlaneShape11,0)
                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqRibData::getFullPathName()
                >8 liqRibTranslatorNew::oneObjectBlock_data(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 Renderer::exportOneObject_data(|camera1_group|camera1|cameraShape1,cameraShape1)
                    >10 Renderer::_writeObject(|camera1_group|camera1|cameraShape1,cameraShape1,0,0,0)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_camera1_group_camera1_cameraShape1.7.rib,cameraShape1,0)
                        >12 liqRibCameraData::write(R:/MyDocuments/maya/projects/default/rib/_camera1_group_camera1_cameraShape1.7.rib,job=cameraShape1,0)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|camera1_group|camera1|cameraShape1,R:/MyDocuments/maya/projects/default/rib/_camera1_group_camera1_cameraShape1.7.rib,cameraShape1,ref=0)
                              >15 liqRibData::getFullPathName()
                            >14 er_writeCameraData.cpp::_write_camera(|camera1_group|camera1|cameraShape1,cameraShape1)
                              >15 liqRibHT::find(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,0)
                              >15 Renderer::gatherCameraShaders(cameraShaders.size=0,|camera1_group|camera1|cameraShape1,liqEnvironmentShader)
                              >15 Renderer::cameraOutput(cameraShape1)
              >7 liqRibTranslatorNew::objectBlock_reference(cameraShape1)
                >8 Renderer::objectBlock_reference_begin()
                >8 liqRibTranslatorNew::preGeometryMel()
                  >9 Renderer::preGeometryMel()
                >8 liqRibTranslatorNew::getShadowSetObject(cameraShape1)
                >8 liqRibTranslatorNew::oneObjectBlock_reference(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_begin(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_block0(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 liqRibTranslatorNew::tRiIlluminate(cameraShape1,|pPlane2|pPlaneShape11)
                    >10 Renderer::exportLightLinks(cameraShape1,|pPlane2|pPlaneShape11,lightedByWhichLightShapes.size=2)
                  >9 liqRibTranslatorNew::checkSurfaceShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                  >9 liqRibTranslatorNew::checkDisplacementShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                  >9 liqRibTranslatorNew::checkVolumeShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                  >9 Renderer::oneObjectBlock_reference_attribute_block1(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 liqRibTranslatorNew::writeShader_(1,|pPlane2|pPlaneShape11,v=0,s=0,c=0,,|pPlane2|pPlaneShape11,cameraShape1)
                    >10 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                  >9 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|pPlane2|pPlaneShape11)
                  >9 Renderer::exportOneObject_reference(|pPlane2|pPlaneShape11,cameraShape1)
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::oneObjectBlock_reference_attribute_end(|pPlane2|pPlaneShape11,cameraShape1)
                >8 liqRibTranslatorNew::oneObjectBlock_reference(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_begin(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_block0(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 liqRibTranslatorNew::tRiIlluminate(cameraShape1,|camera1_group|camera1|cameraShape1)
                    >10 Renderer::exportLightLinks(cameraShape1,|camera1_group|camera1|cameraShape1,lightedByWhichLightShapes.size=0)
                  >9 liqRibTranslatorNew::checkSurfaceShader(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,,,)
                  >9 liqRibTranslatorNew::checkDisplacementShader(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,,,)
                  >9 liqRibTranslatorNew::checkVolumeShader(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,,,)
                  >9 Renderer::oneObjectBlock_reference_attribute_block1(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 liqRibTranslatorNew::writeShader_(1,|camera1_group|camera1|cameraShape1,v=0,s=0,c=0,,|camera1_group|camera1|cameraShape1,cameraShape1)
                    >10 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,0)
                  >9 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|camera1_group|camera1|cameraShape1)
                  >9 Renderer::exportOneObject_reference(|camera1_group|camera1|cameraShape1,cameraShape1)
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::oneObjectBlock_reference_attribute_end(|camera1_group|camera1|cameraShape1,cameraShape1)
                >8 Renderer::objectBlock_reference_end()
            >6 liqRibTranslatorNew::worldEpilogue__()
              >7 liqRibTranslator::worldEpilogue()
                >8 Renderer::worldEpilogue()
            >6 liqRibTranslatorNew::frameEpilogue__(7)
              >7 Renderer::frameEpilogue(7)
            >6 liqRibTranslatorNew::ribEpilogue__(cameraShape1)
              >7 Renderer::ribPrologue_end(cameraShape1)
                >8 Renderer::cookInstanceGroup()
                >8 Renderer::render()
                  >9 Renderer::renderPreview(200,150,0,0,cameraShape1,cameraShape1,cameraShape1_option)
                    >10 Renderer::_renderPreview(200,150,0,0,cameraShape1,|camera1_group|camera1,cameraShape1_option)
          >5 Renderer::HeroPassEnd(cameraShape1)
        >4 liqRenderScript::addJob(job.title=checker_animFrame6,0)
          >5 liqRenderScript::popNextJobID()
        >4 tFrameScriptJobMgr::setCommonParameters(checker_animFrame7)
        >4 liqRibTranslatorNew::processOneFrame(7, liqglo__)
          >5 liqRibTranslatorNew::buildJobs__()
            >6 liqRibTranslatorNew::buildShadowJobs__()
              >7 tJobScriptMgr::buildShadowJob(thisJob___, 0)
              >7 tJobScriptMgr::buildShadowCameraJob(thisJob___, 0)
            >6 tRibCameraMgr::gatherDataForJob(liqglo___, ,jobList__,0,1)
            >6 liqRibTranslator::generateFileName(4,cameraShape1)
            >6 liqRibTranslator::generateFileName(5,cameraShape1)
              >7 liqRibTranslator::generateImageName(, job(cameraShape1)), 
          >5 liqRibTranslatorNew::calaculateSamplingTime(8)
          >5 liqRibTranslatorNew::scanScene__(8,0)
            >6 tJobScriptMgr::scanScene(8,0, htable__, count, returnStatus__)
              >7 liqRibHT::insert(|pointLight1|pointLightShape1,lframe,0,3,0,matrix,,-1)
                >8 liqRibHT::hash(|pointLight1|pointLightShape1,0)
                >8 liqRibHT::find(|pointLight1|pointLightShape1,|pointLight1|pointLightShape1,3)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pointLight1|pointLightShape1,0,3,-1)
                  >9 liqRibNode::parseVectorAttributes(pointLight1,,2)
                  >9 liqRibNode::parseVectorAttributes(pointLight1,,3)
                  >9 liqRibNode::parseVectorAttributes(pointLight1,,4)
                  >9 liqRibNode::findShadingGroup(|pointLight1|pointLightShape1,3)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pointLight1|pointLightShape1,3)
                    >10 liqRibLightData::liqRibLightData(|pointLight1|pointLightShape1)
                      >11 liqRibData::addAdditionalSurfaceParameters(pointLightShape1)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
              >7 liqRibHT::insert(|pointLight2|pointLightShape2,lframe,0,3,1,matrix,,-1)
                >8 liqRibHT::hash(|pointLight2|pointLightShape2,1)
                >8 liqRibHT::find(|pointLight2|pointLightShape2,|pointLight2|pointLightShape2,3)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pointLight2|pointLightShape2,0,3,-1)
                  >9 liqRibNode::parseVectorAttributes(pointLight2,,2)
                  >9 liqRibNode::parseVectorAttributes(pointLight2,,3)
                  >9 liqRibNode::parseVectorAttributes(pointLight2,,4)
                  >9 liqRibNode::findShadingGroup(|pointLight2|pointLightShape2,3)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pointLight2|pointLightShape2,3)
                    >10 liqRibLightData::liqRibLightData(|pointLight2|pointLightShape2)
                      >11 liqRibData::addAdditionalSurfaceParameters(pointLightShape2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 tLocatorMgr::scanScene(8,0,htable__,count__,returnStatus__)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,8,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,8,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,8,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,8,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,8,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,8,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,8,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,8,0,&count)
              >7 liqRibHT::insert(|persp|perspShape,lframe,0,0,2,matrix,,-1)
                >8 liqRibHT::hash(|persp|perspShape,2)
                >8 liqRibHT::find(|persp|perspShape,|persp|perspShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|persp|perspShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(persp,,2)
                  >9 liqRibNode::parseVectorAttributes(persp,,3)
                  >9 liqRibNode::parseVectorAttributes(persp,,4)
                  >9 liqRibNode::findShadingGroup(|persp|perspShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|persp|perspShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,8,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,8,0,&count)
              >7 liqRibHT::insert(|top|topShape,lframe,0,0,3,matrix,,-1)
                >8 liqRibHT::hash(|top|topShape,3)
                >8 liqRibHT::find(|top|topShape,|top|topShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|top|topShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(top,,2)
                  >9 liqRibNode::parseVectorAttributes(top,,3)
                  >9 liqRibNode::parseVectorAttributes(top,,4)
                  >9 liqRibNode::findShadingGroup(|top|topShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|top|topShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,8,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,8,0,&count)
              >7 liqRibHT::insert(|front|frontShape,lframe,0,0,4,matrix,,-1)
                >8 liqRibHT::hash(|front|frontShape,4)
                >8 liqRibHT::find(|front|frontShape,|front|frontShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|front|frontShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(front,,2)
                  >9 liqRibNode::parseVectorAttributes(front,,3)
                  >9 liqRibNode::parseVectorAttributes(front,,4)
                  >9 liqRibNode::findShadingGroup(|front|frontShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|front|frontShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,8,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,8,0,&count)
              >7 liqRibHT::insert(|side|sideShape,lframe,0,0,5,matrix,,-1)
                >8 liqRibHT::hash(|side|sideShape,5)
                >8 liqRibHT::find(|side|sideShape,|side|sideShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|side|sideShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(side,,2)
                  >9 liqRibNode::parseVectorAttributes(side,,3)
                  >9 liqRibNode::parseVectorAttributes(side,,4)
                  >9 liqRibNode::findShadingGroup(|side|sideShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|side|sideShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,8,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,8,0,&count)
              >7 liqRibHT::insert(|pPlane2|pPlaneShape11,lframe,0,0,6,matrix,,-1)
                >8 liqRibHT::hash(|pPlane2|pPlaneShape11,6)
                >8 liqRibHT::find(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pPlane2|pPlaneShape11,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(pPlane2,,2)
                  >9 liqRibNode::parseVectorAttributes(pPlane2,,3)
                  >9 liqRibNode::parseVectorAttributes(pPlane2,,4)
                  >9 liqRibNode::findShadingGroup(|pPlane2|pPlaneShape11,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getColor(&shader,&color)
                  >9 liqRibNode::getOpacity(&shader,&color)
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pPlane2|pPlaneShape11,0)
                    >10 liqRibMeshData::liqRibMeshData(|pPlane2|pPlaneShape11)
                      >11 liqRibData::addAdditionalSurfaceParameters(pPlaneShape11)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,8,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,8,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,8,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,8,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,8,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,8,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,8,0,&count)
              >7 liqRibHT::insert(|camera1_group|camera1|cameraShape1,lframe,0,0,7,matrix,,-1)
                >8 liqRibHT::hash(|camera1_group|camera1|cameraShape1,7)
                >8 liqRibHT::find(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|camera1_group|camera1|cameraShape1,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(camera1,,2)
                  >9 liqRibNode::parseVectorAttributes(camera1,,3)
                  >9 liqRibNode::parseVectorAttributes(camera1,,4)
                  >9 liqRibNode::findShadingGroup(|camera1_group|camera1|cameraShape1,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|camera1_group|camera1|cameraShape1,0)
                    >10 liqRibCameraData::liqRibCameraData(|camera1_group|camera1|cameraShape1)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,8,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,8,0,&count)
              >7 liqRibHT::insert(|camera1_group|camera1_aim|camera1_aimShape,lframe,0,0,8,matrix,,-1)
                >8 liqRibHT::hash(|camera1_group|camera1_aim|camera1_aimShape,8)
                >8 liqRibHT::find(|camera1_group|camera1_aim|camera1_aimShape,|camera1_group|camera1_aim|camera1_aimShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|camera1_group|camera1_aim|camera1_aimShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(camera1_aim,,2)
                  >9 liqRibNode::parseVectorAttributes(camera1_aim,,3)
                  >9 liqRibNode::parseVectorAttributes(camera1_aim,,4)
                  >9 liqRibNode::findShadingGroup(|camera1_group|camera1_aim|camera1_aimShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|camera1_group|camera1_aim|camera1_aimShape,0)
            >6 liqRibTranslatorNew::dealwithParticleInstancedObjects(0,8,9)
            >6 liqRibTranslatorNew::getCameraData(iter__,0)
              >7 liqRibTranslator::getCameraInfo(|camera1_group|camera1|cameraShape1,)
                >8 liqRibTranslator::portFieldOfView(224,150,&horizontal,&vertical,&fnCamera)
                  >9 liqRibTranslator::computeViewingFrustum(1.49333,,&left,&right,&bottom,&top,|camera1_group|camera1|cameraShape1)
              >7 liqRibTranslator::getCameraFilmOffset(|camera1_group|camera1|cameraShape1,)
              >7 liqRibTranslator::getCameraTransform(|camera1_group|camera1|cameraShape1,)
          >5 liqRibTranslatorNew::doTextures(size=0)
            >6 Renderer::frameEpilogue(txtList_.size=0)
          >5 liqRibTranslatorNew::doShadows(size=0)
            >6 Renderer::doShadows(shadowList_.size=0)
          >5 Renderer::setRenderScriptFormatAndCompress(0,0)
          >5 Renderer::isHeroPassReady(cameraShape1)
          >5 Renderer::HeroPassBegin(cameraShape1)
          >5 tHeroRibWriterMgr::write(liqglo___,cameraShape1,8,0)
            >6 liqRibTranslatorNew::ribPrologue__(cameraShape1)
              >7 Renderer::ribPrologue_begin(cameraShape1)
                >8 Renderer::dummyPhongShader()
              >7 Renderer::ribPrologue_comment(2.3.5 (buildtime=20:51:12.30),R:/MyDocuments/maya/projects/default/checker_anim,yaoyansi,time)
              >7 Renderer::ribPrologue_options(cameraShape1)
            >6 liqRibTranslatorNew::framePrologue__(8,cameraShape1)
              >7 Renderer::framePrologue(8,cameraShape1)
            >6 ShaderMgr::exportShaderGraph()
              >7 ConvertShadingNetwork::exportShaderGraph()
                >8 ConvertShadingNetwork::beforeExport()
                >8 ConvertShadingNetwork::__export()
                  >9 ConvertShadingNetwork::canShadingGroupExported(phong1SG)
                  >9 Renderer::getValidShaderPlugsInShadingGroup()
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,surfaceShader)
                    >10 ConvertShadingNetwork::canShaderExported(phong1)
                    >10 ConvertShadingNetwork::exportShaderBegin(phong1)
                    >10 ConvertShadingNetwork::convertShadingNetworkToRSL(phong1,surfaceShader)
                      >11 Visitor::initShaderData(phong1,surfaceShader)
                      >11 ConvertShadingNetwork::getUpstreamConvertibleNodes(phong1, nodes, numConnections)
                        >12 ConvertShadingNetwork::nodeIsConvertible(phong1)
                          >13 ShaderMgr::hasShaderType(phong)
                        >12 ShaderMgr::getValidConnection(phong1)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.color)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraX)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraX)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraY)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraY)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraZ)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraZ)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                          >13 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                            >14 ShaderMgr::hasShaderType(shadingEngine)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                        >12 ConvertShadingNetwork::getUpstreamConvertibleNodes(checker1, nodes, numConnections)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                          >13 ShaderMgr::getValidConnection(checker1)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1R)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1R)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1G)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1G)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1B)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1B)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2R)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2R)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2G)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2G)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2B)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2B)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.uCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.uCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.vCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.vCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                              >15 ShaderMgr::hasShaderType(place2dTexture)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                            >14 ConvertShadingNetwork::nodeIsConvertible(phong1)
                              >15 ShaderMgr::hasShaderType(phong)
                          >13 ConvertShadingNetwork::getUpstreamConvertibleNodes(place2dTexture1, nodes, numConnections)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                              >15 ShaderMgr::hasShaderType(place2dTexture)
                            >14 ShaderMgr::getValidConnection(place2dTexture1)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uCoord)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uCoord)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.vCoord)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.vCoord)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverage)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverage)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseUV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseUV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offset)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offset)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                              >15 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                                >16 ShaderMgr::hasShaderType(animCurveTU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                              >15 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                                >16 ShaderMgr::hasShaderType(animCurveTU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatUV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatUV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrame)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrame)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                              >15 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                >16 ShaderMgr::hasShaderType(checker)
                      >11 Visitor::preOutput(phong1)
                      >11 Visitor::outputBegin(phong1)
                      >11 ConvertShadingNetwork::traverseGraphAndOutputNodeFunctions( nodes, numConnections)
                        >12 Visitor::outputUpstreamShader(place2dTexture1)
                          >13 ShaderOutputVisitor::_outputUpstreamShader(place2dTexture1,place2dTexture)
                            >14 Visitor::visitPlace2dTexture(place2dTexture1)
                              >15 OutputHelper::beginRSL(maya_place2dTexture,place2dTexture1)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.uvCoord)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.coverageU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.coverageV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.mirrorU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.mirrorV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.noiseU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.noiseV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.offsetU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.offsetV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.repeatU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                                    >18 ShaderMgr::hasShaderType(animCurveTU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.repeatV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                                    >18 ShaderMgr::hasShaderType(animCurveTU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.rotateFrame)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.rotateUV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.stagger)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.translateFrameU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.translateFrameV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.wrapU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.wrapV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.outUV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                    >18 ShaderMgr::hasShaderType(checker)
                              >15 OutputHelper::endRSL()
                        >12 ShaderMgr::getValidConnection(place2dTexture1)
                        >12 ConvertShadingNetwork::decrementDownstreamConnections(place2dTexture1, nodes, numConnections, validConnections)
                        >12 ConvertShadingNetwork::getNodeVariables(place2dTexture1, validConnections,  inputSrc, inputDes, outputSrc)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.vCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.vCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverage)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverage)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offset)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offset)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                              >15 ShaderMgr::hasShaderType(animCurveTU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                              >15 ShaderMgr::hasShaderType(animCurveTU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrame)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrame)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                            >14 ConvertShadingNetwork::nodeIsConvertible(checker1)
                              >15 ShaderMgr::hasShaderType(checker)
                          >13 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture1,outUV,place2dTexture1.outUV, outputVars)
                            >14 Visitor::addShaderMethodVariavles(place2dTexture1,outUV,float,2,)
                        >12 Visitor::addShaderMethodBody(place2dTexture1,,,place2dTexture1.outUV124)
                        >12 Visitor::outputUpstreamShader(checker1)
                          >13 ShaderOutputVisitor::_outputUpstreamShader(checker1,checker)
                            >14 Visitor::visitChecker(checker1)
                              >15 OutputHelper::beginRSL(maya_checker,checker1)
                              >15 ShaderMgr::convertibleConnection(checker1.alphaGain)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                              >15 ShaderMgr::convertibleConnection(checker1.alphaIsLuminance)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                              >15 ShaderMgr::convertibleConnection(checker1.alphaOffset)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                              >15 ShaderMgr::convertibleConnection(checker1.color1)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                              >15 ShaderMgr::convertibleConnection(checker1.color2)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                              >15 ShaderMgr::convertibleConnection(checker1.colorGain)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                              >15 ShaderMgr::convertibleConnection(checker1.colorOffset)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                              >15 ShaderMgr::convertibleConnection(checker1.contrast)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                              >15 ShaderMgr::convertibleConnection(checker1.defaultColor)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                              >15 ShaderMgr::convertibleConnection(checker1.filter)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                              >15 ShaderMgr::convertibleConnection(checker1.filterOffset)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                              >15 ShaderMgr::convertibleConnection(checker1.invert)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                              >15 ShaderMgr::convertibleConnection(checker1.uvCoord)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                                    >18 ShaderMgr::hasShaderType(place2dTexture)
                              >15 ShaderMgr::convertibleConnection(checker1.outAlpha)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                              >15 ShaderMgr::convertibleConnection(checker1.outColor)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(phong1)
                                    >18 ShaderMgr::hasShaderType(phong)
                              >15 OutputHelper::endRSL()
                        >12 ShaderMgr::getValidConnection(checker1)
                        >12 ConvertShadingNetwork::decrementDownstreamConnections(checker1, nodes, numConnections, validConnections)
                        >12 ConvertShadingNetwork::getNodeVariables(checker1, validConnections,  inputSrc, inputDes, outputSrc)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1R)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1R)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1G)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1G)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1B)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1B)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2R)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2R)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2G)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2G)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2B)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2B)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.uCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.uCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.vCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.vCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                              >15 ShaderMgr::hasShaderType(place2dTexture)
                          >13 ConvertShadingNetwork::addNodeInputVariable(checker1.uvCoord, inputSrc, inputDes)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                              >15 ShaderMgr::hasShaderType(place2dTexture)
                            >14 ShaderMgr::getValidConnection(place2dTexture1)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                            >14 ConvertShadingNetwork::nodeIsConvertible(phong1)
                              >15 ShaderMgr::hasShaderType(phong)
                          >13 ConvertShadingNetwork::addNodeOutputVariable(checker1,outColor,checker1.outColor, outputVars)
                            >14 Visitor::addShaderMethodVariavles(checker1,outColor,color,-1,)
                        >12 Visitor::addShaderMethodBody(checker1,place2dTexture1.outUV124,checker1.uvCoord124,checker1.outColor124)
                        >12 Visitor::outputUpstreamShader(phong1)
                          >13 ShaderOutputVisitor::_outputUpstreamShader(phong1,phong)
                            >14 Visitor::visitPhong(phong1)
                              >15 OutputHelper::beginRSL(maya_phong,phong1)
                              >15 ShaderMgr::convertibleConnection(phong1.ambientColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                              >15 ShaderMgr::convertibleConnection(phong1.color)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.color)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                    >18 ShaderMgr::hasShaderType(checker)
                              >15 ShaderMgr::convertibleConnection(phong1.cosinePower)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                              >15 ShaderMgr::convertibleConnection(phong1.diffuse)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                              >15 ShaderMgr::convertibleConnection(phong1.incandescence)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                              >15 ShaderMgr::convertibleConnection(phong1.matteOpacityMode)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                              >15 ShaderMgr::convertibleConnection(phong1.matteOpacity)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                              >15 OutputHelper::add_liq_UserDefinedNormal(phong1)
                              >15 ShaderMgr::convertibleConnection(phong1.normalCamera)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                              >15 ShaderMgr::convertibleConnection(phong1.specularColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                              >15 ShaderMgr::convertibleConnection(phong1.reflectivity)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                              >15 ShaderMgr::convertibleConnection(phong1.reflectedColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                              >15 ShaderMgr::convertibleConnection(phong1.reflectionLimit)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                              >15 ShaderMgr::convertibleConnection(phong1.translucence)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                              >15 ShaderMgr::convertibleConnection(phong1.translucenceDepth)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                              >15 ShaderMgr::convertibleConnection(phong1.translucenceFocus)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                              >15 ShaderMgr::convertibleConnection(phong1.transparency)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                              >15 ShaderMgr::convertibleConnection(phong1.outColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                                    >18 ShaderMgr::hasShaderType(shadingEngine)
                              >15 ShaderMgr::convertibleConnection(phong1.outTransparency)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                              >15 OutputHelper::endRSL()
                        >12 ShaderMgr::getValidConnection(phong1)
                        >12 ConvertShadingNetwork::decrementDownstreamConnections(phong1, nodes, numConnections, validConnections)
                        >12 ConvertShadingNetwork::getNodeVariables(phong1, validConnections,  inputSrc, inputDes, outputSrc)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.colorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.colorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.colorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.colorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.colorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.colorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.color)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                            >14 ConvertShadingNetwork::nodeIsConvertible(checker1)
                              >15 ShaderMgr::hasShaderType(checker)
                          >13 ConvertShadingNetwork::addNodeInputVariable(phong1.color, inputSrc, inputDes)
                            >14 ConvertShadingNetwork::nodeIsConvertible(checker1)
                              >15 ShaderMgr::hasShaderType(checker)
                            >14 ShaderMgr::getValidConnection(checker1)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.transparencyR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.transparencyG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.transparencyB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraX)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraX)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraY)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraY)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraZ)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraZ)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.specularColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.specularColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.specularColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                            >14 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                              >15 ShaderMgr::hasShaderType(shadingEngine)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                        >12 Visitor::addShaderMethodBody(phong1,checker1.outColor124,phong1.color124,)
                      >11 ConvertShadingNetwork::outputShaderMethod()
                        >12 Visitor::outputShaderMethod()
                      >11 Visitor::outputEnd()
                      >11 Visitor::postOutput()
                    >10 ConvertShadingNetwork::exportShaderEnd(phong1)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,displacementShader)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,volumeShader)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,liqShadowShader)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,liqEnvironmentShader)
                  >9 ConvertShadingNetwork::exportShadingGroupBegin(phong1SG)
                  >9 ConvertShadingNetwork::outputShadingGroup(phong1SG)
                    >10 Visitor::outputShadingGroup(phong1SG)
                  >9 ConvertShadingNetwork::exportShadingGroupEnd(phong1SG)
                >8  ConvertShadingNetwork::afterExport()
            >6 liqRibTranslatorNew::worldPrologue__(cameraShape1)
              >7 Renderer::worldPrologue(cameraShape1)
            >6 liqRibTranslatorNew::lightBlock__(cameraShape1)
              >7 Renderer::writeLight_pre(|pointLight1|pointLightShape1,cameraShape1)
              >7 liqRibObj::writeObject(,cameraShape1,0)
                >8 liqRibLightData::write(,job=cameraShape1,0)
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::write(|pointLight1|pointLightShape1,,cameraShape1,ref=0)
                      >11 liqRibData::getFullPathName()
                    >10 er_writeLightData.cpp::_write(|pointLight1|pointLightShape1,cameraShape1,...)
                      >11 Renderer::exportPointLight(pointlight,pointLightShape1,...)
                        >12 addLightGroupForLight(|pointLight1|pointLightShape1)
              >7 Renderer::writeLight_post(|pointLight1|pointLightShape1,cameraShape1)
              >7 Renderer::writeLight_pre(|pointLight2|pointLightShape2,cameraShape1)
              >7 liqRibObj::writeObject(,cameraShape1,0)
                >8 liqRibLightData::write(,job=cameraShape1,0)
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::write(|pointLight2|pointLightShape2,,cameraShape1,ref=0)
                      >11 liqRibData::getFullPathName()
                    >10 er_writeLightData.cpp::_write(|pointLight2|pointLightShape2,cameraShape1,...)
                      >11 Renderer::exportPointLight(pointlight,pointLightShape2,...)
                        >12 addLightGroupForLight(|pointLight2|pointLightShape2)
              >7 Renderer::writeLight_post(|pointLight2|pointLightShape2,cameraShape1)
            >6 liqRibTranslatorNew::coordSysBlock__(cameraShape1)
              >7 Renderer::coordSysBlock__(cameraShape1)
            >6 liqRibTranslatorNew::objectBlock__(cameraShape1)
              >7 liqRibTranslatorNew::objectBlock_data(cameraShape1)
                >8 liqRibTranslatorNew::getShadowSetObject(cameraShape1)
                >8 liqRibTranslatorNew::oneObjectBlock_data(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::exportOneObject_data(|pPlane2|pPlaneShape11,cameraShape1)
                    >10 Renderer::_writeObject(|pPlane2|pPlaneShape11,cameraShape1,0,0,0)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.8.rib,cameraShape1,0)
                        >12 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.8.rib,job=cameraShape1,0)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|pPlane2|pPlaneShape11,R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.8.rib,cameraShape1,ref=0)
                              >15 liqRibData::getFullPathName()
                            >14 er_writeMeshData.cpp::_write1(|pPlane2|pPlaneShape11,cameraShape1)
                              >15 liqRibHT::find(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                              >15 _exportVertexFromNodePlug(|pPlane2|pPlaneShape11,0)
                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqRibData::getFullPathName()
                >8 liqRibTranslatorNew::oneObjectBlock_data(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 Renderer::exportOneObject_data(|camera1_group|camera1|cameraShape1,cameraShape1)
                    >10 Renderer::_writeObject(|camera1_group|camera1|cameraShape1,cameraShape1,0,0,0)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_camera1_group_camera1_cameraShape1.8.rib,cameraShape1,0)
                        >12 liqRibCameraData::write(R:/MyDocuments/maya/projects/default/rib/_camera1_group_camera1_cameraShape1.8.rib,job=cameraShape1,0)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|camera1_group|camera1|cameraShape1,R:/MyDocuments/maya/projects/default/rib/_camera1_group_camera1_cameraShape1.8.rib,cameraShape1,ref=0)
                              >15 liqRibData::getFullPathName()
                            >14 er_writeCameraData.cpp::_write_camera(|camera1_group|camera1|cameraShape1,cameraShape1)
                              >15 liqRibHT::find(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,0)
                              >15 Renderer::gatherCameraShaders(cameraShaders.size=0,|camera1_group|camera1|cameraShape1,liqEnvironmentShader)
                              >15 Renderer::cameraOutput(cameraShape1)
              >7 liqRibTranslatorNew::objectBlock_reference(cameraShape1)
                >8 Renderer::objectBlock_reference_begin()
                >8 liqRibTranslatorNew::preGeometryMel()
                  >9 Renderer::preGeometryMel()
                >8 liqRibTranslatorNew::getShadowSetObject(cameraShape1)
                >8 liqRibTranslatorNew::oneObjectBlock_reference(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_begin(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_block0(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 liqRibTranslatorNew::tRiIlluminate(cameraShape1,|pPlane2|pPlaneShape11)
                    >10 Renderer::exportLightLinks(cameraShape1,|pPlane2|pPlaneShape11,lightedByWhichLightShapes.size=2)
                  >9 liqRibTranslatorNew::checkSurfaceShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                  >9 liqRibTranslatorNew::checkDisplacementShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                  >9 liqRibTranslatorNew::checkVolumeShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                  >9 Renderer::oneObjectBlock_reference_attribute_block1(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 liqRibTranslatorNew::writeShader_(1,|pPlane2|pPlaneShape11,v=0,s=0,c=0,,|pPlane2|pPlaneShape11,cameraShape1)
                    >10 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                  >9 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|pPlane2|pPlaneShape11)
                  >9 Renderer::exportOneObject_reference(|pPlane2|pPlaneShape11,cameraShape1)
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::oneObjectBlock_reference_attribute_end(|pPlane2|pPlaneShape11,cameraShape1)
                >8 liqRibTranslatorNew::oneObjectBlock_reference(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_begin(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_block0(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 liqRibTranslatorNew::tRiIlluminate(cameraShape1,|camera1_group|camera1|cameraShape1)
                    >10 Renderer::exportLightLinks(cameraShape1,|camera1_group|camera1|cameraShape1,lightedByWhichLightShapes.size=0)
                  >9 liqRibTranslatorNew::checkSurfaceShader(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,,,)
                  >9 liqRibTranslatorNew::checkDisplacementShader(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,,,)
                  >9 liqRibTranslatorNew::checkVolumeShader(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,,,)
                  >9 Renderer::oneObjectBlock_reference_attribute_block1(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 liqRibTranslatorNew::writeShader_(1,|camera1_group|camera1|cameraShape1,v=0,s=0,c=0,,|camera1_group|camera1|cameraShape1,cameraShape1)
                    >10 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,0)
                  >9 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|camera1_group|camera1|cameraShape1)
                  >9 Renderer::exportOneObject_reference(|camera1_group|camera1|cameraShape1,cameraShape1)
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::oneObjectBlock_reference_attribute_end(|camera1_group|camera1|cameraShape1,cameraShape1)
                >8 Renderer::objectBlock_reference_end()
            >6 liqRibTranslatorNew::worldEpilogue__()
              >7 liqRibTranslator::worldEpilogue()
                >8 Renderer::worldEpilogue()
            >6 liqRibTranslatorNew::frameEpilogue__(8)
              >7 Renderer::frameEpilogue(8)
            >6 liqRibTranslatorNew::ribEpilogue__(cameraShape1)
              >7 Renderer::ribPrologue_end(cameraShape1)
                >8 Renderer::cookInstanceGroup()
                >8 Renderer::render()
                  >9 Renderer::renderPreview(200,150,0,0,cameraShape1,cameraShape1,cameraShape1_option)
                    >10 Renderer::_renderPreview(200,150,0,0,cameraShape1,|camera1_group|camera1,cameraShape1_option)
          >5 Renderer::HeroPassEnd(cameraShape1)
        >4 liqRenderScript::addJob(job.title=checker_animFrame7,0)
          >5 liqRenderScript::popNextJobID()
        >4 tFrameScriptJobMgr::setCommonParameters(checker_animFrame8)
        >4 liqRibTranslatorNew::processOneFrame(8, liqglo__)
          >5 liqRibTranslatorNew::buildJobs__()
            >6 liqRibTranslatorNew::buildShadowJobs__()
              >7 tJobScriptMgr::buildShadowJob(thisJob___, 0)
              >7 tJobScriptMgr::buildShadowCameraJob(thisJob___, 0)
            >6 tRibCameraMgr::gatherDataForJob(liqglo___, ,jobList__,0,1)
            >6 liqRibTranslator::generateFileName(4,cameraShape1)
            >6 liqRibTranslator::generateFileName(5,cameraShape1)
              >7 liqRibTranslator::generateImageName(, job(cameraShape1)), 
          >5 liqRibTranslatorNew::calaculateSamplingTime(9)
          >5 liqRibTranslatorNew::scanScene__(9,0)
            >6 tJobScriptMgr::scanScene(9,0, htable__, count, returnStatus__)
              >7 liqRibHT::insert(|pointLight1|pointLightShape1,lframe,0,3,0,matrix,,-1)
                >8 liqRibHT::hash(|pointLight1|pointLightShape1,0)
                >8 liqRibHT::find(|pointLight1|pointLightShape1,|pointLight1|pointLightShape1,3)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pointLight1|pointLightShape1,0,3,-1)
                  >9 liqRibNode::parseVectorAttributes(pointLight1,,2)
                  >9 liqRibNode::parseVectorAttributes(pointLight1,,3)
                  >9 liqRibNode::parseVectorAttributes(pointLight1,,4)
                  >9 liqRibNode::findShadingGroup(|pointLight1|pointLightShape1,3)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pointLight1|pointLightShape1,3)
                    >10 liqRibLightData::liqRibLightData(|pointLight1|pointLightShape1)
                      >11 liqRibData::addAdditionalSurfaceParameters(pointLightShape1)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
              >7 liqRibHT::insert(|pointLight2|pointLightShape2,lframe,0,3,1,matrix,,-1)
                >8 liqRibHT::hash(|pointLight2|pointLightShape2,1)
                >8 liqRibHT::find(|pointLight2|pointLightShape2,|pointLight2|pointLightShape2,3)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pointLight2|pointLightShape2,0,3,-1)
                  >9 liqRibNode::parseVectorAttributes(pointLight2,,2)
                  >9 liqRibNode::parseVectorAttributes(pointLight2,,3)
                  >9 liqRibNode::parseVectorAttributes(pointLight2,,4)
                  >9 liqRibNode::findShadingGroup(|pointLight2|pointLightShape2,3)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pointLight2|pointLightShape2,3)
                    >10 liqRibLightData::liqRibLightData(|pointLight2|pointLightShape2)
                      >11 liqRibData::addAdditionalSurfaceParameters(pointLightShape2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 tLocatorMgr::scanScene(9,0,htable__,count__,returnStatus__)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,9,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,9,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,9,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,9,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,9,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,9,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,9,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,9,0,&count)
              >7 liqRibHT::insert(|persp|perspShape,lframe,0,0,2,matrix,,-1)
                >8 liqRibHT::hash(|persp|perspShape,2)
                >8 liqRibHT::find(|persp|perspShape,|persp|perspShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|persp|perspShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(persp,,2)
                  >9 liqRibNode::parseVectorAttributes(persp,,3)
                  >9 liqRibNode::parseVectorAttributes(persp,,4)
                  >9 liqRibNode::findShadingGroup(|persp|perspShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|persp|perspShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,9,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,9,0,&count)
              >7 liqRibHT::insert(|top|topShape,lframe,0,0,3,matrix,,-1)
                >8 liqRibHT::hash(|top|topShape,3)
                >8 liqRibHT::find(|top|topShape,|top|topShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|top|topShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(top,,2)
                  >9 liqRibNode::parseVectorAttributes(top,,3)
                  >9 liqRibNode::parseVectorAttributes(top,,4)
                  >9 liqRibNode::findShadingGroup(|top|topShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|top|topShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,9,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,9,0,&count)
              >7 liqRibHT::insert(|front|frontShape,lframe,0,0,4,matrix,,-1)
                >8 liqRibHT::hash(|front|frontShape,4)
                >8 liqRibHT::find(|front|frontShape,|front|frontShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|front|frontShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(front,,2)
                  >9 liqRibNode::parseVectorAttributes(front,,3)
                  >9 liqRibNode::parseVectorAttributes(front,,4)
                  >9 liqRibNode::findShadingGroup(|front|frontShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|front|frontShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,9,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,9,0,&count)
              >7 liqRibHT::insert(|side|sideShape,lframe,0,0,5,matrix,,-1)
                >8 liqRibHT::hash(|side|sideShape,5)
                >8 liqRibHT::find(|side|sideShape,|side|sideShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|side|sideShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(side,,2)
                  >9 liqRibNode::parseVectorAttributes(side,,3)
                  >9 liqRibNode::parseVectorAttributes(side,,4)
                  >9 liqRibNode::findShadingGroup(|side|sideShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|side|sideShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,9,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,9,0,&count)
              >7 liqRibHT::insert(|pPlane2|pPlaneShape11,lframe,0,0,6,matrix,,-1)
                >8 liqRibHT::hash(|pPlane2|pPlaneShape11,6)
                >8 liqRibHT::find(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pPlane2|pPlaneShape11,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(pPlane2,,2)
                  >9 liqRibNode::parseVectorAttributes(pPlane2,,3)
                  >9 liqRibNode::parseVectorAttributes(pPlane2,,4)
                  >9 liqRibNode::findShadingGroup(|pPlane2|pPlaneShape11,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getColor(&shader,&color)
                  >9 liqRibNode::getOpacity(&shader,&color)
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pPlane2|pPlaneShape11,0)
                    >10 liqRibMeshData::liqRibMeshData(|pPlane2|pPlaneShape11)
                      >11 liqRibData::addAdditionalSurfaceParameters(pPlaneShape11)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,9,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,9,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,9,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,9,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,9,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,9,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,9,0,&count)
              >7 liqRibHT::insert(|camera1_group|camera1|cameraShape1,lframe,0,0,7,matrix,,-1)
                >8 liqRibHT::hash(|camera1_group|camera1|cameraShape1,7)
                >8 liqRibHT::find(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|camera1_group|camera1|cameraShape1,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(camera1,,2)
                  >9 liqRibNode::parseVectorAttributes(camera1,,3)
                  >9 liqRibNode::parseVectorAttributes(camera1,,4)
                  >9 liqRibNode::findShadingGroup(|camera1_group|camera1|cameraShape1,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|camera1_group|camera1|cameraShape1,0)
                    >10 liqRibCameraData::liqRibCameraData(|camera1_group|camera1|cameraShape1)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,9,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,9,0,&count)
              >7 liqRibHT::insert(|camera1_group|camera1_aim|camera1_aimShape,lframe,0,0,8,matrix,,-1)
                >8 liqRibHT::hash(|camera1_group|camera1_aim|camera1_aimShape,8)
                >8 liqRibHT::find(|camera1_group|camera1_aim|camera1_aimShape,|camera1_group|camera1_aim|camera1_aimShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|camera1_group|camera1_aim|camera1_aimShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(camera1_aim,,2)
                  >9 liqRibNode::parseVectorAttributes(camera1_aim,,3)
                  >9 liqRibNode::parseVectorAttributes(camera1_aim,,4)
                  >9 liqRibNode::findShadingGroup(|camera1_group|camera1_aim|camera1_aimShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|camera1_group|camera1_aim|camera1_aimShape,0)
            >6 liqRibTranslatorNew::dealwithParticleInstancedObjects(0,9,9)
            >6 liqRibTranslatorNew::getCameraData(iter__,0)
              >7 liqRibTranslator::getCameraInfo(|camera1_group|camera1|cameraShape1,)
                >8 liqRibTranslator::portFieldOfView(224,150,&horizontal,&vertical,&fnCamera)
                  >9 liqRibTranslator::computeViewingFrustum(1.49333,,&left,&right,&bottom,&top,|camera1_group|camera1|cameraShape1)
              >7 liqRibTranslator::getCameraFilmOffset(|camera1_group|camera1|cameraShape1,)
              >7 liqRibTranslator::getCameraTransform(|camera1_group|camera1|cameraShape1,)
          >5 liqRibTranslatorNew::doTextures(size=0)
            >6 Renderer::frameEpilogue(txtList_.size=0)
          >5 liqRibTranslatorNew::doShadows(size=0)
            >6 Renderer::doShadows(shadowList_.size=0)
          >5 Renderer::setRenderScriptFormatAndCompress(0,0)
          >5 Renderer::isHeroPassReady(cameraShape1)
          >5 Renderer::HeroPassBegin(cameraShape1)
          >5 tHeroRibWriterMgr::write(liqglo___,cameraShape1,9,0)
            >6 liqRibTranslatorNew::ribPrologue__(cameraShape1)
              >7 Renderer::ribPrologue_begin(cameraShape1)
                >8 Renderer::dummyPhongShader()
              >7 Renderer::ribPrologue_comment(2.3.5 (buildtime=20:51:12.30),R:/MyDocuments/maya/projects/default/checker_anim,yaoyansi,time)
              >7 Renderer::ribPrologue_options(cameraShape1)
            >6 liqRibTranslatorNew::framePrologue__(9,cameraShape1)
              >7 Renderer::framePrologue(9,cameraShape1)
            >6 ShaderMgr::exportShaderGraph()
              >7 ConvertShadingNetwork::exportShaderGraph()
                >8 ConvertShadingNetwork::beforeExport()
                >8 ConvertShadingNetwork::__export()
                  >9 ConvertShadingNetwork::canShadingGroupExported(phong1SG)
                  >9 Renderer::getValidShaderPlugsInShadingGroup()
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,surfaceShader)
                    >10 ConvertShadingNetwork::canShaderExported(phong1)
                    >10 ConvertShadingNetwork::exportShaderBegin(phong1)
                    >10 ConvertShadingNetwork::convertShadingNetworkToRSL(phong1,surfaceShader)
                      >11 Visitor::initShaderData(phong1,surfaceShader)
                      >11 ConvertShadingNetwork::getUpstreamConvertibleNodes(phong1, nodes, numConnections)
                        >12 ConvertShadingNetwork::nodeIsConvertible(phong1)
                          >13 ShaderMgr::hasShaderType(phong)
                        >12 ShaderMgr::getValidConnection(phong1)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.color)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraX)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraX)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraY)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraY)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraZ)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraZ)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                          >13 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                            >14 ShaderMgr::hasShaderType(shadingEngine)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                        >12 ConvertShadingNetwork::getUpstreamConvertibleNodes(checker1, nodes, numConnections)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                          >13 ShaderMgr::getValidConnection(checker1)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1R)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1R)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1G)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1G)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1B)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1B)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2R)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2R)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2G)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2G)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2B)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2B)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.uCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.uCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.vCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.vCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                              >15 ShaderMgr::hasShaderType(place2dTexture)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                            >14 ConvertShadingNetwork::nodeIsConvertible(phong1)
                              >15 ShaderMgr::hasShaderType(phong)
                          >13 ConvertShadingNetwork::getUpstreamConvertibleNodes(place2dTexture1, nodes, numConnections)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                              >15 ShaderMgr::hasShaderType(place2dTexture)
                            >14 ShaderMgr::getValidConnection(place2dTexture1)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uCoord)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uCoord)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.vCoord)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.vCoord)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverage)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverage)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseUV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseUV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offset)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offset)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                              >15 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                                >16 ShaderMgr::hasShaderType(animCurveTU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                              >15 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                                >16 ShaderMgr::hasShaderType(animCurveTU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatUV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatUV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrame)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrame)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                              >15 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                >16 ShaderMgr::hasShaderType(checker)
                      >11 Visitor::preOutput(phong1)
                      >11 Visitor::outputBegin(phong1)
                      >11 ConvertShadingNetwork::traverseGraphAndOutputNodeFunctions( nodes, numConnections)
                        >12 Visitor::outputUpstreamShader(place2dTexture1)
                          >13 ShaderOutputVisitor::_outputUpstreamShader(place2dTexture1,place2dTexture)
                            >14 Visitor::visitPlace2dTexture(place2dTexture1)
                              >15 OutputHelper::beginRSL(maya_place2dTexture,place2dTexture1)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.uvCoord)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.coverageU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.coverageV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.mirrorU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.mirrorV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.noiseU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.noiseV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.offsetU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.offsetV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.repeatU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                                    >18 ShaderMgr::hasShaderType(animCurveTU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.repeatV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                                    >18 ShaderMgr::hasShaderType(animCurveTU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.rotateFrame)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.rotateUV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.stagger)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.translateFrameU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.translateFrameV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.wrapU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.wrapV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.outUV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                    >18 ShaderMgr::hasShaderType(checker)
                              >15 OutputHelper::endRSL()
                        >12 ShaderMgr::getValidConnection(place2dTexture1)
                        >12 ConvertShadingNetwork::decrementDownstreamConnections(place2dTexture1, nodes, numConnections, validConnections)
                        >12 ConvertShadingNetwork::getNodeVariables(place2dTexture1, validConnections,  inputSrc, inputDes, outputSrc)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.vCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.vCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverage)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverage)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offset)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offset)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                              >15 ShaderMgr::hasShaderType(animCurveTU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                              >15 ShaderMgr::hasShaderType(animCurveTU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrame)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrame)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                            >14 ConvertShadingNetwork::nodeIsConvertible(checker1)
                              >15 ShaderMgr::hasShaderType(checker)
                          >13 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture1,outUV,place2dTexture1.outUV, outputVars)
                            >14 Visitor::addShaderMethodVariavles(place2dTexture1,outUV,float,2,)
                        >12 Visitor::addShaderMethodBody(place2dTexture1,,,place2dTexture1.outUV124)
                        >12 Visitor::outputUpstreamShader(checker1)
                          >13 ShaderOutputVisitor::_outputUpstreamShader(checker1,checker)
                            >14 Visitor::visitChecker(checker1)
                              >15 OutputHelper::beginRSL(maya_checker,checker1)
                              >15 ShaderMgr::convertibleConnection(checker1.alphaGain)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                              >15 ShaderMgr::convertibleConnection(checker1.alphaIsLuminance)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                              >15 ShaderMgr::convertibleConnection(checker1.alphaOffset)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                              >15 ShaderMgr::convertibleConnection(checker1.color1)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                              >15 ShaderMgr::convertibleConnection(checker1.color2)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                              >15 ShaderMgr::convertibleConnection(checker1.colorGain)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                              >15 ShaderMgr::convertibleConnection(checker1.colorOffset)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                              >15 ShaderMgr::convertibleConnection(checker1.contrast)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                              >15 ShaderMgr::convertibleConnection(checker1.defaultColor)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                              >15 ShaderMgr::convertibleConnection(checker1.filter)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                              >15 ShaderMgr::convertibleConnection(checker1.filterOffset)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                              >15 ShaderMgr::convertibleConnection(checker1.invert)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                              >15 ShaderMgr::convertibleConnection(checker1.uvCoord)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                                    >18 ShaderMgr::hasShaderType(place2dTexture)
                              >15 ShaderMgr::convertibleConnection(checker1.outAlpha)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                              >15 ShaderMgr::convertibleConnection(checker1.outColor)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(phong1)
                                    >18 ShaderMgr::hasShaderType(phong)
                              >15 OutputHelper::endRSL()
                        >12 ShaderMgr::getValidConnection(checker1)
                        >12 ConvertShadingNetwork::decrementDownstreamConnections(checker1, nodes, numConnections, validConnections)
                        >12 ConvertShadingNetwork::getNodeVariables(checker1, validConnections,  inputSrc, inputDes, outputSrc)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1R)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1R)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1G)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1G)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1B)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1B)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2R)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2R)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2G)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2G)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2B)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2B)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.uCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.uCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.vCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.vCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                              >15 ShaderMgr::hasShaderType(place2dTexture)
                          >13 ConvertShadingNetwork::addNodeInputVariable(checker1.uvCoord, inputSrc, inputDes)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                              >15 ShaderMgr::hasShaderType(place2dTexture)
                            >14 ShaderMgr::getValidConnection(place2dTexture1)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                            >14 ConvertShadingNetwork::nodeIsConvertible(phong1)
                              >15 ShaderMgr::hasShaderType(phong)
                          >13 ConvertShadingNetwork::addNodeOutputVariable(checker1,outColor,checker1.outColor, outputVars)
                            >14 Visitor::addShaderMethodVariavles(checker1,outColor,color,-1,)
                        >12 Visitor::addShaderMethodBody(checker1,place2dTexture1.outUV124,checker1.uvCoord124,checker1.outColor124)
                        >12 Visitor::outputUpstreamShader(phong1)
                          >13 ShaderOutputVisitor::_outputUpstreamShader(phong1,phong)
                            >14 Visitor::visitPhong(phong1)
                              >15 OutputHelper::beginRSL(maya_phong,phong1)
                              >15 ShaderMgr::convertibleConnection(phong1.ambientColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                              >15 ShaderMgr::convertibleConnection(phong1.color)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.color)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                    >18 ShaderMgr::hasShaderType(checker)
                              >15 ShaderMgr::convertibleConnection(phong1.cosinePower)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                              >15 ShaderMgr::convertibleConnection(phong1.diffuse)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                              >15 ShaderMgr::convertibleConnection(phong1.incandescence)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                              >15 ShaderMgr::convertibleConnection(phong1.matteOpacityMode)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                              >15 ShaderMgr::convertibleConnection(phong1.matteOpacity)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                              >15 OutputHelper::add_liq_UserDefinedNormal(phong1)
                              >15 ShaderMgr::convertibleConnection(phong1.normalCamera)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                              >15 ShaderMgr::convertibleConnection(phong1.specularColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                              >15 ShaderMgr::convertibleConnection(phong1.reflectivity)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                              >15 ShaderMgr::convertibleConnection(phong1.reflectedColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                              >15 ShaderMgr::convertibleConnection(phong1.reflectionLimit)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                              >15 ShaderMgr::convertibleConnection(phong1.translucence)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                              >15 ShaderMgr::convertibleConnection(phong1.translucenceDepth)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                              >15 ShaderMgr::convertibleConnection(phong1.translucenceFocus)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                              >15 ShaderMgr::convertibleConnection(phong1.transparency)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                              >15 ShaderMgr::convertibleConnection(phong1.outColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                                    >18 ShaderMgr::hasShaderType(shadingEngine)
                              >15 ShaderMgr::convertibleConnection(phong1.outTransparency)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                              >15 OutputHelper::endRSL()
                        >12 ShaderMgr::getValidConnection(phong1)
                        >12 ConvertShadingNetwork::decrementDownstreamConnections(phong1, nodes, numConnections, validConnections)
                        >12 ConvertShadingNetwork::getNodeVariables(phong1, validConnections,  inputSrc, inputDes, outputSrc)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.colorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.colorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.colorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.colorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.colorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.colorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.color)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                            >14 ConvertShadingNetwork::nodeIsConvertible(checker1)
                              >15 ShaderMgr::hasShaderType(checker)
                          >13 ConvertShadingNetwork::addNodeInputVariable(phong1.color, inputSrc, inputDes)
                            >14 ConvertShadingNetwork::nodeIsConvertible(checker1)
                              >15 ShaderMgr::hasShaderType(checker)
                            >14 ShaderMgr::getValidConnection(checker1)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.transparencyR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.transparencyG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.transparencyB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraX)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraX)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraY)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraY)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraZ)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraZ)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.specularColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.specularColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.specularColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                            >14 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                              >15 ShaderMgr::hasShaderType(shadingEngine)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                        >12 Visitor::addShaderMethodBody(phong1,checker1.outColor124,phong1.color124,)
                      >11 ConvertShadingNetwork::outputShaderMethod()
                        >12 Visitor::outputShaderMethod()
                      >11 Visitor::outputEnd()
                      >11 Visitor::postOutput()
                    >10 ConvertShadingNetwork::exportShaderEnd(phong1)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,displacementShader)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,volumeShader)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,liqShadowShader)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,liqEnvironmentShader)
                  >9 ConvertShadingNetwork::exportShadingGroupBegin(phong1SG)
                  >9 ConvertShadingNetwork::outputShadingGroup(phong1SG)
                    >10 Visitor::outputShadingGroup(phong1SG)
                  >9 ConvertShadingNetwork::exportShadingGroupEnd(phong1SG)
                >8  ConvertShadingNetwork::afterExport()
            >6 liqRibTranslatorNew::worldPrologue__(cameraShape1)
              >7 Renderer::worldPrologue(cameraShape1)
            >6 liqRibTranslatorNew::lightBlock__(cameraShape1)
              >7 Renderer::writeLight_pre(|pointLight1|pointLightShape1,cameraShape1)
              >7 liqRibObj::writeObject(,cameraShape1,0)
                >8 liqRibLightData::write(,job=cameraShape1,0)
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::write(|pointLight1|pointLightShape1,,cameraShape1,ref=0)
                      >11 liqRibData::getFullPathName()
                    >10 er_writeLightData.cpp::_write(|pointLight1|pointLightShape1,cameraShape1,...)
                      >11 Renderer::exportPointLight(pointlight,pointLightShape1,...)
                        >12 addLightGroupForLight(|pointLight1|pointLightShape1)
              >7 Renderer::writeLight_post(|pointLight1|pointLightShape1,cameraShape1)
              >7 Renderer::writeLight_pre(|pointLight2|pointLightShape2,cameraShape1)
              >7 liqRibObj::writeObject(,cameraShape1,0)
                >8 liqRibLightData::write(,job=cameraShape1,0)
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::write(|pointLight2|pointLightShape2,,cameraShape1,ref=0)
                      >11 liqRibData::getFullPathName()
                    >10 er_writeLightData.cpp::_write(|pointLight2|pointLightShape2,cameraShape1,...)
                      >11 Renderer::exportPointLight(pointlight,pointLightShape2,...)
                        >12 addLightGroupForLight(|pointLight2|pointLightShape2)
              >7 Renderer::writeLight_post(|pointLight2|pointLightShape2,cameraShape1)
            >6 liqRibTranslatorNew::coordSysBlock__(cameraShape1)
              >7 Renderer::coordSysBlock__(cameraShape1)
            >6 liqRibTranslatorNew::objectBlock__(cameraShape1)
              >7 liqRibTranslatorNew::objectBlock_data(cameraShape1)
                >8 liqRibTranslatorNew::getShadowSetObject(cameraShape1)
                >8 liqRibTranslatorNew::oneObjectBlock_data(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::exportOneObject_data(|pPlane2|pPlaneShape11,cameraShape1)
                    >10 Renderer::_writeObject(|pPlane2|pPlaneShape11,cameraShape1,0,0,0)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.9.rib,cameraShape1,0)
                        >12 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.9.rib,job=cameraShape1,0)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|pPlane2|pPlaneShape11,R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.9.rib,cameraShape1,ref=0)
                              >15 liqRibData::getFullPathName()
                            >14 er_writeMeshData.cpp::_write1(|pPlane2|pPlaneShape11,cameraShape1)
                              >15 liqRibHT::find(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                              >15 _exportVertexFromNodePlug(|pPlane2|pPlaneShape11,0)
                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqRibData::getFullPathName()
                >8 liqRibTranslatorNew::oneObjectBlock_data(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 Renderer::exportOneObject_data(|camera1_group|camera1|cameraShape1,cameraShape1)
                    >10 Renderer::_writeObject(|camera1_group|camera1|cameraShape1,cameraShape1,0,0,0)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_camera1_group_camera1_cameraShape1.9.rib,cameraShape1,0)
                        >12 liqRibCameraData::write(R:/MyDocuments/maya/projects/default/rib/_camera1_group_camera1_cameraShape1.9.rib,job=cameraShape1,0)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|camera1_group|camera1|cameraShape1,R:/MyDocuments/maya/projects/default/rib/_camera1_group_camera1_cameraShape1.9.rib,cameraShape1,ref=0)
                              >15 liqRibData::getFullPathName()
                            >14 er_writeCameraData.cpp::_write_camera(|camera1_group|camera1|cameraShape1,cameraShape1)
                              >15 liqRibHT::find(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,0)
                              >15 Renderer::gatherCameraShaders(cameraShaders.size=0,|camera1_group|camera1|cameraShape1,liqEnvironmentShader)
                              >15 Renderer::cameraOutput(cameraShape1)
              >7 liqRibTranslatorNew::objectBlock_reference(cameraShape1)
                >8 Renderer::objectBlock_reference_begin()
                >8 liqRibTranslatorNew::preGeometryMel()
                  >9 Renderer::preGeometryMel()
                >8 liqRibTranslatorNew::getShadowSetObject(cameraShape1)
                >8 liqRibTranslatorNew::oneObjectBlock_reference(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_begin(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_block0(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 liqRibTranslatorNew::tRiIlluminate(cameraShape1,|pPlane2|pPlaneShape11)
                    >10 Renderer::exportLightLinks(cameraShape1,|pPlane2|pPlaneShape11,lightedByWhichLightShapes.size=2)
                  >9 liqRibTranslatorNew::checkSurfaceShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                  >9 liqRibTranslatorNew::checkDisplacementShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                  >9 liqRibTranslatorNew::checkVolumeShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                  >9 Renderer::oneObjectBlock_reference_attribute_block1(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 liqRibTranslatorNew::writeShader_(1,|pPlane2|pPlaneShape11,v=0,s=0,c=0,,|pPlane2|pPlaneShape11,cameraShape1)
                    >10 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                  >9 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|pPlane2|pPlaneShape11)
                  >9 Renderer::exportOneObject_reference(|pPlane2|pPlaneShape11,cameraShape1)
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::oneObjectBlock_reference_attribute_end(|pPlane2|pPlaneShape11,cameraShape1)
                >8 liqRibTranslatorNew::oneObjectBlock_reference(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_begin(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_block0(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 liqRibTranslatorNew::tRiIlluminate(cameraShape1,|camera1_group|camera1|cameraShape1)
                    >10 Renderer::exportLightLinks(cameraShape1,|camera1_group|camera1|cameraShape1,lightedByWhichLightShapes.size=0)
                  >9 liqRibTranslatorNew::checkSurfaceShader(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,,,)
                  >9 liqRibTranslatorNew::checkDisplacementShader(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,,,)
                  >9 liqRibTranslatorNew::checkVolumeShader(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,,,)
                  >9 Renderer::oneObjectBlock_reference_attribute_block1(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 liqRibTranslatorNew::writeShader_(1,|camera1_group|camera1|cameraShape1,v=0,s=0,c=0,,|camera1_group|camera1|cameraShape1,cameraShape1)
                    >10 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,0)
                  >9 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|camera1_group|camera1|cameraShape1)
                  >9 Renderer::exportOneObject_reference(|camera1_group|camera1|cameraShape1,cameraShape1)
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::oneObjectBlock_reference_attribute_end(|camera1_group|camera1|cameraShape1,cameraShape1)
                >8 Renderer::objectBlock_reference_end()
            >6 liqRibTranslatorNew::worldEpilogue__()
              >7 liqRibTranslator::worldEpilogue()
                >8 Renderer::worldEpilogue()
            >6 liqRibTranslatorNew::frameEpilogue__(9)
              >7 Renderer::frameEpilogue(9)
            >6 liqRibTranslatorNew::ribEpilogue__(cameraShape1)
              >7 Renderer::ribPrologue_end(cameraShape1)
                >8 Renderer::cookInstanceGroup()
                >8 Renderer::render()
                  >9 Renderer::renderPreview(200,150,0,0,cameraShape1,cameraShape1,cameraShape1_option)
                    >10 Renderer::_renderPreview(200,150,0,0,cameraShape1,|camera1_group|camera1,cameraShape1_option)
          >5 Renderer::HeroPassEnd(cameraShape1)
        >4 liqRenderScript::addJob(job.title=checker_animFrame8,0)
          >5 liqRenderScript::popNextJobID()
        >4 tFrameScriptJobMgr::setCommonParameters(checker_animFrame9)
        >4 liqRibTranslatorNew::processOneFrame(9, liqglo__)
          >5 liqRibTranslatorNew::buildJobs__()
            >6 liqRibTranslatorNew::buildShadowJobs__()
              >7 tJobScriptMgr::buildShadowJob(thisJob___, 0)
              >7 tJobScriptMgr::buildShadowCameraJob(thisJob___, 0)
            >6 tRibCameraMgr::gatherDataForJob(liqglo___, ,jobList__,0,1)
            >6 liqRibTranslator::generateFileName(4,cameraShape1)
            >6 liqRibTranslator::generateFileName(5,cameraShape1)
              >7 liqRibTranslator::generateImageName(, job(cameraShape1)), 
          >5 liqRibTranslatorNew::calaculateSamplingTime(10)
          >5 liqRibTranslatorNew::scanScene__(10,0)
            >6 tJobScriptMgr::scanScene(10,0, htable__, count, returnStatus__)
              >7 liqRibHT::insert(|pointLight1|pointLightShape1,lframe,0,3,0,matrix,,-1)
                >8 liqRibHT::hash(|pointLight1|pointLightShape1,0)
                >8 liqRibHT::find(|pointLight1|pointLightShape1,|pointLight1|pointLightShape1,3)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pointLight1|pointLightShape1,0,3,-1)
                  >9 liqRibNode::parseVectorAttributes(pointLight1,,2)
                  >9 liqRibNode::parseVectorAttributes(pointLight1,,3)
                  >9 liqRibNode::parseVectorAttributes(pointLight1,,4)
                  >9 liqRibNode::findShadingGroup(|pointLight1|pointLightShape1,3)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pointLight1|pointLightShape1,3)
                    >10 liqRibLightData::liqRibLightData(|pointLight1|pointLightShape1)
                      >11 liqRibData::addAdditionalSurfaceParameters(pointLightShape1)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
              >7 liqRibHT::insert(|pointLight2|pointLightShape2,lframe,0,3,1,matrix,,-1)
                >8 liqRibHT::hash(|pointLight2|pointLightShape2,1)
                >8 liqRibHT::find(|pointLight2|pointLightShape2,|pointLight2|pointLightShape2,3)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pointLight2|pointLightShape2,0,3,-1)
                  >9 liqRibNode::parseVectorAttributes(pointLight2,,2)
                  >9 liqRibNode::parseVectorAttributes(pointLight2,,3)
                  >9 liqRibNode::parseVectorAttributes(pointLight2,,4)
                  >9 liqRibNode::findShadingGroup(|pointLight2|pointLightShape2,3)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pointLight2|pointLightShape2,3)
                    >10 liqRibLightData::liqRibLightData(|pointLight2|pointLightShape2)
                      >11 liqRibData::addAdditionalSurfaceParameters(pointLightShape2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 tLocatorMgr::scanScene(10,0,htable__,count__,returnStatus__)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,10,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,10,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,10,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,10,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,10,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,10,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,10,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,10,0,&count)
              >7 liqRibHT::insert(|persp|perspShape,lframe,0,0,2,matrix,,-1)
                >8 liqRibHT::hash(|persp|perspShape,2)
                >8 liqRibHT::find(|persp|perspShape,|persp|perspShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|persp|perspShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(persp,,2)
                  >9 liqRibNode::parseVectorAttributes(persp,,3)
                  >9 liqRibNode::parseVectorAttributes(persp,,4)
                  >9 liqRibNode::findShadingGroup(|persp|perspShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|persp|perspShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,10,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,10,0,&count)
              >7 liqRibHT::insert(|top|topShape,lframe,0,0,3,matrix,,-1)
                >8 liqRibHT::hash(|top|topShape,3)
                >8 liqRibHT::find(|top|topShape,|top|topShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|top|topShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(top,,2)
                  >9 liqRibNode::parseVectorAttributes(top,,3)
                  >9 liqRibNode::parseVectorAttributes(top,,4)
                  >9 liqRibNode::findShadingGroup(|top|topShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|top|topShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,10,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,10,0,&count)
              >7 liqRibHT::insert(|front|frontShape,lframe,0,0,4,matrix,,-1)
                >8 liqRibHT::hash(|front|frontShape,4)
                >8 liqRibHT::find(|front|frontShape,|front|frontShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|front|frontShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(front,,2)
                  >9 liqRibNode::parseVectorAttributes(front,,3)
                  >9 liqRibNode::parseVectorAttributes(front,,4)
                  >9 liqRibNode::findShadingGroup(|front|frontShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|front|frontShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,10,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,10,0,&count)
              >7 liqRibHT::insert(|side|sideShape,lframe,0,0,5,matrix,,-1)
                >8 liqRibHT::hash(|side|sideShape,5)
                >8 liqRibHT::find(|side|sideShape,|side|sideShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|side|sideShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(side,,2)
                  >9 liqRibNode::parseVectorAttributes(side,,3)
                  >9 liqRibNode::parseVectorAttributes(side,,4)
                  >9 liqRibNode::findShadingGroup(|side|sideShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|side|sideShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,10,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,10,0,&count)
              >7 liqRibHT::insert(|pPlane2|pPlaneShape11,lframe,0,0,6,matrix,,-1)
                >8 liqRibHT::hash(|pPlane2|pPlaneShape11,6)
                >8 liqRibHT::find(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pPlane2|pPlaneShape11,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(pPlane2,,2)
                  >9 liqRibNode::parseVectorAttributes(pPlane2,,3)
                  >9 liqRibNode::parseVectorAttributes(pPlane2,,4)
                  >9 liqRibNode::findShadingGroup(|pPlane2|pPlaneShape11,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getColor(&shader,&color)
                  >9 liqRibNode::getOpacity(&shader,&color)
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pPlane2|pPlaneShape11,0)
                    >10 liqRibMeshData::liqRibMeshData(|pPlane2|pPlaneShape11)
                      >11 liqRibData::addAdditionalSurfaceParameters(pPlaneShape11)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,10,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,10,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,10,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,10,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,10,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,10,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,10,0,&count)
              >7 liqRibHT::insert(|camera1_group|camera1|cameraShape1,lframe,0,0,7,matrix,,-1)
                >8 liqRibHT::hash(|camera1_group|camera1|cameraShape1,7)
                >8 liqRibHT::find(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|camera1_group|camera1|cameraShape1,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(camera1,,2)
                  >9 liqRibNode::parseVectorAttributes(camera1,,3)
                  >9 liqRibNode::parseVectorAttributes(camera1,,4)
                  >9 liqRibNode::findShadingGroup(|camera1_group|camera1|cameraShape1,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|camera1_group|camera1|cameraShape1,0)
                    >10 liqRibCameraData::liqRibCameraData(|camera1_group|camera1|cameraShape1)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,10,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,10,0,&count)
              >7 liqRibHT::insert(|camera1_group|camera1_aim|camera1_aimShape,lframe,0,0,8,matrix,,-1)
                >8 liqRibHT::hash(|camera1_group|camera1_aim|camera1_aimShape,8)
                >8 liqRibHT::find(|camera1_group|camera1_aim|camera1_aimShape,|camera1_group|camera1_aim|camera1_aimShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|camera1_group|camera1_aim|camera1_aimShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(camera1_aim,,2)
                  >9 liqRibNode::parseVectorAttributes(camera1_aim,,3)
                  >9 liqRibNode::parseVectorAttributes(camera1_aim,,4)
                  >9 liqRibNode::findShadingGroup(|camera1_group|camera1_aim|camera1_aimShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|camera1_group|camera1_aim|camera1_aimShape,0)
            >6 liqRibTranslatorNew::dealwithParticleInstancedObjects(0,10,9)
            >6 liqRibTranslatorNew::getCameraData(iter__,0)
              >7 liqRibTranslator::getCameraInfo(|camera1_group|camera1|cameraShape1,)
                >8 liqRibTranslator::portFieldOfView(224,150,&horizontal,&vertical,&fnCamera)
                  >9 liqRibTranslator::computeViewingFrustum(1.49333,,&left,&right,&bottom,&top,|camera1_group|camera1|cameraShape1)
              >7 liqRibTranslator::getCameraFilmOffset(|camera1_group|camera1|cameraShape1,)
              >7 liqRibTranslator::getCameraTransform(|camera1_group|camera1|cameraShape1,)
          >5 liqRibTranslatorNew::doTextures(size=0)
            >6 Renderer::frameEpilogue(txtList_.size=0)
          >5 liqRibTranslatorNew::doShadows(size=0)
            >6 Renderer::doShadows(shadowList_.size=0)
          >5 Renderer::setRenderScriptFormatAndCompress(0,0)
          >5 Renderer::isHeroPassReady(cameraShape1)
          >5 Renderer::HeroPassBegin(cameraShape1)
          >5 tHeroRibWriterMgr::write(liqglo___,cameraShape1,10,0)
            >6 liqRibTranslatorNew::ribPrologue__(cameraShape1)
              >7 Renderer::ribPrologue_begin(cameraShape1)
                >8 Renderer::dummyPhongShader()
              >7 Renderer::ribPrologue_comment(2.3.5 (buildtime=20:51:12.30),R:/MyDocuments/maya/projects/default/checker_anim,yaoyansi,time)
              >7 Renderer::ribPrologue_options(cameraShape1)
            >6 liqRibTranslatorNew::framePrologue__(10,cameraShape1)
              >7 Renderer::framePrologue(10,cameraShape1)
            >6 ShaderMgr::exportShaderGraph()
              >7 ConvertShadingNetwork::exportShaderGraph()
                >8 ConvertShadingNetwork::beforeExport()
                >8 ConvertShadingNetwork::__export()
                  >9 ConvertShadingNetwork::canShadingGroupExported(phong1SG)
                  >9 Renderer::getValidShaderPlugsInShadingGroup()
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,surfaceShader)
                    >10 ConvertShadingNetwork::canShaderExported(phong1)
                    >10 ConvertShadingNetwork::exportShaderBegin(phong1)
                    >10 ConvertShadingNetwork::convertShadingNetworkToRSL(phong1,surfaceShader)
                      >11 Visitor::initShaderData(phong1,surfaceShader)
                      >11 ConvertShadingNetwork::getUpstreamConvertibleNodes(phong1, nodes, numConnections)
                        >12 ConvertShadingNetwork::nodeIsConvertible(phong1)
                          >13 ShaderMgr::hasShaderType(phong)
                        >12 ShaderMgr::getValidConnection(phong1)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.color)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraX)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraX)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraY)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraY)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraZ)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraZ)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                          >13 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                            >14 ShaderMgr::hasShaderType(shadingEngine)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                        >12 ConvertShadingNetwork::getUpstreamConvertibleNodes(checker1, nodes, numConnections)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                          >13 ShaderMgr::getValidConnection(checker1)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1R)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1R)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1G)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1G)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1B)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1B)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2R)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2R)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2G)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2G)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2B)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2B)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.uCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.uCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.vCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.vCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                              >15 ShaderMgr::hasShaderType(place2dTexture)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                            >14 ConvertShadingNetwork::nodeIsConvertible(phong1)
                              >15 ShaderMgr::hasShaderType(phong)
                          >13 ConvertShadingNetwork::getUpstreamConvertibleNodes(place2dTexture1, nodes, numConnections)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                              >15 ShaderMgr::hasShaderType(place2dTexture)
                            >14 ShaderMgr::getValidConnection(place2dTexture1)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uCoord)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uCoord)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.vCoord)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.vCoord)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverage)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverage)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseUV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseUV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offset)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offset)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                              >15 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                                >16 ShaderMgr::hasShaderType(animCurveTU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                              >15 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                                >16 ShaderMgr::hasShaderType(animCurveTU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatUV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatUV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrame)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrame)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                              >15 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                >16 ShaderMgr::hasShaderType(checker)
                      >11 Visitor::preOutput(phong1)
                      >11 Visitor::outputBegin(phong1)
                      >11 ConvertShadingNetwork::traverseGraphAndOutputNodeFunctions( nodes, numConnections)
                        >12 Visitor::outputUpstreamShader(place2dTexture1)
                          >13 ShaderOutputVisitor::_outputUpstreamShader(place2dTexture1,place2dTexture)
                            >14 Visitor::visitPlace2dTexture(place2dTexture1)
                              >15 OutputHelper::beginRSL(maya_place2dTexture,place2dTexture1)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.uvCoord)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.coverageU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.coverageV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.mirrorU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.mirrorV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.noiseU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.noiseV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.offsetU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.offsetV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.repeatU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                                    >18 ShaderMgr::hasShaderType(animCurveTU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.repeatV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                                    >18 ShaderMgr::hasShaderType(animCurveTU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.rotateFrame)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.rotateUV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.stagger)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.translateFrameU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.translateFrameV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.wrapU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.wrapV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.outUV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                    >18 ShaderMgr::hasShaderType(checker)
                              >15 OutputHelper::endRSL()
                        >12 ShaderMgr::getValidConnection(place2dTexture1)
                        >12 ConvertShadingNetwork::decrementDownstreamConnections(place2dTexture1, nodes, numConnections, validConnections)
                        >12 ConvertShadingNetwork::getNodeVariables(place2dTexture1, validConnections,  inputSrc, inputDes, outputSrc)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.vCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.vCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverage)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverage)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offset)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offset)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                              >15 ShaderMgr::hasShaderType(animCurveTU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                              >15 ShaderMgr::hasShaderType(animCurveTU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrame)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrame)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                            >14 ConvertShadingNetwork::nodeIsConvertible(checker1)
                              >15 ShaderMgr::hasShaderType(checker)
                          >13 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture1,outUV,place2dTexture1.outUV, outputVars)
                            >14 Visitor::addShaderMethodVariavles(place2dTexture1,outUV,float,2,)
                        >12 Visitor::addShaderMethodBody(place2dTexture1,,,place2dTexture1.outUV124)
                        >12 Visitor::outputUpstreamShader(checker1)
                          >13 ShaderOutputVisitor::_outputUpstreamShader(checker1,checker)
                            >14 Visitor::visitChecker(checker1)
                              >15 OutputHelper::beginRSL(maya_checker,checker1)
                              >15 ShaderMgr::convertibleConnection(checker1.alphaGain)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                              >15 ShaderMgr::convertibleConnection(checker1.alphaIsLuminance)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                              >15 ShaderMgr::convertibleConnection(checker1.alphaOffset)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                              >15 ShaderMgr::convertibleConnection(checker1.color1)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                              >15 ShaderMgr::convertibleConnection(checker1.color2)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                              >15 ShaderMgr::convertibleConnection(checker1.colorGain)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                              >15 ShaderMgr::convertibleConnection(checker1.colorOffset)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                              >15 ShaderMgr::convertibleConnection(checker1.contrast)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                              >15 ShaderMgr::convertibleConnection(checker1.defaultColor)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                              >15 ShaderMgr::convertibleConnection(checker1.filter)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                              >15 ShaderMgr::convertibleConnection(checker1.filterOffset)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                              >15 ShaderMgr::convertibleConnection(checker1.invert)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                              >15 ShaderMgr::convertibleConnection(checker1.uvCoord)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                                    >18 ShaderMgr::hasShaderType(place2dTexture)
                              >15 ShaderMgr::convertibleConnection(checker1.outAlpha)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                              >15 ShaderMgr::convertibleConnection(checker1.outColor)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(phong1)
                                    >18 ShaderMgr::hasShaderType(phong)
                              >15 OutputHelper::endRSL()
                        >12 ShaderMgr::getValidConnection(checker1)
                        >12 ConvertShadingNetwork::decrementDownstreamConnections(checker1, nodes, numConnections, validConnections)
                        >12 ConvertShadingNetwork::getNodeVariables(checker1, validConnections,  inputSrc, inputDes, outputSrc)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1R)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1R)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1G)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1G)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1B)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1B)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2R)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2R)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2G)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2G)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2B)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2B)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.uCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.uCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.vCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.vCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                              >15 ShaderMgr::hasShaderType(place2dTexture)
                          >13 ConvertShadingNetwork::addNodeInputVariable(checker1.uvCoord, inputSrc, inputDes)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                              >15 ShaderMgr::hasShaderType(place2dTexture)
                            >14 ShaderMgr::getValidConnection(place2dTexture1)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                            >14 ConvertShadingNetwork::nodeIsConvertible(phong1)
                              >15 ShaderMgr::hasShaderType(phong)
                          >13 ConvertShadingNetwork::addNodeOutputVariable(checker1,outColor,checker1.outColor, outputVars)
                            >14 Visitor::addShaderMethodVariavles(checker1,outColor,color,-1,)
                        >12 Visitor::addShaderMethodBody(checker1,place2dTexture1.outUV124,checker1.uvCoord124,checker1.outColor124)
                        >12 Visitor::outputUpstreamShader(phong1)
                          >13 ShaderOutputVisitor::_outputUpstreamShader(phong1,phong)
                            >14 Visitor::visitPhong(phong1)
                              >15 OutputHelper::beginRSL(maya_phong,phong1)
                              >15 ShaderMgr::convertibleConnection(phong1.ambientColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                              >15 ShaderMgr::convertibleConnection(phong1.color)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.color)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                    >18 ShaderMgr::hasShaderType(checker)
                              >15 ShaderMgr::convertibleConnection(phong1.cosinePower)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                              >15 ShaderMgr::convertibleConnection(phong1.diffuse)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                              >15 ShaderMgr::convertibleConnection(phong1.incandescence)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                              >15 ShaderMgr::convertibleConnection(phong1.matteOpacityMode)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                              >15 ShaderMgr::convertibleConnection(phong1.matteOpacity)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                              >15 OutputHelper::add_liq_UserDefinedNormal(phong1)
                              >15 ShaderMgr::convertibleConnection(phong1.normalCamera)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                              >15 ShaderMgr::convertibleConnection(phong1.specularColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                              >15 ShaderMgr::convertibleConnection(phong1.reflectivity)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                              >15 ShaderMgr::convertibleConnection(phong1.reflectedColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                              >15 ShaderMgr::convertibleConnection(phong1.reflectionLimit)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                              >15 ShaderMgr::convertibleConnection(phong1.translucence)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                              >15 ShaderMgr::convertibleConnection(phong1.translucenceDepth)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                              >15 ShaderMgr::convertibleConnection(phong1.translucenceFocus)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                              >15 ShaderMgr::convertibleConnection(phong1.transparency)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                              >15 ShaderMgr::convertibleConnection(phong1.outColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                                    >18 ShaderMgr::hasShaderType(shadingEngine)
                              >15 ShaderMgr::convertibleConnection(phong1.outTransparency)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                              >15 OutputHelper::endRSL()
                        >12 ShaderMgr::getValidConnection(phong1)
                        >12 ConvertShadingNetwork::decrementDownstreamConnections(phong1, nodes, numConnections, validConnections)
                        >12 ConvertShadingNetwork::getNodeVariables(phong1, validConnections,  inputSrc, inputDes, outputSrc)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.colorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.colorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.colorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.colorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.colorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.colorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.color)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                            >14 ConvertShadingNetwork::nodeIsConvertible(checker1)
                              >15 ShaderMgr::hasShaderType(checker)
                          >13 ConvertShadingNetwork::addNodeInputVariable(phong1.color, inputSrc, inputDes)
                            >14 ConvertShadingNetwork::nodeIsConvertible(checker1)
                              >15 ShaderMgr::hasShaderType(checker)
                            >14 ShaderMgr::getValidConnection(checker1)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.transparencyR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.transparencyG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.transparencyB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraX)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraX)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraY)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraY)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraZ)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraZ)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.specularColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.specularColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.specularColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                            >14 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                              >15 ShaderMgr::hasShaderType(shadingEngine)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                        >12 Visitor::addShaderMethodBody(phong1,checker1.outColor124,phong1.color124,)
                      >11 ConvertShadingNetwork::outputShaderMethod()
                        >12 Visitor::outputShaderMethod()
                      >11 Visitor::outputEnd()
                      >11 Visitor::postOutput()
                    >10 ConvertShadingNetwork::exportShaderEnd(phong1)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,displacementShader)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,volumeShader)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,liqShadowShader)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,liqEnvironmentShader)
                  >9 ConvertShadingNetwork::exportShadingGroupBegin(phong1SG)
                  >9 ConvertShadingNetwork::outputShadingGroup(phong1SG)
                    >10 Visitor::outputShadingGroup(phong1SG)
                  >9 ConvertShadingNetwork::exportShadingGroupEnd(phong1SG)
                >8  ConvertShadingNetwork::afterExport()
            >6 liqRibTranslatorNew::worldPrologue__(cameraShape1)
              >7 Renderer::worldPrologue(cameraShape1)
            >6 liqRibTranslatorNew::lightBlock__(cameraShape1)
              >7 Renderer::writeLight_pre(|pointLight1|pointLightShape1,cameraShape1)
              >7 liqRibObj::writeObject(,cameraShape1,0)
                >8 liqRibLightData::write(,job=cameraShape1,0)
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::write(|pointLight1|pointLightShape1,,cameraShape1,ref=0)
                      >11 liqRibData::getFullPathName()
                    >10 er_writeLightData.cpp::_write(|pointLight1|pointLightShape1,cameraShape1,...)
                      >11 Renderer::exportPointLight(pointlight,pointLightShape1,...)
                        >12 addLightGroupForLight(|pointLight1|pointLightShape1)
              >7 Renderer::writeLight_post(|pointLight1|pointLightShape1,cameraShape1)
              >7 Renderer::writeLight_pre(|pointLight2|pointLightShape2,cameraShape1)
              >7 liqRibObj::writeObject(,cameraShape1,0)
                >8 liqRibLightData::write(,job=cameraShape1,0)
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::write(|pointLight2|pointLightShape2,,cameraShape1,ref=0)
                      >11 liqRibData::getFullPathName()
                    >10 er_writeLightData.cpp::_write(|pointLight2|pointLightShape2,cameraShape1,...)
                      >11 Renderer::exportPointLight(pointlight,pointLightShape2,...)
                        >12 addLightGroupForLight(|pointLight2|pointLightShape2)
              >7 Renderer::writeLight_post(|pointLight2|pointLightShape2,cameraShape1)
            >6 liqRibTranslatorNew::coordSysBlock__(cameraShape1)
              >7 Renderer::coordSysBlock__(cameraShape1)
            >6 liqRibTranslatorNew::objectBlock__(cameraShape1)
              >7 liqRibTranslatorNew::objectBlock_data(cameraShape1)
                >8 liqRibTranslatorNew::getShadowSetObject(cameraShape1)
                >8 liqRibTranslatorNew::oneObjectBlock_data(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::exportOneObject_data(|pPlane2|pPlaneShape11,cameraShape1)
                    >10 Renderer::_writeObject(|pPlane2|pPlaneShape11,cameraShape1,0,0,0)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.10.rib,cameraShape1,0)
                        >12 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.10.rib,job=cameraShape1,0)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|pPlane2|pPlaneShape11,R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.10.rib,cameraShape1,ref=0)
                              >15 liqRibData::getFullPathName()
                            >14 er_writeMeshData.cpp::_write1(|pPlane2|pPlaneShape11,cameraShape1)
                              >15 liqRibHT::find(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                              >15 _exportVertexFromNodePlug(|pPlane2|pPlaneShape11,0)
                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqRibData::getFullPathName()
                >8 liqRibTranslatorNew::oneObjectBlock_data(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 Renderer::exportOneObject_data(|camera1_group|camera1|cameraShape1,cameraShape1)
                    >10 Renderer::_writeObject(|camera1_group|camera1|cameraShape1,cameraShape1,0,0,0)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_camera1_group_camera1_cameraShape1.10.rib,cameraShape1,0)
                        >12 liqRibCameraData::write(R:/MyDocuments/maya/projects/default/rib/_camera1_group_camera1_cameraShape1.10.rib,job=cameraShape1,0)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|camera1_group|camera1|cameraShape1,R:/MyDocuments/maya/projects/default/rib/_camera1_group_camera1_cameraShape1.10.rib,cameraShape1,ref=0)
                              >15 liqRibData::getFullPathName()
                            >14 er_writeCameraData.cpp::_write_camera(|camera1_group|camera1|cameraShape1,cameraShape1)
                              >15 liqRibHT::find(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,0)
                              >15 Renderer::gatherCameraShaders(cameraShaders.size=0,|camera1_group|camera1|cameraShape1,liqEnvironmentShader)
                              >15 Renderer::cameraOutput(cameraShape1)
              >7 liqRibTranslatorNew::objectBlock_reference(cameraShape1)
                >8 Renderer::objectBlock_reference_begin()
                >8 liqRibTranslatorNew::preGeometryMel()
                  >9 Renderer::preGeometryMel()
                >8 liqRibTranslatorNew::getShadowSetObject(cameraShape1)
                >8 liqRibTranslatorNew::oneObjectBlock_reference(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_begin(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_block0(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 liqRibTranslatorNew::tRiIlluminate(cameraShape1,|pPlane2|pPlaneShape11)
                    >10 Renderer::exportLightLinks(cameraShape1,|pPlane2|pPlaneShape11,lightedByWhichLightShapes.size=2)
                  >9 liqRibTranslatorNew::checkSurfaceShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                  >9 liqRibTranslatorNew::checkDisplacementShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                  >9 liqRibTranslatorNew::checkVolumeShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                  >9 Renderer::oneObjectBlock_reference_attribute_block1(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 liqRibTranslatorNew::writeShader_(1,|pPlane2|pPlaneShape11,v=0,s=0,c=0,,|pPlane2|pPlaneShape11,cameraShape1)
                    >10 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                  >9 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|pPlane2|pPlaneShape11)
                  >9 Renderer::exportOneObject_reference(|pPlane2|pPlaneShape11,cameraShape1)
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::oneObjectBlock_reference_attribute_end(|pPlane2|pPlaneShape11,cameraShape1)
                >8 liqRibTranslatorNew::oneObjectBlock_reference(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_begin(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_block0(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 liqRibTranslatorNew::tRiIlluminate(cameraShape1,|camera1_group|camera1|cameraShape1)
                    >10 Renderer::exportLightLinks(cameraShape1,|camera1_group|camera1|cameraShape1,lightedByWhichLightShapes.size=0)
                  >9 liqRibTranslatorNew::checkSurfaceShader(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,,,)
                  >9 liqRibTranslatorNew::checkDisplacementShader(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,,,)
                  >9 liqRibTranslatorNew::checkVolumeShader(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,,,)
                  >9 Renderer::oneObjectBlock_reference_attribute_block1(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 liqRibTranslatorNew::writeShader_(1,|camera1_group|camera1|cameraShape1,v=0,s=0,c=0,,|camera1_group|camera1|cameraShape1,cameraShape1)
                    >10 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,0)
                  >9 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|camera1_group|camera1|cameraShape1)
                  >9 Renderer::exportOneObject_reference(|camera1_group|camera1|cameraShape1,cameraShape1)
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::oneObjectBlock_reference_attribute_end(|camera1_group|camera1|cameraShape1,cameraShape1)
                >8 Renderer::objectBlock_reference_end()
            >6 liqRibTranslatorNew::worldEpilogue__()
              >7 liqRibTranslator::worldEpilogue()
                >8 Renderer::worldEpilogue()
            >6 liqRibTranslatorNew::frameEpilogue__(10)
              >7 Renderer::frameEpilogue(10)
            >6 liqRibTranslatorNew::ribEpilogue__(cameraShape1)
              >7 Renderer::ribPrologue_end(cameraShape1)
                >8 Renderer::cookInstanceGroup()
                >8 Renderer::render()
                  >9 Renderer::renderPreview(200,150,0,0,cameraShape1,cameraShape1,cameraShape1_option)
                    >10 Renderer::_renderPreview(200,150,0,0,cameraShape1,|camera1_group|camera1,cameraShape1_option)
          >5 Renderer::HeroPassEnd(cameraShape1)
        >4 liqRenderScript::addJob(job.title=checker_animFrame9,0)
          >5 liqRenderScript::popNextJobID()
        >4 tFrameScriptJobMgr::setCommonParameters(checker_animFrame10)
        >4 liqRibTranslatorNew::processOneFrame(10, liqglo__)
          >5 liqRibTranslatorNew::buildJobs__()
            >6 liqRibTranslatorNew::buildShadowJobs__()
              >7 tJobScriptMgr::buildShadowJob(thisJob___, 0)
              >7 tJobScriptMgr::buildShadowCameraJob(thisJob___, 0)
            >6 tRibCameraMgr::gatherDataForJob(liqglo___, ,jobList__,0,1)
            >6 liqRibTranslator::generateFileName(4,cameraShape1)
            >6 liqRibTranslator::generateFileName(5,cameraShape1)
              >7 liqRibTranslator::generateImageName(, job(cameraShape1)), 
          >5 liqRibTranslatorNew::calaculateSamplingTime(11)
          >5 liqRibTranslatorNew::scanScene__(11,0)
            >6 tJobScriptMgr::scanScene(11,0, htable__, count, returnStatus__)
              >7 liqRibHT::insert(|pointLight1|pointLightShape1,lframe,0,3,0,matrix,,-1)
                >8 liqRibHT::hash(|pointLight1|pointLightShape1,0)
                >8 liqRibHT::find(|pointLight1|pointLightShape1,|pointLight1|pointLightShape1,3)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pointLight1|pointLightShape1,0,3,-1)
                  >9 liqRibNode::parseVectorAttributes(pointLight1,,2)
                  >9 liqRibNode::parseVectorAttributes(pointLight1,,3)
                  >9 liqRibNode::parseVectorAttributes(pointLight1,,4)
                  >9 liqRibNode::findShadingGroup(|pointLight1|pointLightShape1,3)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pointLight1|pointLightShape1,3)
                    >10 liqRibLightData::liqRibLightData(|pointLight1|pointLightShape1)
                      >11 liqRibData::addAdditionalSurfaceParameters(pointLightShape1)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
              >7 liqRibHT::insert(|pointLight2|pointLightShape2,lframe,0,3,1,matrix,,-1)
                >8 liqRibHT::hash(|pointLight2|pointLightShape2,1)
                >8 liqRibHT::find(|pointLight2|pointLightShape2,|pointLight2|pointLightShape2,3)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pointLight2|pointLightShape2,0,3,-1)
                  >9 liqRibNode::parseVectorAttributes(pointLight2,,2)
                  >9 liqRibNode::parseVectorAttributes(pointLight2,,3)
                  >9 liqRibNode::parseVectorAttributes(pointLight2,,4)
                  >9 liqRibNode::findShadingGroup(|pointLight2|pointLightShape2,3)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pointLight2|pointLightShape2,3)
                    >10 liqRibLightData::liqRibLightData(|pointLight2|pointLightShape2)
                      >11 liqRibData::addAdditionalSurfaceParameters(pointLightShape2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 tLocatorMgr::scanScene(11,0,htable__,count__,returnStatus__)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,11,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,11,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,11,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,11,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,11,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,11,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,11,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,11,0,&count)
              >7 liqRibHT::insert(|persp|perspShape,lframe,0,0,2,matrix,,-1)
                >8 liqRibHT::hash(|persp|perspShape,2)
                >8 liqRibHT::find(|persp|perspShape,|persp|perspShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|persp|perspShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(persp,,2)
                  >9 liqRibNode::parseVectorAttributes(persp,,3)
                  >9 liqRibNode::parseVectorAttributes(persp,,4)
                  >9 liqRibNode::findShadingGroup(|persp|perspShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|persp|perspShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,11,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,11,0,&count)
              >7 liqRibHT::insert(|top|topShape,lframe,0,0,3,matrix,,-1)
                >8 liqRibHT::hash(|top|topShape,3)
                >8 liqRibHT::find(|top|topShape,|top|topShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|top|topShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(top,,2)
                  >9 liqRibNode::parseVectorAttributes(top,,3)
                  >9 liqRibNode::parseVectorAttributes(top,,4)
                  >9 liqRibNode::findShadingGroup(|top|topShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|top|topShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,11,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,11,0,&count)
              >7 liqRibHT::insert(|front|frontShape,lframe,0,0,4,matrix,,-1)
                >8 liqRibHT::hash(|front|frontShape,4)
                >8 liqRibHT::find(|front|frontShape,|front|frontShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|front|frontShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(front,,2)
                  >9 liqRibNode::parseVectorAttributes(front,,3)
                  >9 liqRibNode::parseVectorAttributes(front,,4)
                  >9 liqRibNode::findShadingGroup(|front|frontShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|front|frontShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,11,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,11,0,&count)
              >7 liqRibHT::insert(|side|sideShape,lframe,0,0,5,matrix,,-1)
                >8 liqRibHT::hash(|side|sideShape,5)
                >8 liqRibHT::find(|side|sideShape,|side|sideShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|side|sideShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(side,,2)
                  >9 liqRibNode::parseVectorAttributes(side,,3)
                  >9 liqRibNode::parseVectorAttributes(side,,4)
                  >9 liqRibNode::findShadingGroup(|side|sideShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|side|sideShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,11,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,11,0,&count)
              >7 liqRibHT::insert(|pPlane2|pPlaneShape11,lframe,0,0,6,matrix,,-1)
                >8 liqRibHT::hash(|pPlane2|pPlaneShape11,6)
                >8 liqRibHT::find(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pPlane2|pPlaneShape11,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(pPlane2,,2)
                  >9 liqRibNode::parseVectorAttributes(pPlane2,,3)
                  >9 liqRibNode::parseVectorAttributes(pPlane2,,4)
                  >9 liqRibNode::findShadingGroup(|pPlane2|pPlaneShape11,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getColor(&shader,&color)
                  >9 liqRibNode::getOpacity(&shader,&color)
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pPlane2|pPlaneShape11,0)
                    >10 liqRibMeshData::liqRibMeshData(|pPlane2|pPlaneShape11)
                      >11 liqRibData::addAdditionalSurfaceParameters(pPlaneShape11)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,11,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,11,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,11,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,11,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,11,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,11,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,11,0,&count)
              >7 liqRibHT::insert(|camera1_group|camera1|cameraShape1,lframe,0,0,7,matrix,,-1)
                >8 liqRibHT::hash(|camera1_group|camera1|cameraShape1,7)
                >8 liqRibHT::find(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|camera1_group|camera1|cameraShape1,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(camera1,,2)
                  >9 liqRibNode::parseVectorAttributes(camera1,,3)
                  >9 liqRibNode::parseVectorAttributes(camera1,,4)
                  >9 liqRibNode::findShadingGroup(|camera1_group|camera1|cameraShape1,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|camera1_group|camera1|cameraShape1,0)
                    >10 liqRibCameraData::liqRibCameraData(|camera1_group|camera1|cameraShape1)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,11,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,11,0,&count)
              >7 liqRibHT::insert(|camera1_group|camera1_aim|camera1_aimShape,lframe,0,0,8,matrix,,-1)
                >8 liqRibHT::hash(|camera1_group|camera1_aim|camera1_aimShape,8)
                >8 liqRibHT::find(|camera1_group|camera1_aim|camera1_aimShape,|camera1_group|camera1_aim|camera1_aimShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|camera1_group|camera1_aim|camera1_aimShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(camera1_aim,,2)
                  >9 liqRibNode::parseVectorAttributes(camera1_aim,,3)
                  >9 liqRibNode::parseVectorAttributes(camera1_aim,,4)
                  >9 liqRibNode::findShadingGroup(|camera1_group|camera1_aim|camera1_aimShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|camera1_group|camera1_aim|camera1_aimShape,0)
            >6 liqRibTranslatorNew::dealwithParticleInstancedObjects(0,11,9)
            >6 liqRibTranslatorNew::getCameraData(iter__,0)
              >7 liqRibTranslator::getCameraInfo(|camera1_group|camera1|cameraShape1,)
                >8 liqRibTranslator::portFieldOfView(224,150,&horizontal,&vertical,&fnCamera)
                  >9 liqRibTranslator::computeViewingFrustum(1.49333,,&left,&right,&bottom,&top,|camera1_group|camera1|cameraShape1)
              >7 liqRibTranslator::getCameraFilmOffset(|camera1_group|camera1|cameraShape1,)
              >7 liqRibTranslator::getCameraTransform(|camera1_group|camera1|cameraShape1,)
          >5 liqRibTranslatorNew::doTextures(size=0)
            >6 Renderer::frameEpilogue(txtList_.size=0)
          >5 liqRibTranslatorNew::doShadows(size=0)
            >6 Renderer::doShadows(shadowList_.size=0)
          >5 Renderer::setRenderScriptFormatAndCompress(0,0)
          >5 Renderer::isHeroPassReady(cameraShape1)
          >5 Renderer::HeroPassBegin(cameraShape1)
          >5 tHeroRibWriterMgr::write(liqglo___,cameraShape1,11,0)
            >6 liqRibTranslatorNew::ribPrologue__(cameraShape1)
              >7 Renderer::ribPrologue_begin(cameraShape1)
                >8 Renderer::dummyPhongShader()
              >7 Renderer::ribPrologue_comment(2.3.5 (buildtime=20:51:12.30),R:/MyDocuments/maya/projects/default/checker_anim,yaoyansi,time)
              >7 Renderer::ribPrologue_options(cameraShape1)
            >6 liqRibTranslatorNew::framePrologue__(11,cameraShape1)
              >7 Renderer::framePrologue(11,cameraShape1)
            >6 ShaderMgr::exportShaderGraph()
              >7 ConvertShadingNetwork::exportShaderGraph()
                >8 ConvertShadingNetwork::beforeExport()
                >8 ConvertShadingNetwork::__export()
                  >9 ConvertShadingNetwork::canShadingGroupExported(phong1SG)
                  >9 Renderer::getValidShaderPlugsInShadingGroup()
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,surfaceShader)
                    >10 ConvertShadingNetwork::canShaderExported(phong1)
                    >10 ConvertShadingNetwork::exportShaderBegin(phong1)
                    >10 ConvertShadingNetwork::convertShadingNetworkToRSL(phong1,surfaceShader)
                      >11 Visitor::initShaderData(phong1,surfaceShader)
                      >11 ConvertShadingNetwork::getUpstreamConvertibleNodes(phong1, nodes, numConnections)
                        >12 ConvertShadingNetwork::nodeIsConvertible(phong1)
                          >13 ShaderMgr::hasShaderType(phong)
                        >12 ShaderMgr::getValidConnection(phong1)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.color)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraX)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraX)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraY)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraY)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraZ)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraZ)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                          >13 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                            >14 ShaderMgr::hasShaderType(shadingEngine)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                        >12 ConvertShadingNetwork::getUpstreamConvertibleNodes(checker1, nodes, numConnections)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                          >13 ShaderMgr::getValidConnection(checker1)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1R)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1R)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1G)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1G)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1B)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1B)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2R)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2R)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2G)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2G)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2B)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2B)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.uCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.uCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.vCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.vCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                              >15 ShaderMgr::hasShaderType(place2dTexture)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                            >14 ConvertShadingNetwork::nodeIsConvertible(phong1)
                              >15 ShaderMgr::hasShaderType(phong)
                          >13 ConvertShadingNetwork::getUpstreamConvertibleNodes(place2dTexture1, nodes, numConnections)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                              >15 ShaderMgr::hasShaderType(place2dTexture)
                            >14 ShaderMgr::getValidConnection(place2dTexture1)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uCoord)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uCoord)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.vCoord)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.vCoord)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverage)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverage)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseUV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseUV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offset)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offset)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                              >15 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                                >16 ShaderMgr::hasShaderType(animCurveTU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                              >15 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                                >16 ShaderMgr::hasShaderType(animCurveTU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatUV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatUV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrame)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrame)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                              >15 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                >16 ShaderMgr::hasShaderType(checker)
                      >11 Visitor::preOutput(phong1)
                      >11 Visitor::outputBegin(phong1)
                      >11 ConvertShadingNetwork::traverseGraphAndOutputNodeFunctions( nodes, numConnections)
                        >12 Visitor::outputUpstreamShader(place2dTexture1)
                          >13 ShaderOutputVisitor::_outputUpstreamShader(place2dTexture1,place2dTexture)
                            >14 Visitor::visitPlace2dTexture(place2dTexture1)
                              >15 OutputHelper::beginRSL(maya_place2dTexture,place2dTexture1)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.uvCoord)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.coverageU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.coverageV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.mirrorU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.mirrorV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.noiseU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.noiseV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.offsetU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.offsetV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.repeatU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                                    >18 ShaderMgr::hasShaderType(animCurveTU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.repeatV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                                    >18 ShaderMgr::hasShaderType(animCurveTU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.rotateFrame)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.rotateUV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.stagger)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.translateFrameU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.translateFrameV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.wrapU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.wrapV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.outUV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                    >18 ShaderMgr::hasShaderType(checker)
                              >15 OutputHelper::endRSL()
                        >12 ShaderMgr::getValidConnection(place2dTexture1)
                        >12 ConvertShadingNetwork::decrementDownstreamConnections(place2dTexture1, nodes, numConnections, validConnections)
                        >12 ConvertShadingNetwork::getNodeVariables(place2dTexture1, validConnections,  inputSrc, inputDes, outputSrc)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.vCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.vCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverage)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverage)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offset)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offset)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                              >15 ShaderMgr::hasShaderType(animCurveTU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                              >15 ShaderMgr::hasShaderType(animCurveTU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrame)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrame)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                            >14 ConvertShadingNetwork::nodeIsConvertible(checker1)
                              >15 ShaderMgr::hasShaderType(checker)
                          >13 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture1,outUV,place2dTexture1.outUV, outputVars)
                            >14 Visitor::addShaderMethodVariavles(place2dTexture1,outUV,float,2,)
                        >12 Visitor::addShaderMethodBody(place2dTexture1,,,place2dTexture1.outUV124)
                        >12 Visitor::outputUpstreamShader(checker1)
                          >13 ShaderOutputVisitor::_outputUpstreamShader(checker1,checker)
                            >14 Visitor::visitChecker(checker1)
                              >15 OutputHelper::beginRSL(maya_checker,checker1)
                              >15 ShaderMgr::convertibleConnection(checker1.alphaGain)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                              >15 ShaderMgr::convertibleConnection(checker1.alphaIsLuminance)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                              >15 ShaderMgr::convertibleConnection(checker1.alphaOffset)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                              >15 ShaderMgr::convertibleConnection(checker1.color1)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                              >15 ShaderMgr::convertibleConnection(checker1.color2)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                              >15 ShaderMgr::convertibleConnection(checker1.colorGain)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                              >15 ShaderMgr::convertibleConnection(checker1.colorOffset)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                              >15 ShaderMgr::convertibleConnection(checker1.contrast)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                              >15 ShaderMgr::convertibleConnection(checker1.defaultColor)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                              >15 ShaderMgr::convertibleConnection(checker1.filter)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                              >15 ShaderMgr::convertibleConnection(checker1.filterOffset)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                              >15 ShaderMgr::convertibleConnection(checker1.invert)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                              >15 ShaderMgr::convertibleConnection(checker1.uvCoord)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                                    >18 ShaderMgr::hasShaderType(place2dTexture)
                              >15 ShaderMgr::convertibleConnection(checker1.outAlpha)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                              >15 ShaderMgr::convertibleConnection(checker1.outColor)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(phong1)
                                    >18 ShaderMgr::hasShaderType(phong)
                              >15 OutputHelper::endRSL()
                        >12 ShaderMgr::getValidConnection(checker1)
                        >12 ConvertShadingNetwork::decrementDownstreamConnections(checker1, nodes, numConnections, validConnections)
                        >12 ConvertShadingNetwork::getNodeVariables(checker1, validConnections,  inputSrc, inputDes, outputSrc)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1R)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1R)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1G)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1G)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1B)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1B)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2R)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2R)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2G)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2G)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2B)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2B)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.uCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.uCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.vCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.vCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                              >15 ShaderMgr::hasShaderType(place2dTexture)
                          >13 ConvertShadingNetwork::addNodeInputVariable(checker1.uvCoord, inputSrc, inputDes)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                              >15 ShaderMgr::hasShaderType(place2dTexture)
                            >14 ShaderMgr::getValidConnection(place2dTexture1)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                            >14 ConvertShadingNetwork::nodeIsConvertible(phong1)
                              >15 ShaderMgr::hasShaderType(phong)
                          >13 ConvertShadingNetwork::addNodeOutputVariable(checker1,outColor,checker1.outColor, outputVars)
                            >14 Visitor::addShaderMethodVariavles(checker1,outColor,color,-1,)
                        >12 Visitor::addShaderMethodBody(checker1,place2dTexture1.outUV124,checker1.uvCoord124,checker1.outColor124)
                        >12 Visitor::outputUpstreamShader(phong1)
                          >13 ShaderOutputVisitor::_outputUpstreamShader(phong1,phong)
                            >14 Visitor::visitPhong(phong1)
                              >15 OutputHelper::beginRSL(maya_phong,phong1)
                              >15 ShaderMgr::convertibleConnection(phong1.ambientColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                              >15 ShaderMgr::convertibleConnection(phong1.color)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.color)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                    >18 ShaderMgr::hasShaderType(checker)
                              >15 ShaderMgr::convertibleConnection(phong1.cosinePower)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                              >15 ShaderMgr::convertibleConnection(phong1.diffuse)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                              >15 ShaderMgr::convertibleConnection(phong1.incandescence)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                              >15 ShaderMgr::convertibleConnection(phong1.matteOpacityMode)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                              >15 ShaderMgr::convertibleConnection(phong1.matteOpacity)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                              >15 OutputHelper::add_liq_UserDefinedNormal(phong1)
                              >15 ShaderMgr::convertibleConnection(phong1.normalCamera)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                              >15 ShaderMgr::convertibleConnection(phong1.specularColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                              >15 ShaderMgr::convertibleConnection(phong1.reflectivity)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                              >15 ShaderMgr::convertibleConnection(phong1.reflectedColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                              >15 ShaderMgr::convertibleConnection(phong1.reflectionLimit)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                              >15 ShaderMgr::convertibleConnection(phong1.translucence)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                              >15 ShaderMgr::convertibleConnection(phong1.translucenceDepth)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                              >15 ShaderMgr::convertibleConnection(phong1.translucenceFocus)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                              >15 ShaderMgr::convertibleConnection(phong1.transparency)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                              >15 ShaderMgr::convertibleConnection(phong1.outColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                                    >18 ShaderMgr::hasShaderType(shadingEngine)
                              >15 ShaderMgr::convertibleConnection(phong1.outTransparency)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                              >15 OutputHelper::endRSL()
                        >12 ShaderMgr::getValidConnection(phong1)
                        >12 ConvertShadingNetwork::decrementDownstreamConnections(phong1, nodes, numConnections, validConnections)
                        >12 ConvertShadingNetwork::getNodeVariables(phong1, validConnections,  inputSrc, inputDes, outputSrc)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.colorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.colorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.colorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.colorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.colorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.colorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.color)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                            >14 ConvertShadingNetwork::nodeIsConvertible(checker1)
                              >15 ShaderMgr::hasShaderType(checker)
                          >13 ConvertShadingNetwork::addNodeInputVariable(phong1.color, inputSrc, inputDes)
                            >14 ConvertShadingNetwork::nodeIsConvertible(checker1)
                              >15 ShaderMgr::hasShaderType(checker)
                            >14 ShaderMgr::getValidConnection(checker1)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.transparencyR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.transparencyG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.transparencyB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraX)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraX)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraY)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraY)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraZ)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraZ)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.specularColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.specularColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.specularColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                            >14 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                              >15 ShaderMgr::hasShaderType(shadingEngine)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                        >12 Visitor::addShaderMethodBody(phong1,checker1.outColor124,phong1.color124,)
                      >11 ConvertShadingNetwork::outputShaderMethod()
                        >12 Visitor::outputShaderMethod()
                      >11 Visitor::outputEnd()
                      >11 Visitor::postOutput()
                    >10 ConvertShadingNetwork::exportShaderEnd(phong1)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,displacementShader)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,volumeShader)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,liqShadowShader)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,liqEnvironmentShader)
                  >9 ConvertShadingNetwork::exportShadingGroupBegin(phong1SG)
                  >9 ConvertShadingNetwork::outputShadingGroup(phong1SG)
                    >10 Visitor::outputShadingGroup(phong1SG)
                  >9 ConvertShadingNetwork::exportShadingGroupEnd(phong1SG)
                >8  ConvertShadingNetwork::afterExport()
            >6 liqRibTranslatorNew::worldPrologue__(cameraShape1)
              >7 Renderer::worldPrologue(cameraShape1)
            >6 liqRibTranslatorNew::lightBlock__(cameraShape1)
              >7 Renderer::writeLight_pre(|pointLight1|pointLightShape1,cameraShape1)
              >7 liqRibObj::writeObject(,cameraShape1,0)
                >8 liqRibLightData::write(,job=cameraShape1,0)
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::write(|pointLight1|pointLightShape1,,cameraShape1,ref=0)
                      >11 liqRibData::getFullPathName()
                    >10 er_writeLightData.cpp::_write(|pointLight1|pointLightShape1,cameraShape1,...)
                      >11 Renderer::exportPointLight(pointlight,pointLightShape1,...)
                        >12 addLightGroupForLight(|pointLight1|pointLightShape1)
              >7 Renderer::writeLight_post(|pointLight1|pointLightShape1,cameraShape1)
              >7 Renderer::writeLight_pre(|pointLight2|pointLightShape2,cameraShape1)
              >7 liqRibObj::writeObject(,cameraShape1,0)
                >8 liqRibLightData::write(,job=cameraShape1,0)
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::write(|pointLight2|pointLightShape2,,cameraShape1,ref=0)
                      >11 liqRibData::getFullPathName()
                    >10 er_writeLightData.cpp::_write(|pointLight2|pointLightShape2,cameraShape1,...)
                      >11 Renderer::exportPointLight(pointlight,pointLightShape2,...)
                        >12 addLightGroupForLight(|pointLight2|pointLightShape2)
              >7 Renderer::writeLight_post(|pointLight2|pointLightShape2,cameraShape1)
            >6 liqRibTranslatorNew::coordSysBlock__(cameraShape1)
              >7 Renderer::coordSysBlock__(cameraShape1)
            >6 liqRibTranslatorNew::objectBlock__(cameraShape1)
              >7 liqRibTranslatorNew::objectBlock_data(cameraShape1)
                >8 liqRibTranslatorNew::getShadowSetObject(cameraShape1)
                >8 liqRibTranslatorNew::oneObjectBlock_data(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::exportOneObject_data(|pPlane2|pPlaneShape11,cameraShape1)
                    >10 Renderer::_writeObject(|pPlane2|pPlaneShape11,cameraShape1,0,0,0)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.11.rib,cameraShape1,0)
                        >12 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.11.rib,job=cameraShape1,0)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|pPlane2|pPlaneShape11,R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.11.rib,cameraShape1,ref=0)
                              >15 liqRibData::getFullPathName()
                            >14 er_writeMeshData.cpp::_write1(|pPlane2|pPlaneShape11,cameraShape1)
                              >15 liqRibHT::find(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                              >15 _exportVertexFromNodePlug(|pPlane2|pPlaneShape11,0)
                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqRibData::getFullPathName()
                >8 liqRibTranslatorNew::oneObjectBlock_data(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 Renderer::exportOneObject_data(|camera1_group|camera1|cameraShape1,cameraShape1)
                    >10 Renderer::_writeObject(|camera1_group|camera1|cameraShape1,cameraShape1,0,0,0)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_camera1_group_camera1_cameraShape1.11.rib,cameraShape1,0)
                        >12 liqRibCameraData::write(R:/MyDocuments/maya/projects/default/rib/_camera1_group_camera1_cameraShape1.11.rib,job=cameraShape1,0)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|camera1_group|camera1|cameraShape1,R:/MyDocuments/maya/projects/default/rib/_camera1_group_camera1_cameraShape1.11.rib,cameraShape1,ref=0)
                              >15 liqRibData::getFullPathName()
                            >14 er_writeCameraData.cpp::_write_camera(|camera1_group|camera1|cameraShape1,cameraShape1)
                              >15 liqRibHT::find(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,0)
                              >15 Renderer::gatherCameraShaders(cameraShaders.size=0,|camera1_group|camera1|cameraShape1,liqEnvironmentShader)
                              >15 Renderer::cameraOutput(cameraShape1)
              >7 liqRibTranslatorNew::objectBlock_reference(cameraShape1)
                >8 Renderer::objectBlock_reference_begin()
                >8 liqRibTranslatorNew::preGeometryMel()
                  >9 Renderer::preGeometryMel()
                >8 liqRibTranslatorNew::getShadowSetObject(cameraShape1)
                >8 liqRibTranslatorNew::oneObjectBlock_reference(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_begin(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_block0(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 liqRibTranslatorNew::tRiIlluminate(cameraShape1,|pPlane2|pPlaneShape11)
                    >10 Renderer::exportLightLinks(cameraShape1,|pPlane2|pPlaneShape11,lightedByWhichLightShapes.size=2)
                  >9 liqRibTranslatorNew::checkSurfaceShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                  >9 liqRibTranslatorNew::checkDisplacementShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                  >9 liqRibTranslatorNew::checkVolumeShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                  >9 Renderer::oneObjectBlock_reference_attribute_block1(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 liqRibTranslatorNew::writeShader_(1,|pPlane2|pPlaneShape11,v=0,s=0,c=0,,|pPlane2|pPlaneShape11,cameraShape1)
                    >10 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                  >9 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|pPlane2|pPlaneShape11)
                  >9 Renderer::exportOneObject_reference(|pPlane2|pPlaneShape11,cameraShape1)
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::oneObjectBlock_reference_attribute_end(|pPlane2|pPlaneShape11,cameraShape1)
                >8 liqRibTranslatorNew::oneObjectBlock_reference(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_begin(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_block0(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 liqRibTranslatorNew::tRiIlluminate(cameraShape1,|camera1_group|camera1|cameraShape1)
                    >10 Renderer::exportLightLinks(cameraShape1,|camera1_group|camera1|cameraShape1,lightedByWhichLightShapes.size=0)
                  >9 liqRibTranslatorNew::checkSurfaceShader(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,,,)
                  >9 liqRibTranslatorNew::checkDisplacementShader(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,,,)
                  >9 liqRibTranslatorNew::checkVolumeShader(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,,,)
                  >9 Renderer::oneObjectBlock_reference_attribute_block1(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 liqRibTranslatorNew::writeShader_(1,|camera1_group|camera1|cameraShape1,v=0,s=0,c=0,,|camera1_group|camera1|cameraShape1,cameraShape1)
                    >10 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,0)
                  >9 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|camera1_group|camera1|cameraShape1)
                  >9 Renderer::exportOneObject_reference(|camera1_group|camera1|cameraShape1,cameraShape1)
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::oneObjectBlock_reference_attribute_end(|camera1_group|camera1|cameraShape1,cameraShape1)
                >8 Renderer::objectBlock_reference_end()
            >6 liqRibTranslatorNew::worldEpilogue__()
              >7 liqRibTranslator::worldEpilogue()
                >8 Renderer::worldEpilogue()
            >6 liqRibTranslatorNew::frameEpilogue__(11)
              >7 Renderer::frameEpilogue(11)
            >6 liqRibTranslatorNew::ribEpilogue__(cameraShape1)
              >7 Renderer::ribPrologue_end(cameraShape1)
                >8 Renderer::cookInstanceGroup()
                >8 Renderer::render()
                  >9 Renderer::renderPreview(200,150,0,0,cameraShape1,cameraShape1,cameraShape1_option)
                    >10 Renderer::_renderPreview(200,150,0,0,cameraShape1,|camera1_group|camera1,cameraShape1_option)
          >5 Renderer::HeroPassEnd(cameraShape1)
        >4 liqRenderScript::addJob(job.title=checker_animFrame10,0)
          >5 liqRenderScript::popNextJobID()
        >4 tFrameScriptJobMgr::setCommonParameters(checker_animFrame11)
        >4 liqRibTranslatorNew::processOneFrame(11, liqglo__)
          >5 liqRibTranslatorNew::buildJobs__()
            >6 liqRibTranslatorNew::buildShadowJobs__()
              >7 tJobScriptMgr::buildShadowJob(thisJob___, 0)
              >7 tJobScriptMgr::buildShadowCameraJob(thisJob___, 0)
            >6 tRibCameraMgr::gatherDataForJob(liqglo___, ,jobList__,0,1)
            >6 liqRibTranslator::generateFileName(4,cameraShape1)
            >6 liqRibTranslator::generateFileName(5,cameraShape1)
              >7 liqRibTranslator::generateImageName(, job(cameraShape1)), 
          >5 liqRibTranslatorNew::calaculateSamplingTime(14)
          >5 liqRibTranslatorNew::scanScene__(14,0)
            >6 tJobScriptMgr::scanScene(14,0, htable__, count, returnStatus__)
              >7 liqRibHT::insert(|pointLight1|pointLightShape1,lframe,0,3,0,matrix,,-1)
                >8 liqRibHT::hash(|pointLight1|pointLightShape1,0)
                >8 liqRibHT::find(|pointLight1|pointLightShape1,|pointLight1|pointLightShape1,3)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pointLight1|pointLightShape1,0,3,-1)
                  >9 liqRibNode::parseVectorAttributes(pointLight1,,2)
                  >9 liqRibNode::parseVectorAttributes(pointLight1,,3)
                  >9 liqRibNode::parseVectorAttributes(pointLight1,,4)
                  >9 liqRibNode::findShadingGroup(|pointLight1|pointLightShape1,3)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pointLight1|pointLightShape1,3)
                    >10 liqRibLightData::liqRibLightData(|pointLight1|pointLightShape1)
                      >11 liqRibData::addAdditionalSurfaceParameters(pointLightShape1)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
              >7 liqRibHT::insert(|pointLight2|pointLightShape2,lframe,0,3,1,matrix,,-1)
                >8 liqRibHT::hash(|pointLight2|pointLightShape2,1)
                >8 liqRibHT::find(|pointLight2|pointLightShape2,|pointLight2|pointLightShape2,3)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pointLight2|pointLightShape2,0,3,-1)
                  >9 liqRibNode::parseVectorAttributes(pointLight2,,2)
                  >9 liqRibNode::parseVectorAttributes(pointLight2,,3)
                  >9 liqRibNode::parseVectorAttributes(pointLight2,,4)
                  >9 liqRibNode::findShadingGroup(|pointLight2|pointLightShape2,3)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pointLight2|pointLightShape2,3)
                    >10 liqRibLightData::liqRibLightData(|pointLight2|pointLightShape2)
                      >11 liqRibData::addAdditionalSurfaceParameters(pointLightShape2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 tLocatorMgr::scanScene(14,0,htable__,count__,returnStatus__)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,14,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,14,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,14,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,14,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,14,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,14,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,14,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,14,0,&count)
              >7 liqRibHT::insert(|persp|perspShape,lframe,0,0,2,matrix,,-1)
                >8 liqRibHT::hash(|persp|perspShape,2)
                >8 liqRibHT::find(|persp|perspShape,|persp|perspShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|persp|perspShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(persp,,2)
                  >9 liqRibNode::parseVectorAttributes(persp,,3)
                  >9 liqRibNode::parseVectorAttributes(persp,,4)
                  >9 liqRibNode::findShadingGroup(|persp|perspShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|persp|perspShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,14,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,14,0,&count)
              >7 liqRibHT::insert(|top|topShape,lframe,0,0,3,matrix,,-1)
                >8 liqRibHT::hash(|top|topShape,3)
                >8 liqRibHT::find(|top|topShape,|top|topShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|top|topShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(top,,2)
                  >9 liqRibNode::parseVectorAttributes(top,,3)
                  >9 liqRibNode::parseVectorAttributes(top,,4)
                  >9 liqRibNode::findShadingGroup(|top|topShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|top|topShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,14,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,14,0,&count)
              >7 liqRibHT::insert(|front|frontShape,lframe,0,0,4,matrix,,-1)
                >8 liqRibHT::hash(|front|frontShape,4)
                >8 liqRibHT::find(|front|frontShape,|front|frontShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|front|frontShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(front,,2)
                  >9 liqRibNode::parseVectorAttributes(front,,3)
                  >9 liqRibNode::parseVectorAttributes(front,,4)
                  >9 liqRibNode::findShadingGroup(|front|frontShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|front|frontShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,14,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,14,0,&count)
              >7 liqRibHT::insert(|side|sideShape,lframe,0,0,5,matrix,,-1)
                >8 liqRibHT::hash(|side|sideShape,5)
                >8 liqRibHT::find(|side|sideShape,|side|sideShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|side|sideShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(side,,2)
                  >9 liqRibNode::parseVectorAttributes(side,,3)
                  >9 liqRibNode::parseVectorAttributes(side,,4)
                  >9 liqRibNode::findShadingGroup(|side|sideShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|side|sideShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,14,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,14,0,&count)
              >7 liqRibHT::insert(|pPlane2|pPlaneShape11,lframe,0,0,6,matrix,,-1)
                >8 liqRibHT::hash(|pPlane2|pPlaneShape11,6)
                >8 liqRibHT::find(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pPlane2|pPlaneShape11,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(pPlane2,,2)
                  >9 liqRibNode::parseVectorAttributes(pPlane2,,3)
                  >9 liqRibNode::parseVectorAttributes(pPlane2,,4)
                  >9 liqRibNode::findShadingGroup(|pPlane2|pPlaneShape11,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getColor(&shader,&color)
                  >9 liqRibNode::getOpacity(&shader,&color)
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pPlane2|pPlaneShape11,0)
                    >10 liqRibMeshData::liqRibMeshData(|pPlane2|pPlaneShape11)
                      >11 liqRibData::addAdditionalSurfaceParameters(pPlaneShape11)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,14,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,14,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,14,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,14,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,14,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,14,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,14,0,&count)
              >7 liqRibHT::insert(|camera1_group|camera1|cameraShape1,lframe,0,0,7,matrix,,-1)
                >8 liqRibHT::hash(|camera1_group|camera1|cameraShape1,7)
                >8 liqRibHT::find(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|camera1_group|camera1|cameraShape1,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(camera1,,2)
                  >9 liqRibNode::parseVectorAttributes(camera1,,3)
                  >9 liqRibNode::parseVectorAttributes(camera1,,4)
                  >9 liqRibNode::findShadingGroup(|camera1_group|camera1|cameraShape1,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|camera1_group|camera1|cameraShape1,0)
                    >10 liqRibCameraData::liqRibCameraData(|camera1_group|camera1|cameraShape1)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,14,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,14,0,&count)
              >7 liqRibHT::insert(|camera1_group|camera1_aim|camera1_aimShape,lframe,0,0,8,matrix,,-1)
                >8 liqRibHT::hash(|camera1_group|camera1_aim|camera1_aimShape,8)
                >8 liqRibHT::find(|camera1_group|camera1_aim|camera1_aimShape,|camera1_group|camera1_aim|camera1_aimShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|camera1_group|camera1_aim|camera1_aimShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(camera1_aim,,2)
                  >9 liqRibNode::parseVectorAttributes(camera1_aim,,3)
                  >9 liqRibNode::parseVectorAttributes(camera1_aim,,4)
                  >9 liqRibNode::findShadingGroup(|camera1_group|camera1_aim|camera1_aimShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|camera1_group|camera1_aim|camera1_aimShape,0)
            >6 liqRibTranslatorNew::dealwithParticleInstancedObjects(0,14,9)
            >6 liqRibTranslatorNew::getCameraData(iter__,0)
              >7 liqRibTranslator::getCameraInfo(|camera1_group|camera1|cameraShape1,)
                >8 liqRibTranslator::portFieldOfView(224,150,&horizontal,&vertical,&fnCamera)
                  >9 liqRibTranslator::computeViewingFrustum(1.49333,,&left,&right,&bottom,&top,|camera1_group|camera1|cameraShape1)
              >7 liqRibTranslator::getCameraFilmOffset(|camera1_group|camera1|cameraShape1,)
              >7 liqRibTranslator::getCameraTransform(|camera1_group|camera1|cameraShape1,)
          >5 liqRibTranslatorNew::doTextures(size=0)
            >6 Renderer::frameEpilogue(txtList_.size=0)
          >5 liqRibTranslatorNew::doShadows(size=0)
            >6 Renderer::doShadows(shadowList_.size=0)
          >5 Renderer::setRenderScriptFormatAndCompress(0,0)
          >5 Renderer::isHeroPassReady(cameraShape1)
          >5 Renderer::HeroPassBegin(cameraShape1)
          >5 tHeroRibWriterMgr::write(liqglo___,cameraShape1,14,0)
            >6 liqRibTranslatorNew::ribPrologue__(cameraShape1)
              >7 Renderer::ribPrologue_begin(cameraShape1)
                >8 Renderer::dummyPhongShader()
              >7 Renderer::ribPrologue_comment(2.3.5 (buildtime=20:51:12.30),R:/MyDocuments/maya/projects/default/checker_anim,yaoyansi,time)
              >7 Renderer::ribPrologue_options(cameraShape1)
            >6 liqRibTranslatorNew::framePrologue__(14,cameraShape1)
              >7 Renderer::framePrologue(14,cameraShape1)
            >6 ShaderMgr::exportShaderGraph()
              >7 ConvertShadingNetwork::exportShaderGraph()
                >8 ConvertShadingNetwork::beforeExport()
                >8 ConvertShadingNetwork::__export()
                  >9 ConvertShadingNetwork::canShadingGroupExported(phong1SG)
                  >9 Renderer::getValidShaderPlugsInShadingGroup()
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,surfaceShader)
                    >10 ConvertShadingNetwork::canShaderExported(phong1)
                    >10 ConvertShadingNetwork::exportShaderBegin(phong1)
                    >10 ConvertShadingNetwork::convertShadingNetworkToRSL(phong1,surfaceShader)
                      >11 Visitor::initShaderData(phong1,surfaceShader)
                      >11 ConvertShadingNetwork::getUpstreamConvertibleNodes(phong1, nodes, numConnections)
                        >12 ConvertShadingNetwork::nodeIsConvertible(phong1)
                          >13 ShaderMgr::hasShaderType(phong)
                        >12 ShaderMgr::getValidConnection(phong1)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.color)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraX)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraX)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraY)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraY)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraZ)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraZ)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                          >13 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                            >14 ShaderMgr::hasShaderType(shadingEngine)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                        >12 ConvertShadingNetwork::getUpstreamConvertibleNodes(checker1, nodes, numConnections)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                          >13 ShaderMgr::getValidConnection(checker1)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1R)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1R)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1G)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1G)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1B)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1B)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2R)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2R)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2G)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2G)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2B)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2B)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.uCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.uCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.vCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.vCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                              >15 ShaderMgr::hasShaderType(place2dTexture)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                            >14 ConvertShadingNetwork::nodeIsConvertible(phong1)
                              >15 ShaderMgr::hasShaderType(phong)
                          >13 ConvertShadingNetwork::getUpstreamConvertibleNodes(place2dTexture1, nodes, numConnections)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                              >15 ShaderMgr::hasShaderType(place2dTexture)
                            >14 ShaderMgr::getValidConnection(place2dTexture1)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uCoord)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uCoord)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.vCoord)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.vCoord)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverage)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverage)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseUV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseUV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offset)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offset)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                              >15 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                                >16 ShaderMgr::hasShaderType(animCurveTU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                              >15 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                                >16 ShaderMgr::hasShaderType(animCurveTU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatUV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatUV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrame)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrame)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                              >15 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                >16 ShaderMgr::hasShaderType(checker)
                      >11 Visitor::preOutput(phong1)
                      >11 Visitor::outputBegin(phong1)
                      >11 ConvertShadingNetwork::traverseGraphAndOutputNodeFunctions( nodes, numConnections)
                        >12 Visitor::outputUpstreamShader(place2dTexture1)
                          >13 ShaderOutputVisitor::_outputUpstreamShader(place2dTexture1,place2dTexture)
                            >14 Visitor::visitPlace2dTexture(place2dTexture1)
                              >15 OutputHelper::beginRSL(maya_place2dTexture,place2dTexture1)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.uvCoord)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.coverageU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.coverageV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.mirrorU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.mirrorV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.noiseU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.noiseV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.offsetU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.offsetV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.repeatU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                                    >18 ShaderMgr::hasShaderType(animCurveTU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.repeatV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                                    >18 ShaderMgr::hasShaderType(animCurveTU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.rotateFrame)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.rotateUV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.stagger)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.translateFrameU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.translateFrameV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.wrapU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.wrapV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.outUV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                    >18 ShaderMgr::hasShaderType(checker)
                              >15 OutputHelper::endRSL()
                        >12 ShaderMgr::getValidConnection(place2dTexture1)
                        >12 ConvertShadingNetwork::decrementDownstreamConnections(place2dTexture1, nodes, numConnections, validConnections)
                        >12 ConvertShadingNetwork::getNodeVariables(place2dTexture1, validConnections,  inputSrc, inputDes, outputSrc)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.vCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.vCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverage)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverage)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offset)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offset)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                              >15 ShaderMgr::hasShaderType(animCurveTU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                              >15 ShaderMgr::hasShaderType(animCurveTU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrame)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrame)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                            >14 ConvertShadingNetwork::nodeIsConvertible(checker1)
                              >15 ShaderMgr::hasShaderType(checker)
                          >13 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture1,outUV,place2dTexture1.outUV, outputVars)
                            >14 Visitor::addShaderMethodVariavles(place2dTexture1,outUV,float,2,)
                        >12 Visitor::addShaderMethodBody(place2dTexture1,,,place2dTexture1.outUV124)
                        >12 Visitor::outputUpstreamShader(checker1)
                          >13 ShaderOutputVisitor::_outputUpstreamShader(checker1,checker)
                            >14 Visitor::visitChecker(checker1)
                              >15 OutputHelper::beginRSL(maya_checker,checker1)
                              >15 ShaderMgr::convertibleConnection(checker1.alphaGain)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                              >15 ShaderMgr::convertibleConnection(checker1.alphaIsLuminance)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                              >15 ShaderMgr::convertibleConnection(checker1.alphaOffset)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                              >15 ShaderMgr::convertibleConnection(checker1.color1)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                              >15 ShaderMgr::convertibleConnection(checker1.color2)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                              >15 ShaderMgr::convertibleConnection(checker1.colorGain)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                              >15 ShaderMgr::convertibleConnection(checker1.colorOffset)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                              >15 ShaderMgr::convertibleConnection(checker1.contrast)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                              >15 ShaderMgr::convertibleConnection(checker1.defaultColor)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                              >15 ShaderMgr::convertibleConnection(checker1.filter)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                              >15 ShaderMgr::convertibleConnection(checker1.filterOffset)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                              >15 ShaderMgr::convertibleConnection(checker1.invert)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                              >15 ShaderMgr::convertibleConnection(checker1.uvCoord)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                                    >18 ShaderMgr::hasShaderType(place2dTexture)
                              >15 ShaderMgr::convertibleConnection(checker1.outAlpha)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                              >15 ShaderMgr::convertibleConnection(checker1.outColor)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(phong1)
                                    >18 ShaderMgr::hasShaderType(phong)
                              >15 OutputHelper::endRSL()
                        >12 ShaderMgr::getValidConnection(checker1)
                        >12 ConvertShadingNetwork::decrementDownstreamConnections(checker1, nodes, numConnections, validConnections)
                        >12 ConvertShadingNetwork::getNodeVariables(checker1, validConnections,  inputSrc, inputDes, outputSrc)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1R)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1R)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1G)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1G)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1B)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1B)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2R)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2R)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2G)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2G)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2B)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2B)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.uCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.uCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.vCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.vCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                              >15 ShaderMgr::hasShaderType(place2dTexture)
                          >13 ConvertShadingNetwork::addNodeInputVariable(checker1.uvCoord, inputSrc, inputDes)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                              >15 ShaderMgr::hasShaderType(place2dTexture)
                            >14 ShaderMgr::getValidConnection(place2dTexture1)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                            >14 ConvertShadingNetwork::nodeIsConvertible(phong1)
                              >15 ShaderMgr::hasShaderType(phong)
                          >13 ConvertShadingNetwork::addNodeOutputVariable(checker1,outColor,checker1.outColor, outputVars)
                            >14 Visitor::addShaderMethodVariavles(checker1,outColor,color,-1,)
                        >12 Visitor::addShaderMethodBody(checker1,place2dTexture1.outUV124,checker1.uvCoord124,checker1.outColor124)
                        >12 Visitor::outputUpstreamShader(phong1)
                          >13 ShaderOutputVisitor::_outputUpstreamShader(phong1,phong)
                            >14 Visitor::visitPhong(phong1)
                              >15 OutputHelper::beginRSL(maya_phong,phong1)
                              >15 ShaderMgr::convertibleConnection(phong1.ambientColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                              >15 ShaderMgr::convertibleConnection(phong1.color)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.color)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                    >18 ShaderMgr::hasShaderType(checker)
                              >15 ShaderMgr::convertibleConnection(phong1.cosinePower)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                              >15 ShaderMgr::convertibleConnection(phong1.diffuse)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                              >15 ShaderMgr::convertibleConnection(phong1.incandescence)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                              >15 ShaderMgr::convertibleConnection(phong1.matteOpacityMode)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                              >15 ShaderMgr::convertibleConnection(phong1.matteOpacity)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                              >15 OutputHelper::add_liq_UserDefinedNormal(phong1)
                              >15 ShaderMgr::convertibleConnection(phong1.normalCamera)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                              >15 ShaderMgr::convertibleConnection(phong1.specularColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                              >15 ShaderMgr::convertibleConnection(phong1.reflectivity)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                              >15 ShaderMgr::convertibleConnection(phong1.reflectedColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                              >15 ShaderMgr::convertibleConnection(phong1.reflectionLimit)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                              >15 ShaderMgr::convertibleConnection(phong1.translucence)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                              >15 ShaderMgr::convertibleConnection(phong1.translucenceDepth)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                              >15 ShaderMgr::convertibleConnection(phong1.translucenceFocus)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                              >15 ShaderMgr::convertibleConnection(phong1.transparency)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                              >15 ShaderMgr::convertibleConnection(phong1.outColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                                    >18 ShaderMgr::hasShaderType(shadingEngine)
                              >15 ShaderMgr::convertibleConnection(phong1.outTransparency)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                              >15 OutputHelper::endRSL()
                        >12 ShaderMgr::getValidConnection(phong1)
                        >12 ConvertShadingNetwork::decrementDownstreamConnections(phong1, nodes, numConnections, validConnections)
                        >12 ConvertShadingNetwork::getNodeVariables(phong1, validConnections,  inputSrc, inputDes, outputSrc)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.colorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.colorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.colorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.colorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.colorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.colorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.color)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                            >14 ConvertShadingNetwork::nodeIsConvertible(checker1)
                              >15 ShaderMgr::hasShaderType(checker)
                          >13 ConvertShadingNetwork::addNodeInputVariable(phong1.color, inputSrc, inputDes)
                            >14 ConvertShadingNetwork::nodeIsConvertible(checker1)
                              >15 ShaderMgr::hasShaderType(checker)
                            >14 ShaderMgr::getValidConnection(checker1)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.transparencyR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.transparencyG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.transparencyB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraX)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraX)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraY)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraY)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraZ)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraZ)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.specularColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.specularColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.specularColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                            >14 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                              >15 ShaderMgr::hasShaderType(shadingEngine)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                        >12 Visitor::addShaderMethodBody(phong1,checker1.outColor124,phong1.color124,)
                      >11 ConvertShadingNetwork::outputShaderMethod()
                        >12 Visitor::outputShaderMethod()
                      >11 Visitor::outputEnd()
                      >11 Visitor::postOutput()
                    >10 ConvertShadingNetwork::exportShaderEnd(phong1)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,displacementShader)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,volumeShader)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,liqShadowShader)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,liqEnvironmentShader)
                  >9 ConvertShadingNetwork::exportShadingGroupBegin(phong1SG)
                  >9 ConvertShadingNetwork::outputShadingGroup(phong1SG)
                    >10 Visitor::outputShadingGroup(phong1SG)
                  >9 ConvertShadingNetwork::exportShadingGroupEnd(phong1SG)
                >8  ConvertShadingNetwork::afterExport()
            >6 liqRibTranslatorNew::worldPrologue__(cameraShape1)
              >7 Renderer::worldPrologue(cameraShape1)
            >6 liqRibTranslatorNew::lightBlock__(cameraShape1)
              >7 Renderer::writeLight_pre(|pointLight1|pointLightShape1,cameraShape1)
              >7 liqRibObj::writeObject(,cameraShape1,0)
                >8 liqRibLightData::write(,job=cameraShape1,0)
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::write(|pointLight1|pointLightShape1,,cameraShape1,ref=0)
                      >11 liqRibData::getFullPathName()
                    >10 er_writeLightData.cpp::_write(|pointLight1|pointLightShape1,cameraShape1,...)
                      >11 Renderer::exportPointLight(pointlight,pointLightShape1,...)
                        >12 addLightGroupForLight(|pointLight1|pointLightShape1)
              >7 Renderer::writeLight_post(|pointLight1|pointLightShape1,cameraShape1)
              >7 Renderer::writeLight_pre(|pointLight2|pointLightShape2,cameraShape1)
              >7 liqRibObj::writeObject(,cameraShape1,0)
                >8 liqRibLightData::write(,job=cameraShape1,0)
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::write(|pointLight2|pointLightShape2,,cameraShape1,ref=0)
                      >11 liqRibData::getFullPathName()
                    >10 er_writeLightData.cpp::_write(|pointLight2|pointLightShape2,cameraShape1,...)
                      >11 Renderer::exportPointLight(pointlight,pointLightShape2,...)
                        >12 addLightGroupForLight(|pointLight2|pointLightShape2)
              >7 Renderer::writeLight_post(|pointLight2|pointLightShape2,cameraShape1)
            >6 liqRibTranslatorNew::coordSysBlock__(cameraShape1)
              >7 Renderer::coordSysBlock__(cameraShape1)
            >6 liqRibTranslatorNew::objectBlock__(cameraShape1)
              >7 liqRibTranslatorNew::objectBlock_data(cameraShape1)
                >8 liqRibTranslatorNew::getShadowSetObject(cameraShape1)
                >8 liqRibTranslatorNew::oneObjectBlock_data(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::exportOneObject_data(|pPlane2|pPlaneShape11,cameraShape1)
                    >10 Renderer::_writeObject(|pPlane2|pPlaneShape11,cameraShape1,0,0,0)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.14.rib,cameraShape1,0)
                        >12 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.14.rib,job=cameraShape1,0)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|pPlane2|pPlaneShape11,R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.14.rib,cameraShape1,ref=0)
                              >15 liqRibData::getFullPathName()
                            >14 er_writeMeshData.cpp::_write1(|pPlane2|pPlaneShape11,cameraShape1)
                              >15 liqRibHT::find(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                              >15 _exportVertexFromNodePlug(|pPlane2|pPlaneShape11,0)
                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqRibData::getFullPathName()
                >8 liqRibTranslatorNew::oneObjectBlock_data(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 Renderer::exportOneObject_data(|camera1_group|camera1|cameraShape1,cameraShape1)
                    >10 Renderer::_writeObject(|camera1_group|camera1|cameraShape1,cameraShape1,0,0,0)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_camera1_group_camera1_cameraShape1.14.rib,cameraShape1,0)
                        >12 liqRibCameraData::write(R:/MyDocuments/maya/projects/default/rib/_camera1_group_camera1_cameraShape1.14.rib,job=cameraShape1,0)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|camera1_group|camera1|cameraShape1,R:/MyDocuments/maya/projects/default/rib/_camera1_group_camera1_cameraShape1.14.rib,cameraShape1,ref=0)
                              >15 liqRibData::getFullPathName()
                            >14 er_writeCameraData.cpp::_write_camera(|camera1_group|camera1|cameraShape1,cameraShape1)
                              >15 liqRibHT::find(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,0)
                              >15 Renderer::gatherCameraShaders(cameraShaders.size=0,|camera1_group|camera1|cameraShape1,liqEnvironmentShader)
                              >15 Renderer::cameraOutput(cameraShape1)
              >7 liqRibTranslatorNew::objectBlock_reference(cameraShape1)
                >8 Renderer::objectBlock_reference_begin()
                >8 liqRibTranslatorNew::preGeometryMel()
                  >9 Renderer::preGeometryMel()
                >8 liqRibTranslatorNew::getShadowSetObject(cameraShape1)
                >8 liqRibTranslatorNew::oneObjectBlock_reference(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_begin(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_block0(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 liqRibTranslatorNew::tRiIlluminate(cameraShape1,|pPlane2|pPlaneShape11)
                    >10 Renderer::exportLightLinks(cameraShape1,|pPlane2|pPlaneShape11,lightedByWhichLightShapes.size=2)
                  >9 liqRibTranslatorNew::checkSurfaceShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                  >9 liqRibTranslatorNew::checkDisplacementShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                  >9 liqRibTranslatorNew::checkVolumeShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                  >9 Renderer::oneObjectBlock_reference_attribute_block1(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 liqRibTranslatorNew::writeShader_(1,|pPlane2|pPlaneShape11,v=0,s=0,c=0,,|pPlane2|pPlaneShape11,cameraShape1)
                    >10 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                  >9 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|pPlane2|pPlaneShape11)
                  >9 Renderer::exportOneObject_reference(|pPlane2|pPlaneShape11,cameraShape1)
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::oneObjectBlock_reference_attribute_end(|pPlane2|pPlaneShape11,cameraShape1)
                >8 liqRibTranslatorNew::oneObjectBlock_reference(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_begin(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_block0(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 liqRibTranslatorNew::tRiIlluminate(cameraShape1,|camera1_group|camera1|cameraShape1)
                    >10 Renderer::exportLightLinks(cameraShape1,|camera1_group|camera1|cameraShape1,lightedByWhichLightShapes.size=0)
                  >9 liqRibTranslatorNew::checkSurfaceShader(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,,,)
                  >9 liqRibTranslatorNew::checkDisplacementShader(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,,,)
                  >9 liqRibTranslatorNew::checkVolumeShader(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,,,)
                  >9 Renderer::oneObjectBlock_reference_attribute_block1(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 liqRibTranslatorNew::writeShader_(1,|camera1_group|camera1|cameraShape1,v=0,s=0,c=0,,|camera1_group|camera1|cameraShape1,cameraShape1)
                    >10 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,0)
                  >9 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|camera1_group|camera1|cameraShape1)
                  >9 Renderer::exportOneObject_reference(|camera1_group|camera1|cameraShape1,cameraShape1)
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::oneObjectBlock_reference_attribute_end(|camera1_group|camera1|cameraShape1,cameraShape1)
                >8 Renderer::objectBlock_reference_end()
            >6 liqRibTranslatorNew::worldEpilogue__()
              >7 liqRibTranslator::worldEpilogue()
                >8 Renderer::worldEpilogue()
            >6 liqRibTranslatorNew::frameEpilogue__(14)
              >7 Renderer::frameEpilogue(14)
            >6 liqRibTranslatorNew::ribEpilogue__(cameraShape1)
              >7 Renderer::ribPrologue_end(cameraShape1)
                >8 Renderer::cookInstanceGroup()
                >8 Renderer::render()
                  >9 Renderer::renderPreview(200,150,0,0,cameraShape1,cameraShape1,cameraShape1_option)
                    >10 Renderer::_renderPreview(200,150,0,0,cameraShape1,|camera1_group|camera1,cameraShape1_option)
          >5 Renderer::HeroPassEnd(cameraShape1)
        >4 liqRenderScript::addJob(job.title=checker_animFrame11,0)
          >5 liqRenderScript::popNextJobID()
        >4 tFrameScriptJobMgr::setCommonParameters(checker_animFrame14)
        >4 liqRibTranslatorNew::processOneFrame(12, liqglo__)
          >5 liqRibTranslatorNew::buildJobs__()
            >6 liqRibTranslatorNew::buildShadowJobs__()
              >7 tJobScriptMgr::buildShadowJob(thisJob___, 0)
              >7 tJobScriptMgr::buildShadowCameraJob(thisJob___, 0)
            >6 tRibCameraMgr::gatherDataForJob(liqglo___, ,jobList__,0,1)
            >6 liqRibTranslator::generateFileName(4,cameraShape1)
            >6 liqRibTranslator::generateFileName(5,cameraShape1)
              >7 liqRibTranslator::generateImageName(, job(cameraShape1)), 
          >5 liqRibTranslatorNew::calaculateSamplingTime(17)
          >5 liqRibTranslatorNew::scanScene__(17,0)
            >6 tJobScriptMgr::scanScene(17,0, htable__, count, returnStatus__)
              >7 liqRibHT::insert(|pointLight1|pointLightShape1,lframe,0,3,0,matrix,,-1)
                >8 liqRibHT::hash(|pointLight1|pointLightShape1,0)
                >8 liqRibHT::find(|pointLight1|pointLightShape1,|pointLight1|pointLightShape1,3)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pointLight1|pointLightShape1,0,3,-1)
                  >9 liqRibNode::parseVectorAttributes(pointLight1,,2)
                  >9 liqRibNode::parseVectorAttributes(pointLight1,,3)
                  >9 liqRibNode::parseVectorAttributes(pointLight1,,4)
                  >9 liqRibNode::findShadingGroup(|pointLight1|pointLightShape1,3)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pointLight1|pointLightShape1,3)
                    >10 liqRibLightData::liqRibLightData(|pointLight1|pointLightShape1)
                      >11 liqRibData::addAdditionalSurfaceParameters(pointLightShape1)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
              >7 liqRibHT::insert(|pointLight2|pointLightShape2,lframe,0,3,1,matrix,,-1)
                >8 liqRibHT::hash(|pointLight2|pointLightShape2,1)
                >8 liqRibHT::find(|pointLight2|pointLightShape2,|pointLight2|pointLightShape2,3)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pointLight2|pointLightShape2,0,3,-1)
                  >9 liqRibNode::parseVectorAttributes(pointLight2,,2)
                  >9 liqRibNode::parseVectorAttributes(pointLight2,,3)
                  >9 liqRibNode::parseVectorAttributes(pointLight2,,4)
                  >9 liqRibNode::findShadingGroup(|pointLight2|pointLightShape2,3)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pointLight2|pointLightShape2,3)
                    >10 liqRibLightData::liqRibLightData(|pointLight2|pointLightShape2)
                      >11 liqRibData::addAdditionalSurfaceParameters(pointLightShape2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 tLocatorMgr::scanScene(17,0,htable__,count__,returnStatus__)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,17,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,17,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,17,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,17,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,17,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,17,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,17,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,17,0,&count)
              >7 liqRibHT::insert(|persp|perspShape,lframe,0,0,2,matrix,,-1)
                >8 liqRibHT::hash(|persp|perspShape,2)
                >8 liqRibHT::find(|persp|perspShape,|persp|perspShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|persp|perspShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(persp,,2)
                  >9 liqRibNode::parseVectorAttributes(persp,,3)
                  >9 liqRibNode::parseVectorAttributes(persp,,4)
                  >9 liqRibNode::findShadingGroup(|persp|perspShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|persp|perspShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,17,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,17,0,&count)
              >7 liqRibHT::insert(|top|topShape,lframe,0,0,3,matrix,,-1)
                >8 liqRibHT::hash(|top|topShape,3)
                >8 liqRibHT::find(|top|topShape,|top|topShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|top|topShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(top,,2)
                  >9 liqRibNode::parseVectorAttributes(top,,3)
                  >9 liqRibNode::parseVectorAttributes(top,,4)
                  >9 liqRibNode::findShadingGroup(|top|topShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|top|topShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,17,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,17,0,&count)
              >7 liqRibHT::insert(|front|frontShape,lframe,0,0,4,matrix,,-1)
                >8 liqRibHT::hash(|front|frontShape,4)
                >8 liqRibHT::find(|front|frontShape,|front|frontShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|front|frontShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(front,,2)
                  >9 liqRibNode::parseVectorAttributes(front,,3)
                  >9 liqRibNode::parseVectorAttributes(front,,4)
                  >9 liqRibNode::findShadingGroup(|front|frontShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|front|frontShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,17,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,17,0,&count)
              >7 liqRibHT::insert(|side|sideShape,lframe,0,0,5,matrix,,-1)
                >8 liqRibHT::hash(|side|sideShape,5)
                >8 liqRibHT::find(|side|sideShape,|side|sideShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|side|sideShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(side,,2)
                  >9 liqRibNode::parseVectorAttributes(side,,3)
                  >9 liqRibNode::parseVectorAttributes(side,,4)
                  >9 liqRibNode::findShadingGroup(|side|sideShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|side|sideShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,17,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,17,0,&count)
              >7 liqRibHT::insert(|pPlane2|pPlaneShape11,lframe,0,0,6,matrix,,-1)
                >8 liqRibHT::hash(|pPlane2|pPlaneShape11,6)
                >8 liqRibHT::find(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pPlane2|pPlaneShape11,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(pPlane2,,2)
                  >9 liqRibNode::parseVectorAttributes(pPlane2,,3)
                  >9 liqRibNode::parseVectorAttributes(pPlane2,,4)
                  >9 liqRibNode::findShadingGroup(|pPlane2|pPlaneShape11,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getColor(&shader,&color)
                  >9 liqRibNode::getOpacity(&shader,&color)
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pPlane2|pPlaneShape11,0)
                    >10 liqRibMeshData::liqRibMeshData(|pPlane2|pPlaneShape11)
                      >11 liqRibData::addAdditionalSurfaceParameters(pPlaneShape11)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,17,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,17,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,17,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,17,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,17,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,17,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,17,0,&count)
              >7 liqRibHT::insert(|camera1_group|camera1|cameraShape1,lframe,0,0,7,matrix,,-1)
                >8 liqRibHT::hash(|camera1_group|camera1|cameraShape1,7)
                >8 liqRibHT::find(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|camera1_group|camera1|cameraShape1,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(camera1,,2)
                  >9 liqRibNode::parseVectorAttributes(camera1,,3)
                  >9 liqRibNode::parseVectorAttributes(camera1,,4)
                  >9 liqRibNode::findShadingGroup(|camera1_group|camera1|cameraShape1,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|camera1_group|camera1|cameraShape1,0)
                    >10 liqRibCameraData::liqRibCameraData(|camera1_group|camera1|cameraShape1)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,17,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,17,0,&count)
              >7 liqRibHT::insert(|camera1_group|camera1_aim|camera1_aimShape,lframe,0,0,8,matrix,,-1)
                >8 liqRibHT::hash(|camera1_group|camera1_aim|camera1_aimShape,8)
                >8 liqRibHT::find(|camera1_group|camera1_aim|camera1_aimShape,|camera1_group|camera1_aim|camera1_aimShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|camera1_group|camera1_aim|camera1_aimShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(camera1_aim,,2)
                  >9 liqRibNode::parseVectorAttributes(camera1_aim,,3)
                  >9 liqRibNode::parseVectorAttributes(camera1_aim,,4)
                  >9 liqRibNode::findShadingGroup(|camera1_group|camera1_aim|camera1_aimShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|camera1_group|camera1_aim|camera1_aimShape,0)
            >6 liqRibTranslatorNew::dealwithParticleInstancedObjects(0,17,9)
            >6 liqRibTranslatorNew::getCameraData(iter__,0)
              >7 liqRibTranslator::getCameraInfo(|camera1_group|camera1|cameraShape1,)
                >8 liqRibTranslator::portFieldOfView(224,150,&horizontal,&vertical,&fnCamera)
                  >9 liqRibTranslator::computeViewingFrustum(1.49333,,&left,&right,&bottom,&top,|camera1_group|camera1|cameraShape1)
              >7 liqRibTranslator::getCameraFilmOffset(|camera1_group|camera1|cameraShape1,)
              >7 liqRibTranslator::getCameraTransform(|camera1_group|camera1|cameraShape1,)
          >5 liqRibTranslatorNew::doTextures(size=0)
            >6 Renderer::frameEpilogue(txtList_.size=0)
          >5 liqRibTranslatorNew::doShadows(size=0)
            >6 Renderer::doShadows(shadowList_.size=0)
          >5 Renderer::setRenderScriptFormatAndCompress(0,0)
          >5 Renderer::isHeroPassReady(cameraShape1)
          >5 Renderer::HeroPassBegin(cameraShape1)
          >5 tHeroRibWriterMgr::write(liqglo___,cameraShape1,17,0)
            >6 liqRibTranslatorNew::ribPrologue__(cameraShape1)
              >7 Renderer::ribPrologue_begin(cameraShape1)
                >8 Renderer::dummyPhongShader()
              >7 Renderer::ribPrologue_comment(2.3.5 (buildtime=20:51:12.30),R:/MyDocuments/maya/projects/default/checker_anim,yaoyansi,time)
              >7 Renderer::ribPrologue_options(cameraShape1)
            >6 liqRibTranslatorNew::framePrologue__(17,cameraShape1)
              >7 Renderer::framePrologue(17,cameraShape1)
            >6 ShaderMgr::exportShaderGraph()
              >7 ConvertShadingNetwork::exportShaderGraph()
                >8 ConvertShadingNetwork::beforeExport()
                >8 ConvertShadingNetwork::__export()
                  >9 ConvertShadingNetwork::canShadingGroupExported(phong1SG)
                  >9 Renderer::getValidShaderPlugsInShadingGroup()
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,surfaceShader)
                    >10 ConvertShadingNetwork::canShaderExported(phong1)
                    >10 ConvertShadingNetwork::exportShaderBegin(phong1)
                    >10 ConvertShadingNetwork::convertShadingNetworkToRSL(phong1,surfaceShader)
                      >11 Visitor::initShaderData(phong1,surfaceShader)
                      >11 ConvertShadingNetwork::getUpstreamConvertibleNodes(phong1, nodes, numConnections)
                        >12 ConvertShadingNetwork::nodeIsConvertible(phong1)
                          >13 ShaderMgr::hasShaderType(phong)
                        >12 ShaderMgr::getValidConnection(phong1)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.color)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraX)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraX)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraY)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraY)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraZ)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraZ)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                          >13 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                            >14 ShaderMgr::hasShaderType(shadingEngine)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                        >12 ConvertShadingNetwork::getUpstreamConvertibleNodes(checker1, nodes, numConnections)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                          >13 ShaderMgr::getValidConnection(checker1)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1R)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1R)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1G)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1G)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1B)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1B)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2R)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2R)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2G)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2G)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2B)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2B)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.uCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.uCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.vCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.vCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                              >15 ShaderMgr::hasShaderType(place2dTexture)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                            >14 ConvertShadingNetwork::nodeIsConvertible(phong1)
                              >15 ShaderMgr::hasShaderType(phong)
                          >13 ConvertShadingNetwork::getUpstreamConvertibleNodes(place2dTexture1, nodes, numConnections)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                              >15 ShaderMgr::hasShaderType(place2dTexture)
                            >14 ShaderMgr::getValidConnection(place2dTexture1)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uCoord)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uCoord)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.vCoord)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.vCoord)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverage)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverage)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseUV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseUV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offset)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offset)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                              >15 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                                >16 ShaderMgr::hasShaderType(animCurveTU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                              >15 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                                >16 ShaderMgr::hasShaderType(animCurveTU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatUV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatUV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrame)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrame)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                              >15 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                >16 ShaderMgr::hasShaderType(checker)
                      >11 Visitor::preOutput(phong1)
                      >11 Visitor::outputBegin(phong1)
                      >11 ConvertShadingNetwork::traverseGraphAndOutputNodeFunctions( nodes, numConnections)
                        >12 Visitor::outputUpstreamShader(place2dTexture1)
                          >13 ShaderOutputVisitor::_outputUpstreamShader(place2dTexture1,place2dTexture)
                            >14 Visitor::visitPlace2dTexture(place2dTexture1)
                              >15 OutputHelper::beginRSL(maya_place2dTexture,place2dTexture1)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.uvCoord)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.coverageU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.coverageV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.mirrorU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.mirrorV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.noiseU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.noiseV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.offsetU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.offsetV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.repeatU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                                    >18 ShaderMgr::hasShaderType(animCurveTU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.repeatV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                                    >18 ShaderMgr::hasShaderType(animCurveTU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.rotateFrame)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.rotateUV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.stagger)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.translateFrameU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.translateFrameV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.wrapU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.wrapV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.outUV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                    >18 ShaderMgr::hasShaderType(checker)
                              >15 OutputHelper::endRSL()
                        >12 ShaderMgr::getValidConnection(place2dTexture1)
                        >12 ConvertShadingNetwork::decrementDownstreamConnections(place2dTexture1, nodes, numConnections, validConnections)
                        >12 ConvertShadingNetwork::getNodeVariables(place2dTexture1, validConnections,  inputSrc, inputDes, outputSrc)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.vCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.vCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverage)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverage)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offset)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offset)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                              >15 ShaderMgr::hasShaderType(animCurveTU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                              >15 ShaderMgr::hasShaderType(animCurveTU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrame)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrame)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                            >14 ConvertShadingNetwork::nodeIsConvertible(checker1)
                              >15 ShaderMgr::hasShaderType(checker)
                          >13 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture1,outUV,place2dTexture1.outUV, outputVars)
                            >14 Visitor::addShaderMethodVariavles(place2dTexture1,outUV,float,2,)
                        >12 Visitor::addShaderMethodBody(place2dTexture1,,,place2dTexture1.outUV124)
                        >12 Visitor::outputUpstreamShader(checker1)
                          >13 ShaderOutputVisitor::_outputUpstreamShader(checker1,checker)
                            >14 Visitor::visitChecker(checker1)
                              >15 OutputHelper::beginRSL(maya_checker,checker1)
                              >15 ShaderMgr::convertibleConnection(checker1.alphaGain)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                              >15 ShaderMgr::convertibleConnection(checker1.alphaIsLuminance)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                              >15 ShaderMgr::convertibleConnection(checker1.alphaOffset)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                              >15 ShaderMgr::convertibleConnection(checker1.color1)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                              >15 ShaderMgr::convertibleConnection(checker1.color2)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                              >15 ShaderMgr::convertibleConnection(checker1.colorGain)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                              >15 ShaderMgr::convertibleConnection(checker1.colorOffset)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                              >15 ShaderMgr::convertibleConnection(checker1.contrast)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                              >15 ShaderMgr::convertibleConnection(checker1.defaultColor)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                              >15 ShaderMgr::convertibleConnection(checker1.filter)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                              >15 ShaderMgr::convertibleConnection(checker1.filterOffset)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                              >15 ShaderMgr::convertibleConnection(checker1.invert)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                              >15 ShaderMgr::convertibleConnection(checker1.uvCoord)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                                    >18 ShaderMgr::hasShaderType(place2dTexture)
                              >15 ShaderMgr::convertibleConnection(checker1.outAlpha)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                              >15 ShaderMgr::convertibleConnection(checker1.outColor)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(phong1)
                                    >18 ShaderMgr::hasShaderType(phong)
                              >15 OutputHelper::endRSL()
                        >12 ShaderMgr::getValidConnection(checker1)
                        >12 ConvertShadingNetwork::decrementDownstreamConnections(checker1, nodes, numConnections, validConnections)
                        >12 ConvertShadingNetwork::getNodeVariables(checker1, validConnections,  inputSrc, inputDes, outputSrc)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1R)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1R)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1G)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1G)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1B)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1B)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2R)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2R)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2G)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2G)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2B)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2B)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.uCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.uCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.vCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.vCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                              >15 ShaderMgr::hasShaderType(place2dTexture)
                          >13 ConvertShadingNetwork::addNodeInputVariable(checker1.uvCoord, inputSrc, inputDes)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                              >15 ShaderMgr::hasShaderType(place2dTexture)
                            >14 ShaderMgr::getValidConnection(place2dTexture1)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                            >14 ConvertShadingNetwork::nodeIsConvertible(phong1)
                              >15 ShaderMgr::hasShaderType(phong)
                          >13 ConvertShadingNetwork::addNodeOutputVariable(checker1,outColor,checker1.outColor, outputVars)
                            >14 Visitor::addShaderMethodVariavles(checker1,outColor,color,-1,)
                        >12 Visitor::addShaderMethodBody(checker1,place2dTexture1.outUV124,checker1.uvCoord124,checker1.outColor124)
                        >12 Visitor::outputUpstreamShader(phong1)
                          >13 ShaderOutputVisitor::_outputUpstreamShader(phong1,phong)
                            >14 Visitor::visitPhong(phong1)
                              >15 OutputHelper::beginRSL(maya_phong,phong1)
                              >15 ShaderMgr::convertibleConnection(phong1.ambientColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                              >15 ShaderMgr::convertibleConnection(phong1.color)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.color)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                    >18 ShaderMgr::hasShaderType(checker)
                              >15 ShaderMgr::convertibleConnection(phong1.cosinePower)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                              >15 ShaderMgr::convertibleConnection(phong1.diffuse)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                              >15 ShaderMgr::convertibleConnection(phong1.incandescence)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                              >15 ShaderMgr::convertibleConnection(phong1.matteOpacityMode)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                              >15 ShaderMgr::convertibleConnection(phong1.matteOpacity)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                              >15 OutputHelper::add_liq_UserDefinedNormal(phong1)
                              >15 ShaderMgr::convertibleConnection(phong1.normalCamera)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                              >15 ShaderMgr::convertibleConnection(phong1.specularColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                              >15 ShaderMgr::convertibleConnection(phong1.reflectivity)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                              >15 ShaderMgr::convertibleConnection(phong1.reflectedColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                              >15 ShaderMgr::convertibleConnection(phong1.reflectionLimit)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                              >15 ShaderMgr::convertibleConnection(phong1.translucence)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                              >15 ShaderMgr::convertibleConnection(phong1.translucenceDepth)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                              >15 ShaderMgr::convertibleConnection(phong1.translucenceFocus)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                              >15 ShaderMgr::convertibleConnection(phong1.transparency)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                              >15 ShaderMgr::convertibleConnection(phong1.outColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                                    >18 ShaderMgr::hasShaderType(shadingEngine)
                              >15 ShaderMgr::convertibleConnection(phong1.outTransparency)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                              >15 OutputHelper::endRSL()
                        >12 ShaderMgr::getValidConnection(phong1)
                        >12 ConvertShadingNetwork::decrementDownstreamConnections(phong1, nodes, numConnections, validConnections)
                        >12 ConvertShadingNetwork::getNodeVariables(phong1, validConnections,  inputSrc, inputDes, outputSrc)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.colorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.colorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.colorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.colorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.colorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.colorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.color)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                            >14 ConvertShadingNetwork::nodeIsConvertible(checker1)
                              >15 ShaderMgr::hasShaderType(checker)
                          >13 ConvertShadingNetwork::addNodeInputVariable(phong1.color, inputSrc, inputDes)
                            >14 ConvertShadingNetwork::nodeIsConvertible(checker1)
                              >15 ShaderMgr::hasShaderType(checker)
                            >14 ShaderMgr::getValidConnection(checker1)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.transparencyR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.transparencyG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.transparencyB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraX)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraX)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraY)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraY)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraZ)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraZ)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.specularColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.specularColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.specularColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                            >14 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                              >15 ShaderMgr::hasShaderType(shadingEngine)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                        >12 Visitor::addShaderMethodBody(phong1,checker1.outColor124,phong1.color124,)
                      >11 ConvertShadingNetwork::outputShaderMethod()
                        >12 Visitor::outputShaderMethod()
                      >11 Visitor::outputEnd()
                      >11 Visitor::postOutput()
                    >10 ConvertShadingNetwork::exportShaderEnd(phong1)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,displacementShader)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,volumeShader)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,liqShadowShader)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,liqEnvironmentShader)
                  >9 ConvertShadingNetwork::exportShadingGroupBegin(phong1SG)
                  >9 ConvertShadingNetwork::outputShadingGroup(phong1SG)
                    >10 Visitor::outputShadingGroup(phong1SG)
                  >9 ConvertShadingNetwork::exportShadingGroupEnd(phong1SG)
                >8  ConvertShadingNetwork::afterExport()
            >6 liqRibTranslatorNew::worldPrologue__(cameraShape1)
              >7 Renderer::worldPrologue(cameraShape1)
            >6 liqRibTranslatorNew::lightBlock__(cameraShape1)
              >7 Renderer::writeLight_pre(|pointLight1|pointLightShape1,cameraShape1)
              >7 liqRibObj::writeObject(,cameraShape1,0)
                >8 liqRibLightData::write(,job=cameraShape1,0)
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::write(|pointLight1|pointLightShape1,,cameraShape1,ref=0)
                      >11 liqRibData::getFullPathName()
                    >10 er_writeLightData.cpp::_write(|pointLight1|pointLightShape1,cameraShape1,...)
                      >11 Renderer::exportPointLight(pointlight,pointLightShape1,...)
                        >12 addLightGroupForLight(|pointLight1|pointLightShape1)
              >7 Renderer::writeLight_post(|pointLight1|pointLightShape1,cameraShape1)
              >7 Renderer::writeLight_pre(|pointLight2|pointLightShape2,cameraShape1)
              >7 liqRibObj::writeObject(,cameraShape1,0)
                >8 liqRibLightData::write(,job=cameraShape1,0)
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::write(|pointLight2|pointLightShape2,,cameraShape1,ref=0)
                      >11 liqRibData::getFullPathName()
                    >10 er_writeLightData.cpp::_write(|pointLight2|pointLightShape2,cameraShape1,...)
                      >11 Renderer::exportPointLight(pointlight,pointLightShape2,...)
                        >12 addLightGroupForLight(|pointLight2|pointLightShape2)
              >7 Renderer::writeLight_post(|pointLight2|pointLightShape2,cameraShape1)
            >6 liqRibTranslatorNew::coordSysBlock__(cameraShape1)
              >7 Renderer::coordSysBlock__(cameraShape1)
            >6 liqRibTranslatorNew::objectBlock__(cameraShape1)
              >7 liqRibTranslatorNew::objectBlock_data(cameraShape1)
                >8 liqRibTranslatorNew::getShadowSetObject(cameraShape1)
                >8 liqRibTranslatorNew::oneObjectBlock_data(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::exportOneObject_data(|pPlane2|pPlaneShape11,cameraShape1)
                    >10 Renderer::_writeObject(|pPlane2|pPlaneShape11,cameraShape1,0,0,0)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.17.rib,cameraShape1,0)
                        >12 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.17.rib,job=cameraShape1,0)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|pPlane2|pPlaneShape11,R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.17.rib,cameraShape1,ref=0)
                              >15 liqRibData::getFullPathName()
                            >14 er_writeMeshData.cpp::_write1(|pPlane2|pPlaneShape11,cameraShape1)
                              >15 liqRibHT::find(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                              >15 _exportVertexFromNodePlug(|pPlane2|pPlaneShape11,0)
                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqRibData::getFullPathName()
                >8 liqRibTranslatorNew::oneObjectBlock_data(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 Renderer::exportOneObject_data(|camera1_group|camera1|cameraShape1,cameraShape1)
                    >10 Renderer::_writeObject(|camera1_group|camera1|cameraShape1,cameraShape1,0,0,0)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_camera1_group_camera1_cameraShape1.17.rib,cameraShape1,0)
                        >12 liqRibCameraData::write(R:/MyDocuments/maya/projects/default/rib/_camera1_group_camera1_cameraShape1.17.rib,job=cameraShape1,0)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|camera1_group|camera1|cameraShape1,R:/MyDocuments/maya/projects/default/rib/_camera1_group_camera1_cameraShape1.17.rib,cameraShape1,ref=0)
                              >15 liqRibData::getFullPathName()
                            >14 er_writeCameraData.cpp::_write_camera(|camera1_group|camera1|cameraShape1,cameraShape1)
                              >15 liqRibHT::find(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,0)
                              >15 Renderer::gatherCameraShaders(cameraShaders.size=0,|camera1_group|camera1|cameraShape1,liqEnvironmentShader)
                              >15 Renderer::cameraOutput(cameraShape1)
              >7 liqRibTranslatorNew::objectBlock_reference(cameraShape1)
                >8 Renderer::objectBlock_reference_begin()
                >8 liqRibTranslatorNew::preGeometryMel()
                  >9 Renderer::preGeometryMel()
                >8 liqRibTranslatorNew::getShadowSetObject(cameraShape1)
                >8 liqRibTranslatorNew::oneObjectBlock_reference(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_begin(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_block0(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 liqRibTranslatorNew::tRiIlluminate(cameraShape1,|pPlane2|pPlaneShape11)
                    >10 Renderer::exportLightLinks(cameraShape1,|pPlane2|pPlaneShape11,lightedByWhichLightShapes.size=2)
                  >9 liqRibTranslatorNew::checkSurfaceShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                  >9 liqRibTranslatorNew::checkDisplacementShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                  >9 liqRibTranslatorNew::checkVolumeShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                  >9 Renderer::oneObjectBlock_reference_attribute_block1(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 liqRibTranslatorNew::writeShader_(1,|pPlane2|pPlaneShape11,v=0,s=0,c=0,,|pPlane2|pPlaneShape11,cameraShape1)
                    >10 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                  >9 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|pPlane2|pPlaneShape11)
                  >9 Renderer::exportOneObject_reference(|pPlane2|pPlaneShape11,cameraShape1)
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::oneObjectBlock_reference_attribute_end(|pPlane2|pPlaneShape11,cameraShape1)
                >8 liqRibTranslatorNew::oneObjectBlock_reference(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_begin(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_block0(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 liqRibTranslatorNew::tRiIlluminate(cameraShape1,|camera1_group|camera1|cameraShape1)
                    >10 Renderer::exportLightLinks(cameraShape1,|camera1_group|camera1|cameraShape1,lightedByWhichLightShapes.size=0)
                  >9 liqRibTranslatorNew::checkSurfaceShader(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,,,)
                  >9 liqRibTranslatorNew::checkDisplacementShader(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,,,)
                  >9 liqRibTranslatorNew::checkVolumeShader(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,,,)
                  >9 Renderer::oneObjectBlock_reference_attribute_block1(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 liqRibTranslatorNew::writeShader_(1,|camera1_group|camera1|cameraShape1,v=0,s=0,c=0,,|camera1_group|camera1|cameraShape1,cameraShape1)
                    >10 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,0)
                  >9 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|camera1_group|camera1|cameraShape1)
                  >9 Renderer::exportOneObject_reference(|camera1_group|camera1|cameraShape1,cameraShape1)
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::oneObjectBlock_reference_attribute_end(|camera1_group|camera1|cameraShape1,cameraShape1)
                >8 Renderer::objectBlock_reference_end()
            >6 liqRibTranslatorNew::worldEpilogue__()
              >7 liqRibTranslator::worldEpilogue()
                >8 Renderer::worldEpilogue()
            >6 liqRibTranslatorNew::frameEpilogue__(17)
              >7 Renderer::frameEpilogue(17)
            >6 liqRibTranslatorNew::ribEpilogue__(cameraShape1)
              >7 Renderer::ribPrologue_end(cameraShape1)
                >8 Renderer::cookInstanceGroup()
                >8 Renderer::render()
                  >9 Renderer::renderPreview(200,150,0,0,cameraShape1,cameraShape1,cameraShape1_option)
                    >10 Renderer::_renderPreview(200,150,0,0,cameraShape1,|camera1_group|camera1,cameraShape1_option)
          >5 Renderer::HeroPassEnd(cameraShape1)
        >4 liqRenderScript::addJob(job.title=checker_animFrame14,0)
          >5 liqRenderScript::popNextJobID()
        >4 tFrameScriptJobMgr::setCommonParameters(checker_animFrame17)
        >4 liqRibTranslatorNew::processOneFrame(13, liqglo__)
          >5 liqRibTranslatorNew::buildJobs__()
            >6 liqRibTranslatorNew::buildShadowJobs__()
              >7 tJobScriptMgr::buildShadowJob(thisJob___, 0)
              >7 tJobScriptMgr::buildShadowCameraJob(thisJob___, 0)
            >6 tRibCameraMgr::gatherDataForJob(liqglo___, ,jobList__,0,1)
            >6 liqRibTranslator::generateFileName(4,cameraShape1)
            >6 liqRibTranslator::generateFileName(5,cameraShape1)
              >7 liqRibTranslator::generateImageName(, job(cameraShape1)), 
          >5 liqRibTranslatorNew::calaculateSamplingTime(18)
          >5 liqRibTranslatorNew::scanScene__(18,0)
            >6 tJobScriptMgr::scanScene(18,0, htable__, count, returnStatus__)
              >7 liqRibHT::insert(|pointLight1|pointLightShape1,lframe,0,3,0,matrix,,-1)
                >8 liqRibHT::hash(|pointLight1|pointLightShape1,0)
                >8 liqRibHT::find(|pointLight1|pointLightShape1,|pointLight1|pointLightShape1,3)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pointLight1|pointLightShape1,0,3,-1)
                  >9 liqRibNode::parseVectorAttributes(pointLight1,,2)
                  >9 liqRibNode::parseVectorAttributes(pointLight1,,3)
                  >9 liqRibNode::parseVectorAttributes(pointLight1,,4)
                  >9 liqRibNode::findShadingGroup(|pointLight1|pointLightShape1,3)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pointLight1|pointLightShape1,3)
                    >10 liqRibLightData::liqRibLightData(|pointLight1|pointLightShape1)
                      >11 liqRibData::addAdditionalSurfaceParameters(pointLightShape1)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
              >7 liqRibHT::insert(|pointLight2|pointLightShape2,lframe,0,3,1,matrix,,-1)
                >8 liqRibHT::hash(|pointLight2|pointLightShape2,1)
                >8 liqRibHT::find(|pointLight2|pointLightShape2,|pointLight2|pointLightShape2,3)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pointLight2|pointLightShape2,0,3,-1)
                  >9 liqRibNode::parseVectorAttributes(pointLight2,,2)
                  >9 liqRibNode::parseVectorAttributes(pointLight2,,3)
                  >9 liqRibNode::parseVectorAttributes(pointLight2,,4)
                  >9 liqRibNode::findShadingGroup(|pointLight2|pointLightShape2,3)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pointLight2|pointLightShape2,3)
                    >10 liqRibLightData::liqRibLightData(|pointLight2|pointLightShape2)
                      >11 liqRibData::addAdditionalSurfaceParameters(pointLightShape2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 tLocatorMgr::scanScene(18,0,htable__,count__,returnStatus__)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,18,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,18,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,18,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,18,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,18,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,18,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,18,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,18,0,&count)
              >7 liqRibHT::insert(|persp|perspShape,lframe,0,0,2,matrix,,-1)
                >8 liqRibHT::hash(|persp|perspShape,2)
                >8 liqRibHT::find(|persp|perspShape,|persp|perspShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|persp|perspShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(persp,,2)
                  >9 liqRibNode::parseVectorAttributes(persp,,3)
                  >9 liqRibNode::parseVectorAttributes(persp,,4)
                  >9 liqRibNode::findShadingGroup(|persp|perspShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|persp|perspShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,18,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,18,0,&count)
              >7 liqRibHT::insert(|top|topShape,lframe,0,0,3,matrix,,-1)
                >8 liqRibHT::hash(|top|topShape,3)
                >8 liqRibHT::find(|top|topShape,|top|topShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|top|topShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(top,,2)
                  >9 liqRibNode::parseVectorAttributes(top,,3)
                  >9 liqRibNode::parseVectorAttributes(top,,4)
                  >9 liqRibNode::findShadingGroup(|top|topShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|top|topShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,18,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,18,0,&count)
              >7 liqRibHT::insert(|front|frontShape,lframe,0,0,4,matrix,,-1)
                >8 liqRibHT::hash(|front|frontShape,4)
                >8 liqRibHT::find(|front|frontShape,|front|frontShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|front|frontShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(front,,2)
                  >9 liqRibNode::parseVectorAttributes(front,,3)
                  >9 liqRibNode::parseVectorAttributes(front,,4)
                  >9 liqRibNode::findShadingGroup(|front|frontShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|front|frontShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,18,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,18,0,&count)
              >7 liqRibHT::insert(|side|sideShape,lframe,0,0,5,matrix,,-1)
                >8 liqRibHT::hash(|side|sideShape,5)
                >8 liqRibHT::find(|side|sideShape,|side|sideShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|side|sideShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(side,,2)
                  >9 liqRibNode::parseVectorAttributes(side,,3)
                  >9 liqRibNode::parseVectorAttributes(side,,4)
                  >9 liqRibNode::findShadingGroup(|side|sideShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|side|sideShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,18,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,18,0,&count)
              >7 liqRibHT::insert(|pPlane2|pPlaneShape11,lframe,0,0,6,matrix,,-1)
                >8 liqRibHT::hash(|pPlane2|pPlaneShape11,6)
                >8 liqRibHT::find(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pPlane2|pPlaneShape11,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(pPlane2,,2)
                  >9 liqRibNode::parseVectorAttributes(pPlane2,,3)
                  >9 liqRibNode::parseVectorAttributes(pPlane2,,4)
                  >9 liqRibNode::findShadingGroup(|pPlane2|pPlaneShape11,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getColor(&shader,&color)
                  >9 liqRibNode::getOpacity(&shader,&color)
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pPlane2|pPlaneShape11,0)
                    >10 liqRibMeshData::liqRibMeshData(|pPlane2|pPlaneShape11)
                      >11 liqRibData::addAdditionalSurfaceParameters(pPlaneShape11)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,18,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,18,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,18,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,18,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,18,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,18,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,18,0,&count)
              >7 liqRibHT::insert(|camera1_group|camera1|cameraShape1,lframe,0,0,7,matrix,,-1)
                >8 liqRibHT::hash(|camera1_group|camera1|cameraShape1,7)
                >8 liqRibHT::find(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|camera1_group|camera1|cameraShape1,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(camera1,,2)
                  >9 liqRibNode::parseVectorAttributes(camera1,,3)
                  >9 liqRibNode::parseVectorAttributes(camera1,,4)
                  >9 liqRibNode::findShadingGroup(|camera1_group|camera1|cameraShape1,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|camera1_group|camera1|cameraShape1,0)
                    >10 liqRibCameraData::liqRibCameraData(|camera1_group|camera1|cameraShape1)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,18,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,18,0,&count)
              >7 liqRibHT::insert(|camera1_group|camera1_aim|camera1_aimShape,lframe,0,0,8,matrix,,-1)
                >8 liqRibHT::hash(|camera1_group|camera1_aim|camera1_aimShape,8)
                >8 liqRibHT::find(|camera1_group|camera1_aim|camera1_aimShape,|camera1_group|camera1_aim|camera1_aimShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|camera1_group|camera1_aim|camera1_aimShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(camera1_aim,,2)
                  >9 liqRibNode::parseVectorAttributes(camera1_aim,,3)
                  >9 liqRibNode::parseVectorAttributes(camera1_aim,,4)
                  >9 liqRibNode::findShadingGroup(|camera1_group|camera1_aim|camera1_aimShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|camera1_group|camera1_aim|camera1_aimShape,0)
            >6 liqRibTranslatorNew::dealwithParticleInstancedObjects(0,18,9)
            >6 liqRibTranslatorNew::getCameraData(iter__,0)
              >7 liqRibTranslator::getCameraInfo(|camera1_group|camera1|cameraShape1,)
                >8 liqRibTranslator::portFieldOfView(224,150,&horizontal,&vertical,&fnCamera)
                  >9 liqRibTranslator::computeViewingFrustum(1.49333,,&left,&right,&bottom,&top,|camera1_group|camera1|cameraShape1)
              >7 liqRibTranslator::getCameraFilmOffset(|camera1_group|camera1|cameraShape1,)
              >7 liqRibTranslator::getCameraTransform(|camera1_group|camera1|cameraShape1,)
          >5 liqRibTranslatorNew::doTextures(size=0)
            >6 Renderer::frameEpilogue(txtList_.size=0)
          >5 liqRibTranslatorNew::doShadows(size=0)
            >6 Renderer::doShadows(shadowList_.size=0)
          >5 Renderer::setRenderScriptFormatAndCompress(0,0)
          >5 Renderer::isHeroPassReady(cameraShape1)
          >5 Renderer::HeroPassBegin(cameraShape1)
          >5 tHeroRibWriterMgr::write(liqglo___,cameraShape1,18,0)
            >6 liqRibTranslatorNew::ribPrologue__(cameraShape1)
              >7 Renderer::ribPrologue_begin(cameraShape1)
                >8 Renderer::dummyPhongShader()
              >7 Renderer::ribPrologue_comment(2.3.5 (buildtime=20:51:12.30),R:/MyDocuments/maya/projects/default/checker_anim,yaoyansi,time)
              >7 Renderer::ribPrologue_options(cameraShape1)
            >6 liqRibTranslatorNew::framePrologue__(18,cameraShape1)
              >7 Renderer::framePrologue(18,cameraShape1)
            >6 ShaderMgr::exportShaderGraph()
              >7 ConvertShadingNetwork::exportShaderGraph()
                >8 ConvertShadingNetwork::beforeExport()
                >8 ConvertShadingNetwork::__export()
                  >9 ConvertShadingNetwork::canShadingGroupExported(phong1SG)
                  >9 Renderer::getValidShaderPlugsInShadingGroup()
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,surfaceShader)
                    >10 ConvertShadingNetwork::canShaderExported(phong1)
                    >10 ConvertShadingNetwork::exportShaderBegin(phong1)
                    >10 ConvertShadingNetwork::convertShadingNetworkToRSL(phong1,surfaceShader)
                      >11 Visitor::initShaderData(phong1,surfaceShader)
                      >11 ConvertShadingNetwork::getUpstreamConvertibleNodes(phong1, nodes, numConnections)
                        >12 ConvertShadingNetwork::nodeIsConvertible(phong1)
                          >13 ShaderMgr::hasShaderType(phong)
                        >12 ShaderMgr::getValidConnection(phong1)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.color)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraX)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraX)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraY)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraY)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraZ)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraZ)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                          >13 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                            >14 ShaderMgr::hasShaderType(shadingEngine)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                        >12 ConvertShadingNetwork::getUpstreamConvertibleNodes(checker1, nodes, numConnections)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                          >13 ShaderMgr::getValidConnection(checker1)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1R)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1R)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1G)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1G)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1B)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1B)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2R)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2R)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2G)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2G)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2B)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2B)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.uCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.uCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.vCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.vCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                              >15 ShaderMgr::hasShaderType(place2dTexture)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                            >14 ConvertShadingNetwork::nodeIsConvertible(phong1)
                              >15 ShaderMgr::hasShaderType(phong)
                          >13 ConvertShadingNetwork::getUpstreamConvertibleNodes(place2dTexture1, nodes, numConnections)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                              >15 ShaderMgr::hasShaderType(place2dTexture)
                            >14 ShaderMgr::getValidConnection(place2dTexture1)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uCoord)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uCoord)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.vCoord)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.vCoord)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverage)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverage)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseUV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseUV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offset)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offset)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                              >15 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                                >16 ShaderMgr::hasShaderType(animCurveTU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                              >15 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                                >16 ShaderMgr::hasShaderType(animCurveTU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatUV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatUV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrame)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrame)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                              >15 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                >16 ShaderMgr::hasShaderType(checker)
                      >11 Visitor::preOutput(phong1)
                      >11 Visitor::outputBegin(phong1)
                      >11 ConvertShadingNetwork::traverseGraphAndOutputNodeFunctions( nodes, numConnections)
                        >12 Visitor::outputUpstreamShader(place2dTexture1)
                          >13 ShaderOutputVisitor::_outputUpstreamShader(place2dTexture1,place2dTexture)
                            >14 Visitor::visitPlace2dTexture(place2dTexture1)
                              >15 OutputHelper::beginRSL(maya_place2dTexture,place2dTexture1)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.uvCoord)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.coverageU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.coverageV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.mirrorU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.mirrorV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.noiseU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.noiseV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.offsetU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.offsetV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.repeatU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                                    >18 ShaderMgr::hasShaderType(animCurveTU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.repeatV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                                    >18 ShaderMgr::hasShaderType(animCurveTU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.rotateFrame)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.rotateUV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.stagger)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.translateFrameU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.translateFrameV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.wrapU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.wrapV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture1.outUV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                    >18 ShaderMgr::hasShaderType(checker)
                              >15 OutputHelper::endRSL()
                        >12 ShaderMgr::getValidConnection(place2dTexture1)
                        >12 ConvertShadingNetwork::decrementDownstreamConnections(place2dTexture1, nodes, numConnections, validConnections)
                        >12 ConvertShadingNetwork::getNodeVariables(place2dTexture1, validConnections,  inputSrc, inputDes, outputSrc)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.vCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.vCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverage)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverage)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offset)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offset)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                              >15 ShaderMgr::hasShaderType(animCurveTU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                              >15 ShaderMgr::hasShaderType(animCurveTU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrame)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrame)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                            >14 ConvertShadingNetwork::nodeIsConvertible(checker1)
                              >15 ShaderMgr::hasShaderType(checker)
                          >13 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture1,outUV,place2dTexture1.outUV, outputVars)
                            >14 Visitor::addShaderMethodVariavles(place2dTexture1,outUV,float,2,)
                        >12 Visitor::addShaderMethodBody(place2dTexture1,,,place2dTexture1.outUV124)
                        >12 Visitor::outputUpstreamShader(checker1)
                          >13 ShaderOutputVisitor::_outputUpstreamShader(checker1,checker)
                            >14 Visitor::visitChecker(checker1)
                              >15 OutputHelper::beginRSL(maya_checker,checker1)
                              >15 ShaderMgr::convertibleConnection(checker1.alphaGain)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                              >15 ShaderMgr::convertibleConnection(checker1.alphaIsLuminance)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                              >15 ShaderMgr::convertibleConnection(checker1.alphaOffset)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                              >15 ShaderMgr::convertibleConnection(checker1.color1)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                              >15 ShaderMgr::convertibleConnection(checker1.color2)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                              >15 ShaderMgr::convertibleConnection(checker1.colorGain)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                              >15 ShaderMgr::convertibleConnection(checker1.colorOffset)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                              >15 ShaderMgr::convertibleConnection(checker1.contrast)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                              >15 ShaderMgr::convertibleConnection(checker1.defaultColor)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                              >15 ShaderMgr::convertibleConnection(checker1.filter)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                              >15 ShaderMgr::convertibleConnection(checker1.filterOffset)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                              >15 ShaderMgr::convertibleConnection(checker1.invert)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                              >15 ShaderMgr::convertibleConnection(checker1.uvCoord)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                                    >18 ShaderMgr::hasShaderType(place2dTexture)
                              >15 ShaderMgr::convertibleConnection(checker1.outAlpha)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                              >15 ShaderMgr::convertibleConnection(checker1.outColor)
                                >16 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(phong1)
                                    >18 ShaderMgr::hasShaderType(phong)
                              >15 OutputHelper::endRSL()
                        >12 ShaderMgr::getValidConnection(checker1)
                        >12 ConvertShadingNetwork::decrementDownstreamConnections(checker1, nodes, numConnections, validConnections)
                        >12 ConvertShadingNetwork::getNodeVariables(checker1, validConnections,  inputSrc, inputDes, outputSrc)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1R)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1R)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1G)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1G)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1B)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1B)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2R)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2R)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2G)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2G)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2B)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2B)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGainB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.uCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.uCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.vCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.vCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                              >15 ShaderMgr::hasShaderType(place2dTexture)
                          >13 ConvertShadingNetwork::addNodeInputVariable(checker1.uvCoord, inputSrc, inputDes)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                              >15 ShaderMgr::hasShaderType(place2dTexture)
                            >14 ShaderMgr::getValidConnection(place2dTexture1)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                            >14 ConvertShadingNetwork::nodeIsConvertible(phong1)
                              >15 ShaderMgr::hasShaderType(phong)
                          >13 ConvertShadingNetwork::addNodeOutputVariable(checker1,outColor,checker1.outColor, outputVars)
                            >14 Visitor::addShaderMethodVariavles(checker1,outColor,color,-1,)
                        >12 Visitor::addShaderMethodBody(checker1,place2dTexture1.outUV124,checker1.uvCoord124,checker1.outColor124)
                        >12 Visitor::outputUpstreamShader(phong1)
                          >13 ShaderOutputVisitor::_outputUpstreamShader(phong1,phong)
                            >14 Visitor::visitPhong(phong1)
                              >15 OutputHelper::beginRSL(maya_phong,phong1)
                              >15 ShaderMgr::convertibleConnection(phong1.ambientColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                              >15 ShaderMgr::convertibleConnection(phong1.color)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.color)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                    >18 ShaderMgr::hasShaderType(checker)
                              >15 ShaderMgr::convertibleConnection(phong1.cosinePower)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                              >15 ShaderMgr::convertibleConnection(phong1.diffuse)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                              >15 ShaderMgr::convertibleConnection(phong1.incandescence)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                              >15 ShaderMgr::convertibleConnection(phong1.matteOpacityMode)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                              >15 ShaderMgr::convertibleConnection(phong1.matteOpacity)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                              >15 OutputHelper::add_liq_UserDefinedNormal(phong1)
                              >15 ShaderMgr::convertibleConnection(phong1.normalCamera)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                              >15 ShaderMgr::convertibleConnection(phong1.specularColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                              >15 ShaderMgr::convertibleConnection(phong1.reflectivity)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                              >15 ShaderMgr::convertibleConnection(phong1.reflectedColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                              >15 ShaderMgr::convertibleConnection(phong1.reflectionLimit)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                              >15 ShaderMgr::convertibleConnection(phong1.translucence)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                              >15 ShaderMgr::convertibleConnection(phong1.translucenceDepth)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                              >15 ShaderMgr::convertibleConnection(phong1.translucenceFocus)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                              >15 ShaderMgr::convertibleConnection(phong1.transparency)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                              >15 ShaderMgr::convertibleConnection(phong1.outColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                                    >18 ShaderMgr::hasShaderType(shadingEngine)
                              >15 ShaderMgr::convertibleConnection(phong1.outTransparency)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                              >15 OutputHelper::endRSL()
                        >12 ShaderMgr::getValidConnection(phong1)
                        >12 ConvertShadingNetwork::decrementDownstreamConnections(phong1, nodes, numConnections, validConnections)
                        >12 ConvertShadingNetwork::getNodeVariables(phong1, validConnections,  inputSrc, inputDes, outputSrc)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.colorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.colorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.colorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.colorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.colorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.colorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.color)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                            >14 ConvertShadingNetwork::nodeIsConvertible(checker1)
                              >15 ShaderMgr::hasShaderType(checker)
                          >13 ConvertShadingNetwork::addNodeInputVariable(phong1.color, inputSrc, inputDes)
                            >14 ConvertShadingNetwork::nodeIsConvertible(checker1)
                              >15 ShaderMgr::hasShaderType(checker)
                            >14 ShaderMgr::getValidConnection(checker1)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.transparencyR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.transparencyG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.transparencyB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraX)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraX)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraY)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraY)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraZ)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraZ)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.specularColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.specularColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.specularColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                            >14 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                              >15 ShaderMgr::hasShaderType(shadingEngine)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                        >12 Visitor::addShaderMethodBody(phong1,checker1.outColor124,phong1.color124,)
                      >11 ConvertShadingNetwork::outputShaderMethod()
                        >12 Visitor::outputShaderMethod()
                      >11 Visitor::outputEnd()
                      >11 Visitor::postOutput()
                    >10 ConvertShadingNetwork::exportShaderEnd(phong1)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,displacementShader)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,volumeShader)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,liqShadowShader)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,liqEnvironmentShader)
                  >9 ConvertShadingNetwork::exportShadingGroupBegin(phong1SG)
                  >9 ConvertShadingNetwork::outputShadingGroup(phong1SG)
                    >10 Visitor::outputShadingGroup(phong1SG)
                  >9 ConvertShadingNetwork::exportShadingGroupEnd(phong1SG)
                >8  ConvertShadingNetwork::afterExport()
            >6 liqRibTranslatorNew::worldPrologue__(cameraShape1)
              >7 Renderer::worldPrologue(cameraShape1)
            >6 liqRibTranslatorNew::lightBlock__(cameraShape1)
              >7 Renderer::writeLight_pre(|pointLight1|pointLightShape1,cameraShape1)
              >7 liqRibObj::writeObject(,cameraShape1,0)
                >8 liqRibLightData::write(,job=cameraShape1,0)
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::write(|pointLight1|pointLightShape1,,cameraShape1,ref=0)
                      >11 liqRibData::getFullPathName()
                    >10 er_writeLightData.cpp::_write(|pointLight1|pointLightShape1,cameraShape1,...)
                      >11 Renderer::exportPointLight(pointlight,pointLightShape1,...)
                        >12 addLightGroupForLight(|pointLight1|pointLightShape1)
              >7 Renderer::writeLight_post(|pointLight1|pointLightShape1,cameraShape1)
              >7 Renderer::writeLight_pre(|pointLight2|pointLightShape2,cameraShape1)
              >7 liqRibObj::writeObject(,cameraShape1,0)
                >8 liqRibLightData::write(,job=cameraShape1,0)
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::write(|pointLight2|pointLightShape2,,cameraShape1,ref=0)
                      >11 liqRibData::getFullPathName()
                    >10 er_writeLightData.cpp::_write(|pointLight2|pointLightShape2,cameraShape1,...)
                      >11 Renderer::exportPointLight(pointlight,pointLightShape2,...)
                        >12 addLightGroupForLight(|pointLight2|pointLightShape2)
              >7 Renderer::writeLight_post(|pointLight2|pointLightShape2,cameraShape1)
            >6 liqRibTranslatorNew::coordSysBlock__(cameraShape1)
              >7 Renderer::coordSysBlock__(cameraShape1)
            >6 liqRibTranslatorNew::objectBlock__(cameraShape1)
              >7 liqRibTranslatorNew::objectBlock_data(cameraShape1)
                >8 liqRibTranslatorNew::getShadowSetObject(cameraShape1)
                >8 liqRibTranslatorNew::oneObjectBlock_data(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::exportOneObject_data(|pPlane2|pPlaneShape11,cameraShape1)
                    >10 Renderer::_writeObject(|pPlane2|pPlaneShape11,cameraShape1,0,0,0)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.18.rib,cameraShape1,0)
                        >12 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.18.rib,job=cameraShape1,0)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|pPlane2|pPlaneShape11,R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.18.rib,cameraShape1,ref=0)
                              >15 liqRibData::getFullPathName()
                            >14 er_writeMeshData.cpp::_write1(|pPlane2|pPlaneShape11,cameraShape1)
                              >15 liqRibHT::find(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                              >15 _exportVertexFromNodePlug(|pPlane2|pPlaneShape11,0)
                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqRibData::getFullPathName()
                >8 liqRibTranslatorNew::oneObjectBlock_data(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 Renderer::exportOneObject_data(|camera1_group|camera1|cameraShape1,cameraShape1)
                    >10 Renderer::_writeObject(|camera1_group|camera1|cameraShape1,cameraShape1,0,0,0)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_camera1_group_camera1_cameraShape1.18.rib,cameraShape1,0)
                        >12 liqRibCameraData::write(R:/MyDocuments/maya/projects/default/rib/_camera1_group_camera1_cameraShape1.18.rib,job=cameraShape1,0)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|camera1_group|camera1|cameraShape1,R:/MyDocuments/maya/projects/default/rib/_camera1_group_camera1_cameraShape1.18.rib,cameraShape1,ref=0)
                              >15 liqRibData::getFullPathName()
                            >14 er_writeCameraData.cpp::_write_camera(|camera1_group|camera1|cameraShape1,cameraShape1)
                              >15 liqRibHT::find(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,0)
                              >15 Renderer::gatherCameraShaders(cameraShaders.size=0,|camera1_group|camera1|cameraShape1,liqEnvironmentShader)
                              >15 Renderer::cameraOutput(cameraShape1)
              >7 liqRibTranslatorNew::objectBlock_reference(cameraShape1)
                >8 Renderer::objectBlock_reference_begin()
                >8 liqRibTranslatorNew::preGeometryMel()
                  >9 Renderer::preGeometryMel()
                >8 liqRibTranslatorNew::getShadowSetObject(cameraShape1)
                >8 liqRibTranslatorNew::oneObjectBlock_reference(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_begin(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_block0(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 liqRibTranslatorNew::tRiIlluminate(cameraShape1,|pPlane2|pPlaneShape11)
                    >10 Renderer::exportLightLinks(cameraShape1,|pPlane2|pPlaneShape11,lightedByWhichLightShapes.size=2)
                  >9 liqRibTranslatorNew::checkSurfaceShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                  >9 liqRibTranslatorNew::checkDisplacementShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                  >9 liqRibTranslatorNew::checkVolumeShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                  >9 Renderer::oneObjectBlock_reference_attribute_block1(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 liqRibTranslatorNew::writeShader_(1,|pPlane2|pPlaneShape11,v=0,s=0,c=0,,|pPlane2|pPlaneShape11,cameraShape1)
                    >10 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                  >9 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|pPlane2|pPlaneShape11)
                  >9 Renderer::exportOneObject_reference(|pPlane2|pPlaneShape11,cameraShape1)
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::oneObjectBlock_reference_attribute_end(|pPlane2|pPlaneShape11,cameraShape1)
                >8 liqRibTranslatorNew::oneObjectBlock_reference(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_begin(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_block0(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 liqRibTranslatorNew::tRiIlluminate(cameraShape1,|camera1_group|camera1|cameraShape1)
                    >10 Renderer::exportLightLinks(cameraShape1,|camera1_group|camera1|cameraShape1,lightedByWhichLightShapes.size=0)
                  >9 liqRibTranslatorNew::checkSurfaceShader(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,,,)
                  >9 liqRibTranslatorNew::checkDisplacementShader(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,,,)
                  >9 liqRibTranslatorNew::checkVolumeShader(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,,,)
                  >9 Renderer::oneObjectBlock_reference_attribute_block1(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 liqRibTranslatorNew::writeShader_(1,|camera1_group|camera1|cameraShape1,v=0,s=0,c=0,,|camera1_group|camera1|cameraShape1,cameraShape1)
                    >10 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,0)
                  >9 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|camera1_group|camera1|cameraShape1)
                  >9 Renderer::exportOneObject_reference(|camera1_group|camera1|cameraShape1,cameraShape1)
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::oneObjectBlock_reference_attribute_end(|camera1_group|camera1|cameraShape1,cameraShape1)
                >8 Renderer::objectBlock_reference_end()
            >6 liqRibTranslatorNew::worldEpilogue__()
              >7 liqRibTranslator::worldEpilogue()
                >8 Renderer::worldEpilogue()
            >6 liqRibTranslatorNew::frameEpilogue__(18)
              >7 Renderer::frameEpilogue(18)
            >6 liqRibTranslatorNew::ribEpilogue__(cameraShape1)
              >7 Renderer::ribPrologue_end(cameraShape1)
                >8 Renderer::cookInstanceGroup()
                >8 Renderer::render()
                  >9 Renderer::renderPreview(200,150,0,0,cameraShape1,cameraShape1,cameraShape1_option)
                    >10 Renderer::_renderPreview(200,150,0,0,cameraShape1,|camera1_group|camera1,cameraShape1_option)
          >5 Renderer::HeroPassEnd(cameraShape1)
        >4 liqRenderScript::addJob(job.title=checker_animFrame17,0)
          >5 liqRenderScript::popNextJobID()
        >4 liqRibTranslatorNew::postActions(defaultRenderLayer)
    >2 RendererMgr::test()
    >2 Renderer::closeLog()(but do nothing now)
      >3 OutputMgr::uninit()
        >4 OutputCall::~OutputCall()
        >4 OutputBase::~OutputBase()
        >4 OutputESS::~OutputESS()
        >4 OutputBase::~OutputBase()
        >4 OutputESA::~OutputESA()
        >4 OutputBase::~OutputBase()
    >2 RendererMgr::epilogue()
    >2 RendererMgr::uninstall()
      >3 Renderer::~Renderer()
    >2 RendererMgr::unsetFactory()
