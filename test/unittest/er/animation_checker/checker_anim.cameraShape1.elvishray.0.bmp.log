>0 liqRibTranslator::doIt()-->if(checkSettings()==true)
  >1 RendererMgr::setFactory(elvishray)
  >1 RendererMgr::install()
    >2 Renderer::Renderer()
  >1 RendererMgr::prologue()
  >1 Renderer::openLog(R:/MyDocuments/maya/projects/default/rib/checker_anim.cameraShape1.elvishray.20.bmp)
    >2 OutputMgr::setOutputImagePath(R:/MyDocuments/maya/projects/default/rib/checker_anim.cameraShape1.elvishray.20.bmp)
    >2 OutputMgr::add(0)
    >2 OutputMgr::add(1)
    >2 OutputMgr::add(2)
    >2 OutputMgr::init()
      >3 OutputMgr::createOutput(0)
        >4 OutputBase::OutputBase()
        >4 OutputCall::OutputCall()
      >3 OutputMgr::createOutput(1)
        >4 OutputBase::OutputBase()
        >4 OutputESS::OutputESS(R:/MyDocuments/maya/projects/default/rib/checker_anim.cameraShape1.elvishray.20.bmp)
      >3 OutputMgr::createOutput(2)
        >4 OutputBase::OutputBase()
        >4 OutputESA::OutputESA(R:/MyDocuments/maya/projects/default/rib/checker_anim.cameraShape1.elvishray.20.bmp)
      >3 OutputCall::init()
      >3 OutputESS::init()
      >3 OutputESA::init()
  >1 Renderer::canExport()
  >1 liqRibTranslatorNew::_doItNew(args,defaultRenderLayer)
    >2 liqRibTranslatorNew::_doItNewWithoutRenderScript(arg,defaultRenderLayer)
      >3 liqRibTranslator::verifyOutputDirectories()
        >4 liqRibTranslator::verifyResourceDir(RIB, rib, 0)
        >4 liqRibTranslator::verifyResourceDir(Texture, rmantex, 0)
        >4 liqRibTranslator::verifyResourceDir(Picture, rmanpix/, 0)
        >4 liqRibTranslator::verifyResourceDir(Temp Files, rmantmp/, 0)
      >3 liqRibTranslator::generateRenderScriptName()
      >3 liqRibTranslator::generateTempMayaSceneName()
      >3 tFrameScriptJobMgr::setCommonParameters(checker_animFrame0)
      >3 liqRibTranslatorNew::processOneFrame(0, liqglo__)
        >4 liqRibTranslatorNew::buildJobs__()
          >5 liqRibTranslatorNew::buildShadowJobs__()
            >6 tJobScriptMgr::buildShadowJob(thisJob___, 0)
            >6 tJobScriptMgr::buildShadowCameraJob(thisJob___, 0)
          >5 tRibCameraMgr::gatherDataForJob(liqglo___, ,jobList__,0,1)
          >5 liqRibTranslator::generateFileName(4,cameraShape1)
          >5 liqRibTranslator::generateFileName(5,cameraShape1)
            >6 liqRibTranslator::generateImageName(, job(cameraShape1)), 
        >4 liqRibTranslatorNew::calaculateSamplingTime(1)
        >4 liqRibTranslatorNew::scanScene__(1,0)
          >5 tJobScriptMgr::scanScene(1,0, htable__, count, returnStatus__)
            >6 liqRibHT::insert(|pointLight1|pointLightShape1,lframe,0,3,0,matrix,,-1)
              >7 liqRibHT::hash(|pointLight1|pointLightShape1,0)
              >7 liqRibHT::find(|pointLight1|pointLightShape1,|pointLight1|pointLightShape1,3)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|pointLight1|pointLightShape1,0,3,-1)
                >8 liqRibNode::parseVectorAttributes(pointLight1,,2)
                >8 liqRibNode::parseVectorAttributes(pointLight1,,3)
                >8 liqRibNode::parseVectorAttributes(pointLight1,,4)
                >8 liqRibNode::findShadingGroup(|pointLight1|pointLightShape1,3)
                >8 liqRibNode::findShader()
                >8 liqRibNode::findDisp()
                >8 liqRibNode::findVolume()
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|pointLight1|pointLightShape1,3)
                  >9 liqRibLightData::liqRibLightData(|pointLight1|pointLightShape1)
                    >10 liqRibData::addAdditionalSurfaceParameters(pointLightShape1)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 liqRibHT::insert(|pointLight2|pointLightShape2,lframe,0,3,1,matrix,,-1)
              >7 liqRibHT::hash(|pointLight2|pointLightShape2,1)
              >7 liqRibHT::find(|pointLight2|pointLightShape2,|pointLight2|pointLightShape2,3)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|pointLight2|pointLightShape2,0,3,-1)
                >8 liqRibNode::parseVectorAttributes(pointLight2,,2)
                >8 liqRibNode::parseVectorAttributes(pointLight2,,3)
                >8 liqRibNode::parseVectorAttributes(pointLight2,,4)
                >8 liqRibNode::findShadingGroup(|pointLight2|pointLightShape2,3)
                >8 liqRibNode::findShader()
                >8 liqRibNode::findDisp()
                >8 liqRibNode::findVolume()
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|pointLight2|pointLightShape2,3)
                  >9 liqRibLightData::liqRibLightData(|pointLight2|pointLightShape2)
                    >10 liqRibData::addAdditionalSurfaceParameters(pointLightShape2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
          >5 tLocatorMgr::scanScene(1,0,htable__,count__,returnStatus__)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibHT::insert(|pPlane2|pPlaneShape11,lframe,0,0,2,matrix,,-1)
              >7 liqRibHT::hash(|pPlane2|pPlaneShape11,2)
              >7 liqRibHT::find(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|pPlane2|pPlaneShape11,0,0,-1)
                >8 liqRibNode::parseVectorAttributes(pPlane2,,2)
                >8 liqRibNode::parseVectorAttributes(pPlane2,,3)
                >8 liqRibNode::parseVectorAttributes(pPlane2,,4)
                >8 liqRibNode::findShadingGroup(|pPlane2|pPlaneShape11,0)
                >8 liqRibNode::findShader()
                >8 liqRibNode::findDisp()
                >8 liqRibNode::findVolume()
                >8 liqRibNode::getColor(&shader,&color)
                >8 liqRibNode::getOpacity(&shader,&color)
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|pPlane2|pPlaneShape11,0)
                  >9 liqRibMeshData::liqRibMeshData(|pPlane2|pPlaneShape11)
                    >10 liqRibData::addAdditionalSurfaceParameters(pPlaneShape11)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibHT::insert(|camera1_group|camera1_aim|camera1_aimShape,lframe,0,0,3,matrix,,-1)
              >7 liqRibHT::hash(|camera1_group|camera1_aim|camera1_aimShape,3)
              >7 liqRibHT::find(|camera1_group|camera1_aim|camera1_aimShape,|camera1_group|camera1_aim|camera1_aimShape,0)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|camera1_group|camera1_aim|camera1_aimShape,0,0,-1)
                >8 liqRibNode::parseVectorAttributes(camera1_aim,,2)
                >8 liqRibNode::parseVectorAttributes(camera1_aim,,3)
                >8 liqRibNode::parseVectorAttributes(camera1_aim,,4)
                >8 liqRibNode::findShadingGroup(|camera1_group|camera1_aim|camera1_aimShape,0)
                >8 liqRibNode::findShader()
                >8 liqRibNode::findDisp()
                >8 liqRibNode::findVolume()
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|camera1_group|camera1_aim|camera1_aimShape,0)
          >5 liqRibTranslatorNew::dealwithParticleInstancedObjects(0,1,4)
          >5 liqRibTranslatorNew::getCameraData(iter__,0)
            >6 liqRibTranslator::getCameraInfo(|camera1_group|camera1|cameraShape1,)
              >7 liqRibTranslator::portFieldOfView(224,150,&horizontal,&vertical,&fnCamera)
                >8 liqRibTranslator::computeViewingFrustum(1.49333,,&left,&right,&bottom,&top,|camera1_group|camera1|cameraShape1)
            >6 liqRibTranslator::getCameraFilmOffset(|camera1_group|camera1|cameraShape1,)
            >6 liqRibTranslator::getCameraTransform(|camera1_group|camera1|cameraShape1,)
        >4 liqRibTranslatorNew::doTextures(size=0)
          >5 Renderer::frameEpilogue(txtList_.size=0)
        >4 liqRibTranslatorNew::doShadows(size=0)
          >5 Renderer::doShadows(shadowList_.size=0)
        >4 Renderer::setRenderScriptFormatAndCompress(0,0)
        >4 Renderer::isHeroPassReady(cameraShape1)
        >4 Renderer::HeroPassBegin(cameraShape1)
        >4 tHeroRibWriterMgr::write(liqglo___,cameraShape1,1,0)
          >5 liqRibTranslatorNew::ribPrologue__(cameraShape1)
            >6 Renderer::ribPrologue_begin(cameraShape1)
              >7 Renderer::dummyPhongShader()
            >6 Renderer::ribPrologue_comment(2.3.5 (buildtime=20:51:12.30),R:/MyDocuments/maya/projects/default/checker_anim,yaoyansi,time)
            >6 Renderer::ribPrologue_options(cameraShape1)
          >5 liqRibTranslatorNew::framePrologue__(1,cameraShape1)
            >6 Renderer::framePrologue(1,cameraShape1)
              >7 Renderer::framePrologue_camera(1,cameraShape1)
                >8 Renderer::gatherCameraShaders(cameraShaders.size=0,|camera1_group|camera1|cameraShape1,liqEnvironmentShader)
                >8 Renderer::cameraOutput(cameraShape1)
          >5 ShaderMgr::exportShaderGraph()
            >6 ConvertShadingNetwork::exportShaderGraph()
              >7 ConvertShadingNetwork::beforeExport()
              >7 ConvertShadingNetwork::__export()
                >8 ConvertShadingNetwork::canShadingGroupExported(phong1SG)
                >8 Renderer::getValidShaderPlugsInShadingGroup()
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,surfaceShader)
                  >9 ConvertShadingNetwork::canShaderExported(phong1)
                  >9 ConvertShadingNetwork::exportShaderBegin(phong1)
                  >9 ConvertShadingNetwork::convertShadingNetworkToRSL(phong1,surfaceShader)
                    >10 Visitor::initShaderData(phong1,surfaceShader)
                    >10 ConvertShadingNetwork::getUpstreamConvertibleNodes(phong1, nodes, numConnections)
                      >11 ConvertShadingNetwork::nodeIsConvertible(phong1)
                        >12 ShaderMgr::hasShaderType(phong)
                      >11 ShaderMgr::getValidConnection(phong1)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.colorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.colorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.colorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.colorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.colorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.colorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.color)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                        >12 ConvertShadingNetwork::nodeIsConvertible(checker1)
                          >13 ShaderMgr::hasShaderType(checker)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.transparencyR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.transparencyG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.transparencyB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraX)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraX)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraY)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraY)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraZ)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraZ)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.specularColorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.specularColorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.specularColorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outColorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outColorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outColorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outColorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outColorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outColorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                        >12 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                          >13 ShaderMgr::hasShaderType(shadingEngine)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                      >11 ConvertShadingNetwork::getUpstreamConvertibleNodes(checker1, nodes, numConnections)
                        >12 ConvertShadingNetwork::nodeIsConvertible(checker1)
                          >13 ShaderMgr::hasShaderType(checker)
                        >12 ShaderMgr::getValidConnection(checker1)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1R)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1R)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1G)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1G)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1B)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1B)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2R)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2R)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2G)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2G)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2B)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2B)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.uCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.uCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.vCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.vCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                            >14 ShaderMgr::hasShaderType(place2dTexture)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                          >13 ConvertShadingNetwork::nodeIsConvertible(phong1)
                            >14 ShaderMgr::hasShaderType(phong)
                        >12 ConvertShadingNetwork::getUpstreamConvertibleNodes(place2dTexture1, nodes, numConnections)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                            >14 ShaderMgr::hasShaderType(place2dTexture)
                          >13 ShaderMgr::getValidConnection(place2dTexture1)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.vCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.vCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverage)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverage)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offset)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offset)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                              >15 ShaderMgr::hasShaderType(animCurveTU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                              >15 ShaderMgr::hasShaderType(animCurveTU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrame)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrame)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                            >14 ConvertShadingNetwork::nodeIsConvertible(checker1)
                              >15 ShaderMgr::hasShaderType(checker)
                    >10 Visitor::preOutput(phong1)
                    >10 Visitor::outputBegin(phong1)
                    >10 ConvertShadingNetwork::traverseGraphAndOutputNodeFunctions( nodes, numConnections)
                      >11 Visitor::outputUpstreamShader(place2dTexture1)
                        >12 ShaderOutputVisitor::_outputUpstreamShader(place2dTexture1,place2dTexture)
                          >13 Visitor::visitPlace2dTexture(place2dTexture1)
                            >14 OutputHelper::beginRSL(maya_place2dTexture,place2dTexture1)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.uvCoord)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.coverageU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.coverageV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.mirrorU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.mirrorV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.noiseU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.noiseV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.offsetU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.offsetV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.repeatU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                                >16 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                                  >17 ShaderMgr::hasShaderType(animCurveTU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.repeatV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                                >16 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                                  >17 ShaderMgr::hasShaderType(animCurveTU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.rotateFrame)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.rotateUV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.stagger)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.translateFrameU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.translateFrameV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.wrapU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.wrapV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.outUV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                                >16 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                  >17 ShaderMgr::hasShaderType(checker)
                            >14 OutputHelper::endRSL()
                      >11 ShaderMgr::getValidConnection(place2dTexture1)
                      >11 ConvertShadingNetwork::decrementDownstreamConnections(place2dTexture1, nodes, numConnections, validConnections)
                      >11 ConvertShadingNetwork::getNodeVariables(place2dTexture1, validConnections,  inputSrc, inputDes, outputSrc)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.vCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.vCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverage)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverage)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseUV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseUV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offset)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offset)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                            >14 ShaderMgr::hasShaderType(animCurveTU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                            >14 ShaderMgr::hasShaderType(animCurveTU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatUV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatUV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrame)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrame)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                        >12 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture1,outUV,place2dTexture1.outUV, outputVars)
                          >13 Visitor::addShaderMethodVariavles(place2dTexture1,outUV,float,2,)
                      >11 Visitor::addShaderMethodBody(place2dTexture1,,,place2dTexture1.outUV124)
                      >11 Visitor::outputUpstreamShader(checker1)
                        >12 ShaderOutputVisitor::_outputUpstreamShader(checker1,checker)
                          >13 Visitor::visitChecker(checker1)
                            >14 OutputHelper::beginRSL(maya_checker,checker1)
                            >14 ShaderMgr::convertibleConnection(checker1.alphaGain)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                            >14 ShaderMgr::convertibleConnection(checker1.alphaIsLuminance)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                            >14 ShaderMgr::convertibleConnection(checker1.alphaOffset)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                            >14 ShaderMgr::convertibleConnection(checker1.color1)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                            >14 ShaderMgr::convertibleConnection(checker1.color2)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                            >14 ShaderMgr::convertibleConnection(checker1.colorGain)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                            >14 ShaderMgr::convertibleConnection(checker1.colorOffset)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                            >14 ShaderMgr::convertibleConnection(checker1.contrast)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                            >14 ShaderMgr::convertibleConnection(checker1.defaultColor)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                            >14 ShaderMgr::convertibleConnection(checker1.filter)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                            >14 ShaderMgr::convertibleConnection(checker1.filterOffset)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                            >14 ShaderMgr::convertibleConnection(checker1.invert)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                            >14 ShaderMgr::convertibleConnection(checker1.uvCoord)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                                >16 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                                  >17 ShaderMgr::hasShaderType(place2dTexture)
                            >14 ShaderMgr::convertibleConnection(checker1.outAlpha)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                            >14 ShaderMgr::convertibleConnection(checker1.outColor)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                                >16 ConvertShadingNetwork::nodeIsConvertible(phong1)
                                  >17 ShaderMgr::hasShaderType(phong)
                            >14 OutputHelper::endRSL()
                      >11 ShaderMgr::getValidConnection(checker1)
                      >11 ConvertShadingNetwork::decrementDownstreamConnections(checker1, nodes, numConnections, validConnections)
                      >11 ConvertShadingNetwork::getNodeVariables(checker1, validConnections,  inputSrc, inputDes, outputSrc)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1R)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1R)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1G)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1G)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1B)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1B)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2R)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2R)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2G)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2G)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2B)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2B)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.uCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.uCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.vCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.vCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                            >14 ShaderMgr::hasShaderType(place2dTexture)
                        >12 ConvertShadingNetwork::addNodeInputVariable(checker1.uvCoord, inputSrc, inputDes)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                            >14 ShaderMgr::hasShaderType(place2dTexture)
                          >13 ShaderMgr::getValidConnection(place2dTexture1)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                          >13 ConvertShadingNetwork::nodeIsConvertible(phong1)
                            >14 ShaderMgr::hasShaderType(phong)
                        >12 ConvertShadingNetwork::addNodeOutputVariable(checker1,outColor,checker1.outColor, outputVars)
                          >13 Visitor::addShaderMethodVariavles(checker1,outColor,color,-1,)
                      >11 Visitor::addShaderMethodBody(checker1,place2dTexture1.outUV124,checker1.uvCoord124,checker1.outColor124)
                      >11 Visitor::outputUpstreamShader(phong1)
                        >12 ShaderOutputVisitor::_outputUpstreamShader(phong1,phong)
                          >13 Visitor::visitPhong(phong1)
                            >14 OutputHelper::beginRSL(maya_phong,phong1)
                            >14 ShaderMgr::convertibleConnection(phong1.color)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.color)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                                >16 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                  >17 ShaderMgr::hasShaderType(checker)
                            >14 ShaderMgr::convertibleConnection(phong1.transparency)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                            >14 ShaderMgr::convertibleConnection(phong1.ambientColor)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                            >14 ShaderMgr::convertibleConnection(phong1.incandescence)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                            >14 OutputHelper::add_liq_UserDefinedNormal(phong1)
                            >14 ShaderMgr::convertibleConnection(phong1.normalCamera)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                            >14 ShaderMgr::convertibleConnection(phong1.diffuse)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                            >14 ShaderMgr::convertibleConnection(phong1.translucence)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                            >14 ShaderMgr::convertibleConnection(phong1.translucenceDepth)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                            >14 ShaderMgr::convertibleConnection(phong1.translucenceFocus)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                            >14 ShaderMgr::convertibleConnection(phong1.cosinePower)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                            >14 ShaderMgr::convertibleConnection(phong1.specularColor)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                            >14 ShaderMgr::convertibleConnection(phong1.reflectivity)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                            >14 ShaderMgr::convertibleConnection(phong1.reflectedColor)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                            >14 ShaderMgr::convertibleConnection(phong1.matteOpacityMode)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                            >14 ShaderMgr::convertibleConnection(phong1.matteOpacity)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                            >14 ShaderMgr::convertibleConnection(phong1.reflectionLimit)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                            >14 ShaderMgr::convertibleConnection(phong1.outColor)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                                >16 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                                  >17 ShaderMgr::hasShaderType(shadingEngine)
                            >14 ShaderMgr::convertibleConnection(phong1.outTransparency)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                            >14 OutputHelper::endRSL()
                      >11 ShaderMgr::getValidConnection(phong1)
                      >11 ConvertShadingNetwork::decrementDownstreamConnections(phong1, nodes, numConnections, validConnections)
                      >11 ConvertShadingNetwork::getNodeVariables(phong1, validConnections,  inputSrc, inputDes, outputSrc)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.color)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                        >12 ConvertShadingNetwork::addNodeInputVariable(phong1.color, inputSrc, inputDes)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                          >13 ShaderMgr::getValidConnection(checker1)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraX)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraX)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraY)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraY)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraZ)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraZ)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                          >13 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                            >14 ShaderMgr::hasShaderType(shadingEngine)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                      >11 Visitor::addShaderMethodBody(phong1,checker1.outColor124,phong1.color124,)
                    >10 ConvertShadingNetwork::outputShaderMethod()
                      >11 Visitor::outputShaderMethod()
                    >10 Visitor::outputEnd()
                    >10 Visitor::postOutput()
                  >9 ConvertShadingNetwork::exportShaderEnd(phong1)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,displacementShader)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,volumeShader)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,liqShadowShader)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,liqEnvironmentShader)
                >8 ConvertShadingNetwork::exportShadingGroupBegin(phong1SG)
                >8 ConvertShadingNetwork::outputShadingGroup(phong1SG)
                  >9 Visitor::outputShadingGroup(phong1SG)
                >8 ConvertShadingNetwork::exportShadingGroupEnd(phong1SG)
              >7  ConvertShadingNetwork::afterExport()
          >5 liqRibTranslatorNew::worldPrologue__(cameraShape1)
            >6 Renderer::worldPrologue(cameraShape1)
          >5 liqRibTranslatorNew::lightBlock__(cameraShape1)
            >6 Renderer::writeLight_pre(|pointLight1|pointLightShape1,cameraShape1)
            >6 liqRibObj::writeObject(,cameraShape1,0)
              >7 liqRibLightData::write(,job=cameraShape1,0)
                >8 liqRibData::getFullPathName()
                >8 Renderer::write(|pointLight1|pointLightShape1,,cameraShape1,ref=0)
                  >9 liqRibData::getFullPathName()
                  >9 er_writeLightData.cpp::_write(|pointLight1|pointLightShape1,cameraShape1,...)
                    >10 Renderer::exportPointLight(pointlight,pointLightShape1,...)
                      >11 addLightGroupForLight(|pointLight1|pointLightShape1)
            >6 Renderer::writeLight_post(|pointLight1|pointLightShape1,cameraShape1)
            >6 Renderer::writeLight_pre(|pointLight2|pointLightShape2,cameraShape1)
            >6 liqRibObj::writeObject(,cameraShape1,0)
              >7 liqRibLightData::write(,job=cameraShape1,0)
                >8 liqRibData::getFullPathName()
                >8 Renderer::write(|pointLight2|pointLightShape2,,cameraShape1,ref=0)
                  >9 liqRibData::getFullPathName()
                  >9 er_writeLightData.cpp::_write(|pointLight2|pointLightShape2,cameraShape1,...)
                    >10 Renderer::exportPointLight(pointlight,pointLightShape2,...)
                      >11 addLightGroupForLight(|pointLight2|pointLightShape2)
            >6 Renderer::writeLight_post(|pointLight2|pointLightShape2,cameraShape1)
          >5 liqRibTranslatorNew::coordSysBlock__(cameraShape1)
            >6 Renderer::coordSysBlock__(cameraShape1)
          >5 liqRibTranslatorNew::objectBlock__(cameraShape1)
            >6 liqRibTranslatorNew::objectBlock_data(cameraShape1)
              >7 liqRibTranslatorNew::getShadowSetObject(cameraShape1)
              >7 liqRibTranslatorNew::oneObjectBlock_data(|pPlane2|pPlaneShape11,cameraShape1)
                >8 Renderer::exportOneObject_data(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::_writeObject(|pPlane2|pPlaneShape11,cameraShape1,0,0,0)
                    >10 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.1.rib,cameraShape1,0)
                      >11 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.1.rib,job=cameraShape1,0)
                        >12 liqRibData::getFullPathName()
                        >12 Renderer::write(|pPlane2|pPlaneShape11,R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.1.rib,cameraShape1,ref=0)
                          >13 liqRibData::getFullPathName()
                          >13 er_writeMeshData.cpp::_write1(|pPlane2|pPlaneShape11,cameraShape1)
                            >14 liqRibHT::find(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                            >14 _exportVertexFromNodePlug(|pPlane2|pPlaneShape11,0)
                            >14 liqRibData::getFullPathName()
            >6 liqRibTranslatorNew::objectBlock_reference(cameraShape1)
              >7 Renderer::objectBlock_reference_begin()
              >7 liqRibTranslatorNew::preGeometryMel()
                >8 Renderer::preGeometryMel()
              >7 liqRibTranslatorNew::getShadowSetObject(cameraShape1)
              >7 liqRibTranslatorNew::oneObjectBlock_reference(|pPlane2|pPlaneShape11,cameraShape1)
                >8 Renderer::oneObjectBlock_reference_attribute_begin(|pPlane2|pPlaneShape11,cameraShape1)
                >8 Renderer::oneObjectBlock_reference_attribute_block0(|pPlane2|pPlaneShape11,cameraShape1)
                >8 liqRibTranslatorNew::tRiIlluminate(cameraShape1,|pPlane2|pPlaneShape11)
                  >9 Renderer::exportLightLinks(cameraShape1,|pPlane2|pPlaneShape11,lightedByWhichLightShapes.size=2)
                >8 liqRibTranslatorNew::checkSurfaceShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                >8 liqRibTranslatorNew::checkDisplacementShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                >8 liqRibTranslatorNew::checkVolumeShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                >8 Renderer::oneObjectBlock_reference_attribute_block1(|pPlane2|pPlaneShape11,cameraShape1)
                >8 liqRibTranslatorNew::writeShader_(1,|pPlane2|pPlaneShape11,v=0,s=0,c=0,,|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                >8 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|pPlane2|pPlaneShape11)
                >8 Renderer::exportOneObject_reference(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 liqRibData::getFullPathName()
                  >9 liqRibData::getFullPathName()
                  >9 liqRibData::getFullPathName()
                >8 Renderer::oneObjectBlock_reference_attribute_end(|pPlane2|pPlaneShape11,cameraShape1)
              >7 Renderer::objectBlock_reference_end()
          >5 liqRibTranslatorNew::worldEpilogue__()
            >6 liqRibTranslator::worldEpilogue()
              >7 Renderer::worldEpilogue()
          >5 liqRibTranslatorNew::frameEpilogue__(1)
            >6 Renderer::frameEpilogue(1)
          >5 liqRibTranslatorNew::ribEpilogue__(cameraShape1)
            >6 Renderer::ribPrologue_end(cameraShape1)
              >7 Renderer::cookInstanceGroup()
              >7 Renderer::render()
        >4 Renderer::HeroPassEnd(cameraShape1)
      >3 liqRenderScript::addJob(job.title=checker_animFrame0,0)
        >4 liqRenderScript::popNextJobID()
      >3 tFrameScriptJobMgr::setCommonParameters(checker_animFrame1)
      >3 liqRibTranslatorNew::processOneFrame(1, liqglo__)
        >4 liqRibTranslatorNew::buildJobs__()
          >5 liqRibTranslatorNew::buildShadowJobs__()
            >6 tJobScriptMgr::buildShadowJob(thisJob___, 0)
            >6 tJobScriptMgr::buildShadowCameraJob(thisJob___, 0)
          >5 tRibCameraMgr::gatherDataForJob(liqglo___, ,jobList__,0,1)
          >5 liqRibTranslator::generateFileName(4,cameraShape1)
          >5 liqRibTranslator::generateFileName(5,cameraShape1)
            >6 liqRibTranslator::generateImageName(, job(cameraShape1)), 
        >4 liqRibTranslatorNew::calaculateSamplingTime(2)
        >4 liqRibTranslatorNew::scanScene__(2,0)
          >5 tJobScriptMgr::scanScene(2,0, htable__, count, returnStatus__)
            >6 liqRibHT::insert(|pointLight1|pointLightShape1,lframe,0,3,0,matrix,,-1)
              >7 liqRibHT::hash(|pointLight1|pointLightShape1,0)
              >7 liqRibHT::find(|pointLight1|pointLightShape1,|pointLight1|pointLightShape1,3)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|pointLight1|pointLightShape1,0,3,-1)
                >8 liqRibNode::parseVectorAttributes(pointLight1,,2)
                >8 liqRibNode::parseVectorAttributes(pointLight1,,3)
                >8 liqRibNode::parseVectorAttributes(pointLight1,,4)
                >8 liqRibNode::findShadingGroup(|pointLight1|pointLightShape1,3)
                >8 liqRibNode::findShader()
                >8 liqRibNode::findDisp()
                >8 liqRibNode::findVolume()
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|pointLight1|pointLightShape1,3)
                  >9 liqRibLightData::liqRibLightData(|pointLight1|pointLightShape1)
                    >10 liqRibData::addAdditionalSurfaceParameters(pointLightShape1)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 liqRibHT::insert(|pointLight2|pointLightShape2,lframe,0,3,1,matrix,,-1)
              >7 liqRibHT::hash(|pointLight2|pointLightShape2,1)
              >7 liqRibHT::find(|pointLight2|pointLightShape2,|pointLight2|pointLightShape2,3)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|pointLight2|pointLightShape2,0,3,-1)
                >8 liqRibNode::parseVectorAttributes(pointLight2,,2)
                >8 liqRibNode::parseVectorAttributes(pointLight2,,3)
                >8 liqRibNode::parseVectorAttributes(pointLight2,,4)
                >8 liqRibNode::findShadingGroup(|pointLight2|pointLightShape2,3)
                >8 liqRibNode::findShader()
                >8 liqRibNode::findDisp()
                >8 liqRibNode::findVolume()
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|pointLight2|pointLightShape2,3)
                  >9 liqRibLightData::liqRibLightData(|pointLight2|pointLightShape2)
                    >10 liqRibData::addAdditionalSurfaceParameters(pointLightShape2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
          >5 tLocatorMgr::scanScene(2,0,htable__,count__,returnStatus__)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,2,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,2,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,2,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,2,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,2,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,2,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,2,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,2,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,2,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,2,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,2,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,2,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,2,0,&count)
            >6 liqRibHT::insert(|pPlane2|pPlaneShape11,lframe,0,0,2,matrix,,-1)
              >7 liqRibHT::hash(|pPlane2|pPlaneShape11,2)
              >7 liqRibHT::find(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|pPlane2|pPlaneShape11,0,0,-1)
                >8 liqRibNode::parseVectorAttributes(pPlane2,,2)
                >8 liqRibNode::parseVectorAttributes(pPlane2,,3)
                >8 liqRibNode::parseVectorAttributes(pPlane2,,4)
                >8 liqRibNode::findShadingGroup(|pPlane2|pPlaneShape11,0)
                >8 liqRibNode::findShader()
                >8 liqRibNode::findDisp()
                >8 liqRibNode::findVolume()
                >8 liqRibNode::getColor(&shader,&color)
                >8 liqRibNode::getOpacity(&shader,&color)
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|pPlane2|pPlaneShape11,0)
                  >9 liqRibMeshData::liqRibMeshData(|pPlane2|pPlaneShape11)
                    >10 liqRibData::addAdditionalSurfaceParameters(pPlaneShape11)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,2,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,2,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,2,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,2,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,2,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,2,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,2,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,2,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,2,0,&count)
            >6 liqRibHT::insert(|camera1_group|camera1_aim|camera1_aimShape,lframe,0,0,3,matrix,,-1)
              >7 liqRibHT::hash(|camera1_group|camera1_aim|camera1_aimShape,3)
              >7 liqRibHT::find(|camera1_group|camera1_aim|camera1_aimShape,|camera1_group|camera1_aim|camera1_aimShape,0)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|camera1_group|camera1_aim|camera1_aimShape,0,0,-1)
                >8 liqRibNode::parseVectorAttributes(camera1_aim,,2)
                >8 liqRibNode::parseVectorAttributes(camera1_aim,,3)
                >8 liqRibNode::parseVectorAttributes(camera1_aim,,4)
                >8 liqRibNode::findShadingGroup(|camera1_group|camera1_aim|camera1_aimShape,0)
                >8 liqRibNode::findShader()
                >8 liqRibNode::findDisp()
                >8 liqRibNode::findVolume()
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|camera1_group|camera1_aim|camera1_aimShape,0)
          >5 liqRibTranslatorNew::dealwithParticleInstancedObjects(0,2,4)
          >5 liqRibTranslatorNew::getCameraData(iter__,0)
            >6 liqRibTranslator::getCameraInfo(|camera1_group|camera1|cameraShape1,)
              >7 liqRibTranslator::portFieldOfView(224,150,&horizontal,&vertical,&fnCamera)
                >8 liqRibTranslator::computeViewingFrustum(1.49333,,&left,&right,&bottom,&top,|camera1_group|camera1|cameraShape1)
            >6 liqRibTranslator::getCameraFilmOffset(|camera1_group|camera1|cameraShape1,)
            >6 liqRibTranslator::getCameraTransform(|camera1_group|camera1|cameraShape1,)
        >4 liqRibTranslatorNew::doTextures(size=0)
          >5 Renderer::frameEpilogue(txtList_.size=0)
        >4 liqRibTranslatorNew::doShadows(size=0)
          >5 Renderer::doShadows(shadowList_.size=0)
        >4 Renderer::setRenderScriptFormatAndCompress(0,0)
        >4 Renderer::isHeroPassReady(cameraShape1)
        >4 Renderer::HeroPassBegin(cameraShape1)
        >4 tHeroRibWriterMgr::write(liqglo___,cameraShape1,2,0)
          >5 liqRibTranslatorNew::ribPrologue__(cameraShape1)
            >6 Renderer::ribPrologue_begin(cameraShape1)
              >7 Renderer::dummyPhongShader()
            >6 Renderer::ribPrologue_comment(2.3.5 (buildtime=20:51:12.30),R:/MyDocuments/maya/projects/default/checker_anim,yaoyansi,time)
            >6 Renderer::ribPrologue_options(cameraShape1)
          >5 liqRibTranslatorNew::framePrologue__(2,cameraShape1)
            >6 Renderer::framePrologue(2,cameraShape1)
              >7 Renderer::framePrologue_camera(2,cameraShape1)
                >8 Renderer::gatherCameraShaders(cameraShaders.size=0,|camera1_group|camera1|cameraShape1,liqEnvironmentShader)
                >8 Renderer::cameraOutput(cameraShape1)
          >5 ShaderMgr::exportShaderGraph()
            >6 ConvertShadingNetwork::exportShaderGraph()
              >7 ConvertShadingNetwork::beforeExport()
              >7 ConvertShadingNetwork::__export()
                >8 ConvertShadingNetwork::canShadingGroupExported(phong1SG)
                >8 Renderer::getValidShaderPlugsInShadingGroup()
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,surfaceShader)
                  >9 ConvertShadingNetwork::canShaderExported(phong1)
                  >9 ConvertShadingNetwork::exportShaderBegin(phong1)
                  >9 ConvertShadingNetwork::convertShadingNetworkToRSL(phong1,surfaceShader)
                    >10 Visitor::initShaderData(phong1,surfaceShader)
                    >10 ConvertShadingNetwork::getUpstreamConvertibleNodes(phong1, nodes, numConnections)
                      >11 ConvertShadingNetwork::nodeIsConvertible(phong1)
                        >12 ShaderMgr::hasShaderType(phong)
                      >11 ShaderMgr::getValidConnection(phong1)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.colorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.colorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.colorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.colorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.colorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.colorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.color)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                        >12 ConvertShadingNetwork::nodeIsConvertible(checker1)
                          >13 ShaderMgr::hasShaderType(checker)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.transparencyR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.transparencyG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.transparencyB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraX)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraX)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraY)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraY)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraZ)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraZ)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.specularColorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.specularColorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.specularColorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outColorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outColorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outColorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outColorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outColorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outColorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                        >12 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                          >13 ShaderMgr::hasShaderType(shadingEngine)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                      >11 ConvertShadingNetwork::getUpstreamConvertibleNodes(checker1, nodes, numConnections)
                        >12 ConvertShadingNetwork::nodeIsConvertible(checker1)
                          >13 ShaderMgr::hasShaderType(checker)
                        >12 ShaderMgr::getValidConnection(checker1)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1R)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1R)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1G)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1G)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1B)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1B)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2R)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2R)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2G)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2G)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2B)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2B)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.uCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.uCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.vCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.vCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                            >14 ShaderMgr::hasShaderType(place2dTexture)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                          >13 ConvertShadingNetwork::nodeIsConvertible(phong1)
                            >14 ShaderMgr::hasShaderType(phong)
                        >12 ConvertShadingNetwork::getUpstreamConvertibleNodes(place2dTexture1, nodes, numConnections)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                            >14 ShaderMgr::hasShaderType(place2dTexture)
                          >13 ShaderMgr::getValidConnection(place2dTexture1)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.vCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.vCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverage)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverage)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offset)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offset)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                              >15 ShaderMgr::hasShaderType(animCurveTU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                              >15 ShaderMgr::hasShaderType(animCurveTU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrame)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrame)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                            >14 ConvertShadingNetwork::nodeIsConvertible(checker1)
                              >15 ShaderMgr::hasShaderType(checker)
                    >10 Visitor::preOutput(phong1)
                    >10 Visitor::outputBegin(phong1)
                    >10 ConvertShadingNetwork::traverseGraphAndOutputNodeFunctions( nodes, numConnections)
                      >11 Visitor::outputUpstreamShader(place2dTexture1)
                        >12 ShaderOutputVisitor::_outputUpstreamShader(place2dTexture1,place2dTexture)
                          >13 Visitor::visitPlace2dTexture(place2dTexture1)
                            >14 OutputHelper::beginRSL(maya_place2dTexture,place2dTexture1)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.uvCoord)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.coverageU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.coverageV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.mirrorU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.mirrorV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.noiseU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.noiseV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.offsetU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.offsetV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.repeatU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                                >16 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                                  >17 ShaderMgr::hasShaderType(animCurveTU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.repeatV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                                >16 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                                  >17 ShaderMgr::hasShaderType(animCurveTU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.rotateFrame)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.rotateUV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.stagger)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.translateFrameU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.translateFrameV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.wrapU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.wrapV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.outUV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                                >16 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                  >17 ShaderMgr::hasShaderType(checker)
                            >14 OutputHelper::endRSL()
                      >11 ShaderMgr::getValidConnection(place2dTexture1)
                      >11 ConvertShadingNetwork::decrementDownstreamConnections(place2dTexture1, nodes, numConnections, validConnections)
                      >11 ConvertShadingNetwork::getNodeVariables(place2dTexture1, validConnections,  inputSrc, inputDes, outputSrc)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.vCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.vCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverage)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverage)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseUV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseUV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offset)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offset)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                            >14 ShaderMgr::hasShaderType(animCurveTU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                            >14 ShaderMgr::hasShaderType(animCurveTU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatUV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatUV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrame)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrame)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                        >12 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture1,outUV,place2dTexture1.outUV, outputVars)
                          >13 Visitor::addShaderMethodVariavles(place2dTexture1,outUV,float,2,)
                      >11 Visitor::addShaderMethodBody(place2dTexture1,,,place2dTexture1.outUV124)
                      >11 Visitor::outputUpstreamShader(checker1)
                        >12 ShaderOutputVisitor::_outputUpstreamShader(checker1,checker)
                          >13 Visitor::visitChecker(checker1)
                            >14 OutputHelper::beginRSL(maya_checker,checker1)
                            >14 ShaderMgr::convertibleConnection(checker1.alphaGain)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                            >14 ShaderMgr::convertibleConnection(checker1.alphaIsLuminance)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                            >14 ShaderMgr::convertibleConnection(checker1.alphaOffset)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                            >14 ShaderMgr::convertibleConnection(checker1.color1)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                            >14 ShaderMgr::convertibleConnection(checker1.color2)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                            >14 ShaderMgr::convertibleConnection(checker1.colorGain)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                            >14 ShaderMgr::convertibleConnection(checker1.colorOffset)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                            >14 ShaderMgr::convertibleConnection(checker1.contrast)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                            >14 ShaderMgr::convertibleConnection(checker1.defaultColor)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                            >14 ShaderMgr::convertibleConnection(checker1.filter)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                            >14 ShaderMgr::convertibleConnection(checker1.filterOffset)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                            >14 ShaderMgr::convertibleConnection(checker1.invert)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                            >14 ShaderMgr::convertibleConnection(checker1.uvCoord)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                                >16 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                                  >17 ShaderMgr::hasShaderType(place2dTexture)
                            >14 ShaderMgr::convertibleConnection(checker1.outAlpha)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                            >14 ShaderMgr::convertibleConnection(checker1.outColor)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                                >16 ConvertShadingNetwork::nodeIsConvertible(phong1)
                                  >17 ShaderMgr::hasShaderType(phong)
                            >14 OutputHelper::endRSL()
                      >11 ShaderMgr::getValidConnection(checker1)
                      >11 ConvertShadingNetwork::decrementDownstreamConnections(checker1, nodes, numConnections, validConnections)
                      >11 ConvertShadingNetwork::getNodeVariables(checker1, validConnections,  inputSrc, inputDes, outputSrc)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1R)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1R)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1G)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1G)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1B)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1B)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2R)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2R)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2G)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2G)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2B)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2B)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.uCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.uCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.vCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.vCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                            >14 ShaderMgr::hasShaderType(place2dTexture)
                        >12 ConvertShadingNetwork::addNodeInputVariable(checker1.uvCoord, inputSrc, inputDes)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                            >14 ShaderMgr::hasShaderType(place2dTexture)
                          >13 ShaderMgr::getValidConnection(place2dTexture1)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                          >13 ConvertShadingNetwork::nodeIsConvertible(phong1)
                            >14 ShaderMgr::hasShaderType(phong)
                        >12 ConvertShadingNetwork::addNodeOutputVariable(checker1,outColor,checker1.outColor, outputVars)
                          >13 Visitor::addShaderMethodVariavles(checker1,outColor,color,-1,)
                      >11 Visitor::addShaderMethodBody(checker1,place2dTexture1.outUV124,checker1.uvCoord124,checker1.outColor124)
                      >11 Visitor::outputUpstreamShader(phong1)
                        >12 ShaderOutputVisitor::_outputUpstreamShader(phong1,phong)
                          >13 Visitor::visitPhong(phong1)
                            >14 OutputHelper::beginRSL(maya_phong,phong1)
                            >14 ShaderMgr::convertibleConnection(phong1.color)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.color)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                                >16 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                  >17 ShaderMgr::hasShaderType(checker)
                            >14 ShaderMgr::convertibleConnection(phong1.transparency)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                            >14 ShaderMgr::convertibleConnection(phong1.ambientColor)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                            >14 ShaderMgr::convertibleConnection(phong1.incandescence)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                            >14 OutputHelper::add_liq_UserDefinedNormal(phong1)
                            >14 ShaderMgr::convertibleConnection(phong1.normalCamera)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                            >14 ShaderMgr::convertibleConnection(phong1.diffuse)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                            >14 ShaderMgr::convertibleConnection(phong1.translucence)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                            >14 ShaderMgr::convertibleConnection(phong1.translucenceDepth)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                            >14 ShaderMgr::convertibleConnection(phong1.translucenceFocus)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                            >14 ShaderMgr::convertibleConnection(phong1.cosinePower)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                            >14 ShaderMgr::convertibleConnection(phong1.specularColor)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                            >14 ShaderMgr::convertibleConnection(phong1.reflectivity)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                            >14 ShaderMgr::convertibleConnection(phong1.reflectedColor)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                            >14 ShaderMgr::convertibleConnection(phong1.matteOpacityMode)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                            >14 ShaderMgr::convertibleConnection(phong1.matteOpacity)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                            >14 ShaderMgr::convertibleConnection(phong1.reflectionLimit)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                            >14 ShaderMgr::convertibleConnection(phong1.outColor)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                                >16 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                                  >17 ShaderMgr::hasShaderType(shadingEngine)
                            >14 ShaderMgr::convertibleConnection(phong1.outTransparency)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                            >14 OutputHelper::endRSL()
                      >11 ShaderMgr::getValidConnection(phong1)
                      >11 ConvertShadingNetwork::decrementDownstreamConnections(phong1, nodes, numConnections, validConnections)
                      >11 ConvertShadingNetwork::getNodeVariables(phong1, validConnections,  inputSrc, inputDes, outputSrc)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.color)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                        >12 ConvertShadingNetwork::addNodeInputVariable(phong1.color, inputSrc, inputDes)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                          >13 ShaderMgr::getValidConnection(checker1)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraX)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraX)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraY)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraY)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraZ)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraZ)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                          >13 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                            >14 ShaderMgr::hasShaderType(shadingEngine)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                      >11 Visitor::addShaderMethodBody(phong1,checker1.outColor124,phong1.color124,)
                    >10 ConvertShadingNetwork::outputShaderMethod()
                      >11 Visitor::outputShaderMethod()
                    >10 Visitor::outputEnd()
                    >10 Visitor::postOutput()
                  >9 ConvertShadingNetwork::exportShaderEnd(phong1)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,displacementShader)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,volumeShader)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,liqShadowShader)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,liqEnvironmentShader)
                >8 ConvertShadingNetwork::exportShadingGroupBegin(phong1SG)
                >8 ConvertShadingNetwork::outputShadingGroup(phong1SG)
                  >9 Visitor::outputShadingGroup(phong1SG)
                >8 ConvertShadingNetwork::exportShadingGroupEnd(phong1SG)
              >7  ConvertShadingNetwork::afterExport()
          >5 liqRibTranslatorNew::worldPrologue__(cameraShape1)
            >6 Renderer::worldPrologue(cameraShape1)
          >5 liqRibTranslatorNew::lightBlock__(cameraShape1)
            >6 Renderer::writeLight_pre(|pointLight1|pointLightShape1,cameraShape1)
            >6 liqRibObj::writeObject(,cameraShape1,0)
              >7 liqRibLightData::write(,job=cameraShape1,0)
                >8 liqRibData::getFullPathName()
                >8 Renderer::write(|pointLight1|pointLightShape1,,cameraShape1,ref=0)
                  >9 liqRibData::getFullPathName()
                  >9 er_writeLightData.cpp::_write(|pointLight1|pointLightShape1,cameraShape1,...)
                    >10 Renderer::exportPointLight(pointlight,pointLightShape1,...)
                      >11 addLightGroupForLight(|pointLight1|pointLightShape1)
            >6 Renderer::writeLight_post(|pointLight1|pointLightShape1,cameraShape1)
            >6 Renderer::writeLight_pre(|pointLight2|pointLightShape2,cameraShape1)
            >6 liqRibObj::writeObject(,cameraShape1,0)
              >7 liqRibLightData::write(,job=cameraShape1,0)
                >8 liqRibData::getFullPathName()
                >8 Renderer::write(|pointLight2|pointLightShape2,,cameraShape1,ref=0)
                  >9 liqRibData::getFullPathName()
                  >9 er_writeLightData.cpp::_write(|pointLight2|pointLightShape2,cameraShape1,...)
                    >10 Renderer::exportPointLight(pointlight,pointLightShape2,...)
                      >11 addLightGroupForLight(|pointLight2|pointLightShape2)
            >6 Renderer::writeLight_post(|pointLight2|pointLightShape2,cameraShape1)
          >5 liqRibTranslatorNew::coordSysBlock__(cameraShape1)
            >6 Renderer::coordSysBlock__(cameraShape1)
          >5 liqRibTranslatorNew::objectBlock__(cameraShape1)
            >6 liqRibTranslatorNew::objectBlock_data(cameraShape1)
              >7 liqRibTranslatorNew::getShadowSetObject(cameraShape1)
              >7 liqRibTranslatorNew::oneObjectBlock_data(|pPlane2|pPlaneShape11,cameraShape1)
                >8 Renderer::exportOneObject_data(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::_writeObject(|pPlane2|pPlaneShape11,cameraShape1,0,0,0)
                    >10 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.2.rib,cameraShape1,0)
                      >11 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.2.rib,job=cameraShape1,0)
                        >12 liqRibData::getFullPathName()
                        >12 Renderer::write(|pPlane2|pPlaneShape11,R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.2.rib,cameraShape1,ref=0)
                          >13 liqRibData::getFullPathName()
                          >13 er_writeMeshData.cpp::_write1(|pPlane2|pPlaneShape11,cameraShape1)
                            >14 liqRibHT::find(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                            >14 _exportVertexFromNodePlug(|pPlane2|pPlaneShape11,0)
                            >14 liqRibData::getFullPathName()
            >6 liqRibTranslatorNew::objectBlock_reference(cameraShape1)
              >7 Renderer::objectBlock_reference_begin()
              >7 liqRibTranslatorNew::preGeometryMel()
                >8 Renderer::preGeometryMel()
              >7 liqRibTranslatorNew::getShadowSetObject(cameraShape1)
              >7 liqRibTranslatorNew::oneObjectBlock_reference(|pPlane2|pPlaneShape11,cameraShape1)
                >8 Renderer::oneObjectBlock_reference_attribute_begin(|pPlane2|pPlaneShape11,cameraShape1)
                >8 Renderer::oneObjectBlock_reference_attribute_block0(|pPlane2|pPlaneShape11,cameraShape1)
                >8 liqRibTranslatorNew::tRiIlluminate(cameraShape1,|pPlane2|pPlaneShape11)
                  >9 Renderer::exportLightLinks(cameraShape1,|pPlane2|pPlaneShape11,lightedByWhichLightShapes.size=2)
                >8 liqRibTranslatorNew::checkSurfaceShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                >8 liqRibTranslatorNew::checkDisplacementShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                >8 liqRibTranslatorNew::checkVolumeShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                >8 Renderer::oneObjectBlock_reference_attribute_block1(|pPlane2|pPlaneShape11,cameraShape1)
                >8 liqRibTranslatorNew::writeShader_(1,|pPlane2|pPlaneShape11,v=0,s=0,c=0,,|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                >8 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|pPlane2|pPlaneShape11)
                >8 Renderer::exportOneObject_reference(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 liqRibData::getFullPathName()
                  >9 liqRibData::getFullPathName()
                  >9 liqRibData::getFullPathName()
                >8 Renderer::oneObjectBlock_reference_attribute_end(|pPlane2|pPlaneShape11,cameraShape1)
              >7 Renderer::objectBlock_reference_end()
          >5 liqRibTranslatorNew::worldEpilogue__()
            >6 liqRibTranslator::worldEpilogue()
              >7 Renderer::worldEpilogue()
          >5 liqRibTranslatorNew::frameEpilogue__(2)
            >6 Renderer::frameEpilogue(2)
          >5 liqRibTranslatorNew::ribEpilogue__(cameraShape1)
            >6 Renderer::ribPrologue_end(cameraShape1)
              >7 Renderer::cookInstanceGroup()
              >7 Renderer::render()
        >4 Renderer::HeroPassEnd(cameraShape1)
      >3 liqRenderScript::addJob(job.title=checker_animFrame1,0)
        >4 liqRenderScript::popNextJobID()
      >3 tFrameScriptJobMgr::setCommonParameters(checker_animFrame2)
      >3 liqRibTranslatorNew::processOneFrame(2, liqglo__)
        >4 liqRibTranslatorNew::buildJobs__()
          >5 liqRibTranslatorNew::buildShadowJobs__()
            >6 tJobScriptMgr::buildShadowJob(thisJob___, 0)
            >6 tJobScriptMgr::buildShadowCameraJob(thisJob___, 0)
          >5 tRibCameraMgr::gatherDataForJob(liqglo___, ,jobList__,0,1)
          >5 liqRibTranslator::generateFileName(4,cameraShape1)
          >5 liqRibTranslator::generateFileName(5,cameraShape1)
            >6 liqRibTranslator::generateImageName(, job(cameraShape1)), 
        >4 liqRibTranslatorNew::calaculateSamplingTime(3)
        >4 liqRibTranslatorNew::scanScene__(3,0)
          >5 tJobScriptMgr::scanScene(3,0, htable__, count, returnStatus__)
            >6 liqRibHT::insert(|pointLight1|pointLightShape1,lframe,0,3,0,matrix,,-1)
              >7 liqRibHT::hash(|pointLight1|pointLightShape1,0)
              >7 liqRibHT::find(|pointLight1|pointLightShape1,|pointLight1|pointLightShape1,3)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|pointLight1|pointLightShape1,0,3,-1)
                >8 liqRibNode::parseVectorAttributes(pointLight1,,2)
                >8 liqRibNode::parseVectorAttributes(pointLight1,,3)
                >8 liqRibNode::parseVectorAttributes(pointLight1,,4)
                >8 liqRibNode::findShadingGroup(|pointLight1|pointLightShape1,3)
                >8 liqRibNode::findShader()
                >8 liqRibNode::findDisp()
                >8 liqRibNode::findVolume()
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|pointLight1|pointLightShape1,3)
                  >9 liqRibLightData::liqRibLightData(|pointLight1|pointLightShape1)
                    >10 liqRibData::addAdditionalSurfaceParameters(pointLightShape1)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 liqRibHT::insert(|pointLight2|pointLightShape2,lframe,0,3,1,matrix,,-1)
              >7 liqRibHT::hash(|pointLight2|pointLightShape2,1)
              >7 liqRibHT::find(|pointLight2|pointLightShape2,|pointLight2|pointLightShape2,3)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|pointLight2|pointLightShape2,0,3,-1)
                >8 liqRibNode::parseVectorAttributes(pointLight2,,2)
                >8 liqRibNode::parseVectorAttributes(pointLight2,,3)
                >8 liqRibNode::parseVectorAttributes(pointLight2,,4)
                >8 liqRibNode::findShadingGroup(|pointLight2|pointLightShape2,3)
                >8 liqRibNode::findShader()
                >8 liqRibNode::findDisp()
                >8 liqRibNode::findVolume()
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|pointLight2|pointLightShape2,3)
                  >9 liqRibLightData::liqRibLightData(|pointLight2|pointLightShape2)
                    >10 liqRibData::addAdditionalSurfaceParameters(pointLightShape2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
          >5 tLocatorMgr::scanScene(3,0,htable__,count__,returnStatus__)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,3,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,3,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,3,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,3,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,3,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,3,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,3,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,3,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,3,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,3,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,3,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,3,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,3,0,&count)
            >6 liqRibHT::insert(|pPlane2|pPlaneShape11,lframe,0,0,2,matrix,,-1)
              >7 liqRibHT::hash(|pPlane2|pPlaneShape11,2)
              >7 liqRibHT::find(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|pPlane2|pPlaneShape11,0,0,-1)
                >8 liqRibNode::parseVectorAttributes(pPlane2,,2)
                >8 liqRibNode::parseVectorAttributes(pPlane2,,3)
                >8 liqRibNode::parseVectorAttributes(pPlane2,,4)
                >8 liqRibNode::findShadingGroup(|pPlane2|pPlaneShape11,0)
                >8 liqRibNode::findShader()
                >8 liqRibNode::findDisp()
                >8 liqRibNode::findVolume()
                >8 liqRibNode::getColor(&shader,&color)
                >8 liqRibNode::getOpacity(&shader,&color)
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|pPlane2|pPlaneShape11,0)
                  >9 liqRibMeshData::liqRibMeshData(|pPlane2|pPlaneShape11)
                    >10 liqRibData::addAdditionalSurfaceParameters(pPlaneShape11)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,3,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,3,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,3,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,3,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,3,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,3,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,3,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,3,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,3,0,&count)
            >6 liqRibHT::insert(|camera1_group|camera1_aim|camera1_aimShape,lframe,0,0,3,matrix,,-1)
              >7 liqRibHT::hash(|camera1_group|camera1_aim|camera1_aimShape,3)
              >7 liqRibHT::find(|camera1_group|camera1_aim|camera1_aimShape,|camera1_group|camera1_aim|camera1_aimShape,0)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|camera1_group|camera1_aim|camera1_aimShape,0,0,-1)
                >8 liqRibNode::parseVectorAttributes(camera1_aim,,2)
                >8 liqRibNode::parseVectorAttributes(camera1_aim,,3)
                >8 liqRibNode::parseVectorAttributes(camera1_aim,,4)
                >8 liqRibNode::findShadingGroup(|camera1_group|camera1_aim|camera1_aimShape,0)
                >8 liqRibNode::findShader()
                >8 liqRibNode::findDisp()
                >8 liqRibNode::findVolume()
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|camera1_group|camera1_aim|camera1_aimShape,0)
          >5 liqRibTranslatorNew::dealwithParticleInstancedObjects(0,3,4)
          >5 liqRibTranslatorNew::getCameraData(iter__,0)
            >6 liqRibTranslator::getCameraInfo(|camera1_group|camera1|cameraShape1,)
              >7 liqRibTranslator::portFieldOfView(224,150,&horizontal,&vertical,&fnCamera)
                >8 liqRibTranslator::computeViewingFrustum(1.49333,,&left,&right,&bottom,&top,|camera1_group|camera1|cameraShape1)
            >6 liqRibTranslator::getCameraFilmOffset(|camera1_group|camera1|cameraShape1,)
            >6 liqRibTranslator::getCameraTransform(|camera1_group|camera1|cameraShape1,)
        >4 liqRibTranslatorNew::doTextures(size=0)
          >5 Renderer::frameEpilogue(txtList_.size=0)
        >4 liqRibTranslatorNew::doShadows(size=0)
          >5 Renderer::doShadows(shadowList_.size=0)
        >4 Renderer::setRenderScriptFormatAndCompress(0,0)
        >4 Renderer::isHeroPassReady(cameraShape1)
        >4 Renderer::HeroPassBegin(cameraShape1)
        >4 tHeroRibWriterMgr::write(liqglo___,cameraShape1,3,0)
          >5 liqRibTranslatorNew::ribPrologue__(cameraShape1)
            >6 Renderer::ribPrologue_begin(cameraShape1)
              >7 Renderer::dummyPhongShader()
            >6 Renderer::ribPrologue_comment(2.3.5 (buildtime=20:51:12.30),R:/MyDocuments/maya/projects/default/checker_anim,yaoyansi,time)
            >6 Renderer::ribPrologue_options(cameraShape1)
          >5 liqRibTranslatorNew::framePrologue__(3,cameraShape1)
            >6 Renderer::framePrologue(3,cameraShape1)
              >7 Renderer::framePrologue_camera(3,cameraShape1)
                >8 Renderer::gatherCameraShaders(cameraShaders.size=0,|camera1_group|camera1|cameraShape1,liqEnvironmentShader)
                >8 Renderer::cameraOutput(cameraShape1)
          >5 ShaderMgr::exportShaderGraph()
            >6 ConvertShadingNetwork::exportShaderGraph()
              >7 ConvertShadingNetwork::beforeExport()
              >7 ConvertShadingNetwork::__export()
                >8 ConvertShadingNetwork::canShadingGroupExported(phong1SG)
                >8 Renderer::getValidShaderPlugsInShadingGroup()
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,surfaceShader)
                  >9 ConvertShadingNetwork::canShaderExported(phong1)
                  >9 ConvertShadingNetwork::exportShaderBegin(phong1)
                  >9 ConvertShadingNetwork::convertShadingNetworkToRSL(phong1,surfaceShader)
                    >10 Visitor::initShaderData(phong1,surfaceShader)
                    >10 ConvertShadingNetwork::getUpstreamConvertibleNodes(phong1, nodes, numConnections)
                      >11 ConvertShadingNetwork::nodeIsConvertible(phong1)
                        >12 ShaderMgr::hasShaderType(phong)
                      >11 ShaderMgr::getValidConnection(phong1)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.colorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.colorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.colorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.colorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.colorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.colorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.color)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                        >12 ConvertShadingNetwork::nodeIsConvertible(checker1)
                          >13 ShaderMgr::hasShaderType(checker)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.transparencyR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.transparencyG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.transparencyB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraX)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraX)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraY)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraY)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraZ)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraZ)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.specularColorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.specularColorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.specularColorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outColorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outColorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outColorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outColorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outColorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outColorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                        >12 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                          >13 ShaderMgr::hasShaderType(shadingEngine)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                      >11 ConvertShadingNetwork::getUpstreamConvertibleNodes(checker1, nodes, numConnections)
                        >12 ConvertShadingNetwork::nodeIsConvertible(checker1)
                          >13 ShaderMgr::hasShaderType(checker)
                        >12 ShaderMgr::getValidConnection(checker1)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1R)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1R)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1G)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1G)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1B)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1B)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2R)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2R)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2G)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2G)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2B)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2B)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.uCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.uCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.vCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.vCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                            >14 ShaderMgr::hasShaderType(place2dTexture)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                          >13 ConvertShadingNetwork::nodeIsConvertible(phong1)
                            >14 ShaderMgr::hasShaderType(phong)
                        >12 ConvertShadingNetwork::getUpstreamConvertibleNodes(place2dTexture1, nodes, numConnections)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                            >14 ShaderMgr::hasShaderType(place2dTexture)
                          >13 ShaderMgr::getValidConnection(place2dTexture1)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.vCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.vCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverage)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverage)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offset)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offset)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                              >15 ShaderMgr::hasShaderType(animCurveTU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                              >15 ShaderMgr::hasShaderType(animCurveTU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrame)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrame)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                            >14 ConvertShadingNetwork::nodeIsConvertible(checker1)
                              >15 ShaderMgr::hasShaderType(checker)
                    >10 Visitor::preOutput(phong1)
                    >10 Visitor::outputBegin(phong1)
                    >10 ConvertShadingNetwork::traverseGraphAndOutputNodeFunctions( nodes, numConnections)
                      >11 Visitor::outputUpstreamShader(place2dTexture1)
                        >12 ShaderOutputVisitor::_outputUpstreamShader(place2dTexture1,place2dTexture)
                          >13 Visitor::visitPlace2dTexture(place2dTexture1)
                            >14 OutputHelper::beginRSL(maya_place2dTexture,place2dTexture1)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.uvCoord)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.coverageU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.coverageV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.mirrorU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.mirrorV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.noiseU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.noiseV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.offsetU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.offsetV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.repeatU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                                >16 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                                  >17 ShaderMgr::hasShaderType(animCurveTU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.repeatV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                                >16 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                                  >17 ShaderMgr::hasShaderType(animCurveTU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.rotateFrame)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.rotateUV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.stagger)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.translateFrameU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.translateFrameV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.wrapU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.wrapV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.outUV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                                >16 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                  >17 ShaderMgr::hasShaderType(checker)
                            >14 OutputHelper::endRSL()
                      >11 ShaderMgr::getValidConnection(place2dTexture1)
                      >11 ConvertShadingNetwork::decrementDownstreamConnections(place2dTexture1, nodes, numConnections, validConnections)
                      >11 ConvertShadingNetwork::getNodeVariables(place2dTexture1, validConnections,  inputSrc, inputDes, outputSrc)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.vCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.vCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverage)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverage)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseUV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseUV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offset)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offset)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                            >14 ShaderMgr::hasShaderType(animCurveTU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                            >14 ShaderMgr::hasShaderType(animCurveTU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatUV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatUV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrame)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrame)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                        >12 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture1,outUV,place2dTexture1.outUV, outputVars)
                          >13 Visitor::addShaderMethodVariavles(place2dTexture1,outUV,float,2,)
                      >11 Visitor::addShaderMethodBody(place2dTexture1,,,place2dTexture1.outUV124)
                      >11 Visitor::outputUpstreamShader(checker1)
                        >12 ShaderOutputVisitor::_outputUpstreamShader(checker1,checker)
                          >13 Visitor::visitChecker(checker1)
                            >14 OutputHelper::beginRSL(maya_checker,checker1)
                            >14 ShaderMgr::convertibleConnection(checker1.alphaGain)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                            >14 ShaderMgr::convertibleConnection(checker1.alphaIsLuminance)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                            >14 ShaderMgr::convertibleConnection(checker1.alphaOffset)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                            >14 ShaderMgr::convertibleConnection(checker1.color1)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                            >14 ShaderMgr::convertibleConnection(checker1.color2)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                            >14 ShaderMgr::convertibleConnection(checker1.colorGain)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                            >14 ShaderMgr::convertibleConnection(checker1.colorOffset)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                            >14 ShaderMgr::convertibleConnection(checker1.contrast)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                            >14 ShaderMgr::convertibleConnection(checker1.defaultColor)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                            >14 ShaderMgr::convertibleConnection(checker1.filter)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                            >14 ShaderMgr::convertibleConnection(checker1.filterOffset)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                            >14 ShaderMgr::convertibleConnection(checker1.invert)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                            >14 ShaderMgr::convertibleConnection(checker1.uvCoord)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                                >16 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                                  >17 ShaderMgr::hasShaderType(place2dTexture)
                            >14 ShaderMgr::convertibleConnection(checker1.outAlpha)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                            >14 ShaderMgr::convertibleConnection(checker1.outColor)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                                >16 ConvertShadingNetwork::nodeIsConvertible(phong1)
                                  >17 ShaderMgr::hasShaderType(phong)
                            >14 OutputHelper::endRSL()
                      >11 ShaderMgr::getValidConnection(checker1)
                      >11 ConvertShadingNetwork::decrementDownstreamConnections(checker1, nodes, numConnections, validConnections)
                      >11 ConvertShadingNetwork::getNodeVariables(checker1, validConnections,  inputSrc, inputDes, outputSrc)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1R)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1R)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1G)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1G)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1B)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1B)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2R)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2R)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2G)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2G)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2B)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2B)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.uCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.uCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.vCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.vCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                            >14 ShaderMgr::hasShaderType(place2dTexture)
                        >12 ConvertShadingNetwork::addNodeInputVariable(checker1.uvCoord, inputSrc, inputDes)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                            >14 ShaderMgr::hasShaderType(place2dTexture)
                          >13 ShaderMgr::getValidConnection(place2dTexture1)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                          >13 ConvertShadingNetwork::nodeIsConvertible(phong1)
                            >14 ShaderMgr::hasShaderType(phong)
                        >12 ConvertShadingNetwork::addNodeOutputVariable(checker1,outColor,checker1.outColor, outputVars)
                          >13 Visitor::addShaderMethodVariavles(checker1,outColor,color,-1,)
                      >11 Visitor::addShaderMethodBody(checker1,place2dTexture1.outUV124,checker1.uvCoord124,checker1.outColor124)
                      >11 Visitor::outputUpstreamShader(phong1)
                        >12 ShaderOutputVisitor::_outputUpstreamShader(phong1,phong)
                          >13 Visitor::visitPhong(phong1)
                            >14 OutputHelper::beginRSL(maya_phong,phong1)
                            >14 ShaderMgr::convertibleConnection(phong1.color)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.color)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                                >16 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                  >17 ShaderMgr::hasShaderType(checker)
                            >14 ShaderMgr::convertibleConnection(phong1.transparency)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                            >14 ShaderMgr::convertibleConnection(phong1.ambientColor)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                            >14 ShaderMgr::convertibleConnection(phong1.incandescence)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                            >14 OutputHelper::add_liq_UserDefinedNormal(phong1)
                            >14 ShaderMgr::convertibleConnection(phong1.normalCamera)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                            >14 ShaderMgr::convertibleConnection(phong1.diffuse)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                            >14 ShaderMgr::convertibleConnection(phong1.translucence)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                            >14 ShaderMgr::convertibleConnection(phong1.translucenceDepth)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                            >14 ShaderMgr::convertibleConnection(phong1.translucenceFocus)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                            >14 ShaderMgr::convertibleConnection(phong1.cosinePower)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                            >14 ShaderMgr::convertibleConnection(phong1.specularColor)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                            >14 ShaderMgr::convertibleConnection(phong1.reflectivity)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                            >14 ShaderMgr::convertibleConnection(phong1.reflectedColor)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                            >14 ShaderMgr::convertibleConnection(phong1.matteOpacityMode)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                            >14 ShaderMgr::convertibleConnection(phong1.matteOpacity)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                            >14 ShaderMgr::convertibleConnection(phong1.reflectionLimit)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                            >14 ShaderMgr::convertibleConnection(phong1.outColor)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                                >16 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                                  >17 ShaderMgr::hasShaderType(shadingEngine)
                            >14 ShaderMgr::convertibleConnection(phong1.outTransparency)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                            >14 OutputHelper::endRSL()
                      >11 ShaderMgr::getValidConnection(phong1)
                      >11 ConvertShadingNetwork::decrementDownstreamConnections(phong1, nodes, numConnections, validConnections)
                      >11 ConvertShadingNetwork::getNodeVariables(phong1, validConnections,  inputSrc, inputDes, outputSrc)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.color)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                        >12 ConvertShadingNetwork::addNodeInputVariable(phong1.color, inputSrc, inputDes)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                          >13 ShaderMgr::getValidConnection(checker1)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraX)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraX)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraY)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraY)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraZ)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraZ)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                          >13 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                            >14 ShaderMgr::hasShaderType(shadingEngine)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                      >11 Visitor::addShaderMethodBody(phong1,checker1.outColor124,phong1.color124,)
                    >10 ConvertShadingNetwork::outputShaderMethod()
                      >11 Visitor::outputShaderMethod()
                    >10 Visitor::outputEnd()
                    >10 Visitor::postOutput()
                  >9 ConvertShadingNetwork::exportShaderEnd(phong1)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,displacementShader)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,volumeShader)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,liqShadowShader)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,liqEnvironmentShader)
                >8 ConvertShadingNetwork::exportShadingGroupBegin(phong1SG)
                >8 ConvertShadingNetwork::outputShadingGroup(phong1SG)
                  >9 Visitor::outputShadingGroup(phong1SG)
                >8 ConvertShadingNetwork::exportShadingGroupEnd(phong1SG)
              >7  ConvertShadingNetwork::afterExport()
          >5 liqRibTranslatorNew::worldPrologue__(cameraShape1)
            >6 Renderer::worldPrologue(cameraShape1)
          >5 liqRibTranslatorNew::lightBlock__(cameraShape1)
            >6 Renderer::writeLight_pre(|pointLight1|pointLightShape1,cameraShape1)
            >6 liqRibObj::writeObject(,cameraShape1,0)
              >7 liqRibLightData::write(,job=cameraShape1,0)
                >8 liqRibData::getFullPathName()
                >8 Renderer::write(|pointLight1|pointLightShape1,,cameraShape1,ref=0)
                  >9 liqRibData::getFullPathName()
                  >9 er_writeLightData.cpp::_write(|pointLight1|pointLightShape1,cameraShape1,...)
                    >10 Renderer::exportPointLight(pointlight,pointLightShape1,...)
                      >11 addLightGroupForLight(|pointLight1|pointLightShape1)
            >6 Renderer::writeLight_post(|pointLight1|pointLightShape1,cameraShape1)
            >6 Renderer::writeLight_pre(|pointLight2|pointLightShape2,cameraShape1)
            >6 liqRibObj::writeObject(,cameraShape1,0)
              >7 liqRibLightData::write(,job=cameraShape1,0)
                >8 liqRibData::getFullPathName()
                >8 Renderer::write(|pointLight2|pointLightShape2,,cameraShape1,ref=0)
                  >9 liqRibData::getFullPathName()
                  >9 er_writeLightData.cpp::_write(|pointLight2|pointLightShape2,cameraShape1,...)
                    >10 Renderer::exportPointLight(pointlight,pointLightShape2,...)
                      >11 addLightGroupForLight(|pointLight2|pointLightShape2)
            >6 Renderer::writeLight_post(|pointLight2|pointLightShape2,cameraShape1)
          >5 liqRibTranslatorNew::coordSysBlock__(cameraShape1)
            >6 Renderer::coordSysBlock__(cameraShape1)
          >5 liqRibTranslatorNew::objectBlock__(cameraShape1)
            >6 liqRibTranslatorNew::objectBlock_data(cameraShape1)
              >7 liqRibTranslatorNew::getShadowSetObject(cameraShape1)
              >7 liqRibTranslatorNew::oneObjectBlock_data(|pPlane2|pPlaneShape11,cameraShape1)
                >8 Renderer::exportOneObject_data(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::_writeObject(|pPlane2|pPlaneShape11,cameraShape1,0,0,0)
                    >10 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.3.rib,cameraShape1,0)
                      >11 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.3.rib,job=cameraShape1,0)
                        >12 liqRibData::getFullPathName()
                        >12 Renderer::write(|pPlane2|pPlaneShape11,R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.3.rib,cameraShape1,ref=0)
                          >13 liqRibData::getFullPathName()
                          >13 er_writeMeshData.cpp::_write1(|pPlane2|pPlaneShape11,cameraShape1)
                            >14 liqRibHT::find(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                            >14 _exportVertexFromNodePlug(|pPlane2|pPlaneShape11,0)
                            >14 liqRibData::getFullPathName()
            >6 liqRibTranslatorNew::objectBlock_reference(cameraShape1)
              >7 Renderer::objectBlock_reference_begin()
              >7 liqRibTranslatorNew::preGeometryMel()
                >8 Renderer::preGeometryMel()
              >7 liqRibTranslatorNew::getShadowSetObject(cameraShape1)
              >7 liqRibTranslatorNew::oneObjectBlock_reference(|pPlane2|pPlaneShape11,cameraShape1)
                >8 Renderer::oneObjectBlock_reference_attribute_begin(|pPlane2|pPlaneShape11,cameraShape1)
                >8 Renderer::oneObjectBlock_reference_attribute_block0(|pPlane2|pPlaneShape11,cameraShape1)
                >8 liqRibTranslatorNew::tRiIlluminate(cameraShape1,|pPlane2|pPlaneShape11)
                  >9 Renderer::exportLightLinks(cameraShape1,|pPlane2|pPlaneShape11,lightedByWhichLightShapes.size=2)
                >8 liqRibTranslatorNew::checkSurfaceShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                >8 liqRibTranslatorNew::checkDisplacementShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                >8 liqRibTranslatorNew::checkVolumeShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                >8 Renderer::oneObjectBlock_reference_attribute_block1(|pPlane2|pPlaneShape11,cameraShape1)
                >8 liqRibTranslatorNew::writeShader_(1,|pPlane2|pPlaneShape11,v=0,s=0,c=0,,|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                >8 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|pPlane2|pPlaneShape11)
                >8 Renderer::exportOneObject_reference(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 liqRibData::getFullPathName()
                  >9 liqRibData::getFullPathName()
                  >9 liqRibData::getFullPathName()
                >8 Renderer::oneObjectBlock_reference_attribute_end(|pPlane2|pPlaneShape11,cameraShape1)
              >7 Renderer::objectBlock_reference_end()
          >5 liqRibTranslatorNew::worldEpilogue__()
            >6 liqRibTranslator::worldEpilogue()
              >7 Renderer::worldEpilogue()
          >5 liqRibTranslatorNew::frameEpilogue__(3)
            >6 Renderer::frameEpilogue(3)
          >5 liqRibTranslatorNew::ribEpilogue__(cameraShape1)
            >6 Renderer::ribPrologue_end(cameraShape1)
              >7 Renderer::cookInstanceGroup()
              >7 Renderer::render()
        >4 Renderer::HeroPassEnd(cameraShape1)
      >3 liqRenderScript::addJob(job.title=checker_animFrame2,0)
        >4 liqRenderScript::popNextJobID()
      >3 tFrameScriptJobMgr::setCommonParameters(checker_animFrame3)
      >3 liqRibTranslatorNew::processOneFrame(3, liqglo__)
        >4 liqRibTranslatorNew::buildJobs__()
          >5 liqRibTranslatorNew::buildShadowJobs__()
            >6 tJobScriptMgr::buildShadowJob(thisJob___, 0)
            >6 tJobScriptMgr::buildShadowCameraJob(thisJob___, 0)
          >5 tRibCameraMgr::gatherDataForJob(liqglo___, ,jobList__,0,1)
          >5 liqRibTranslator::generateFileName(4,cameraShape1)
          >5 liqRibTranslator::generateFileName(5,cameraShape1)
            >6 liqRibTranslator::generateImageName(, job(cameraShape1)), 
        >4 liqRibTranslatorNew::calaculateSamplingTime(4)
        >4 liqRibTranslatorNew::scanScene__(4,0)
          >5 tJobScriptMgr::scanScene(4,0, htable__, count, returnStatus__)
            >6 liqRibHT::insert(|pointLight1|pointLightShape1,lframe,0,3,0,matrix,,-1)
              >7 liqRibHT::hash(|pointLight1|pointLightShape1,0)
              >7 liqRibHT::find(|pointLight1|pointLightShape1,|pointLight1|pointLightShape1,3)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|pointLight1|pointLightShape1,0,3,-1)
                >8 liqRibNode::parseVectorAttributes(pointLight1,,2)
                >8 liqRibNode::parseVectorAttributes(pointLight1,,3)
                >8 liqRibNode::parseVectorAttributes(pointLight1,,4)
                >8 liqRibNode::findShadingGroup(|pointLight1|pointLightShape1,3)
                >8 liqRibNode::findShader()
                >8 liqRibNode::findDisp()
                >8 liqRibNode::findVolume()
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|pointLight1|pointLightShape1,3)
                  >9 liqRibLightData::liqRibLightData(|pointLight1|pointLightShape1)
                    >10 liqRibData::addAdditionalSurfaceParameters(pointLightShape1)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 liqRibHT::insert(|pointLight2|pointLightShape2,lframe,0,3,1,matrix,,-1)
              >7 liqRibHT::hash(|pointLight2|pointLightShape2,1)
              >7 liqRibHT::find(|pointLight2|pointLightShape2,|pointLight2|pointLightShape2,3)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|pointLight2|pointLightShape2,0,3,-1)
                >8 liqRibNode::parseVectorAttributes(pointLight2,,2)
                >8 liqRibNode::parseVectorAttributes(pointLight2,,3)
                >8 liqRibNode::parseVectorAttributes(pointLight2,,4)
                >8 liqRibNode::findShadingGroup(|pointLight2|pointLightShape2,3)
                >8 liqRibNode::findShader()
                >8 liqRibNode::findDisp()
                >8 liqRibNode::findVolume()
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|pointLight2|pointLightShape2,3)
                  >9 liqRibLightData::liqRibLightData(|pointLight2|pointLightShape2)
                    >10 liqRibData::addAdditionalSurfaceParameters(pointLightShape2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
          >5 tLocatorMgr::scanScene(4,0,htable__,count__,returnStatus__)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,4,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,4,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,4,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,4,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,4,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,4,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,4,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,4,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,4,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,4,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,4,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,4,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,4,0,&count)
            >6 liqRibHT::insert(|pPlane2|pPlaneShape11,lframe,0,0,2,matrix,,-1)
              >7 liqRibHT::hash(|pPlane2|pPlaneShape11,2)
              >7 liqRibHT::find(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|pPlane2|pPlaneShape11,0,0,-1)
                >8 liqRibNode::parseVectorAttributes(pPlane2,,2)
                >8 liqRibNode::parseVectorAttributes(pPlane2,,3)
                >8 liqRibNode::parseVectorAttributes(pPlane2,,4)
                >8 liqRibNode::findShadingGroup(|pPlane2|pPlaneShape11,0)
                >8 liqRibNode::findShader()
                >8 liqRibNode::findDisp()
                >8 liqRibNode::findVolume()
                >8 liqRibNode::getColor(&shader,&color)
                >8 liqRibNode::getOpacity(&shader,&color)
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|pPlane2|pPlaneShape11,0)
                  >9 liqRibMeshData::liqRibMeshData(|pPlane2|pPlaneShape11)
                    >10 liqRibData::addAdditionalSurfaceParameters(pPlaneShape11)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,4,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,4,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,4,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,4,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,4,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,4,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,4,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,4,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,4,0,&count)
            >6 liqRibHT::insert(|camera1_group|camera1_aim|camera1_aimShape,lframe,0,0,3,matrix,,-1)
              >7 liqRibHT::hash(|camera1_group|camera1_aim|camera1_aimShape,3)
              >7 liqRibHT::find(|camera1_group|camera1_aim|camera1_aimShape,|camera1_group|camera1_aim|camera1_aimShape,0)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|camera1_group|camera1_aim|camera1_aimShape,0,0,-1)
                >8 liqRibNode::parseVectorAttributes(camera1_aim,,2)
                >8 liqRibNode::parseVectorAttributes(camera1_aim,,3)
                >8 liqRibNode::parseVectorAttributes(camera1_aim,,4)
                >8 liqRibNode::findShadingGroup(|camera1_group|camera1_aim|camera1_aimShape,0)
                >8 liqRibNode::findShader()
                >8 liqRibNode::findDisp()
                >8 liqRibNode::findVolume()
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|camera1_group|camera1_aim|camera1_aimShape,0)
          >5 liqRibTranslatorNew::dealwithParticleInstancedObjects(0,4,4)
          >5 liqRibTranslatorNew::getCameraData(iter__,0)
            >6 liqRibTranslator::getCameraInfo(|camera1_group|camera1|cameraShape1,)
              >7 liqRibTranslator::portFieldOfView(224,150,&horizontal,&vertical,&fnCamera)
                >8 liqRibTranslator::computeViewingFrustum(1.49333,,&left,&right,&bottom,&top,|camera1_group|camera1|cameraShape1)
            >6 liqRibTranslator::getCameraFilmOffset(|camera1_group|camera1|cameraShape1,)
            >6 liqRibTranslator::getCameraTransform(|camera1_group|camera1|cameraShape1,)
        >4 liqRibTranslatorNew::doTextures(size=0)
          >5 Renderer::frameEpilogue(txtList_.size=0)
        >4 liqRibTranslatorNew::doShadows(size=0)
          >5 Renderer::doShadows(shadowList_.size=0)
        >4 Renderer::setRenderScriptFormatAndCompress(0,0)
        >4 Renderer::isHeroPassReady(cameraShape1)
        >4 Renderer::HeroPassBegin(cameraShape1)
        >4 tHeroRibWriterMgr::write(liqglo___,cameraShape1,4,0)
          >5 liqRibTranslatorNew::ribPrologue__(cameraShape1)
            >6 Renderer::ribPrologue_begin(cameraShape1)
              >7 Renderer::dummyPhongShader()
            >6 Renderer::ribPrologue_comment(2.3.5 (buildtime=20:51:12.30),R:/MyDocuments/maya/projects/default/checker_anim,yaoyansi,time)
            >6 Renderer::ribPrologue_options(cameraShape1)
          >5 liqRibTranslatorNew::framePrologue__(4,cameraShape1)
            >6 Renderer::framePrologue(4,cameraShape1)
              >7 Renderer::framePrologue_camera(4,cameraShape1)
                >8 Renderer::gatherCameraShaders(cameraShaders.size=0,|camera1_group|camera1|cameraShape1,liqEnvironmentShader)
                >8 Renderer::cameraOutput(cameraShape1)
          >5 ShaderMgr::exportShaderGraph()
            >6 ConvertShadingNetwork::exportShaderGraph()
              >7 ConvertShadingNetwork::beforeExport()
              >7 ConvertShadingNetwork::__export()
                >8 ConvertShadingNetwork::canShadingGroupExported(phong1SG)
                >8 Renderer::getValidShaderPlugsInShadingGroup()
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,surfaceShader)
                  >9 ConvertShadingNetwork::canShaderExported(phong1)
                  >9 ConvertShadingNetwork::exportShaderBegin(phong1)
                  >9 ConvertShadingNetwork::convertShadingNetworkToRSL(phong1,surfaceShader)
                    >10 Visitor::initShaderData(phong1,surfaceShader)
                    >10 ConvertShadingNetwork::getUpstreamConvertibleNodes(phong1, nodes, numConnections)
                      >11 ConvertShadingNetwork::nodeIsConvertible(phong1)
                        >12 ShaderMgr::hasShaderType(phong)
                      >11 ShaderMgr::getValidConnection(phong1)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.colorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.colorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.colorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.colorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.colorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.colorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.color)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                        >12 ConvertShadingNetwork::nodeIsConvertible(checker1)
                          >13 ShaderMgr::hasShaderType(checker)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.transparencyR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.transparencyG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.transparencyB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraX)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraX)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraY)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraY)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraZ)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraZ)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.specularColorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.specularColorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.specularColorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outColorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outColorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outColorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outColorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outColorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outColorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                        >12 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                          >13 ShaderMgr::hasShaderType(shadingEngine)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                      >11 ConvertShadingNetwork::getUpstreamConvertibleNodes(checker1, nodes, numConnections)
                        >12 ConvertShadingNetwork::nodeIsConvertible(checker1)
                          >13 ShaderMgr::hasShaderType(checker)
                        >12 ShaderMgr::getValidConnection(checker1)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1R)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1R)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1G)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1G)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1B)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1B)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2R)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2R)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2G)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2G)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2B)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2B)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.uCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.uCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.vCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.vCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                            >14 ShaderMgr::hasShaderType(place2dTexture)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                          >13 ConvertShadingNetwork::nodeIsConvertible(phong1)
                            >14 ShaderMgr::hasShaderType(phong)
                        >12 ConvertShadingNetwork::getUpstreamConvertibleNodes(place2dTexture1, nodes, numConnections)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                            >14 ShaderMgr::hasShaderType(place2dTexture)
                          >13 ShaderMgr::getValidConnection(place2dTexture1)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.vCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.vCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverage)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverage)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offset)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offset)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                              >15 ShaderMgr::hasShaderType(animCurveTU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                              >15 ShaderMgr::hasShaderType(animCurveTU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrame)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrame)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                            >14 ConvertShadingNetwork::nodeIsConvertible(checker1)
                              >15 ShaderMgr::hasShaderType(checker)
                    >10 Visitor::preOutput(phong1)
                    >10 Visitor::outputBegin(phong1)
                    >10 ConvertShadingNetwork::traverseGraphAndOutputNodeFunctions( nodes, numConnections)
                      >11 Visitor::outputUpstreamShader(place2dTexture1)
                        >12 ShaderOutputVisitor::_outputUpstreamShader(place2dTexture1,place2dTexture)
                          >13 Visitor::visitPlace2dTexture(place2dTexture1)
                            >14 OutputHelper::beginRSL(maya_place2dTexture,place2dTexture1)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.uvCoord)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.coverageU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.coverageV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.mirrorU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.mirrorV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.noiseU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.noiseV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.offsetU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.offsetV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.repeatU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                                >16 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                                  >17 ShaderMgr::hasShaderType(animCurveTU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.repeatV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                                >16 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                                  >17 ShaderMgr::hasShaderType(animCurveTU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.rotateFrame)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.rotateUV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.stagger)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.translateFrameU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.translateFrameV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.wrapU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.wrapV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.outUV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                                >16 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                  >17 ShaderMgr::hasShaderType(checker)
                            >14 OutputHelper::endRSL()
                      >11 ShaderMgr::getValidConnection(place2dTexture1)
                      >11 ConvertShadingNetwork::decrementDownstreamConnections(place2dTexture1, nodes, numConnections, validConnections)
                      >11 ConvertShadingNetwork::getNodeVariables(place2dTexture1, validConnections,  inputSrc, inputDes, outputSrc)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.vCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.vCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverage)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverage)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseUV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseUV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offset)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offset)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                            >14 ShaderMgr::hasShaderType(animCurveTU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                            >14 ShaderMgr::hasShaderType(animCurveTU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatUV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatUV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrame)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrame)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                        >12 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture1,outUV,place2dTexture1.outUV, outputVars)
                          >13 Visitor::addShaderMethodVariavles(place2dTexture1,outUV,float,2,)
                      >11 Visitor::addShaderMethodBody(place2dTexture1,,,place2dTexture1.outUV124)
                      >11 Visitor::outputUpstreamShader(checker1)
                        >12 ShaderOutputVisitor::_outputUpstreamShader(checker1,checker)
                          >13 Visitor::visitChecker(checker1)
                            >14 OutputHelper::beginRSL(maya_checker,checker1)
                            >14 ShaderMgr::convertibleConnection(checker1.alphaGain)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                            >14 ShaderMgr::convertibleConnection(checker1.alphaIsLuminance)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                            >14 ShaderMgr::convertibleConnection(checker1.alphaOffset)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                            >14 ShaderMgr::convertibleConnection(checker1.color1)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                            >14 ShaderMgr::convertibleConnection(checker1.color2)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                            >14 ShaderMgr::convertibleConnection(checker1.colorGain)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                            >14 ShaderMgr::convertibleConnection(checker1.colorOffset)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                            >14 ShaderMgr::convertibleConnection(checker1.contrast)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                            >14 ShaderMgr::convertibleConnection(checker1.defaultColor)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                            >14 ShaderMgr::convertibleConnection(checker1.filter)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                            >14 ShaderMgr::convertibleConnection(checker1.filterOffset)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                            >14 ShaderMgr::convertibleConnection(checker1.invert)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                            >14 ShaderMgr::convertibleConnection(checker1.uvCoord)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                                >16 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                                  >17 ShaderMgr::hasShaderType(place2dTexture)
                            >14 ShaderMgr::convertibleConnection(checker1.outAlpha)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                            >14 ShaderMgr::convertibleConnection(checker1.outColor)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                                >16 ConvertShadingNetwork::nodeIsConvertible(phong1)
                                  >17 ShaderMgr::hasShaderType(phong)
                            >14 OutputHelper::endRSL()
                      >11 ShaderMgr::getValidConnection(checker1)
                      >11 ConvertShadingNetwork::decrementDownstreamConnections(checker1, nodes, numConnections, validConnections)
                      >11 ConvertShadingNetwork::getNodeVariables(checker1, validConnections,  inputSrc, inputDes, outputSrc)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1R)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1R)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1G)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1G)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1B)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1B)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2R)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2R)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2G)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2G)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2B)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2B)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.uCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.uCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.vCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.vCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                            >14 ShaderMgr::hasShaderType(place2dTexture)
                        >12 ConvertShadingNetwork::addNodeInputVariable(checker1.uvCoord, inputSrc, inputDes)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                            >14 ShaderMgr::hasShaderType(place2dTexture)
                          >13 ShaderMgr::getValidConnection(place2dTexture1)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                          >13 ConvertShadingNetwork::nodeIsConvertible(phong1)
                            >14 ShaderMgr::hasShaderType(phong)
                        >12 ConvertShadingNetwork::addNodeOutputVariable(checker1,outColor,checker1.outColor, outputVars)
                          >13 Visitor::addShaderMethodVariavles(checker1,outColor,color,-1,)
                      >11 Visitor::addShaderMethodBody(checker1,place2dTexture1.outUV124,checker1.uvCoord124,checker1.outColor124)
                      >11 Visitor::outputUpstreamShader(phong1)
                        >12 ShaderOutputVisitor::_outputUpstreamShader(phong1,phong)
                          >13 Visitor::visitPhong(phong1)
                            >14 OutputHelper::beginRSL(maya_phong,phong1)
                            >14 ShaderMgr::convertibleConnection(phong1.color)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.color)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                                >16 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                  >17 ShaderMgr::hasShaderType(checker)
                            >14 ShaderMgr::convertibleConnection(phong1.transparency)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                            >14 ShaderMgr::convertibleConnection(phong1.ambientColor)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                            >14 ShaderMgr::convertibleConnection(phong1.incandescence)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                            >14 OutputHelper::add_liq_UserDefinedNormal(phong1)
                            >14 ShaderMgr::convertibleConnection(phong1.normalCamera)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                            >14 ShaderMgr::convertibleConnection(phong1.diffuse)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                            >14 ShaderMgr::convertibleConnection(phong1.translucence)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                            >14 ShaderMgr::convertibleConnection(phong1.translucenceDepth)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                            >14 ShaderMgr::convertibleConnection(phong1.translucenceFocus)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                            >14 ShaderMgr::convertibleConnection(phong1.cosinePower)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                            >14 ShaderMgr::convertibleConnection(phong1.specularColor)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                            >14 ShaderMgr::convertibleConnection(phong1.reflectivity)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                            >14 ShaderMgr::convertibleConnection(phong1.reflectedColor)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                            >14 ShaderMgr::convertibleConnection(phong1.matteOpacityMode)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                            >14 ShaderMgr::convertibleConnection(phong1.matteOpacity)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                            >14 ShaderMgr::convertibleConnection(phong1.reflectionLimit)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                            >14 ShaderMgr::convertibleConnection(phong1.outColor)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                                >16 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                                  >17 ShaderMgr::hasShaderType(shadingEngine)
                            >14 ShaderMgr::convertibleConnection(phong1.outTransparency)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                            >14 OutputHelper::endRSL()
                      >11 ShaderMgr::getValidConnection(phong1)
                      >11 ConvertShadingNetwork::decrementDownstreamConnections(phong1, nodes, numConnections, validConnections)
                      >11 ConvertShadingNetwork::getNodeVariables(phong1, validConnections,  inputSrc, inputDes, outputSrc)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.color)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                        >12 ConvertShadingNetwork::addNodeInputVariable(phong1.color, inputSrc, inputDes)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                          >13 ShaderMgr::getValidConnection(checker1)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraX)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraX)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraY)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraY)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraZ)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraZ)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                          >13 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                            >14 ShaderMgr::hasShaderType(shadingEngine)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                      >11 Visitor::addShaderMethodBody(phong1,checker1.outColor124,phong1.color124,)
                    >10 ConvertShadingNetwork::outputShaderMethod()
                      >11 Visitor::outputShaderMethod()
                    >10 Visitor::outputEnd()
                    >10 Visitor::postOutput()
                  >9 ConvertShadingNetwork::exportShaderEnd(phong1)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,displacementShader)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,volumeShader)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,liqShadowShader)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,liqEnvironmentShader)
                >8 ConvertShadingNetwork::exportShadingGroupBegin(phong1SG)
                >8 ConvertShadingNetwork::outputShadingGroup(phong1SG)
                  >9 Visitor::outputShadingGroup(phong1SG)
                >8 ConvertShadingNetwork::exportShadingGroupEnd(phong1SG)
              >7  ConvertShadingNetwork::afterExport()
          >5 liqRibTranslatorNew::worldPrologue__(cameraShape1)
            >6 Renderer::worldPrologue(cameraShape1)
          >5 liqRibTranslatorNew::lightBlock__(cameraShape1)
            >6 Renderer::writeLight_pre(|pointLight1|pointLightShape1,cameraShape1)
            >6 liqRibObj::writeObject(,cameraShape1,0)
              >7 liqRibLightData::write(,job=cameraShape1,0)
                >8 liqRibData::getFullPathName()
                >8 Renderer::write(|pointLight1|pointLightShape1,,cameraShape1,ref=0)
                  >9 liqRibData::getFullPathName()
                  >9 er_writeLightData.cpp::_write(|pointLight1|pointLightShape1,cameraShape1,...)
                    >10 Renderer::exportPointLight(pointlight,pointLightShape1,...)
                      >11 addLightGroupForLight(|pointLight1|pointLightShape1)
            >6 Renderer::writeLight_post(|pointLight1|pointLightShape1,cameraShape1)
            >6 Renderer::writeLight_pre(|pointLight2|pointLightShape2,cameraShape1)
            >6 liqRibObj::writeObject(,cameraShape1,0)
              >7 liqRibLightData::write(,job=cameraShape1,0)
                >8 liqRibData::getFullPathName()
                >8 Renderer::write(|pointLight2|pointLightShape2,,cameraShape1,ref=0)
                  >9 liqRibData::getFullPathName()
                  >9 er_writeLightData.cpp::_write(|pointLight2|pointLightShape2,cameraShape1,...)
                    >10 Renderer::exportPointLight(pointlight,pointLightShape2,...)
                      >11 addLightGroupForLight(|pointLight2|pointLightShape2)
            >6 Renderer::writeLight_post(|pointLight2|pointLightShape2,cameraShape1)
          >5 liqRibTranslatorNew::coordSysBlock__(cameraShape1)
            >6 Renderer::coordSysBlock__(cameraShape1)
          >5 liqRibTranslatorNew::objectBlock__(cameraShape1)
            >6 liqRibTranslatorNew::objectBlock_data(cameraShape1)
              >7 liqRibTranslatorNew::getShadowSetObject(cameraShape1)
              >7 liqRibTranslatorNew::oneObjectBlock_data(|pPlane2|pPlaneShape11,cameraShape1)
                >8 Renderer::exportOneObject_data(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::_writeObject(|pPlane2|pPlaneShape11,cameraShape1,0,0,0)
                    >10 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.4.rib,cameraShape1,0)
                      >11 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.4.rib,job=cameraShape1,0)
                        >12 liqRibData::getFullPathName()
                        >12 Renderer::write(|pPlane2|pPlaneShape11,R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.4.rib,cameraShape1,ref=0)
                          >13 liqRibData::getFullPathName()
                          >13 er_writeMeshData.cpp::_write1(|pPlane2|pPlaneShape11,cameraShape1)
                            >14 liqRibHT::find(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                            >14 _exportVertexFromNodePlug(|pPlane2|pPlaneShape11,0)
                            >14 liqRibData::getFullPathName()
            >6 liqRibTranslatorNew::objectBlock_reference(cameraShape1)
              >7 Renderer::objectBlock_reference_begin()
              >7 liqRibTranslatorNew::preGeometryMel()
                >8 Renderer::preGeometryMel()
              >7 liqRibTranslatorNew::getShadowSetObject(cameraShape1)
              >7 liqRibTranslatorNew::oneObjectBlock_reference(|pPlane2|pPlaneShape11,cameraShape1)
                >8 Renderer::oneObjectBlock_reference_attribute_begin(|pPlane2|pPlaneShape11,cameraShape1)
                >8 Renderer::oneObjectBlock_reference_attribute_block0(|pPlane2|pPlaneShape11,cameraShape1)
                >8 liqRibTranslatorNew::tRiIlluminate(cameraShape1,|pPlane2|pPlaneShape11)
                  >9 Renderer::exportLightLinks(cameraShape1,|pPlane2|pPlaneShape11,lightedByWhichLightShapes.size=2)
                >8 liqRibTranslatorNew::checkSurfaceShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                >8 liqRibTranslatorNew::checkDisplacementShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                >8 liqRibTranslatorNew::checkVolumeShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                >8 Renderer::oneObjectBlock_reference_attribute_block1(|pPlane2|pPlaneShape11,cameraShape1)
                >8 liqRibTranslatorNew::writeShader_(1,|pPlane2|pPlaneShape11,v=0,s=0,c=0,,|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                >8 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|pPlane2|pPlaneShape11)
                >8 Renderer::exportOneObject_reference(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 liqRibData::getFullPathName()
                  >9 liqRibData::getFullPathName()
                  >9 liqRibData::getFullPathName()
                >8 Renderer::oneObjectBlock_reference_attribute_end(|pPlane2|pPlaneShape11,cameraShape1)
              >7 Renderer::objectBlock_reference_end()
          >5 liqRibTranslatorNew::worldEpilogue__()
            >6 liqRibTranslator::worldEpilogue()
              >7 Renderer::worldEpilogue()
          >5 liqRibTranslatorNew::frameEpilogue__(4)
            >6 Renderer::frameEpilogue(4)
          >5 liqRibTranslatorNew::ribEpilogue__(cameraShape1)
            >6 Renderer::ribPrologue_end(cameraShape1)
              >7 Renderer::cookInstanceGroup()
              >7 Renderer::render()
        >4 Renderer::HeroPassEnd(cameraShape1)
      >3 liqRenderScript::addJob(job.title=checker_animFrame3,0)
        >4 liqRenderScript::popNextJobID()
      >3 tFrameScriptJobMgr::setCommonParameters(checker_animFrame4)
      >3 liqRibTranslatorNew::processOneFrame(4, liqglo__)
        >4 liqRibTranslatorNew::buildJobs__()
          >5 liqRibTranslatorNew::buildShadowJobs__()
            >6 tJobScriptMgr::buildShadowJob(thisJob___, 0)
            >6 tJobScriptMgr::buildShadowCameraJob(thisJob___, 0)
          >5 tRibCameraMgr::gatherDataForJob(liqglo___, ,jobList__,0,1)
          >5 liqRibTranslator::generateFileName(4,cameraShape1)
          >5 liqRibTranslator::generateFileName(5,cameraShape1)
            >6 liqRibTranslator::generateImageName(, job(cameraShape1)), 
        >4 liqRibTranslatorNew::calaculateSamplingTime(5)
        >4 liqRibTranslatorNew::scanScene__(5,0)
          >5 tJobScriptMgr::scanScene(5,0, htable__, count, returnStatus__)
            >6 liqRibHT::insert(|pointLight1|pointLightShape1,lframe,0,3,0,matrix,,-1)
              >7 liqRibHT::hash(|pointLight1|pointLightShape1,0)
              >7 liqRibHT::find(|pointLight1|pointLightShape1,|pointLight1|pointLightShape1,3)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|pointLight1|pointLightShape1,0,3,-1)
                >8 liqRibNode::parseVectorAttributes(pointLight1,,2)
                >8 liqRibNode::parseVectorAttributes(pointLight1,,3)
                >8 liqRibNode::parseVectorAttributes(pointLight1,,4)
                >8 liqRibNode::findShadingGroup(|pointLight1|pointLightShape1,3)
                >8 liqRibNode::findShader()
                >8 liqRibNode::findDisp()
                >8 liqRibNode::findVolume()
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|pointLight1|pointLightShape1,3)
                  >9 liqRibLightData::liqRibLightData(|pointLight1|pointLightShape1)
                    >10 liqRibData::addAdditionalSurfaceParameters(pointLightShape1)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 liqRibHT::insert(|pointLight2|pointLightShape2,lframe,0,3,1,matrix,,-1)
              >7 liqRibHT::hash(|pointLight2|pointLightShape2,1)
              >7 liqRibHT::find(|pointLight2|pointLightShape2,|pointLight2|pointLightShape2,3)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|pointLight2|pointLightShape2,0,3,-1)
                >8 liqRibNode::parseVectorAttributes(pointLight2,,2)
                >8 liqRibNode::parseVectorAttributes(pointLight2,,3)
                >8 liqRibNode::parseVectorAttributes(pointLight2,,4)
                >8 liqRibNode::findShadingGroup(|pointLight2|pointLightShape2,3)
                >8 liqRibNode::findShader()
                >8 liqRibNode::findDisp()
                >8 liqRibNode::findVolume()
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|pointLight2|pointLightShape2,3)
                  >9 liqRibLightData::liqRibLightData(|pointLight2|pointLightShape2)
                    >10 liqRibData::addAdditionalSurfaceParameters(pointLightShape2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
          >5 tLocatorMgr::scanScene(5,0,htable__,count__,returnStatus__)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,5,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,5,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,5,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,5,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,5,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,5,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,5,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,5,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,5,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,5,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,5,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,5,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,5,0,&count)
            >6 liqRibHT::insert(|pPlane2|pPlaneShape11,lframe,0,0,2,matrix,,-1)
              >7 liqRibHT::hash(|pPlane2|pPlaneShape11,2)
              >7 liqRibHT::find(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|pPlane2|pPlaneShape11,0,0,-1)
                >8 liqRibNode::parseVectorAttributes(pPlane2,,2)
                >8 liqRibNode::parseVectorAttributes(pPlane2,,3)
                >8 liqRibNode::parseVectorAttributes(pPlane2,,4)
                >8 liqRibNode::findShadingGroup(|pPlane2|pPlaneShape11,0)
                >8 liqRibNode::findShader()
                >8 liqRibNode::findDisp()
                >8 liqRibNode::findVolume()
                >8 liqRibNode::getColor(&shader,&color)
                >8 liqRibNode::getOpacity(&shader,&color)
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|pPlane2|pPlaneShape11,0)
                  >9 liqRibMeshData::liqRibMeshData(|pPlane2|pPlaneShape11)
                    >10 liqRibData::addAdditionalSurfaceParameters(pPlaneShape11)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,5,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,5,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,5,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,5,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,5,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,5,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,5,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,5,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,5,0,&count)
            >6 liqRibHT::insert(|camera1_group|camera1_aim|camera1_aimShape,lframe,0,0,3,matrix,,-1)
              >7 liqRibHT::hash(|camera1_group|camera1_aim|camera1_aimShape,3)
              >7 liqRibHT::find(|camera1_group|camera1_aim|camera1_aimShape,|camera1_group|camera1_aim|camera1_aimShape,0)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|camera1_group|camera1_aim|camera1_aimShape,0,0,-1)
                >8 liqRibNode::parseVectorAttributes(camera1_aim,,2)
                >8 liqRibNode::parseVectorAttributes(camera1_aim,,3)
                >8 liqRibNode::parseVectorAttributes(camera1_aim,,4)
                >8 liqRibNode::findShadingGroup(|camera1_group|camera1_aim|camera1_aimShape,0)
                >8 liqRibNode::findShader()
                >8 liqRibNode::findDisp()
                >8 liqRibNode::findVolume()
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|camera1_group|camera1_aim|camera1_aimShape,0)
          >5 liqRibTranslatorNew::dealwithParticleInstancedObjects(0,5,4)
          >5 liqRibTranslatorNew::getCameraData(iter__,0)
            >6 liqRibTranslator::getCameraInfo(|camera1_group|camera1|cameraShape1,)
              >7 liqRibTranslator::portFieldOfView(224,150,&horizontal,&vertical,&fnCamera)
                >8 liqRibTranslator::computeViewingFrustum(1.49333,,&left,&right,&bottom,&top,|camera1_group|camera1|cameraShape1)
            >6 liqRibTranslator::getCameraFilmOffset(|camera1_group|camera1|cameraShape1,)
            >6 liqRibTranslator::getCameraTransform(|camera1_group|camera1|cameraShape1,)
        >4 liqRibTranslatorNew::doTextures(size=0)
          >5 Renderer::frameEpilogue(txtList_.size=0)
        >4 liqRibTranslatorNew::doShadows(size=0)
          >5 Renderer::doShadows(shadowList_.size=0)
        >4 Renderer::setRenderScriptFormatAndCompress(0,0)
        >4 Renderer::isHeroPassReady(cameraShape1)
        >4 Renderer::HeroPassBegin(cameraShape1)
        >4 tHeroRibWriterMgr::write(liqglo___,cameraShape1,5,0)
          >5 liqRibTranslatorNew::ribPrologue__(cameraShape1)
            >6 Renderer::ribPrologue_begin(cameraShape1)
              >7 Renderer::dummyPhongShader()
            >6 Renderer::ribPrologue_comment(2.3.5 (buildtime=20:51:12.30),R:/MyDocuments/maya/projects/default/checker_anim,yaoyansi,time)
            >6 Renderer::ribPrologue_options(cameraShape1)
          >5 liqRibTranslatorNew::framePrologue__(5,cameraShape1)
            >6 Renderer::framePrologue(5,cameraShape1)
              >7 Renderer::framePrologue_camera(5,cameraShape1)
                >8 Renderer::gatherCameraShaders(cameraShaders.size=0,|camera1_group|camera1|cameraShape1,liqEnvironmentShader)
                >8 Renderer::cameraOutput(cameraShape1)
          >5 ShaderMgr::exportShaderGraph()
            >6 ConvertShadingNetwork::exportShaderGraph()
              >7 ConvertShadingNetwork::beforeExport()
              >7 ConvertShadingNetwork::__export()
                >8 ConvertShadingNetwork::canShadingGroupExported(phong1SG)
                >8 Renderer::getValidShaderPlugsInShadingGroup()
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,surfaceShader)
                  >9 ConvertShadingNetwork::canShaderExported(phong1)
                  >9 ConvertShadingNetwork::exportShaderBegin(phong1)
                  >9 ConvertShadingNetwork::convertShadingNetworkToRSL(phong1,surfaceShader)
                    >10 Visitor::initShaderData(phong1,surfaceShader)
                    >10 ConvertShadingNetwork::getUpstreamConvertibleNodes(phong1, nodes, numConnections)
                      >11 ConvertShadingNetwork::nodeIsConvertible(phong1)
                        >12 ShaderMgr::hasShaderType(phong)
                      >11 ShaderMgr::getValidConnection(phong1)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.colorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.colorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.colorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.colorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.colorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.colorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.color)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                        >12 ConvertShadingNetwork::nodeIsConvertible(checker1)
                          >13 ShaderMgr::hasShaderType(checker)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.transparencyR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.transparencyG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.transparencyB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraX)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraX)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraY)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraY)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraZ)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraZ)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.specularColorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.specularColorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.specularColorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outColorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outColorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outColorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outColorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outColorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outColorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                        >12 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                          >13 ShaderMgr::hasShaderType(shadingEngine)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                      >11 ConvertShadingNetwork::getUpstreamConvertibleNodes(checker1, nodes, numConnections)
                        >12 ConvertShadingNetwork::nodeIsConvertible(checker1)
                          >13 ShaderMgr::hasShaderType(checker)
                        >12 ShaderMgr::getValidConnection(checker1)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1R)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1R)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1G)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1G)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1B)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1B)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2R)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2R)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2G)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2G)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2B)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2B)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.uCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.uCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.vCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.vCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                            >14 ShaderMgr::hasShaderType(place2dTexture)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                          >13 ConvertShadingNetwork::nodeIsConvertible(phong1)
                            >14 ShaderMgr::hasShaderType(phong)
                        >12 ConvertShadingNetwork::getUpstreamConvertibleNodes(place2dTexture1, nodes, numConnections)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                            >14 ShaderMgr::hasShaderType(place2dTexture)
                          >13 ShaderMgr::getValidConnection(place2dTexture1)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.vCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.vCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverage)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverage)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offset)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offset)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                              >15 ShaderMgr::hasShaderType(animCurveTU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                              >15 ShaderMgr::hasShaderType(animCurveTU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrame)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrame)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                            >14 ConvertShadingNetwork::nodeIsConvertible(checker1)
                              >15 ShaderMgr::hasShaderType(checker)
                    >10 Visitor::preOutput(phong1)
                    >10 Visitor::outputBegin(phong1)
                    >10 ConvertShadingNetwork::traverseGraphAndOutputNodeFunctions( nodes, numConnections)
                      >11 Visitor::outputUpstreamShader(place2dTexture1)
                        >12 ShaderOutputVisitor::_outputUpstreamShader(place2dTexture1,place2dTexture)
                          >13 Visitor::visitPlace2dTexture(place2dTexture1)
                            >14 OutputHelper::beginRSL(maya_place2dTexture,place2dTexture1)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.uvCoord)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.coverageU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.coverageV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.mirrorU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.mirrorV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.noiseU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.noiseV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.offsetU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.offsetV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.repeatU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                                >16 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                                  >17 ShaderMgr::hasShaderType(animCurveTU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.repeatV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                                >16 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                                  >17 ShaderMgr::hasShaderType(animCurveTU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.rotateFrame)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.rotateUV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.stagger)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.translateFrameU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.translateFrameV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.wrapU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.wrapV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.outUV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                                >16 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                  >17 ShaderMgr::hasShaderType(checker)
                            >14 OutputHelper::endRSL()
                      >11 ShaderMgr::getValidConnection(place2dTexture1)
                      >11 ConvertShadingNetwork::decrementDownstreamConnections(place2dTexture1, nodes, numConnections, validConnections)
                      >11 ConvertShadingNetwork::getNodeVariables(place2dTexture1, validConnections,  inputSrc, inputDes, outputSrc)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.vCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.vCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverage)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverage)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseUV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseUV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offset)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offset)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                            >14 ShaderMgr::hasShaderType(animCurveTU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                            >14 ShaderMgr::hasShaderType(animCurveTU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatUV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatUV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrame)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrame)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                        >12 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture1,outUV,place2dTexture1.outUV, outputVars)
                          >13 Visitor::addShaderMethodVariavles(place2dTexture1,outUV,float,2,)
                      >11 Visitor::addShaderMethodBody(place2dTexture1,,,place2dTexture1.outUV124)
                      >11 Visitor::outputUpstreamShader(checker1)
                        >12 ShaderOutputVisitor::_outputUpstreamShader(checker1,checker)
                          >13 Visitor::visitChecker(checker1)
                            >14 OutputHelper::beginRSL(maya_checker,checker1)
                            >14 ShaderMgr::convertibleConnection(checker1.alphaGain)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                            >14 ShaderMgr::convertibleConnection(checker1.alphaIsLuminance)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                            >14 ShaderMgr::convertibleConnection(checker1.alphaOffset)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                            >14 ShaderMgr::convertibleConnection(checker1.color1)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                            >14 ShaderMgr::convertibleConnection(checker1.color2)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                            >14 ShaderMgr::convertibleConnection(checker1.colorGain)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                            >14 ShaderMgr::convertibleConnection(checker1.colorOffset)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                            >14 ShaderMgr::convertibleConnection(checker1.contrast)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                            >14 ShaderMgr::convertibleConnection(checker1.defaultColor)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                            >14 ShaderMgr::convertibleConnection(checker1.filter)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                            >14 ShaderMgr::convertibleConnection(checker1.filterOffset)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                            >14 ShaderMgr::convertibleConnection(checker1.invert)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                            >14 ShaderMgr::convertibleConnection(checker1.uvCoord)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                                >16 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                                  >17 ShaderMgr::hasShaderType(place2dTexture)
                            >14 ShaderMgr::convertibleConnection(checker1.outAlpha)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                            >14 ShaderMgr::convertibleConnection(checker1.outColor)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                                >16 ConvertShadingNetwork::nodeIsConvertible(phong1)
                                  >17 ShaderMgr::hasShaderType(phong)
                            >14 OutputHelper::endRSL()
                      >11 ShaderMgr::getValidConnection(checker1)
                      >11 ConvertShadingNetwork::decrementDownstreamConnections(checker1, nodes, numConnections, validConnections)
                      >11 ConvertShadingNetwork::getNodeVariables(checker1, validConnections,  inputSrc, inputDes, outputSrc)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1R)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1R)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1G)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1G)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1B)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1B)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2R)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2R)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2G)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2G)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2B)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2B)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.uCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.uCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.vCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.vCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                            >14 ShaderMgr::hasShaderType(place2dTexture)
                        >12 ConvertShadingNetwork::addNodeInputVariable(checker1.uvCoord, inputSrc, inputDes)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                            >14 ShaderMgr::hasShaderType(place2dTexture)
                          >13 ShaderMgr::getValidConnection(place2dTexture1)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                          >13 ConvertShadingNetwork::nodeIsConvertible(phong1)
                            >14 ShaderMgr::hasShaderType(phong)
                        >12 ConvertShadingNetwork::addNodeOutputVariable(checker1,outColor,checker1.outColor, outputVars)
                          >13 Visitor::addShaderMethodVariavles(checker1,outColor,color,-1,)
                      >11 Visitor::addShaderMethodBody(checker1,place2dTexture1.outUV124,checker1.uvCoord124,checker1.outColor124)
                      >11 Visitor::outputUpstreamShader(phong1)
                        >12 ShaderOutputVisitor::_outputUpstreamShader(phong1,phong)
                          >13 Visitor::visitPhong(phong1)
                            >14 OutputHelper::beginRSL(maya_phong,phong1)
                            >14 ShaderMgr::convertibleConnection(phong1.color)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.color)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                                >16 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                  >17 ShaderMgr::hasShaderType(checker)
                            >14 ShaderMgr::convertibleConnection(phong1.transparency)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                            >14 ShaderMgr::convertibleConnection(phong1.ambientColor)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                            >14 ShaderMgr::convertibleConnection(phong1.incandescence)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                            >14 OutputHelper::add_liq_UserDefinedNormal(phong1)
                            >14 ShaderMgr::convertibleConnection(phong1.normalCamera)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                            >14 ShaderMgr::convertibleConnection(phong1.diffuse)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                            >14 ShaderMgr::convertibleConnection(phong1.translucence)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                            >14 ShaderMgr::convertibleConnection(phong1.translucenceDepth)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                            >14 ShaderMgr::convertibleConnection(phong1.translucenceFocus)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                            >14 ShaderMgr::convertibleConnection(phong1.cosinePower)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                            >14 ShaderMgr::convertibleConnection(phong1.specularColor)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                            >14 ShaderMgr::convertibleConnection(phong1.reflectivity)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                            >14 ShaderMgr::convertibleConnection(phong1.reflectedColor)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                            >14 ShaderMgr::convertibleConnection(phong1.matteOpacityMode)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                            >14 ShaderMgr::convertibleConnection(phong1.matteOpacity)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                            >14 ShaderMgr::convertibleConnection(phong1.reflectionLimit)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                            >14 ShaderMgr::convertibleConnection(phong1.outColor)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                                >16 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                                  >17 ShaderMgr::hasShaderType(shadingEngine)
                            >14 ShaderMgr::convertibleConnection(phong1.outTransparency)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                            >14 OutputHelper::endRSL()
                      >11 ShaderMgr::getValidConnection(phong1)
                      >11 ConvertShadingNetwork::decrementDownstreamConnections(phong1, nodes, numConnections, validConnections)
                      >11 ConvertShadingNetwork::getNodeVariables(phong1, validConnections,  inputSrc, inputDes, outputSrc)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.color)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                        >12 ConvertShadingNetwork::addNodeInputVariable(phong1.color, inputSrc, inputDes)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                          >13 ShaderMgr::getValidConnection(checker1)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraX)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraX)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraY)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraY)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraZ)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraZ)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                          >13 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                            >14 ShaderMgr::hasShaderType(shadingEngine)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                      >11 Visitor::addShaderMethodBody(phong1,checker1.outColor124,phong1.color124,)
                    >10 ConvertShadingNetwork::outputShaderMethod()
                      >11 Visitor::outputShaderMethod()
                    >10 Visitor::outputEnd()
                    >10 Visitor::postOutput()
                  >9 ConvertShadingNetwork::exportShaderEnd(phong1)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,displacementShader)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,volumeShader)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,liqShadowShader)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,liqEnvironmentShader)
                >8 ConvertShadingNetwork::exportShadingGroupBegin(phong1SG)
                >8 ConvertShadingNetwork::outputShadingGroup(phong1SG)
                  >9 Visitor::outputShadingGroup(phong1SG)
                >8 ConvertShadingNetwork::exportShadingGroupEnd(phong1SG)
              >7  ConvertShadingNetwork::afterExport()
          >5 liqRibTranslatorNew::worldPrologue__(cameraShape1)
            >6 Renderer::worldPrologue(cameraShape1)
          >5 liqRibTranslatorNew::lightBlock__(cameraShape1)
            >6 Renderer::writeLight_pre(|pointLight1|pointLightShape1,cameraShape1)
            >6 liqRibObj::writeObject(,cameraShape1,0)
              >7 liqRibLightData::write(,job=cameraShape1,0)
                >8 liqRibData::getFullPathName()
                >8 Renderer::write(|pointLight1|pointLightShape1,,cameraShape1,ref=0)
                  >9 liqRibData::getFullPathName()
                  >9 er_writeLightData.cpp::_write(|pointLight1|pointLightShape1,cameraShape1,...)
                    >10 Renderer::exportPointLight(pointlight,pointLightShape1,...)
                      >11 addLightGroupForLight(|pointLight1|pointLightShape1)
            >6 Renderer::writeLight_post(|pointLight1|pointLightShape1,cameraShape1)
            >6 Renderer::writeLight_pre(|pointLight2|pointLightShape2,cameraShape1)
            >6 liqRibObj::writeObject(,cameraShape1,0)
              >7 liqRibLightData::write(,job=cameraShape1,0)
                >8 liqRibData::getFullPathName()
                >8 Renderer::write(|pointLight2|pointLightShape2,,cameraShape1,ref=0)
                  >9 liqRibData::getFullPathName()
                  >9 er_writeLightData.cpp::_write(|pointLight2|pointLightShape2,cameraShape1,...)
                    >10 Renderer::exportPointLight(pointlight,pointLightShape2,...)
                      >11 addLightGroupForLight(|pointLight2|pointLightShape2)
            >6 Renderer::writeLight_post(|pointLight2|pointLightShape2,cameraShape1)
          >5 liqRibTranslatorNew::coordSysBlock__(cameraShape1)
            >6 Renderer::coordSysBlock__(cameraShape1)
          >5 liqRibTranslatorNew::objectBlock__(cameraShape1)
            >6 liqRibTranslatorNew::objectBlock_data(cameraShape1)
              >7 liqRibTranslatorNew::getShadowSetObject(cameraShape1)
              >7 liqRibTranslatorNew::oneObjectBlock_data(|pPlane2|pPlaneShape11,cameraShape1)
                >8 Renderer::exportOneObject_data(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::_writeObject(|pPlane2|pPlaneShape11,cameraShape1,0,0,0)
                    >10 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.5.rib,cameraShape1,0)
                      >11 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.5.rib,job=cameraShape1,0)
                        >12 liqRibData::getFullPathName()
                        >12 Renderer::write(|pPlane2|pPlaneShape11,R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.5.rib,cameraShape1,ref=0)
                          >13 liqRibData::getFullPathName()
                          >13 er_writeMeshData.cpp::_write1(|pPlane2|pPlaneShape11,cameraShape1)
                            >14 liqRibHT::find(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                            >14 _exportVertexFromNodePlug(|pPlane2|pPlaneShape11,0)
                            >14 liqRibData::getFullPathName()
            >6 liqRibTranslatorNew::objectBlock_reference(cameraShape1)
              >7 Renderer::objectBlock_reference_begin()
              >7 liqRibTranslatorNew::preGeometryMel()
                >8 Renderer::preGeometryMel()
              >7 liqRibTranslatorNew::getShadowSetObject(cameraShape1)
              >7 liqRibTranslatorNew::oneObjectBlock_reference(|pPlane2|pPlaneShape11,cameraShape1)
                >8 Renderer::oneObjectBlock_reference_attribute_begin(|pPlane2|pPlaneShape11,cameraShape1)
                >8 Renderer::oneObjectBlock_reference_attribute_block0(|pPlane2|pPlaneShape11,cameraShape1)
                >8 liqRibTranslatorNew::tRiIlluminate(cameraShape1,|pPlane2|pPlaneShape11)
                  >9 Renderer::exportLightLinks(cameraShape1,|pPlane2|pPlaneShape11,lightedByWhichLightShapes.size=2)
                >8 liqRibTranslatorNew::checkSurfaceShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                >8 liqRibTranslatorNew::checkDisplacementShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                >8 liqRibTranslatorNew::checkVolumeShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                >8 Renderer::oneObjectBlock_reference_attribute_block1(|pPlane2|pPlaneShape11,cameraShape1)
                >8 liqRibTranslatorNew::writeShader_(1,|pPlane2|pPlaneShape11,v=0,s=0,c=0,,|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                >8 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|pPlane2|pPlaneShape11)
                >8 Renderer::exportOneObject_reference(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 liqRibData::getFullPathName()
                  >9 liqRibData::getFullPathName()
                  >9 liqRibData::getFullPathName()
                >8 Renderer::oneObjectBlock_reference_attribute_end(|pPlane2|pPlaneShape11,cameraShape1)
              >7 Renderer::objectBlock_reference_end()
          >5 liqRibTranslatorNew::worldEpilogue__()
            >6 liqRibTranslator::worldEpilogue()
              >7 Renderer::worldEpilogue()
          >5 liqRibTranslatorNew::frameEpilogue__(5)
            >6 Renderer::frameEpilogue(5)
          >5 liqRibTranslatorNew::ribEpilogue__(cameraShape1)
            >6 Renderer::ribPrologue_end(cameraShape1)
              >7 Renderer::cookInstanceGroup()
              >7 Renderer::render()
        >4 Renderer::HeroPassEnd(cameraShape1)
      >3 liqRenderScript::addJob(job.title=checker_animFrame4,0)
        >4 liqRenderScript::popNextJobID()
      >3 tFrameScriptJobMgr::setCommonParameters(checker_animFrame5)
      >3 liqRibTranslatorNew::processOneFrame(5, liqglo__)
        >4 liqRibTranslatorNew::buildJobs__()
          >5 liqRibTranslatorNew::buildShadowJobs__()
            >6 tJobScriptMgr::buildShadowJob(thisJob___, 0)
            >6 tJobScriptMgr::buildShadowCameraJob(thisJob___, 0)
          >5 tRibCameraMgr::gatherDataForJob(liqglo___, ,jobList__,0,1)
          >5 liqRibTranslator::generateFileName(4,cameraShape1)
          >5 liqRibTranslator::generateFileName(5,cameraShape1)
            >6 liqRibTranslator::generateImageName(, job(cameraShape1)), 
        >4 liqRibTranslatorNew::calaculateSamplingTime(6)
        >4 liqRibTranslatorNew::scanScene__(6,0)
          >5 tJobScriptMgr::scanScene(6,0, htable__, count, returnStatus__)
            >6 liqRibHT::insert(|pointLight1|pointLightShape1,lframe,0,3,0,matrix,,-1)
              >7 liqRibHT::hash(|pointLight1|pointLightShape1,0)
              >7 liqRibHT::find(|pointLight1|pointLightShape1,|pointLight1|pointLightShape1,3)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|pointLight1|pointLightShape1,0,3,-1)
                >8 liqRibNode::parseVectorAttributes(pointLight1,,2)
                >8 liqRibNode::parseVectorAttributes(pointLight1,,3)
                >8 liqRibNode::parseVectorAttributes(pointLight1,,4)
                >8 liqRibNode::findShadingGroup(|pointLight1|pointLightShape1,3)
                >8 liqRibNode::findShader()
                >8 liqRibNode::findDisp()
                >8 liqRibNode::findVolume()
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|pointLight1|pointLightShape1,3)
                  >9 liqRibLightData::liqRibLightData(|pointLight1|pointLightShape1)
                    >10 liqRibData::addAdditionalSurfaceParameters(pointLightShape1)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 liqRibHT::insert(|pointLight2|pointLightShape2,lframe,0,3,1,matrix,,-1)
              >7 liqRibHT::hash(|pointLight2|pointLightShape2,1)
              >7 liqRibHT::find(|pointLight2|pointLightShape2,|pointLight2|pointLightShape2,3)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|pointLight2|pointLightShape2,0,3,-1)
                >8 liqRibNode::parseVectorAttributes(pointLight2,,2)
                >8 liqRibNode::parseVectorAttributes(pointLight2,,3)
                >8 liqRibNode::parseVectorAttributes(pointLight2,,4)
                >8 liqRibNode::findShadingGroup(|pointLight2|pointLightShape2,3)
                >8 liqRibNode::findShader()
                >8 liqRibNode::findDisp()
                >8 liqRibNode::findVolume()
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|pointLight2|pointLightShape2,3)
                  >9 liqRibLightData::liqRibLightData(|pointLight2|pointLightShape2)
                    >10 liqRibData::addAdditionalSurfaceParameters(pointLightShape2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
          >5 tLocatorMgr::scanScene(6,0,htable__,count__,returnStatus__)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
            >6 liqRibHT::insert(|pPlane2|pPlaneShape11,lframe,0,0,2,matrix,,-1)
              >7 liqRibHT::hash(|pPlane2|pPlaneShape11,2)
              >7 liqRibHT::find(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|pPlane2|pPlaneShape11,0,0,-1)
                >8 liqRibNode::parseVectorAttributes(pPlane2,,2)
                >8 liqRibNode::parseVectorAttributes(pPlane2,,3)
                >8 liqRibNode::parseVectorAttributes(pPlane2,,4)
                >8 liqRibNode::findShadingGroup(|pPlane2|pPlaneShape11,0)
                >8 liqRibNode::findShader()
                >8 liqRibNode::findDisp()
                >8 liqRibNode::findVolume()
                >8 liqRibNode::getColor(&shader,&color)
                >8 liqRibNode::getOpacity(&shader,&color)
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|pPlane2|pPlaneShape11,0)
                  >9 liqRibMeshData::liqRibMeshData(|pPlane2|pPlaneShape11)
                    >10 liqRibData::addAdditionalSurfaceParameters(pPlaneShape11)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
            >6 liqRibHT::insert(|camera1_group|camera1_aim|camera1_aimShape,lframe,0,0,3,matrix,,-1)
              >7 liqRibHT::hash(|camera1_group|camera1_aim|camera1_aimShape,3)
              >7 liqRibHT::find(|camera1_group|camera1_aim|camera1_aimShape,|camera1_group|camera1_aim|camera1_aimShape,0)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|camera1_group|camera1_aim|camera1_aimShape,0,0,-1)
                >8 liqRibNode::parseVectorAttributes(camera1_aim,,2)
                >8 liqRibNode::parseVectorAttributes(camera1_aim,,3)
                >8 liqRibNode::parseVectorAttributes(camera1_aim,,4)
                >8 liqRibNode::findShadingGroup(|camera1_group|camera1_aim|camera1_aimShape,0)
                >8 liqRibNode::findShader()
                >8 liqRibNode::findDisp()
                >8 liqRibNode::findVolume()
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|camera1_group|camera1_aim|camera1_aimShape,0)
          >5 liqRibTranslatorNew::dealwithParticleInstancedObjects(0,6,4)
          >5 liqRibTranslatorNew::getCameraData(iter__,0)
            >6 liqRibTranslator::getCameraInfo(|camera1_group|camera1|cameraShape1,)
              >7 liqRibTranslator::portFieldOfView(224,150,&horizontal,&vertical,&fnCamera)
                >8 liqRibTranslator::computeViewingFrustum(1.49333,,&left,&right,&bottom,&top,|camera1_group|camera1|cameraShape1)
            >6 liqRibTranslator::getCameraFilmOffset(|camera1_group|camera1|cameraShape1,)
            >6 liqRibTranslator::getCameraTransform(|camera1_group|camera1|cameraShape1,)
        >4 liqRibTranslatorNew::doTextures(size=0)
          >5 Renderer::frameEpilogue(txtList_.size=0)
        >4 liqRibTranslatorNew::doShadows(size=0)
          >5 Renderer::doShadows(shadowList_.size=0)
        >4 Renderer::setRenderScriptFormatAndCompress(0,0)
        >4 Renderer::isHeroPassReady(cameraShape1)
        >4 Renderer::HeroPassBegin(cameraShape1)
        >4 tHeroRibWriterMgr::write(liqglo___,cameraShape1,6,0)
          >5 liqRibTranslatorNew::ribPrologue__(cameraShape1)
            >6 Renderer::ribPrologue_begin(cameraShape1)
              >7 Renderer::dummyPhongShader()
            >6 Renderer::ribPrologue_comment(2.3.5 (buildtime=20:51:12.30),R:/MyDocuments/maya/projects/default/checker_anim,yaoyansi,time)
            >6 Renderer::ribPrologue_options(cameraShape1)
          >5 liqRibTranslatorNew::framePrologue__(6,cameraShape1)
            >6 Renderer::framePrologue(6,cameraShape1)
              >7 Renderer::framePrologue_camera(6,cameraShape1)
                >8 Renderer::gatherCameraShaders(cameraShaders.size=0,|camera1_group|camera1|cameraShape1,liqEnvironmentShader)
                >8 Renderer::cameraOutput(cameraShape1)
          >5 ShaderMgr::exportShaderGraph()
            >6 ConvertShadingNetwork::exportShaderGraph()
              >7 ConvertShadingNetwork::beforeExport()
              >7 ConvertShadingNetwork::__export()
                >8 ConvertShadingNetwork::canShadingGroupExported(phong1SG)
                >8 Renderer::getValidShaderPlugsInShadingGroup()
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,surfaceShader)
                  >9 ConvertShadingNetwork::canShaderExported(phong1)
                  >9 ConvertShadingNetwork::exportShaderBegin(phong1)
                  >9 ConvertShadingNetwork::convertShadingNetworkToRSL(phong1,surfaceShader)
                    >10 Visitor::initShaderData(phong1,surfaceShader)
                    >10 ConvertShadingNetwork::getUpstreamConvertibleNodes(phong1, nodes, numConnections)
                      >11 ConvertShadingNetwork::nodeIsConvertible(phong1)
                        >12 ShaderMgr::hasShaderType(phong)
                      >11 ShaderMgr::getValidConnection(phong1)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.colorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.colorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.colorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.colorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.colorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.colorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.color)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                        >12 ConvertShadingNetwork::nodeIsConvertible(checker1)
                          >13 ShaderMgr::hasShaderType(checker)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.transparencyR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.transparencyG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.transparencyB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraX)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraX)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraY)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraY)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraZ)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraZ)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.specularColorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.specularColorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.specularColorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outColorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outColorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outColorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outColorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outColorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outColorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                        >12 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                          >13 ShaderMgr::hasShaderType(shadingEngine)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                      >11 ConvertShadingNetwork::getUpstreamConvertibleNodes(checker1, nodes, numConnections)
                        >12 ConvertShadingNetwork::nodeIsConvertible(checker1)
                          >13 ShaderMgr::hasShaderType(checker)
                        >12 ShaderMgr::getValidConnection(checker1)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1R)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1R)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1G)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1G)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1B)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1B)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2R)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2R)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2G)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2G)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2B)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2B)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.uCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.uCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.vCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.vCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                            >14 ShaderMgr::hasShaderType(place2dTexture)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                          >13 ConvertShadingNetwork::nodeIsConvertible(phong1)
                            >14 ShaderMgr::hasShaderType(phong)
                        >12 ConvertShadingNetwork::getUpstreamConvertibleNodes(place2dTexture1, nodes, numConnections)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                            >14 ShaderMgr::hasShaderType(place2dTexture)
                          >13 ShaderMgr::getValidConnection(place2dTexture1)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.vCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.vCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverage)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverage)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offset)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offset)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                              >15 ShaderMgr::hasShaderType(animCurveTU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                              >15 ShaderMgr::hasShaderType(animCurveTU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrame)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrame)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                            >14 ConvertShadingNetwork::nodeIsConvertible(checker1)
                              >15 ShaderMgr::hasShaderType(checker)
                    >10 Visitor::preOutput(phong1)
                    >10 Visitor::outputBegin(phong1)
                    >10 ConvertShadingNetwork::traverseGraphAndOutputNodeFunctions( nodes, numConnections)
                      >11 Visitor::outputUpstreamShader(place2dTexture1)
                        >12 ShaderOutputVisitor::_outputUpstreamShader(place2dTexture1,place2dTexture)
                          >13 Visitor::visitPlace2dTexture(place2dTexture1)
                            >14 OutputHelper::beginRSL(maya_place2dTexture,place2dTexture1)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.uvCoord)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.coverageU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.coverageV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.mirrorU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.mirrorV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.noiseU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.noiseV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.offsetU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.offsetV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.repeatU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                                >16 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                                  >17 ShaderMgr::hasShaderType(animCurveTU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.repeatV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                                >16 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                                  >17 ShaderMgr::hasShaderType(animCurveTU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.rotateFrame)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.rotateUV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.stagger)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.translateFrameU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.translateFrameV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.wrapU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.wrapV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.outUV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                                >16 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                  >17 ShaderMgr::hasShaderType(checker)
                            >14 OutputHelper::endRSL()
                      >11 ShaderMgr::getValidConnection(place2dTexture1)
                      >11 ConvertShadingNetwork::decrementDownstreamConnections(place2dTexture1, nodes, numConnections, validConnections)
                      >11 ConvertShadingNetwork::getNodeVariables(place2dTexture1, validConnections,  inputSrc, inputDes, outputSrc)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.vCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.vCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverage)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverage)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseUV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseUV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offset)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offset)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                            >14 ShaderMgr::hasShaderType(animCurveTU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                            >14 ShaderMgr::hasShaderType(animCurveTU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatUV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatUV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrame)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrame)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                        >12 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture1,outUV,place2dTexture1.outUV, outputVars)
                          >13 Visitor::addShaderMethodVariavles(place2dTexture1,outUV,float,2,)
                      >11 Visitor::addShaderMethodBody(place2dTexture1,,,place2dTexture1.outUV124)
                      >11 Visitor::outputUpstreamShader(checker1)
                        >12 ShaderOutputVisitor::_outputUpstreamShader(checker1,checker)
                          >13 Visitor::visitChecker(checker1)
                            >14 OutputHelper::beginRSL(maya_checker,checker1)
                            >14 ShaderMgr::convertibleConnection(checker1.alphaGain)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                            >14 ShaderMgr::convertibleConnection(checker1.alphaIsLuminance)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                            >14 ShaderMgr::convertibleConnection(checker1.alphaOffset)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                            >14 ShaderMgr::convertibleConnection(checker1.color1)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                            >14 ShaderMgr::convertibleConnection(checker1.color2)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                            >14 ShaderMgr::convertibleConnection(checker1.colorGain)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                            >14 ShaderMgr::convertibleConnection(checker1.colorOffset)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                            >14 ShaderMgr::convertibleConnection(checker1.contrast)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                            >14 ShaderMgr::convertibleConnection(checker1.defaultColor)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                            >14 ShaderMgr::convertibleConnection(checker1.filter)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                            >14 ShaderMgr::convertibleConnection(checker1.filterOffset)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                            >14 ShaderMgr::convertibleConnection(checker1.invert)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                            >14 ShaderMgr::convertibleConnection(checker1.uvCoord)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                                >16 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                                  >17 ShaderMgr::hasShaderType(place2dTexture)
                            >14 ShaderMgr::convertibleConnection(checker1.outAlpha)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                            >14 ShaderMgr::convertibleConnection(checker1.outColor)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                                >16 ConvertShadingNetwork::nodeIsConvertible(phong1)
                                  >17 ShaderMgr::hasShaderType(phong)
                            >14 OutputHelper::endRSL()
                      >11 ShaderMgr::getValidConnection(checker1)
                      >11 ConvertShadingNetwork::decrementDownstreamConnections(checker1, nodes, numConnections, validConnections)
                      >11 ConvertShadingNetwork::getNodeVariables(checker1, validConnections,  inputSrc, inputDes, outputSrc)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1R)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1R)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1G)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1G)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1B)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1B)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2R)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2R)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2G)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2G)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2B)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2B)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.uCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.uCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.vCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.vCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                            >14 ShaderMgr::hasShaderType(place2dTexture)
                        >12 ConvertShadingNetwork::addNodeInputVariable(checker1.uvCoord, inputSrc, inputDes)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                            >14 ShaderMgr::hasShaderType(place2dTexture)
                          >13 ShaderMgr::getValidConnection(place2dTexture1)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                          >13 ConvertShadingNetwork::nodeIsConvertible(phong1)
                            >14 ShaderMgr::hasShaderType(phong)
                        >12 ConvertShadingNetwork::addNodeOutputVariable(checker1,outColor,checker1.outColor, outputVars)
                          >13 Visitor::addShaderMethodVariavles(checker1,outColor,color,-1,)
                      >11 Visitor::addShaderMethodBody(checker1,place2dTexture1.outUV124,checker1.uvCoord124,checker1.outColor124)
                      >11 Visitor::outputUpstreamShader(phong1)
                        >12 ShaderOutputVisitor::_outputUpstreamShader(phong1,phong)
                          >13 Visitor::visitPhong(phong1)
                            >14 OutputHelper::beginRSL(maya_phong,phong1)
                            >14 ShaderMgr::convertibleConnection(phong1.color)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.color)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                                >16 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                  >17 ShaderMgr::hasShaderType(checker)
                            >14 ShaderMgr::convertibleConnection(phong1.transparency)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                            >14 ShaderMgr::convertibleConnection(phong1.ambientColor)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                            >14 ShaderMgr::convertibleConnection(phong1.incandescence)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                            >14 OutputHelper::add_liq_UserDefinedNormal(phong1)
                            >14 ShaderMgr::convertibleConnection(phong1.normalCamera)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                            >14 ShaderMgr::convertibleConnection(phong1.diffuse)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                            >14 ShaderMgr::convertibleConnection(phong1.translucence)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                            >14 ShaderMgr::convertibleConnection(phong1.translucenceDepth)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                            >14 ShaderMgr::convertibleConnection(phong1.translucenceFocus)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                            >14 ShaderMgr::convertibleConnection(phong1.cosinePower)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                            >14 ShaderMgr::convertibleConnection(phong1.specularColor)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                            >14 ShaderMgr::convertibleConnection(phong1.reflectivity)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                            >14 ShaderMgr::convertibleConnection(phong1.reflectedColor)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                            >14 ShaderMgr::convertibleConnection(phong1.matteOpacityMode)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                            >14 ShaderMgr::convertibleConnection(phong1.matteOpacity)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                            >14 ShaderMgr::convertibleConnection(phong1.reflectionLimit)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                            >14 ShaderMgr::convertibleConnection(phong1.outColor)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                                >16 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                                  >17 ShaderMgr::hasShaderType(shadingEngine)
                            >14 ShaderMgr::convertibleConnection(phong1.outTransparency)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                            >14 OutputHelper::endRSL()
                      >11 ShaderMgr::getValidConnection(phong1)
                      >11 ConvertShadingNetwork::decrementDownstreamConnections(phong1, nodes, numConnections, validConnections)
                      >11 ConvertShadingNetwork::getNodeVariables(phong1, validConnections,  inputSrc, inputDes, outputSrc)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.color)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                        >12 ConvertShadingNetwork::addNodeInputVariable(phong1.color, inputSrc, inputDes)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                          >13 ShaderMgr::getValidConnection(checker1)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraX)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraX)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraY)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraY)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraZ)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraZ)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                          >13 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                            >14 ShaderMgr::hasShaderType(shadingEngine)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                      >11 Visitor::addShaderMethodBody(phong1,checker1.outColor124,phong1.color124,)
                    >10 ConvertShadingNetwork::outputShaderMethod()
                      >11 Visitor::outputShaderMethod()
                    >10 Visitor::outputEnd()
                    >10 Visitor::postOutput()
                  >9 ConvertShadingNetwork::exportShaderEnd(phong1)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,displacementShader)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,volumeShader)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,liqShadowShader)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,liqEnvironmentShader)
                >8 ConvertShadingNetwork::exportShadingGroupBegin(phong1SG)
                >8 ConvertShadingNetwork::outputShadingGroup(phong1SG)
                  >9 Visitor::outputShadingGroup(phong1SG)
                >8 ConvertShadingNetwork::exportShadingGroupEnd(phong1SG)
              >7  ConvertShadingNetwork::afterExport()
          >5 liqRibTranslatorNew::worldPrologue__(cameraShape1)
            >6 Renderer::worldPrologue(cameraShape1)
          >5 liqRibTranslatorNew::lightBlock__(cameraShape1)
            >6 Renderer::writeLight_pre(|pointLight1|pointLightShape1,cameraShape1)
            >6 liqRibObj::writeObject(,cameraShape1,0)
              >7 liqRibLightData::write(,job=cameraShape1,0)
                >8 liqRibData::getFullPathName()
                >8 Renderer::write(|pointLight1|pointLightShape1,,cameraShape1,ref=0)
                  >9 liqRibData::getFullPathName()
                  >9 er_writeLightData.cpp::_write(|pointLight1|pointLightShape1,cameraShape1,...)
                    >10 Renderer::exportPointLight(pointlight,pointLightShape1,...)
                      >11 addLightGroupForLight(|pointLight1|pointLightShape1)
            >6 Renderer::writeLight_post(|pointLight1|pointLightShape1,cameraShape1)
            >6 Renderer::writeLight_pre(|pointLight2|pointLightShape2,cameraShape1)
            >6 liqRibObj::writeObject(,cameraShape1,0)
              >7 liqRibLightData::write(,job=cameraShape1,0)
                >8 liqRibData::getFullPathName()
                >8 Renderer::write(|pointLight2|pointLightShape2,,cameraShape1,ref=0)
                  >9 liqRibData::getFullPathName()
                  >9 er_writeLightData.cpp::_write(|pointLight2|pointLightShape2,cameraShape1,...)
                    >10 Renderer::exportPointLight(pointlight,pointLightShape2,...)
                      >11 addLightGroupForLight(|pointLight2|pointLightShape2)
            >6 Renderer::writeLight_post(|pointLight2|pointLightShape2,cameraShape1)
          >5 liqRibTranslatorNew::coordSysBlock__(cameraShape1)
            >6 Renderer::coordSysBlock__(cameraShape1)
          >5 liqRibTranslatorNew::objectBlock__(cameraShape1)
            >6 liqRibTranslatorNew::objectBlock_data(cameraShape1)
              >7 liqRibTranslatorNew::getShadowSetObject(cameraShape1)
              >7 liqRibTranslatorNew::oneObjectBlock_data(|pPlane2|pPlaneShape11,cameraShape1)
                >8 Renderer::exportOneObject_data(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::_writeObject(|pPlane2|pPlaneShape11,cameraShape1,0,0,0)
                    >10 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.6.rib,cameraShape1,0)
                      >11 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.6.rib,job=cameraShape1,0)
                        >12 liqRibData::getFullPathName()
                        >12 Renderer::write(|pPlane2|pPlaneShape11,R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.6.rib,cameraShape1,ref=0)
                          >13 liqRibData::getFullPathName()
                          >13 er_writeMeshData.cpp::_write1(|pPlane2|pPlaneShape11,cameraShape1)
                            >14 liqRibHT::find(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                            >14 _exportVertexFromNodePlug(|pPlane2|pPlaneShape11,0)
                            >14 liqRibData::getFullPathName()
            >6 liqRibTranslatorNew::objectBlock_reference(cameraShape1)
              >7 Renderer::objectBlock_reference_begin()
              >7 liqRibTranslatorNew::preGeometryMel()
                >8 Renderer::preGeometryMel()
              >7 liqRibTranslatorNew::getShadowSetObject(cameraShape1)
              >7 liqRibTranslatorNew::oneObjectBlock_reference(|pPlane2|pPlaneShape11,cameraShape1)
                >8 Renderer::oneObjectBlock_reference_attribute_begin(|pPlane2|pPlaneShape11,cameraShape1)
                >8 Renderer::oneObjectBlock_reference_attribute_block0(|pPlane2|pPlaneShape11,cameraShape1)
                >8 liqRibTranslatorNew::tRiIlluminate(cameraShape1,|pPlane2|pPlaneShape11)
                  >9 Renderer::exportLightLinks(cameraShape1,|pPlane2|pPlaneShape11,lightedByWhichLightShapes.size=2)
                >8 liqRibTranslatorNew::checkSurfaceShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                >8 liqRibTranslatorNew::checkDisplacementShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                >8 liqRibTranslatorNew::checkVolumeShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                >8 Renderer::oneObjectBlock_reference_attribute_block1(|pPlane2|pPlaneShape11,cameraShape1)
                >8 liqRibTranslatorNew::writeShader_(1,|pPlane2|pPlaneShape11,v=0,s=0,c=0,,|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                >8 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|pPlane2|pPlaneShape11)
                >8 Renderer::exportOneObject_reference(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 liqRibData::getFullPathName()
                  >9 liqRibData::getFullPathName()
                  >9 liqRibData::getFullPathName()
                >8 Renderer::oneObjectBlock_reference_attribute_end(|pPlane2|pPlaneShape11,cameraShape1)
              >7 Renderer::objectBlock_reference_end()
          >5 liqRibTranslatorNew::worldEpilogue__()
            >6 liqRibTranslator::worldEpilogue()
              >7 Renderer::worldEpilogue()
          >5 liqRibTranslatorNew::frameEpilogue__(6)
            >6 Renderer::frameEpilogue(6)
          >5 liqRibTranslatorNew::ribEpilogue__(cameraShape1)
            >6 Renderer::ribPrologue_end(cameraShape1)
              >7 Renderer::cookInstanceGroup()
              >7 Renderer::render()
        >4 Renderer::HeroPassEnd(cameraShape1)
      >3 liqRenderScript::addJob(job.title=checker_animFrame5,0)
        >4 liqRenderScript::popNextJobID()
      >3 tFrameScriptJobMgr::setCommonParameters(checker_animFrame6)
      >3 liqRibTranslatorNew::processOneFrame(6, liqglo__)
        >4 liqRibTranslatorNew::buildJobs__()
          >5 liqRibTranslatorNew::buildShadowJobs__()
            >6 tJobScriptMgr::buildShadowJob(thisJob___, 0)
            >6 tJobScriptMgr::buildShadowCameraJob(thisJob___, 0)
          >5 tRibCameraMgr::gatherDataForJob(liqglo___, ,jobList__,0,1)
          >5 liqRibTranslator::generateFileName(4,cameraShape1)
          >5 liqRibTranslator::generateFileName(5,cameraShape1)
            >6 liqRibTranslator::generateImageName(, job(cameraShape1)), 
        >4 liqRibTranslatorNew::calaculateSamplingTime(7)
        >4 liqRibTranslatorNew::scanScene__(7,0)
          >5 tJobScriptMgr::scanScene(7,0, htable__, count, returnStatus__)
            >6 liqRibHT::insert(|pointLight1|pointLightShape1,lframe,0,3,0,matrix,,-1)
              >7 liqRibHT::hash(|pointLight1|pointLightShape1,0)
              >7 liqRibHT::find(|pointLight1|pointLightShape1,|pointLight1|pointLightShape1,3)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|pointLight1|pointLightShape1,0,3,-1)
                >8 liqRibNode::parseVectorAttributes(pointLight1,,2)
                >8 liqRibNode::parseVectorAttributes(pointLight1,,3)
                >8 liqRibNode::parseVectorAttributes(pointLight1,,4)
                >8 liqRibNode::findShadingGroup(|pointLight1|pointLightShape1,3)
                >8 liqRibNode::findShader()
                >8 liqRibNode::findDisp()
                >8 liqRibNode::findVolume()
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|pointLight1|pointLightShape1,3)
                  >9 liqRibLightData::liqRibLightData(|pointLight1|pointLightShape1)
                    >10 liqRibData::addAdditionalSurfaceParameters(pointLightShape1)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 liqRibHT::insert(|pointLight2|pointLightShape2,lframe,0,3,1,matrix,,-1)
              >7 liqRibHT::hash(|pointLight2|pointLightShape2,1)
              >7 liqRibHT::find(|pointLight2|pointLightShape2,|pointLight2|pointLightShape2,3)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|pointLight2|pointLightShape2,0,3,-1)
                >8 liqRibNode::parseVectorAttributes(pointLight2,,2)
                >8 liqRibNode::parseVectorAttributes(pointLight2,,3)
                >8 liqRibNode::parseVectorAttributes(pointLight2,,4)
                >8 liqRibNode::findShadingGroup(|pointLight2|pointLightShape2,3)
                >8 liqRibNode::findShader()
                >8 liqRibNode::findDisp()
                >8 liqRibNode::findVolume()
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|pointLight2|pointLightShape2,3)
                  >9 liqRibLightData::liqRibLightData(|pointLight2|pointLightShape2)
                    >10 liqRibData::addAdditionalSurfaceParameters(pointLightShape2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
          >5 tLocatorMgr::scanScene(7,0,htable__,count__,returnStatus__)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,7,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,7,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,7,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,7,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,7,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,7,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,7,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,7,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,7,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,7,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,7,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,7,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,7,0,&count)
            >6 liqRibHT::insert(|pPlane2|pPlaneShape11,lframe,0,0,2,matrix,,-1)
              >7 liqRibHT::hash(|pPlane2|pPlaneShape11,2)
              >7 liqRibHT::find(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|pPlane2|pPlaneShape11,0,0,-1)
                >8 liqRibNode::parseVectorAttributes(pPlane2,,2)
                >8 liqRibNode::parseVectorAttributes(pPlane2,,3)
                >8 liqRibNode::parseVectorAttributes(pPlane2,,4)
                >8 liqRibNode::findShadingGroup(|pPlane2|pPlaneShape11,0)
                >8 liqRibNode::findShader()
                >8 liqRibNode::findDisp()
                >8 liqRibNode::findVolume()
                >8 liqRibNode::getColor(&shader,&color)
                >8 liqRibNode::getOpacity(&shader,&color)
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|pPlane2|pPlaneShape11,0)
                  >9 liqRibMeshData::liqRibMeshData(|pPlane2|pPlaneShape11)
                    >10 liqRibData::addAdditionalSurfaceParameters(pPlaneShape11)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,7,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,7,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,7,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,7,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,7,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,7,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,7,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,7,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,7,0,&count)
            >6 liqRibHT::insert(|camera1_group|camera1_aim|camera1_aimShape,lframe,0,0,3,matrix,,-1)
              >7 liqRibHT::hash(|camera1_group|camera1_aim|camera1_aimShape,3)
              >7 liqRibHT::find(|camera1_group|camera1_aim|camera1_aimShape,|camera1_group|camera1_aim|camera1_aimShape,0)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|camera1_group|camera1_aim|camera1_aimShape,0,0,-1)
                >8 liqRibNode::parseVectorAttributes(camera1_aim,,2)
                >8 liqRibNode::parseVectorAttributes(camera1_aim,,3)
                >8 liqRibNode::parseVectorAttributes(camera1_aim,,4)
                >8 liqRibNode::findShadingGroup(|camera1_group|camera1_aim|camera1_aimShape,0)
                >8 liqRibNode::findShader()
                >8 liqRibNode::findDisp()
                >8 liqRibNode::findVolume()
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|camera1_group|camera1_aim|camera1_aimShape,0)
          >5 liqRibTranslatorNew::dealwithParticleInstancedObjects(0,7,4)
          >5 liqRibTranslatorNew::getCameraData(iter__,0)
            >6 liqRibTranslator::getCameraInfo(|camera1_group|camera1|cameraShape1,)
              >7 liqRibTranslator::portFieldOfView(224,150,&horizontal,&vertical,&fnCamera)
                >8 liqRibTranslator::computeViewingFrustum(1.49333,,&left,&right,&bottom,&top,|camera1_group|camera1|cameraShape1)
            >6 liqRibTranslator::getCameraFilmOffset(|camera1_group|camera1|cameraShape1,)
            >6 liqRibTranslator::getCameraTransform(|camera1_group|camera1|cameraShape1,)
        >4 liqRibTranslatorNew::doTextures(size=0)
          >5 Renderer::frameEpilogue(txtList_.size=0)
        >4 liqRibTranslatorNew::doShadows(size=0)
          >5 Renderer::doShadows(shadowList_.size=0)
        >4 Renderer::setRenderScriptFormatAndCompress(0,0)
        >4 Renderer::isHeroPassReady(cameraShape1)
        >4 Renderer::HeroPassBegin(cameraShape1)
        >4 tHeroRibWriterMgr::write(liqglo___,cameraShape1,7,0)
          >5 liqRibTranslatorNew::ribPrologue__(cameraShape1)
            >6 Renderer::ribPrologue_begin(cameraShape1)
              >7 Renderer::dummyPhongShader()
            >6 Renderer::ribPrologue_comment(2.3.5 (buildtime=20:51:12.30),R:/MyDocuments/maya/projects/default/checker_anim,yaoyansi,time)
            >6 Renderer::ribPrologue_options(cameraShape1)
          >5 liqRibTranslatorNew::framePrologue__(7,cameraShape1)
            >6 Renderer::framePrologue(7,cameraShape1)
              >7 Renderer::framePrologue_camera(7,cameraShape1)
                >8 Renderer::gatherCameraShaders(cameraShaders.size=0,|camera1_group|camera1|cameraShape1,liqEnvironmentShader)
                >8 Renderer::cameraOutput(cameraShape1)
          >5 ShaderMgr::exportShaderGraph()
            >6 ConvertShadingNetwork::exportShaderGraph()
              >7 ConvertShadingNetwork::beforeExport()
              >7 ConvertShadingNetwork::__export()
                >8 ConvertShadingNetwork::canShadingGroupExported(phong1SG)
                >8 Renderer::getValidShaderPlugsInShadingGroup()
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,surfaceShader)
                  >9 ConvertShadingNetwork::canShaderExported(phong1)
                  >9 ConvertShadingNetwork::exportShaderBegin(phong1)
                  >9 ConvertShadingNetwork::convertShadingNetworkToRSL(phong1,surfaceShader)
                    >10 Visitor::initShaderData(phong1,surfaceShader)
                    >10 ConvertShadingNetwork::getUpstreamConvertibleNodes(phong1, nodes, numConnections)
                      >11 ConvertShadingNetwork::nodeIsConvertible(phong1)
                        >12 ShaderMgr::hasShaderType(phong)
                      >11 ShaderMgr::getValidConnection(phong1)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.colorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.colorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.colorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.colorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.colorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.colorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.color)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                        >12 ConvertShadingNetwork::nodeIsConvertible(checker1)
                          >13 ShaderMgr::hasShaderType(checker)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.transparencyR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.transparencyG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.transparencyB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraX)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraX)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraY)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraY)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraZ)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraZ)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.specularColorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.specularColorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.specularColorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outColorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outColorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outColorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outColorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outColorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outColorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                        >12 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                          >13 ShaderMgr::hasShaderType(shadingEngine)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                      >11 ConvertShadingNetwork::getUpstreamConvertibleNodes(checker1, nodes, numConnections)
                        >12 ConvertShadingNetwork::nodeIsConvertible(checker1)
                          >13 ShaderMgr::hasShaderType(checker)
                        >12 ShaderMgr::getValidConnection(checker1)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1R)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1R)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1G)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1G)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1B)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1B)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2R)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2R)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2G)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2G)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2B)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2B)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.uCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.uCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.vCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.vCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                            >14 ShaderMgr::hasShaderType(place2dTexture)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                          >13 ConvertShadingNetwork::nodeIsConvertible(phong1)
                            >14 ShaderMgr::hasShaderType(phong)
                        >12 ConvertShadingNetwork::getUpstreamConvertibleNodes(place2dTexture1, nodes, numConnections)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                            >14 ShaderMgr::hasShaderType(place2dTexture)
                          >13 ShaderMgr::getValidConnection(place2dTexture1)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.vCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.vCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverage)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverage)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offset)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offset)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                              >15 ShaderMgr::hasShaderType(animCurveTU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                              >15 ShaderMgr::hasShaderType(animCurveTU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrame)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrame)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                            >14 ConvertShadingNetwork::nodeIsConvertible(checker1)
                              >15 ShaderMgr::hasShaderType(checker)
                    >10 Visitor::preOutput(phong1)
                    >10 Visitor::outputBegin(phong1)
                    >10 ConvertShadingNetwork::traverseGraphAndOutputNodeFunctions( nodes, numConnections)
                      >11 Visitor::outputUpstreamShader(place2dTexture1)
                        >12 ShaderOutputVisitor::_outputUpstreamShader(place2dTexture1,place2dTexture)
                          >13 Visitor::visitPlace2dTexture(place2dTexture1)
                            >14 OutputHelper::beginRSL(maya_place2dTexture,place2dTexture1)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.uvCoord)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.coverageU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.coverageV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.mirrorU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.mirrorV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.noiseU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.noiseV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.offsetU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.offsetV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.repeatU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                                >16 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                                  >17 ShaderMgr::hasShaderType(animCurveTU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.repeatV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                                >16 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                                  >17 ShaderMgr::hasShaderType(animCurveTU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.rotateFrame)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.rotateUV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.stagger)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.translateFrameU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.translateFrameV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.wrapU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.wrapV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.outUV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                                >16 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                  >17 ShaderMgr::hasShaderType(checker)
                            >14 OutputHelper::endRSL()
                      >11 ShaderMgr::getValidConnection(place2dTexture1)
                      >11 ConvertShadingNetwork::decrementDownstreamConnections(place2dTexture1, nodes, numConnections, validConnections)
                      >11 ConvertShadingNetwork::getNodeVariables(place2dTexture1, validConnections,  inputSrc, inputDes, outputSrc)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.vCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.vCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverage)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverage)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseUV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseUV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offset)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offset)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                            >14 ShaderMgr::hasShaderType(animCurveTU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                            >14 ShaderMgr::hasShaderType(animCurveTU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatUV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatUV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrame)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrame)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                        >12 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture1,outUV,place2dTexture1.outUV, outputVars)
                          >13 Visitor::addShaderMethodVariavles(place2dTexture1,outUV,float,2,)
                      >11 Visitor::addShaderMethodBody(place2dTexture1,,,place2dTexture1.outUV124)
                      >11 Visitor::outputUpstreamShader(checker1)
                        >12 ShaderOutputVisitor::_outputUpstreamShader(checker1,checker)
                          >13 Visitor::visitChecker(checker1)
                            >14 OutputHelper::beginRSL(maya_checker,checker1)
                            >14 ShaderMgr::convertibleConnection(checker1.alphaGain)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                            >14 ShaderMgr::convertibleConnection(checker1.alphaIsLuminance)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                            >14 ShaderMgr::convertibleConnection(checker1.alphaOffset)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                            >14 ShaderMgr::convertibleConnection(checker1.color1)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                            >14 ShaderMgr::convertibleConnection(checker1.color2)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                            >14 ShaderMgr::convertibleConnection(checker1.colorGain)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                            >14 ShaderMgr::convertibleConnection(checker1.colorOffset)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                            >14 ShaderMgr::convertibleConnection(checker1.contrast)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                            >14 ShaderMgr::convertibleConnection(checker1.defaultColor)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                            >14 ShaderMgr::convertibleConnection(checker1.filter)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                            >14 ShaderMgr::convertibleConnection(checker1.filterOffset)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                            >14 ShaderMgr::convertibleConnection(checker1.invert)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                            >14 ShaderMgr::convertibleConnection(checker1.uvCoord)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                                >16 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                                  >17 ShaderMgr::hasShaderType(place2dTexture)
                            >14 ShaderMgr::convertibleConnection(checker1.outAlpha)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                            >14 ShaderMgr::convertibleConnection(checker1.outColor)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                                >16 ConvertShadingNetwork::nodeIsConvertible(phong1)
                                  >17 ShaderMgr::hasShaderType(phong)
                            >14 OutputHelper::endRSL()
                      >11 ShaderMgr::getValidConnection(checker1)
                      >11 ConvertShadingNetwork::decrementDownstreamConnections(checker1, nodes, numConnections, validConnections)
                      >11 ConvertShadingNetwork::getNodeVariables(checker1, validConnections,  inputSrc, inputDes, outputSrc)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1R)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1R)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1G)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1G)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1B)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1B)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2R)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2R)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2G)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2G)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2B)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2B)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.uCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.uCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.vCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.vCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                            >14 ShaderMgr::hasShaderType(place2dTexture)
                        >12 ConvertShadingNetwork::addNodeInputVariable(checker1.uvCoord, inputSrc, inputDes)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                            >14 ShaderMgr::hasShaderType(place2dTexture)
                          >13 ShaderMgr::getValidConnection(place2dTexture1)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                          >13 ConvertShadingNetwork::nodeIsConvertible(phong1)
                            >14 ShaderMgr::hasShaderType(phong)
                        >12 ConvertShadingNetwork::addNodeOutputVariable(checker1,outColor,checker1.outColor, outputVars)
                          >13 Visitor::addShaderMethodVariavles(checker1,outColor,color,-1,)
                      >11 Visitor::addShaderMethodBody(checker1,place2dTexture1.outUV124,checker1.uvCoord124,checker1.outColor124)
                      >11 Visitor::outputUpstreamShader(phong1)
                        >12 ShaderOutputVisitor::_outputUpstreamShader(phong1,phong)
                          >13 Visitor::visitPhong(phong1)
                            >14 OutputHelper::beginRSL(maya_phong,phong1)
                            >14 ShaderMgr::convertibleConnection(phong1.color)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.color)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                                >16 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                  >17 ShaderMgr::hasShaderType(checker)
                            >14 ShaderMgr::convertibleConnection(phong1.transparency)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                            >14 ShaderMgr::convertibleConnection(phong1.ambientColor)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                            >14 ShaderMgr::convertibleConnection(phong1.incandescence)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                            >14 OutputHelper::add_liq_UserDefinedNormal(phong1)
                            >14 ShaderMgr::convertibleConnection(phong1.normalCamera)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                            >14 ShaderMgr::convertibleConnection(phong1.diffuse)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                            >14 ShaderMgr::convertibleConnection(phong1.translucence)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                            >14 ShaderMgr::convertibleConnection(phong1.translucenceDepth)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                            >14 ShaderMgr::convertibleConnection(phong1.translucenceFocus)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                            >14 ShaderMgr::convertibleConnection(phong1.cosinePower)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                            >14 ShaderMgr::convertibleConnection(phong1.specularColor)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                            >14 ShaderMgr::convertibleConnection(phong1.reflectivity)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                            >14 ShaderMgr::convertibleConnection(phong1.reflectedColor)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                            >14 ShaderMgr::convertibleConnection(phong1.matteOpacityMode)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                            >14 ShaderMgr::convertibleConnection(phong1.matteOpacity)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                            >14 ShaderMgr::convertibleConnection(phong1.reflectionLimit)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                            >14 ShaderMgr::convertibleConnection(phong1.outColor)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                                >16 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                                  >17 ShaderMgr::hasShaderType(shadingEngine)
                            >14 ShaderMgr::convertibleConnection(phong1.outTransparency)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                            >14 OutputHelper::endRSL()
                      >11 ShaderMgr::getValidConnection(phong1)
                      >11 ConvertShadingNetwork::decrementDownstreamConnections(phong1, nodes, numConnections, validConnections)
                      >11 ConvertShadingNetwork::getNodeVariables(phong1, validConnections,  inputSrc, inputDes, outputSrc)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.color)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                        >12 ConvertShadingNetwork::addNodeInputVariable(phong1.color, inputSrc, inputDes)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                          >13 ShaderMgr::getValidConnection(checker1)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraX)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraX)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraY)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraY)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraZ)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraZ)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                          >13 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                            >14 ShaderMgr::hasShaderType(shadingEngine)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                      >11 Visitor::addShaderMethodBody(phong1,checker1.outColor124,phong1.color124,)
                    >10 ConvertShadingNetwork::outputShaderMethod()
                      >11 Visitor::outputShaderMethod()
                    >10 Visitor::outputEnd()
                    >10 Visitor::postOutput()
                  >9 ConvertShadingNetwork::exportShaderEnd(phong1)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,displacementShader)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,volumeShader)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,liqShadowShader)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,liqEnvironmentShader)
                >8 ConvertShadingNetwork::exportShadingGroupBegin(phong1SG)
                >8 ConvertShadingNetwork::outputShadingGroup(phong1SG)
                  >9 Visitor::outputShadingGroup(phong1SG)
                >8 ConvertShadingNetwork::exportShadingGroupEnd(phong1SG)
              >7  ConvertShadingNetwork::afterExport()
          >5 liqRibTranslatorNew::worldPrologue__(cameraShape1)
            >6 Renderer::worldPrologue(cameraShape1)
          >5 liqRibTranslatorNew::lightBlock__(cameraShape1)
            >6 Renderer::writeLight_pre(|pointLight1|pointLightShape1,cameraShape1)
            >6 liqRibObj::writeObject(,cameraShape1,0)
              >7 liqRibLightData::write(,job=cameraShape1,0)
                >8 liqRibData::getFullPathName()
                >8 Renderer::write(|pointLight1|pointLightShape1,,cameraShape1,ref=0)
                  >9 liqRibData::getFullPathName()
                  >9 er_writeLightData.cpp::_write(|pointLight1|pointLightShape1,cameraShape1,...)
                    >10 Renderer::exportPointLight(pointlight,pointLightShape1,...)
                      >11 addLightGroupForLight(|pointLight1|pointLightShape1)
            >6 Renderer::writeLight_post(|pointLight1|pointLightShape1,cameraShape1)
            >6 Renderer::writeLight_pre(|pointLight2|pointLightShape2,cameraShape1)
            >6 liqRibObj::writeObject(,cameraShape1,0)
              >7 liqRibLightData::write(,job=cameraShape1,0)
                >8 liqRibData::getFullPathName()
                >8 Renderer::write(|pointLight2|pointLightShape2,,cameraShape1,ref=0)
                  >9 liqRibData::getFullPathName()
                  >9 er_writeLightData.cpp::_write(|pointLight2|pointLightShape2,cameraShape1,...)
                    >10 Renderer::exportPointLight(pointlight,pointLightShape2,...)
                      >11 addLightGroupForLight(|pointLight2|pointLightShape2)
            >6 Renderer::writeLight_post(|pointLight2|pointLightShape2,cameraShape1)
          >5 liqRibTranslatorNew::coordSysBlock__(cameraShape1)
            >6 Renderer::coordSysBlock__(cameraShape1)
          >5 liqRibTranslatorNew::objectBlock__(cameraShape1)
            >6 liqRibTranslatorNew::objectBlock_data(cameraShape1)
              >7 liqRibTranslatorNew::getShadowSetObject(cameraShape1)
              >7 liqRibTranslatorNew::oneObjectBlock_data(|pPlane2|pPlaneShape11,cameraShape1)
                >8 Renderer::exportOneObject_data(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::_writeObject(|pPlane2|pPlaneShape11,cameraShape1,0,0,0)
                    >10 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.7.rib,cameraShape1,0)
                      >11 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.7.rib,job=cameraShape1,0)
                        >12 liqRibData::getFullPathName()
                        >12 Renderer::write(|pPlane2|pPlaneShape11,R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.7.rib,cameraShape1,ref=0)
                          >13 liqRibData::getFullPathName()
                          >13 er_writeMeshData.cpp::_write1(|pPlane2|pPlaneShape11,cameraShape1)
                            >14 liqRibHT::find(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                            >14 _exportVertexFromNodePlug(|pPlane2|pPlaneShape11,0)
                            >14 liqRibData::getFullPathName()
            >6 liqRibTranslatorNew::objectBlock_reference(cameraShape1)
              >7 Renderer::objectBlock_reference_begin()
              >7 liqRibTranslatorNew::preGeometryMel()
                >8 Renderer::preGeometryMel()
              >7 liqRibTranslatorNew::getShadowSetObject(cameraShape1)
              >7 liqRibTranslatorNew::oneObjectBlock_reference(|pPlane2|pPlaneShape11,cameraShape1)
                >8 Renderer::oneObjectBlock_reference_attribute_begin(|pPlane2|pPlaneShape11,cameraShape1)
                >8 Renderer::oneObjectBlock_reference_attribute_block0(|pPlane2|pPlaneShape11,cameraShape1)
                >8 liqRibTranslatorNew::tRiIlluminate(cameraShape1,|pPlane2|pPlaneShape11)
                  >9 Renderer::exportLightLinks(cameraShape1,|pPlane2|pPlaneShape11,lightedByWhichLightShapes.size=2)
                >8 liqRibTranslatorNew::checkSurfaceShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                >8 liqRibTranslatorNew::checkDisplacementShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                >8 liqRibTranslatorNew::checkVolumeShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                >8 Renderer::oneObjectBlock_reference_attribute_block1(|pPlane2|pPlaneShape11,cameraShape1)
                >8 liqRibTranslatorNew::writeShader_(1,|pPlane2|pPlaneShape11,v=0,s=0,c=0,,|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                >8 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|pPlane2|pPlaneShape11)
                >8 Renderer::exportOneObject_reference(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 liqRibData::getFullPathName()
                  >9 liqRibData::getFullPathName()
                  >9 liqRibData::getFullPathName()
                >8 Renderer::oneObjectBlock_reference_attribute_end(|pPlane2|pPlaneShape11,cameraShape1)
              >7 Renderer::objectBlock_reference_end()
          >5 liqRibTranslatorNew::worldEpilogue__()
            >6 liqRibTranslator::worldEpilogue()
              >7 Renderer::worldEpilogue()
          >5 liqRibTranslatorNew::frameEpilogue__(7)
            >6 Renderer::frameEpilogue(7)
          >5 liqRibTranslatorNew::ribEpilogue__(cameraShape1)
            >6 Renderer::ribPrologue_end(cameraShape1)
              >7 Renderer::cookInstanceGroup()
              >7 Renderer::render()
        >4 Renderer::HeroPassEnd(cameraShape1)
      >3 liqRenderScript::addJob(job.title=checker_animFrame6,0)
        >4 liqRenderScript::popNextJobID()
      >3 tFrameScriptJobMgr::setCommonParameters(checker_animFrame7)
      >3 liqRibTranslatorNew::processOneFrame(7, liqglo__)
        >4 liqRibTranslatorNew::buildJobs__()
          >5 liqRibTranslatorNew::buildShadowJobs__()
            >6 tJobScriptMgr::buildShadowJob(thisJob___, 0)
            >6 tJobScriptMgr::buildShadowCameraJob(thisJob___, 0)
          >5 tRibCameraMgr::gatherDataForJob(liqglo___, ,jobList__,0,1)
          >5 liqRibTranslator::generateFileName(4,cameraShape1)
          >5 liqRibTranslator::generateFileName(5,cameraShape1)
            >6 liqRibTranslator::generateImageName(, job(cameraShape1)), 
        >4 liqRibTranslatorNew::calaculateSamplingTime(8)
        >4 liqRibTranslatorNew::scanScene__(8,0)
          >5 tJobScriptMgr::scanScene(8,0, htable__, count, returnStatus__)
            >6 liqRibHT::insert(|pointLight1|pointLightShape1,lframe,0,3,0,matrix,,-1)
              >7 liqRibHT::hash(|pointLight1|pointLightShape1,0)
              >7 liqRibHT::find(|pointLight1|pointLightShape1,|pointLight1|pointLightShape1,3)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|pointLight1|pointLightShape1,0,3,-1)
                >8 liqRibNode::parseVectorAttributes(pointLight1,,2)
                >8 liqRibNode::parseVectorAttributes(pointLight1,,3)
                >8 liqRibNode::parseVectorAttributes(pointLight1,,4)
                >8 liqRibNode::findShadingGroup(|pointLight1|pointLightShape1,3)
                >8 liqRibNode::findShader()
                >8 liqRibNode::findDisp()
                >8 liqRibNode::findVolume()
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|pointLight1|pointLightShape1,3)
                  >9 liqRibLightData::liqRibLightData(|pointLight1|pointLightShape1)
                    >10 liqRibData::addAdditionalSurfaceParameters(pointLightShape1)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 liqRibHT::insert(|pointLight2|pointLightShape2,lframe,0,3,1,matrix,,-1)
              >7 liqRibHT::hash(|pointLight2|pointLightShape2,1)
              >7 liqRibHT::find(|pointLight2|pointLightShape2,|pointLight2|pointLightShape2,3)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|pointLight2|pointLightShape2,0,3,-1)
                >8 liqRibNode::parseVectorAttributes(pointLight2,,2)
                >8 liqRibNode::parseVectorAttributes(pointLight2,,3)
                >8 liqRibNode::parseVectorAttributes(pointLight2,,4)
                >8 liqRibNode::findShadingGroup(|pointLight2|pointLightShape2,3)
                >8 liqRibNode::findShader()
                >8 liqRibNode::findDisp()
                >8 liqRibNode::findVolume()
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|pointLight2|pointLightShape2,3)
                  >9 liqRibLightData::liqRibLightData(|pointLight2|pointLightShape2)
                    >10 liqRibData::addAdditionalSurfaceParameters(pointLightShape2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
          >5 tLocatorMgr::scanScene(8,0,htable__,count__,returnStatus__)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,8,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,8,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,8,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,8,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,8,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,8,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,8,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,8,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,8,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,8,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,8,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,8,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,8,0,&count)
            >6 liqRibHT::insert(|pPlane2|pPlaneShape11,lframe,0,0,2,matrix,,-1)
              >7 liqRibHT::hash(|pPlane2|pPlaneShape11,2)
              >7 liqRibHT::find(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|pPlane2|pPlaneShape11,0,0,-1)
                >8 liqRibNode::parseVectorAttributes(pPlane2,,2)
                >8 liqRibNode::parseVectorAttributes(pPlane2,,3)
                >8 liqRibNode::parseVectorAttributes(pPlane2,,4)
                >8 liqRibNode::findShadingGroup(|pPlane2|pPlaneShape11,0)
                >8 liqRibNode::findShader()
                >8 liqRibNode::findDisp()
                >8 liqRibNode::findVolume()
                >8 liqRibNode::getColor(&shader,&color)
                >8 liqRibNode::getOpacity(&shader,&color)
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|pPlane2|pPlaneShape11,0)
                  >9 liqRibMeshData::liqRibMeshData(|pPlane2|pPlaneShape11)
                    >10 liqRibData::addAdditionalSurfaceParameters(pPlaneShape11)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,8,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,8,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,8,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,8,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,8,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,8,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,8,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,8,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,8,0,&count)
            >6 liqRibHT::insert(|camera1_group|camera1_aim|camera1_aimShape,lframe,0,0,3,matrix,,-1)
              >7 liqRibHT::hash(|camera1_group|camera1_aim|camera1_aimShape,3)
              >7 liqRibHT::find(|camera1_group|camera1_aim|camera1_aimShape,|camera1_group|camera1_aim|camera1_aimShape,0)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|camera1_group|camera1_aim|camera1_aimShape,0,0,-1)
                >8 liqRibNode::parseVectorAttributes(camera1_aim,,2)
                >8 liqRibNode::parseVectorAttributes(camera1_aim,,3)
                >8 liqRibNode::parseVectorAttributes(camera1_aim,,4)
                >8 liqRibNode::findShadingGroup(|camera1_group|camera1_aim|camera1_aimShape,0)
                >8 liqRibNode::findShader()
                >8 liqRibNode::findDisp()
                >8 liqRibNode::findVolume()
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|camera1_group|camera1_aim|camera1_aimShape,0)
          >5 liqRibTranslatorNew::dealwithParticleInstancedObjects(0,8,4)
          >5 liqRibTranslatorNew::getCameraData(iter__,0)
            >6 liqRibTranslator::getCameraInfo(|camera1_group|camera1|cameraShape1,)
              >7 liqRibTranslator::portFieldOfView(224,150,&horizontal,&vertical,&fnCamera)
                >8 liqRibTranslator::computeViewingFrustum(1.49333,,&left,&right,&bottom,&top,|camera1_group|camera1|cameraShape1)
            >6 liqRibTranslator::getCameraFilmOffset(|camera1_group|camera1|cameraShape1,)
            >6 liqRibTranslator::getCameraTransform(|camera1_group|camera1|cameraShape1,)
        >4 liqRibTranslatorNew::doTextures(size=0)
          >5 Renderer::frameEpilogue(txtList_.size=0)
        >4 liqRibTranslatorNew::doShadows(size=0)
          >5 Renderer::doShadows(shadowList_.size=0)
        >4 Renderer::setRenderScriptFormatAndCompress(0,0)
        >4 Renderer::isHeroPassReady(cameraShape1)
        >4 Renderer::HeroPassBegin(cameraShape1)
        >4 tHeroRibWriterMgr::write(liqglo___,cameraShape1,8,0)
          >5 liqRibTranslatorNew::ribPrologue__(cameraShape1)
            >6 Renderer::ribPrologue_begin(cameraShape1)
              >7 Renderer::dummyPhongShader()
            >6 Renderer::ribPrologue_comment(2.3.5 (buildtime=20:51:12.30),R:/MyDocuments/maya/projects/default/checker_anim,yaoyansi,time)
            >6 Renderer::ribPrologue_options(cameraShape1)
          >5 liqRibTranslatorNew::framePrologue__(8,cameraShape1)
            >6 Renderer::framePrologue(8,cameraShape1)
              >7 Renderer::framePrologue_camera(8,cameraShape1)
                >8 Renderer::gatherCameraShaders(cameraShaders.size=0,|camera1_group|camera1|cameraShape1,liqEnvironmentShader)
                >8 Renderer::cameraOutput(cameraShape1)
          >5 ShaderMgr::exportShaderGraph()
            >6 ConvertShadingNetwork::exportShaderGraph()
              >7 ConvertShadingNetwork::beforeExport()
              >7 ConvertShadingNetwork::__export()
                >8 ConvertShadingNetwork::canShadingGroupExported(phong1SG)
                >8 Renderer::getValidShaderPlugsInShadingGroup()
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,surfaceShader)
                  >9 ConvertShadingNetwork::canShaderExported(phong1)
                  >9 ConvertShadingNetwork::exportShaderBegin(phong1)
                  >9 ConvertShadingNetwork::convertShadingNetworkToRSL(phong1,surfaceShader)
                    >10 Visitor::initShaderData(phong1,surfaceShader)
                    >10 ConvertShadingNetwork::getUpstreamConvertibleNodes(phong1, nodes, numConnections)
                      >11 ConvertShadingNetwork::nodeIsConvertible(phong1)
                        >12 ShaderMgr::hasShaderType(phong)
                      >11 ShaderMgr::getValidConnection(phong1)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.colorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.colorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.colorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.colorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.colorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.colorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.color)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                        >12 ConvertShadingNetwork::nodeIsConvertible(checker1)
                          >13 ShaderMgr::hasShaderType(checker)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.transparencyR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.transparencyG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.transparencyB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraX)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraX)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraY)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraY)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraZ)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraZ)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.specularColorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.specularColorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.specularColorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outColorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outColorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outColorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outColorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outColorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outColorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                        >12 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                          >13 ShaderMgr::hasShaderType(shadingEngine)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                      >11 ConvertShadingNetwork::getUpstreamConvertibleNodes(checker1, nodes, numConnections)
                        >12 ConvertShadingNetwork::nodeIsConvertible(checker1)
                          >13 ShaderMgr::hasShaderType(checker)
                        >12 ShaderMgr::getValidConnection(checker1)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1R)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1R)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1G)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1G)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1B)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1B)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2R)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2R)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2G)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2G)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2B)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2B)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.uCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.uCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.vCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.vCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                            >14 ShaderMgr::hasShaderType(place2dTexture)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                          >13 ConvertShadingNetwork::nodeIsConvertible(phong1)
                            >14 ShaderMgr::hasShaderType(phong)
                        >12 ConvertShadingNetwork::getUpstreamConvertibleNodes(place2dTexture1, nodes, numConnections)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                            >14 ShaderMgr::hasShaderType(place2dTexture)
                          >13 ShaderMgr::getValidConnection(place2dTexture1)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.vCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.vCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverage)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverage)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offset)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offset)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                              >15 ShaderMgr::hasShaderType(animCurveTU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                              >15 ShaderMgr::hasShaderType(animCurveTU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrame)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrame)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                            >14 ConvertShadingNetwork::nodeIsConvertible(checker1)
                              >15 ShaderMgr::hasShaderType(checker)
                    >10 Visitor::preOutput(phong1)
                    >10 Visitor::outputBegin(phong1)
                    >10 ConvertShadingNetwork::traverseGraphAndOutputNodeFunctions( nodes, numConnections)
                      >11 Visitor::outputUpstreamShader(place2dTexture1)
                        >12 ShaderOutputVisitor::_outputUpstreamShader(place2dTexture1,place2dTexture)
                          >13 Visitor::visitPlace2dTexture(place2dTexture1)
                            >14 OutputHelper::beginRSL(maya_place2dTexture,place2dTexture1)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.uvCoord)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.coverageU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.coverageV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.mirrorU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.mirrorV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.noiseU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.noiseV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.offsetU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.offsetV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.repeatU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                                >16 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                                  >17 ShaderMgr::hasShaderType(animCurveTU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.repeatV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                                >16 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                                  >17 ShaderMgr::hasShaderType(animCurveTU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.rotateFrame)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.rotateUV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.stagger)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.translateFrameU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.translateFrameV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.wrapU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.wrapV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.outUV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                                >16 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                  >17 ShaderMgr::hasShaderType(checker)
                            >14 OutputHelper::endRSL()
                      >11 ShaderMgr::getValidConnection(place2dTexture1)
                      >11 ConvertShadingNetwork::decrementDownstreamConnections(place2dTexture1, nodes, numConnections, validConnections)
                      >11 ConvertShadingNetwork::getNodeVariables(place2dTexture1, validConnections,  inputSrc, inputDes, outputSrc)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.vCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.vCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverage)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverage)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseUV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseUV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offset)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offset)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                            >14 ShaderMgr::hasShaderType(animCurveTU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                            >14 ShaderMgr::hasShaderType(animCurveTU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatUV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatUV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrame)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrame)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                        >12 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture1,outUV,place2dTexture1.outUV, outputVars)
                          >13 Visitor::addShaderMethodVariavles(place2dTexture1,outUV,float,2,)
                      >11 Visitor::addShaderMethodBody(place2dTexture1,,,place2dTexture1.outUV124)
                      >11 Visitor::outputUpstreamShader(checker1)
                        >12 ShaderOutputVisitor::_outputUpstreamShader(checker1,checker)
                          >13 Visitor::visitChecker(checker1)
                            >14 OutputHelper::beginRSL(maya_checker,checker1)
                            >14 ShaderMgr::convertibleConnection(checker1.alphaGain)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                            >14 ShaderMgr::convertibleConnection(checker1.alphaIsLuminance)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                            >14 ShaderMgr::convertibleConnection(checker1.alphaOffset)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                            >14 ShaderMgr::convertibleConnection(checker1.color1)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                            >14 ShaderMgr::convertibleConnection(checker1.color2)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                            >14 ShaderMgr::convertibleConnection(checker1.colorGain)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                            >14 ShaderMgr::convertibleConnection(checker1.colorOffset)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                            >14 ShaderMgr::convertibleConnection(checker1.contrast)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                            >14 ShaderMgr::convertibleConnection(checker1.defaultColor)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                            >14 ShaderMgr::convertibleConnection(checker1.filter)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                            >14 ShaderMgr::convertibleConnection(checker1.filterOffset)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                            >14 ShaderMgr::convertibleConnection(checker1.invert)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                            >14 ShaderMgr::convertibleConnection(checker1.uvCoord)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                                >16 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                                  >17 ShaderMgr::hasShaderType(place2dTexture)
                            >14 ShaderMgr::convertibleConnection(checker1.outAlpha)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                            >14 ShaderMgr::convertibleConnection(checker1.outColor)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                                >16 ConvertShadingNetwork::nodeIsConvertible(phong1)
                                  >17 ShaderMgr::hasShaderType(phong)
                            >14 OutputHelper::endRSL()
                      >11 ShaderMgr::getValidConnection(checker1)
                      >11 ConvertShadingNetwork::decrementDownstreamConnections(checker1, nodes, numConnections, validConnections)
                      >11 ConvertShadingNetwork::getNodeVariables(checker1, validConnections,  inputSrc, inputDes, outputSrc)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1R)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1R)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1G)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1G)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1B)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1B)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2R)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2R)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2G)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2G)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2B)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2B)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.uCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.uCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.vCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.vCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                            >14 ShaderMgr::hasShaderType(place2dTexture)
                        >12 ConvertShadingNetwork::addNodeInputVariable(checker1.uvCoord, inputSrc, inputDes)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                            >14 ShaderMgr::hasShaderType(place2dTexture)
                          >13 ShaderMgr::getValidConnection(place2dTexture1)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                          >13 ConvertShadingNetwork::nodeIsConvertible(phong1)
                            >14 ShaderMgr::hasShaderType(phong)
                        >12 ConvertShadingNetwork::addNodeOutputVariable(checker1,outColor,checker1.outColor, outputVars)
                          >13 Visitor::addShaderMethodVariavles(checker1,outColor,color,-1,)
                      >11 Visitor::addShaderMethodBody(checker1,place2dTexture1.outUV124,checker1.uvCoord124,checker1.outColor124)
                      >11 Visitor::outputUpstreamShader(phong1)
                        >12 ShaderOutputVisitor::_outputUpstreamShader(phong1,phong)
                          >13 Visitor::visitPhong(phong1)
                            >14 OutputHelper::beginRSL(maya_phong,phong1)
                            >14 ShaderMgr::convertibleConnection(phong1.color)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.color)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                                >16 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                  >17 ShaderMgr::hasShaderType(checker)
                            >14 ShaderMgr::convertibleConnection(phong1.transparency)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                            >14 ShaderMgr::convertibleConnection(phong1.ambientColor)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                            >14 ShaderMgr::convertibleConnection(phong1.incandescence)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                            >14 OutputHelper::add_liq_UserDefinedNormal(phong1)
                            >14 ShaderMgr::convertibleConnection(phong1.normalCamera)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                            >14 ShaderMgr::convertibleConnection(phong1.diffuse)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                            >14 ShaderMgr::convertibleConnection(phong1.translucence)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                            >14 ShaderMgr::convertibleConnection(phong1.translucenceDepth)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                            >14 ShaderMgr::convertibleConnection(phong1.translucenceFocus)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                            >14 ShaderMgr::convertibleConnection(phong1.cosinePower)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                            >14 ShaderMgr::convertibleConnection(phong1.specularColor)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                            >14 ShaderMgr::convertibleConnection(phong1.reflectivity)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                            >14 ShaderMgr::convertibleConnection(phong1.reflectedColor)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                            >14 ShaderMgr::convertibleConnection(phong1.matteOpacityMode)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                            >14 ShaderMgr::convertibleConnection(phong1.matteOpacity)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                            >14 ShaderMgr::convertibleConnection(phong1.reflectionLimit)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                            >14 ShaderMgr::convertibleConnection(phong1.outColor)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                                >16 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                                  >17 ShaderMgr::hasShaderType(shadingEngine)
                            >14 ShaderMgr::convertibleConnection(phong1.outTransparency)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                            >14 OutputHelper::endRSL()
                      >11 ShaderMgr::getValidConnection(phong1)
                      >11 ConvertShadingNetwork::decrementDownstreamConnections(phong1, nodes, numConnections, validConnections)
                      >11 ConvertShadingNetwork::getNodeVariables(phong1, validConnections,  inputSrc, inputDes, outputSrc)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.color)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                        >12 ConvertShadingNetwork::addNodeInputVariable(phong1.color, inputSrc, inputDes)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                          >13 ShaderMgr::getValidConnection(checker1)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraX)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraX)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraY)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraY)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraZ)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraZ)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                          >13 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                            >14 ShaderMgr::hasShaderType(shadingEngine)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                      >11 Visitor::addShaderMethodBody(phong1,checker1.outColor124,phong1.color124,)
                    >10 ConvertShadingNetwork::outputShaderMethod()
                      >11 Visitor::outputShaderMethod()
                    >10 Visitor::outputEnd()
                    >10 Visitor::postOutput()
                  >9 ConvertShadingNetwork::exportShaderEnd(phong1)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,displacementShader)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,volumeShader)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,liqShadowShader)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,liqEnvironmentShader)
                >8 ConvertShadingNetwork::exportShadingGroupBegin(phong1SG)
                >8 ConvertShadingNetwork::outputShadingGroup(phong1SG)
                  >9 Visitor::outputShadingGroup(phong1SG)
                >8 ConvertShadingNetwork::exportShadingGroupEnd(phong1SG)
              >7  ConvertShadingNetwork::afterExport()
          >5 liqRibTranslatorNew::worldPrologue__(cameraShape1)
            >6 Renderer::worldPrologue(cameraShape1)
          >5 liqRibTranslatorNew::lightBlock__(cameraShape1)
            >6 Renderer::writeLight_pre(|pointLight1|pointLightShape1,cameraShape1)
            >6 liqRibObj::writeObject(,cameraShape1,0)
              >7 liqRibLightData::write(,job=cameraShape1,0)
                >8 liqRibData::getFullPathName()
                >8 Renderer::write(|pointLight1|pointLightShape1,,cameraShape1,ref=0)
                  >9 liqRibData::getFullPathName()
                  >9 er_writeLightData.cpp::_write(|pointLight1|pointLightShape1,cameraShape1,...)
                    >10 Renderer::exportPointLight(pointlight,pointLightShape1,...)
                      >11 addLightGroupForLight(|pointLight1|pointLightShape1)
            >6 Renderer::writeLight_post(|pointLight1|pointLightShape1,cameraShape1)
            >6 Renderer::writeLight_pre(|pointLight2|pointLightShape2,cameraShape1)
            >6 liqRibObj::writeObject(,cameraShape1,0)
              >7 liqRibLightData::write(,job=cameraShape1,0)
                >8 liqRibData::getFullPathName()
                >8 Renderer::write(|pointLight2|pointLightShape2,,cameraShape1,ref=0)
                  >9 liqRibData::getFullPathName()
                  >9 er_writeLightData.cpp::_write(|pointLight2|pointLightShape2,cameraShape1,...)
                    >10 Renderer::exportPointLight(pointlight,pointLightShape2,...)
                      >11 addLightGroupForLight(|pointLight2|pointLightShape2)
            >6 Renderer::writeLight_post(|pointLight2|pointLightShape2,cameraShape1)
          >5 liqRibTranslatorNew::coordSysBlock__(cameraShape1)
            >6 Renderer::coordSysBlock__(cameraShape1)
          >5 liqRibTranslatorNew::objectBlock__(cameraShape1)
            >6 liqRibTranslatorNew::objectBlock_data(cameraShape1)
              >7 liqRibTranslatorNew::getShadowSetObject(cameraShape1)
              >7 liqRibTranslatorNew::oneObjectBlock_data(|pPlane2|pPlaneShape11,cameraShape1)
                >8 Renderer::exportOneObject_data(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::_writeObject(|pPlane2|pPlaneShape11,cameraShape1,0,0,0)
                    >10 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.8.rib,cameraShape1,0)
                      >11 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.8.rib,job=cameraShape1,0)
                        >12 liqRibData::getFullPathName()
                        >12 Renderer::write(|pPlane2|pPlaneShape11,R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.8.rib,cameraShape1,ref=0)
                          >13 liqRibData::getFullPathName()
                          >13 er_writeMeshData.cpp::_write1(|pPlane2|pPlaneShape11,cameraShape1)
                            >14 liqRibHT::find(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                            >14 _exportVertexFromNodePlug(|pPlane2|pPlaneShape11,0)
                            >14 liqRibData::getFullPathName()
            >6 liqRibTranslatorNew::objectBlock_reference(cameraShape1)
              >7 Renderer::objectBlock_reference_begin()
              >7 liqRibTranslatorNew::preGeometryMel()
                >8 Renderer::preGeometryMel()
              >7 liqRibTranslatorNew::getShadowSetObject(cameraShape1)
              >7 liqRibTranslatorNew::oneObjectBlock_reference(|pPlane2|pPlaneShape11,cameraShape1)
                >8 Renderer::oneObjectBlock_reference_attribute_begin(|pPlane2|pPlaneShape11,cameraShape1)
                >8 Renderer::oneObjectBlock_reference_attribute_block0(|pPlane2|pPlaneShape11,cameraShape1)
                >8 liqRibTranslatorNew::tRiIlluminate(cameraShape1,|pPlane2|pPlaneShape11)
                  >9 Renderer::exportLightLinks(cameraShape1,|pPlane2|pPlaneShape11,lightedByWhichLightShapes.size=2)
                >8 liqRibTranslatorNew::checkSurfaceShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                >8 liqRibTranslatorNew::checkDisplacementShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                >8 liqRibTranslatorNew::checkVolumeShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                >8 Renderer::oneObjectBlock_reference_attribute_block1(|pPlane2|pPlaneShape11,cameraShape1)
                >8 liqRibTranslatorNew::writeShader_(1,|pPlane2|pPlaneShape11,v=0,s=0,c=0,,|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                >8 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|pPlane2|pPlaneShape11)
                >8 Renderer::exportOneObject_reference(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 liqRibData::getFullPathName()
                  >9 liqRibData::getFullPathName()
                  >9 liqRibData::getFullPathName()
                >8 Renderer::oneObjectBlock_reference_attribute_end(|pPlane2|pPlaneShape11,cameraShape1)
              >7 Renderer::objectBlock_reference_end()
          >5 liqRibTranslatorNew::worldEpilogue__()
            >6 liqRibTranslator::worldEpilogue()
              >7 Renderer::worldEpilogue()
          >5 liqRibTranslatorNew::frameEpilogue__(8)
            >6 Renderer::frameEpilogue(8)
          >5 liqRibTranslatorNew::ribEpilogue__(cameraShape1)
            >6 Renderer::ribPrologue_end(cameraShape1)
              >7 Renderer::cookInstanceGroup()
              >7 Renderer::render()
        >4 Renderer::HeroPassEnd(cameraShape1)
      >3 liqRenderScript::addJob(job.title=checker_animFrame7,0)
        >4 liqRenderScript::popNextJobID()
      >3 tFrameScriptJobMgr::setCommonParameters(checker_animFrame8)
      >3 liqRibTranslatorNew::processOneFrame(8, liqglo__)
        >4 liqRibTranslatorNew::buildJobs__()
          >5 liqRibTranslatorNew::buildShadowJobs__()
            >6 tJobScriptMgr::buildShadowJob(thisJob___, 0)
            >6 tJobScriptMgr::buildShadowCameraJob(thisJob___, 0)
          >5 tRibCameraMgr::gatherDataForJob(liqglo___, ,jobList__,0,1)
          >5 liqRibTranslator::generateFileName(4,cameraShape1)
          >5 liqRibTranslator::generateFileName(5,cameraShape1)
            >6 liqRibTranslator::generateImageName(, job(cameraShape1)), 
        >4 liqRibTranslatorNew::calaculateSamplingTime(9)
        >4 liqRibTranslatorNew::scanScene__(9,0)
          >5 tJobScriptMgr::scanScene(9,0, htable__, count, returnStatus__)
            >6 liqRibHT::insert(|pointLight1|pointLightShape1,lframe,0,3,0,matrix,,-1)
              >7 liqRibHT::hash(|pointLight1|pointLightShape1,0)
              >7 liqRibHT::find(|pointLight1|pointLightShape1,|pointLight1|pointLightShape1,3)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|pointLight1|pointLightShape1,0,3,-1)
                >8 liqRibNode::parseVectorAttributes(pointLight1,,2)
                >8 liqRibNode::parseVectorAttributes(pointLight1,,3)
                >8 liqRibNode::parseVectorAttributes(pointLight1,,4)
                >8 liqRibNode::findShadingGroup(|pointLight1|pointLightShape1,3)
                >8 liqRibNode::findShader()
                >8 liqRibNode::findDisp()
                >8 liqRibNode::findVolume()
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|pointLight1|pointLightShape1,3)
                  >9 liqRibLightData::liqRibLightData(|pointLight1|pointLightShape1)
                    >10 liqRibData::addAdditionalSurfaceParameters(pointLightShape1)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 liqRibHT::insert(|pointLight2|pointLightShape2,lframe,0,3,1,matrix,,-1)
              >7 liqRibHT::hash(|pointLight2|pointLightShape2,1)
              >7 liqRibHT::find(|pointLight2|pointLightShape2,|pointLight2|pointLightShape2,3)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|pointLight2|pointLightShape2,0,3,-1)
                >8 liqRibNode::parseVectorAttributes(pointLight2,,2)
                >8 liqRibNode::parseVectorAttributes(pointLight2,,3)
                >8 liqRibNode::parseVectorAttributes(pointLight2,,4)
                >8 liqRibNode::findShadingGroup(|pointLight2|pointLightShape2,3)
                >8 liqRibNode::findShader()
                >8 liqRibNode::findDisp()
                >8 liqRibNode::findVolume()
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|pointLight2|pointLightShape2,3)
                  >9 liqRibLightData::liqRibLightData(|pointLight2|pointLightShape2)
                    >10 liqRibData::addAdditionalSurfaceParameters(pointLightShape2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
          >5 tLocatorMgr::scanScene(9,0,htable__,count__,returnStatus__)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,9,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,9,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,9,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,9,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,9,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,9,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,9,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,9,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,9,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,9,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,9,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,9,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,9,0,&count)
            >6 liqRibHT::insert(|pPlane2|pPlaneShape11,lframe,0,0,2,matrix,,-1)
              >7 liqRibHT::hash(|pPlane2|pPlaneShape11,2)
              >7 liqRibHT::find(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|pPlane2|pPlaneShape11,0,0,-1)
                >8 liqRibNode::parseVectorAttributes(pPlane2,,2)
                >8 liqRibNode::parseVectorAttributes(pPlane2,,3)
                >8 liqRibNode::parseVectorAttributes(pPlane2,,4)
                >8 liqRibNode::findShadingGroup(|pPlane2|pPlaneShape11,0)
                >8 liqRibNode::findShader()
                >8 liqRibNode::findDisp()
                >8 liqRibNode::findVolume()
                >8 liqRibNode::getColor(&shader,&color)
                >8 liqRibNode::getOpacity(&shader,&color)
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|pPlane2|pPlaneShape11,0)
                  >9 liqRibMeshData::liqRibMeshData(|pPlane2|pPlaneShape11)
                    >10 liqRibData::addAdditionalSurfaceParameters(pPlaneShape11)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,9,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,9,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,9,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,9,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,9,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,9,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,9,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,9,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,9,0,&count)
            >6 liqRibHT::insert(|camera1_group|camera1_aim|camera1_aimShape,lframe,0,0,3,matrix,,-1)
              >7 liqRibHT::hash(|camera1_group|camera1_aim|camera1_aimShape,3)
              >7 liqRibHT::find(|camera1_group|camera1_aim|camera1_aimShape,|camera1_group|camera1_aim|camera1_aimShape,0)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|camera1_group|camera1_aim|camera1_aimShape,0,0,-1)
                >8 liqRibNode::parseVectorAttributes(camera1_aim,,2)
                >8 liqRibNode::parseVectorAttributes(camera1_aim,,3)
                >8 liqRibNode::parseVectorAttributes(camera1_aim,,4)
                >8 liqRibNode::findShadingGroup(|camera1_group|camera1_aim|camera1_aimShape,0)
                >8 liqRibNode::findShader()
                >8 liqRibNode::findDisp()
                >8 liqRibNode::findVolume()
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|camera1_group|camera1_aim|camera1_aimShape,0)
          >5 liqRibTranslatorNew::dealwithParticleInstancedObjects(0,9,4)
          >5 liqRibTranslatorNew::getCameraData(iter__,0)
            >6 liqRibTranslator::getCameraInfo(|camera1_group|camera1|cameraShape1,)
              >7 liqRibTranslator::portFieldOfView(224,150,&horizontal,&vertical,&fnCamera)
                >8 liqRibTranslator::computeViewingFrustum(1.49333,,&left,&right,&bottom,&top,|camera1_group|camera1|cameraShape1)
            >6 liqRibTranslator::getCameraFilmOffset(|camera1_group|camera1|cameraShape1,)
            >6 liqRibTranslator::getCameraTransform(|camera1_group|camera1|cameraShape1,)
        >4 liqRibTranslatorNew::doTextures(size=0)
          >5 Renderer::frameEpilogue(txtList_.size=0)
        >4 liqRibTranslatorNew::doShadows(size=0)
          >5 Renderer::doShadows(shadowList_.size=0)
        >4 Renderer::setRenderScriptFormatAndCompress(0,0)
        >4 Renderer::isHeroPassReady(cameraShape1)
        >4 Renderer::HeroPassBegin(cameraShape1)
        >4 tHeroRibWriterMgr::write(liqglo___,cameraShape1,9,0)
          >5 liqRibTranslatorNew::ribPrologue__(cameraShape1)
            >6 Renderer::ribPrologue_begin(cameraShape1)
              >7 Renderer::dummyPhongShader()
            >6 Renderer::ribPrologue_comment(2.3.5 (buildtime=20:51:12.30),R:/MyDocuments/maya/projects/default/checker_anim,yaoyansi,time)
            >6 Renderer::ribPrologue_options(cameraShape1)
          >5 liqRibTranslatorNew::framePrologue__(9,cameraShape1)
            >6 Renderer::framePrologue(9,cameraShape1)
              >7 Renderer::framePrologue_camera(9,cameraShape1)
                >8 Renderer::gatherCameraShaders(cameraShaders.size=0,|camera1_group|camera1|cameraShape1,liqEnvironmentShader)
                >8 Renderer::cameraOutput(cameraShape1)
          >5 ShaderMgr::exportShaderGraph()
            >6 ConvertShadingNetwork::exportShaderGraph()
              >7 ConvertShadingNetwork::beforeExport()
              >7 ConvertShadingNetwork::__export()
                >8 ConvertShadingNetwork::canShadingGroupExported(phong1SG)
                >8 Renderer::getValidShaderPlugsInShadingGroup()
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,surfaceShader)
                  >9 ConvertShadingNetwork::canShaderExported(phong1)
                  >9 ConvertShadingNetwork::exportShaderBegin(phong1)
                  >9 ConvertShadingNetwork::convertShadingNetworkToRSL(phong1,surfaceShader)
                    >10 Visitor::initShaderData(phong1,surfaceShader)
                    >10 ConvertShadingNetwork::getUpstreamConvertibleNodes(phong1, nodes, numConnections)
                      >11 ConvertShadingNetwork::nodeIsConvertible(phong1)
                        >12 ShaderMgr::hasShaderType(phong)
                      >11 ShaderMgr::getValidConnection(phong1)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.colorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.colorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.colorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.colorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.colorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.colorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.color)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                        >12 ConvertShadingNetwork::nodeIsConvertible(checker1)
                          >13 ShaderMgr::hasShaderType(checker)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.transparencyR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.transparencyG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.transparencyB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraX)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraX)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraY)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraY)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraZ)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraZ)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.specularColorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.specularColorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.specularColorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outColorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outColorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outColorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outColorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outColorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outColorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                        >12 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                          >13 ShaderMgr::hasShaderType(shadingEngine)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                      >11 ConvertShadingNetwork::getUpstreamConvertibleNodes(checker1, nodes, numConnections)
                        >12 ConvertShadingNetwork::nodeIsConvertible(checker1)
                          >13 ShaderMgr::hasShaderType(checker)
                        >12 ShaderMgr::getValidConnection(checker1)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1R)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1R)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1G)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1G)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1B)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1B)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2R)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2R)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2G)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2G)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2B)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2B)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.uCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.uCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.vCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.vCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                            >14 ShaderMgr::hasShaderType(place2dTexture)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                          >13 ConvertShadingNetwork::nodeIsConvertible(phong1)
                            >14 ShaderMgr::hasShaderType(phong)
                        >12 ConvertShadingNetwork::getUpstreamConvertibleNodes(place2dTexture1, nodes, numConnections)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                            >14 ShaderMgr::hasShaderType(place2dTexture)
                          >13 ShaderMgr::getValidConnection(place2dTexture1)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.vCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.vCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverage)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverage)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offset)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offset)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                              >15 ShaderMgr::hasShaderType(animCurveTU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                              >15 ShaderMgr::hasShaderType(animCurveTU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrame)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrame)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                            >14 ConvertShadingNetwork::nodeIsConvertible(checker1)
                              >15 ShaderMgr::hasShaderType(checker)
                    >10 Visitor::preOutput(phong1)
                    >10 Visitor::outputBegin(phong1)
                    >10 ConvertShadingNetwork::traverseGraphAndOutputNodeFunctions( nodes, numConnections)
                      >11 Visitor::outputUpstreamShader(place2dTexture1)
                        >12 ShaderOutputVisitor::_outputUpstreamShader(place2dTexture1,place2dTexture)
                          >13 Visitor::visitPlace2dTexture(place2dTexture1)
                            >14 OutputHelper::beginRSL(maya_place2dTexture,place2dTexture1)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.uvCoord)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.coverageU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.coverageV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.mirrorU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.mirrorV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.noiseU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.noiseV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.offsetU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.offsetV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.repeatU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                                >16 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                                  >17 ShaderMgr::hasShaderType(animCurveTU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.repeatV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                                >16 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                                  >17 ShaderMgr::hasShaderType(animCurveTU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.rotateFrame)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.rotateUV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.stagger)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.translateFrameU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.translateFrameV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.wrapU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.wrapV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.outUV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                                >16 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                  >17 ShaderMgr::hasShaderType(checker)
                            >14 OutputHelper::endRSL()
                      >11 ShaderMgr::getValidConnection(place2dTexture1)
                      >11 ConvertShadingNetwork::decrementDownstreamConnections(place2dTexture1, nodes, numConnections, validConnections)
                      >11 ConvertShadingNetwork::getNodeVariables(place2dTexture1, validConnections,  inputSrc, inputDes, outputSrc)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.vCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.vCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverage)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverage)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseUV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseUV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offset)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offset)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                            >14 ShaderMgr::hasShaderType(animCurveTU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                            >14 ShaderMgr::hasShaderType(animCurveTU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatUV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatUV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrame)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrame)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                        >12 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture1,outUV,place2dTexture1.outUV, outputVars)
                          >13 Visitor::addShaderMethodVariavles(place2dTexture1,outUV,float,2,)
                      >11 Visitor::addShaderMethodBody(place2dTexture1,,,place2dTexture1.outUV124)
                      >11 Visitor::outputUpstreamShader(checker1)
                        >12 ShaderOutputVisitor::_outputUpstreamShader(checker1,checker)
                          >13 Visitor::visitChecker(checker1)
                            >14 OutputHelper::beginRSL(maya_checker,checker1)
                            >14 ShaderMgr::convertibleConnection(checker1.alphaGain)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                            >14 ShaderMgr::convertibleConnection(checker1.alphaIsLuminance)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                            >14 ShaderMgr::convertibleConnection(checker1.alphaOffset)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                            >14 ShaderMgr::convertibleConnection(checker1.color1)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                            >14 ShaderMgr::convertibleConnection(checker1.color2)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                            >14 ShaderMgr::convertibleConnection(checker1.colorGain)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                            >14 ShaderMgr::convertibleConnection(checker1.colorOffset)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                            >14 ShaderMgr::convertibleConnection(checker1.contrast)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                            >14 ShaderMgr::convertibleConnection(checker1.defaultColor)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                            >14 ShaderMgr::convertibleConnection(checker1.filter)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                            >14 ShaderMgr::convertibleConnection(checker1.filterOffset)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                            >14 ShaderMgr::convertibleConnection(checker1.invert)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                            >14 ShaderMgr::convertibleConnection(checker1.uvCoord)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                                >16 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                                  >17 ShaderMgr::hasShaderType(place2dTexture)
                            >14 ShaderMgr::convertibleConnection(checker1.outAlpha)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                            >14 ShaderMgr::convertibleConnection(checker1.outColor)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                                >16 ConvertShadingNetwork::nodeIsConvertible(phong1)
                                  >17 ShaderMgr::hasShaderType(phong)
                            >14 OutputHelper::endRSL()
                      >11 ShaderMgr::getValidConnection(checker1)
                      >11 ConvertShadingNetwork::decrementDownstreamConnections(checker1, nodes, numConnections, validConnections)
                      >11 ConvertShadingNetwork::getNodeVariables(checker1, validConnections,  inputSrc, inputDes, outputSrc)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1R)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1R)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1G)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1G)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1B)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1B)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2R)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2R)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2G)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2G)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2B)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2B)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.uCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.uCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.vCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.vCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                            >14 ShaderMgr::hasShaderType(place2dTexture)
                        >12 ConvertShadingNetwork::addNodeInputVariable(checker1.uvCoord, inputSrc, inputDes)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                            >14 ShaderMgr::hasShaderType(place2dTexture)
                          >13 ShaderMgr::getValidConnection(place2dTexture1)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                          >13 ConvertShadingNetwork::nodeIsConvertible(phong1)
                            >14 ShaderMgr::hasShaderType(phong)
                        >12 ConvertShadingNetwork::addNodeOutputVariable(checker1,outColor,checker1.outColor, outputVars)
                          >13 Visitor::addShaderMethodVariavles(checker1,outColor,color,-1,)
                      >11 Visitor::addShaderMethodBody(checker1,place2dTexture1.outUV124,checker1.uvCoord124,checker1.outColor124)
                      >11 Visitor::outputUpstreamShader(phong1)
                        >12 ShaderOutputVisitor::_outputUpstreamShader(phong1,phong)
                          >13 Visitor::visitPhong(phong1)
                            >14 OutputHelper::beginRSL(maya_phong,phong1)
                            >14 ShaderMgr::convertibleConnection(phong1.color)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.color)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                                >16 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                  >17 ShaderMgr::hasShaderType(checker)
                            >14 ShaderMgr::convertibleConnection(phong1.transparency)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                            >14 ShaderMgr::convertibleConnection(phong1.ambientColor)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                            >14 ShaderMgr::convertibleConnection(phong1.incandescence)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                            >14 OutputHelper::add_liq_UserDefinedNormal(phong1)
                            >14 ShaderMgr::convertibleConnection(phong1.normalCamera)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                            >14 ShaderMgr::convertibleConnection(phong1.diffuse)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                            >14 ShaderMgr::convertibleConnection(phong1.translucence)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                            >14 ShaderMgr::convertibleConnection(phong1.translucenceDepth)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                            >14 ShaderMgr::convertibleConnection(phong1.translucenceFocus)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                            >14 ShaderMgr::convertibleConnection(phong1.cosinePower)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                            >14 ShaderMgr::convertibleConnection(phong1.specularColor)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                            >14 ShaderMgr::convertibleConnection(phong1.reflectivity)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                            >14 ShaderMgr::convertibleConnection(phong1.reflectedColor)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                            >14 ShaderMgr::convertibleConnection(phong1.matteOpacityMode)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                            >14 ShaderMgr::convertibleConnection(phong1.matteOpacity)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                            >14 ShaderMgr::convertibleConnection(phong1.reflectionLimit)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                            >14 ShaderMgr::convertibleConnection(phong1.outColor)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                                >16 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                                  >17 ShaderMgr::hasShaderType(shadingEngine)
                            >14 ShaderMgr::convertibleConnection(phong1.outTransparency)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                            >14 OutputHelper::endRSL()
                      >11 ShaderMgr::getValidConnection(phong1)
                      >11 ConvertShadingNetwork::decrementDownstreamConnections(phong1, nodes, numConnections, validConnections)
                      >11 ConvertShadingNetwork::getNodeVariables(phong1, validConnections,  inputSrc, inputDes, outputSrc)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.color)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                        >12 ConvertShadingNetwork::addNodeInputVariable(phong1.color, inputSrc, inputDes)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                          >13 ShaderMgr::getValidConnection(checker1)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraX)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraX)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraY)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraY)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraZ)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraZ)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                          >13 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                            >14 ShaderMgr::hasShaderType(shadingEngine)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                      >11 Visitor::addShaderMethodBody(phong1,checker1.outColor124,phong1.color124,)
                    >10 ConvertShadingNetwork::outputShaderMethod()
                      >11 Visitor::outputShaderMethod()
                    >10 Visitor::outputEnd()
                    >10 Visitor::postOutput()
                  >9 ConvertShadingNetwork::exportShaderEnd(phong1)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,displacementShader)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,volumeShader)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,liqShadowShader)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,liqEnvironmentShader)
                >8 ConvertShadingNetwork::exportShadingGroupBegin(phong1SG)
                >8 ConvertShadingNetwork::outputShadingGroup(phong1SG)
                  >9 Visitor::outputShadingGroup(phong1SG)
                >8 ConvertShadingNetwork::exportShadingGroupEnd(phong1SG)
              >7  ConvertShadingNetwork::afterExport()
          >5 liqRibTranslatorNew::worldPrologue__(cameraShape1)
            >6 Renderer::worldPrologue(cameraShape1)
          >5 liqRibTranslatorNew::lightBlock__(cameraShape1)
            >6 Renderer::writeLight_pre(|pointLight1|pointLightShape1,cameraShape1)
            >6 liqRibObj::writeObject(,cameraShape1,0)
              >7 liqRibLightData::write(,job=cameraShape1,0)
                >8 liqRibData::getFullPathName()
                >8 Renderer::write(|pointLight1|pointLightShape1,,cameraShape1,ref=0)
                  >9 liqRibData::getFullPathName()
                  >9 er_writeLightData.cpp::_write(|pointLight1|pointLightShape1,cameraShape1,...)
                    >10 Renderer::exportPointLight(pointlight,pointLightShape1,...)
                      >11 addLightGroupForLight(|pointLight1|pointLightShape1)
            >6 Renderer::writeLight_post(|pointLight1|pointLightShape1,cameraShape1)
            >6 Renderer::writeLight_pre(|pointLight2|pointLightShape2,cameraShape1)
            >6 liqRibObj::writeObject(,cameraShape1,0)
              >7 liqRibLightData::write(,job=cameraShape1,0)
                >8 liqRibData::getFullPathName()
                >8 Renderer::write(|pointLight2|pointLightShape2,,cameraShape1,ref=0)
                  >9 liqRibData::getFullPathName()
                  >9 er_writeLightData.cpp::_write(|pointLight2|pointLightShape2,cameraShape1,...)
                    >10 Renderer::exportPointLight(pointlight,pointLightShape2,...)
                      >11 addLightGroupForLight(|pointLight2|pointLightShape2)
            >6 Renderer::writeLight_post(|pointLight2|pointLightShape2,cameraShape1)
          >5 liqRibTranslatorNew::coordSysBlock__(cameraShape1)
            >6 Renderer::coordSysBlock__(cameraShape1)
          >5 liqRibTranslatorNew::objectBlock__(cameraShape1)
            >6 liqRibTranslatorNew::objectBlock_data(cameraShape1)
              >7 liqRibTranslatorNew::getShadowSetObject(cameraShape1)
              >7 liqRibTranslatorNew::oneObjectBlock_data(|pPlane2|pPlaneShape11,cameraShape1)
                >8 Renderer::exportOneObject_data(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::_writeObject(|pPlane2|pPlaneShape11,cameraShape1,0,0,0)
                    >10 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.9.rib,cameraShape1,0)
                      >11 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.9.rib,job=cameraShape1,0)
                        >12 liqRibData::getFullPathName()
                        >12 Renderer::write(|pPlane2|pPlaneShape11,R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.9.rib,cameraShape1,ref=0)
                          >13 liqRibData::getFullPathName()
                          >13 er_writeMeshData.cpp::_write1(|pPlane2|pPlaneShape11,cameraShape1)
                            >14 liqRibHT::find(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                            >14 _exportVertexFromNodePlug(|pPlane2|pPlaneShape11,0)
                            >14 liqRibData::getFullPathName()
            >6 liqRibTranslatorNew::objectBlock_reference(cameraShape1)
              >7 Renderer::objectBlock_reference_begin()
              >7 liqRibTranslatorNew::preGeometryMel()
                >8 Renderer::preGeometryMel()
              >7 liqRibTranslatorNew::getShadowSetObject(cameraShape1)
              >7 liqRibTranslatorNew::oneObjectBlock_reference(|pPlane2|pPlaneShape11,cameraShape1)
                >8 Renderer::oneObjectBlock_reference_attribute_begin(|pPlane2|pPlaneShape11,cameraShape1)
                >8 Renderer::oneObjectBlock_reference_attribute_block0(|pPlane2|pPlaneShape11,cameraShape1)
                >8 liqRibTranslatorNew::tRiIlluminate(cameraShape1,|pPlane2|pPlaneShape11)
                  >9 Renderer::exportLightLinks(cameraShape1,|pPlane2|pPlaneShape11,lightedByWhichLightShapes.size=2)
                >8 liqRibTranslatorNew::checkSurfaceShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                >8 liqRibTranslatorNew::checkDisplacementShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                >8 liqRibTranslatorNew::checkVolumeShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                >8 Renderer::oneObjectBlock_reference_attribute_block1(|pPlane2|pPlaneShape11,cameraShape1)
                >8 liqRibTranslatorNew::writeShader_(1,|pPlane2|pPlaneShape11,v=0,s=0,c=0,,|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                >8 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|pPlane2|pPlaneShape11)
                >8 Renderer::exportOneObject_reference(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 liqRibData::getFullPathName()
                  >9 liqRibData::getFullPathName()
                  >9 liqRibData::getFullPathName()
                >8 Renderer::oneObjectBlock_reference_attribute_end(|pPlane2|pPlaneShape11,cameraShape1)
              >7 Renderer::objectBlock_reference_end()
          >5 liqRibTranslatorNew::worldEpilogue__()
            >6 liqRibTranslator::worldEpilogue()
              >7 Renderer::worldEpilogue()
          >5 liqRibTranslatorNew::frameEpilogue__(9)
            >6 Renderer::frameEpilogue(9)
          >5 liqRibTranslatorNew::ribEpilogue__(cameraShape1)
            >6 Renderer::ribPrologue_end(cameraShape1)
              >7 Renderer::cookInstanceGroup()
              >7 Renderer::render()
        >4 Renderer::HeroPassEnd(cameraShape1)
      >3 liqRenderScript::addJob(job.title=checker_animFrame8,0)
        >4 liqRenderScript::popNextJobID()
      >3 tFrameScriptJobMgr::setCommonParameters(checker_animFrame9)
      >3 liqRibTranslatorNew::processOneFrame(9, liqglo__)
        >4 liqRibTranslatorNew::buildJobs__()
          >5 liqRibTranslatorNew::buildShadowJobs__()
            >6 tJobScriptMgr::buildShadowJob(thisJob___, 0)
            >6 tJobScriptMgr::buildShadowCameraJob(thisJob___, 0)
          >5 tRibCameraMgr::gatherDataForJob(liqglo___, ,jobList__,0,1)
          >5 liqRibTranslator::generateFileName(4,cameraShape1)
          >5 liqRibTranslator::generateFileName(5,cameraShape1)
            >6 liqRibTranslator::generateImageName(, job(cameraShape1)), 
        >4 liqRibTranslatorNew::calaculateSamplingTime(10)
        >4 liqRibTranslatorNew::scanScene__(10,0)
          >5 tJobScriptMgr::scanScene(10,0, htable__, count, returnStatus__)
            >6 liqRibHT::insert(|pointLight1|pointLightShape1,lframe,0,3,0,matrix,,-1)
              >7 liqRibHT::hash(|pointLight1|pointLightShape1,0)
              >7 liqRibHT::find(|pointLight1|pointLightShape1,|pointLight1|pointLightShape1,3)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|pointLight1|pointLightShape1,0,3,-1)
                >8 liqRibNode::parseVectorAttributes(pointLight1,,2)
                >8 liqRibNode::parseVectorAttributes(pointLight1,,3)
                >8 liqRibNode::parseVectorAttributes(pointLight1,,4)
                >8 liqRibNode::findShadingGroup(|pointLight1|pointLightShape1,3)
                >8 liqRibNode::findShader()
                >8 liqRibNode::findDisp()
                >8 liqRibNode::findVolume()
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|pointLight1|pointLightShape1,3)
                  >9 liqRibLightData::liqRibLightData(|pointLight1|pointLightShape1)
                    >10 liqRibData::addAdditionalSurfaceParameters(pointLightShape1)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 liqRibHT::insert(|pointLight2|pointLightShape2,lframe,0,3,1,matrix,,-1)
              >7 liqRibHT::hash(|pointLight2|pointLightShape2,1)
              >7 liqRibHT::find(|pointLight2|pointLightShape2,|pointLight2|pointLightShape2,3)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|pointLight2|pointLightShape2,0,3,-1)
                >8 liqRibNode::parseVectorAttributes(pointLight2,,2)
                >8 liqRibNode::parseVectorAttributes(pointLight2,,3)
                >8 liqRibNode::parseVectorAttributes(pointLight2,,4)
                >8 liqRibNode::findShadingGroup(|pointLight2|pointLightShape2,3)
                >8 liqRibNode::findShader()
                >8 liqRibNode::findDisp()
                >8 liqRibNode::findVolume()
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|pointLight2|pointLightShape2,3)
                  >9 liqRibLightData::liqRibLightData(|pointLight2|pointLightShape2)
                    >10 liqRibData::addAdditionalSurfaceParameters(pointLightShape2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
          >5 tLocatorMgr::scanScene(10,0,htable__,count__,returnStatus__)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,10,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,10,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,10,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,10,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,10,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,10,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,10,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,10,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,10,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,10,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,10,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,10,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,10,0,&count)
            >6 liqRibHT::insert(|pPlane2|pPlaneShape11,lframe,0,0,2,matrix,,-1)
              >7 liqRibHT::hash(|pPlane2|pPlaneShape11,2)
              >7 liqRibHT::find(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|pPlane2|pPlaneShape11,0,0,-1)
                >8 liqRibNode::parseVectorAttributes(pPlane2,,2)
                >8 liqRibNode::parseVectorAttributes(pPlane2,,3)
                >8 liqRibNode::parseVectorAttributes(pPlane2,,4)
                >8 liqRibNode::findShadingGroup(|pPlane2|pPlaneShape11,0)
                >8 liqRibNode::findShader()
                >8 liqRibNode::findDisp()
                >8 liqRibNode::findVolume()
                >8 liqRibNode::getColor(&shader,&color)
                >8 liqRibNode::getOpacity(&shader,&color)
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|pPlane2|pPlaneShape11,0)
                  >9 liqRibMeshData::liqRibMeshData(|pPlane2|pPlaneShape11)
                    >10 liqRibData::addAdditionalSurfaceParameters(pPlaneShape11)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,10,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,10,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,10,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,10,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,10,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,10,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,10,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,10,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,10,0,&count)
            >6 liqRibHT::insert(|camera1_group|camera1_aim|camera1_aimShape,lframe,0,0,3,matrix,,-1)
              >7 liqRibHT::hash(|camera1_group|camera1_aim|camera1_aimShape,3)
              >7 liqRibHT::find(|camera1_group|camera1_aim|camera1_aimShape,|camera1_group|camera1_aim|camera1_aimShape,0)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|camera1_group|camera1_aim|camera1_aimShape,0,0,-1)
                >8 liqRibNode::parseVectorAttributes(camera1_aim,,2)
                >8 liqRibNode::parseVectorAttributes(camera1_aim,,3)
                >8 liqRibNode::parseVectorAttributes(camera1_aim,,4)
                >8 liqRibNode::findShadingGroup(|camera1_group|camera1_aim|camera1_aimShape,0)
                >8 liqRibNode::findShader()
                >8 liqRibNode::findDisp()
                >8 liqRibNode::findVolume()
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|camera1_group|camera1_aim|camera1_aimShape,0)
          >5 liqRibTranslatorNew::dealwithParticleInstancedObjects(0,10,4)
          >5 liqRibTranslatorNew::getCameraData(iter__,0)
            >6 liqRibTranslator::getCameraInfo(|camera1_group|camera1|cameraShape1,)
              >7 liqRibTranslator::portFieldOfView(224,150,&horizontal,&vertical,&fnCamera)
                >8 liqRibTranslator::computeViewingFrustum(1.49333,,&left,&right,&bottom,&top,|camera1_group|camera1|cameraShape1)
            >6 liqRibTranslator::getCameraFilmOffset(|camera1_group|camera1|cameraShape1,)
            >6 liqRibTranslator::getCameraTransform(|camera1_group|camera1|cameraShape1,)
        >4 liqRibTranslatorNew::doTextures(size=0)
          >5 Renderer::frameEpilogue(txtList_.size=0)
        >4 liqRibTranslatorNew::doShadows(size=0)
          >5 Renderer::doShadows(shadowList_.size=0)
        >4 Renderer::setRenderScriptFormatAndCompress(0,0)
        >4 Renderer::isHeroPassReady(cameraShape1)
        >4 Renderer::HeroPassBegin(cameraShape1)
        >4 tHeroRibWriterMgr::write(liqglo___,cameraShape1,10,0)
          >5 liqRibTranslatorNew::ribPrologue__(cameraShape1)
            >6 Renderer::ribPrologue_begin(cameraShape1)
              >7 Renderer::dummyPhongShader()
            >6 Renderer::ribPrologue_comment(2.3.5 (buildtime=20:51:12.30),R:/MyDocuments/maya/projects/default/checker_anim,yaoyansi,time)
            >6 Renderer::ribPrologue_options(cameraShape1)
          >5 liqRibTranslatorNew::framePrologue__(10,cameraShape1)
            >6 Renderer::framePrologue(10,cameraShape1)
              >7 Renderer::framePrologue_camera(10,cameraShape1)
                >8 Renderer::gatherCameraShaders(cameraShaders.size=0,|camera1_group|camera1|cameraShape1,liqEnvironmentShader)
                >8 Renderer::cameraOutput(cameraShape1)
          >5 ShaderMgr::exportShaderGraph()
            >6 ConvertShadingNetwork::exportShaderGraph()
              >7 ConvertShadingNetwork::beforeExport()
              >7 ConvertShadingNetwork::__export()
                >8 ConvertShadingNetwork::canShadingGroupExported(phong1SG)
                >8 Renderer::getValidShaderPlugsInShadingGroup()
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,surfaceShader)
                  >9 ConvertShadingNetwork::canShaderExported(phong1)
                  >9 ConvertShadingNetwork::exportShaderBegin(phong1)
                  >9 ConvertShadingNetwork::convertShadingNetworkToRSL(phong1,surfaceShader)
                    >10 Visitor::initShaderData(phong1,surfaceShader)
                    >10 ConvertShadingNetwork::getUpstreamConvertibleNodes(phong1, nodes, numConnections)
                      >11 ConvertShadingNetwork::nodeIsConvertible(phong1)
                        >12 ShaderMgr::hasShaderType(phong)
                      >11 ShaderMgr::getValidConnection(phong1)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.colorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.colorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.colorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.colorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.colorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.colorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.color)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                        >12 ConvertShadingNetwork::nodeIsConvertible(checker1)
                          >13 ShaderMgr::hasShaderType(checker)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.transparencyR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.transparencyG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.transparencyB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraX)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraX)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraY)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraY)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraZ)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraZ)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.specularColorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.specularColorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.specularColorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outColorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outColorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outColorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outColorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outColorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outColorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                        >12 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                          >13 ShaderMgr::hasShaderType(shadingEngine)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                      >11 ConvertShadingNetwork::getUpstreamConvertibleNodes(checker1, nodes, numConnections)
                        >12 ConvertShadingNetwork::nodeIsConvertible(checker1)
                          >13 ShaderMgr::hasShaderType(checker)
                        >12 ShaderMgr::getValidConnection(checker1)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1R)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1R)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1G)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1G)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1B)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1B)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2R)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2R)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2G)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2G)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2B)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2B)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.uCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.uCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.vCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.vCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                            >14 ShaderMgr::hasShaderType(place2dTexture)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                          >13 ConvertShadingNetwork::nodeIsConvertible(phong1)
                            >14 ShaderMgr::hasShaderType(phong)
                        >12 ConvertShadingNetwork::getUpstreamConvertibleNodes(place2dTexture1, nodes, numConnections)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                            >14 ShaderMgr::hasShaderType(place2dTexture)
                          >13 ShaderMgr::getValidConnection(place2dTexture1)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.vCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.vCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverage)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverage)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offset)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offset)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                              >15 ShaderMgr::hasShaderType(animCurveTU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                              >15 ShaderMgr::hasShaderType(animCurveTU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrame)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrame)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                            >14 ConvertShadingNetwork::nodeIsConvertible(checker1)
                              >15 ShaderMgr::hasShaderType(checker)
                    >10 Visitor::preOutput(phong1)
                    >10 Visitor::outputBegin(phong1)
                    >10 ConvertShadingNetwork::traverseGraphAndOutputNodeFunctions( nodes, numConnections)
                      >11 Visitor::outputUpstreamShader(place2dTexture1)
                        >12 ShaderOutputVisitor::_outputUpstreamShader(place2dTexture1,place2dTexture)
                          >13 Visitor::visitPlace2dTexture(place2dTexture1)
                            >14 OutputHelper::beginRSL(maya_place2dTexture,place2dTexture1)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.uvCoord)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.coverageU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.coverageV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.mirrorU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.mirrorV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.noiseU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.noiseV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.offsetU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.offsetV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.repeatU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                                >16 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                                  >17 ShaderMgr::hasShaderType(animCurveTU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.repeatV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                                >16 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                                  >17 ShaderMgr::hasShaderType(animCurveTU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.rotateFrame)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.rotateUV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.stagger)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.translateFrameU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.translateFrameV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.wrapU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.wrapV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.outUV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                                >16 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                  >17 ShaderMgr::hasShaderType(checker)
                            >14 OutputHelper::endRSL()
                      >11 ShaderMgr::getValidConnection(place2dTexture1)
                      >11 ConvertShadingNetwork::decrementDownstreamConnections(place2dTexture1, nodes, numConnections, validConnections)
                      >11 ConvertShadingNetwork::getNodeVariables(place2dTexture1, validConnections,  inputSrc, inputDes, outputSrc)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.vCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.vCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverage)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverage)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseUV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseUV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offset)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offset)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                            >14 ShaderMgr::hasShaderType(animCurveTU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                            >14 ShaderMgr::hasShaderType(animCurveTU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatUV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatUV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrame)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrame)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                        >12 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture1,outUV,place2dTexture1.outUV, outputVars)
                          >13 Visitor::addShaderMethodVariavles(place2dTexture1,outUV,float,2,)
                      >11 Visitor::addShaderMethodBody(place2dTexture1,,,place2dTexture1.outUV124)
                      >11 Visitor::outputUpstreamShader(checker1)
                        >12 ShaderOutputVisitor::_outputUpstreamShader(checker1,checker)
                          >13 Visitor::visitChecker(checker1)
                            >14 OutputHelper::beginRSL(maya_checker,checker1)
                            >14 ShaderMgr::convertibleConnection(checker1.alphaGain)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                            >14 ShaderMgr::convertibleConnection(checker1.alphaIsLuminance)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                            >14 ShaderMgr::convertibleConnection(checker1.alphaOffset)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                            >14 ShaderMgr::convertibleConnection(checker1.color1)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                            >14 ShaderMgr::convertibleConnection(checker1.color2)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                            >14 ShaderMgr::convertibleConnection(checker1.colorGain)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                            >14 ShaderMgr::convertibleConnection(checker1.colorOffset)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                            >14 ShaderMgr::convertibleConnection(checker1.contrast)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                            >14 ShaderMgr::convertibleConnection(checker1.defaultColor)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                            >14 ShaderMgr::convertibleConnection(checker1.filter)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                            >14 ShaderMgr::convertibleConnection(checker1.filterOffset)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                            >14 ShaderMgr::convertibleConnection(checker1.invert)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                            >14 ShaderMgr::convertibleConnection(checker1.uvCoord)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                                >16 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                                  >17 ShaderMgr::hasShaderType(place2dTexture)
                            >14 ShaderMgr::convertibleConnection(checker1.outAlpha)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                            >14 ShaderMgr::convertibleConnection(checker1.outColor)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                                >16 ConvertShadingNetwork::nodeIsConvertible(phong1)
                                  >17 ShaderMgr::hasShaderType(phong)
                            >14 OutputHelper::endRSL()
                      >11 ShaderMgr::getValidConnection(checker1)
                      >11 ConvertShadingNetwork::decrementDownstreamConnections(checker1, nodes, numConnections, validConnections)
                      >11 ConvertShadingNetwork::getNodeVariables(checker1, validConnections,  inputSrc, inputDes, outputSrc)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1R)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1R)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1G)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1G)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1B)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1B)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2R)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2R)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2G)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2G)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2B)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2B)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.uCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.uCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.vCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.vCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                            >14 ShaderMgr::hasShaderType(place2dTexture)
                        >12 ConvertShadingNetwork::addNodeInputVariable(checker1.uvCoord, inputSrc, inputDes)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                            >14 ShaderMgr::hasShaderType(place2dTexture)
                          >13 ShaderMgr::getValidConnection(place2dTexture1)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                          >13 ConvertShadingNetwork::nodeIsConvertible(phong1)
                            >14 ShaderMgr::hasShaderType(phong)
                        >12 ConvertShadingNetwork::addNodeOutputVariable(checker1,outColor,checker1.outColor, outputVars)
                          >13 Visitor::addShaderMethodVariavles(checker1,outColor,color,-1,)
                      >11 Visitor::addShaderMethodBody(checker1,place2dTexture1.outUV124,checker1.uvCoord124,checker1.outColor124)
                      >11 Visitor::outputUpstreamShader(phong1)
                        >12 ShaderOutputVisitor::_outputUpstreamShader(phong1,phong)
                          >13 Visitor::visitPhong(phong1)
                            >14 OutputHelper::beginRSL(maya_phong,phong1)
                            >14 ShaderMgr::convertibleConnection(phong1.color)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.color)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                                >16 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                  >17 ShaderMgr::hasShaderType(checker)
                            >14 ShaderMgr::convertibleConnection(phong1.transparency)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                            >14 ShaderMgr::convertibleConnection(phong1.ambientColor)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                            >14 ShaderMgr::convertibleConnection(phong1.incandescence)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                            >14 OutputHelper::add_liq_UserDefinedNormal(phong1)
                            >14 ShaderMgr::convertibleConnection(phong1.normalCamera)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                            >14 ShaderMgr::convertibleConnection(phong1.diffuse)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                            >14 ShaderMgr::convertibleConnection(phong1.translucence)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                            >14 ShaderMgr::convertibleConnection(phong1.translucenceDepth)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                            >14 ShaderMgr::convertibleConnection(phong1.translucenceFocus)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                            >14 ShaderMgr::convertibleConnection(phong1.cosinePower)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                            >14 ShaderMgr::convertibleConnection(phong1.specularColor)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                            >14 ShaderMgr::convertibleConnection(phong1.reflectivity)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                            >14 ShaderMgr::convertibleConnection(phong1.reflectedColor)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                            >14 ShaderMgr::convertibleConnection(phong1.matteOpacityMode)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                            >14 ShaderMgr::convertibleConnection(phong1.matteOpacity)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                            >14 ShaderMgr::convertibleConnection(phong1.reflectionLimit)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                            >14 ShaderMgr::convertibleConnection(phong1.outColor)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                                >16 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                                  >17 ShaderMgr::hasShaderType(shadingEngine)
                            >14 ShaderMgr::convertibleConnection(phong1.outTransparency)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                            >14 OutputHelper::endRSL()
                      >11 ShaderMgr::getValidConnection(phong1)
                      >11 ConvertShadingNetwork::decrementDownstreamConnections(phong1, nodes, numConnections, validConnections)
                      >11 ConvertShadingNetwork::getNodeVariables(phong1, validConnections,  inputSrc, inputDes, outputSrc)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.color)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                        >12 ConvertShadingNetwork::addNodeInputVariable(phong1.color, inputSrc, inputDes)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                          >13 ShaderMgr::getValidConnection(checker1)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraX)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraX)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraY)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraY)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraZ)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraZ)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                          >13 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                            >14 ShaderMgr::hasShaderType(shadingEngine)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                      >11 Visitor::addShaderMethodBody(phong1,checker1.outColor124,phong1.color124,)
                    >10 ConvertShadingNetwork::outputShaderMethod()
                      >11 Visitor::outputShaderMethod()
                    >10 Visitor::outputEnd()
                    >10 Visitor::postOutput()
                  >9 ConvertShadingNetwork::exportShaderEnd(phong1)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,displacementShader)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,volumeShader)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,liqShadowShader)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,liqEnvironmentShader)
                >8 ConvertShadingNetwork::exportShadingGroupBegin(phong1SG)
                >8 ConvertShadingNetwork::outputShadingGroup(phong1SG)
                  >9 Visitor::outputShadingGroup(phong1SG)
                >8 ConvertShadingNetwork::exportShadingGroupEnd(phong1SG)
              >7  ConvertShadingNetwork::afterExport()
          >5 liqRibTranslatorNew::worldPrologue__(cameraShape1)
            >6 Renderer::worldPrologue(cameraShape1)
          >5 liqRibTranslatorNew::lightBlock__(cameraShape1)
            >6 Renderer::writeLight_pre(|pointLight1|pointLightShape1,cameraShape1)
            >6 liqRibObj::writeObject(,cameraShape1,0)
              >7 liqRibLightData::write(,job=cameraShape1,0)
                >8 liqRibData::getFullPathName()
                >8 Renderer::write(|pointLight1|pointLightShape1,,cameraShape1,ref=0)
                  >9 liqRibData::getFullPathName()
                  >9 er_writeLightData.cpp::_write(|pointLight1|pointLightShape1,cameraShape1,...)
                    >10 Renderer::exportPointLight(pointlight,pointLightShape1,...)
                      >11 addLightGroupForLight(|pointLight1|pointLightShape1)
            >6 Renderer::writeLight_post(|pointLight1|pointLightShape1,cameraShape1)
            >6 Renderer::writeLight_pre(|pointLight2|pointLightShape2,cameraShape1)
            >6 liqRibObj::writeObject(,cameraShape1,0)
              >7 liqRibLightData::write(,job=cameraShape1,0)
                >8 liqRibData::getFullPathName()
                >8 Renderer::write(|pointLight2|pointLightShape2,,cameraShape1,ref=0)
                  >9 liqRibData::getFullPathName()
                  >9 er_writeLightData.cpp::_write(|pointLight2|pointLightShape2,cameraShape1,...)
                    >10 Renderer::exportPointLight(pointlight,pointLightShape2,...)
                      >11 addLightGroupForLight(|pointLight2|pointLightShape2)
            >6 Renderer::writeLight_post(|pointLight2|pointLightShape2,cameraShape1)
          >5 liqRibTranslatorNew::coordSysBlock__(cameraShape1)
            >6 Renderer::coordSysBlock__(cameraShape1)
          >5 liqRibTranslatorNew::objectBlock__(cameraShape1)
            >6 liqRibTranslatorNew::objectBlock_data(cameraShape1)
              >7 liqRibTranslatorNew::getShadowSetObject(cameraShape1)
              >7 liqRibTranslatorNew::oneObjectBlock_data(|pPlane2|pPlaneShape11,cameraShape1)
                >8 Renderer::exportOneObject_data(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::_writeObject(|pPlane2|pPlaneShape11,cameraShape1,0,0,0)
                    >10 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.10.rib,cameraShape1,0)
                      >11 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.10.rib,job=cameraShape1,0)
                        >12 liqRibData::getFullPathName()
                        >12 Renderer::write(|pPlane2|pPlaneShape11,R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.10.rib,cameraShape1,ref=0)
                          >13 liqRibData::getFullPathName()
                          >13 er_writeMeshData.cpp::_write1(|pPlane2|pPlaneShape11,cameraShape1)
                            >14 liqRibHT::find(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                            >14 _exportVertexFromNodePlug(|pPlane2|pPlaneShape11,0)
                            >14 liqRibData::getFullPathName()
            >6 liqRibTranslatorNew::objectBlock_reference(cameraShape1)
              >7 Renderer::objectBlock_reference_begin()
              >7 liqRibTranslatorNew::preGeometryMel()
                >8 Renderer::preGeometryMel()
              >7 liqRibTranslatorNew::getShadowSetObject(cameraShape1)
              >7 liqRibTranslatorNew::oneObjectBlock_reference(|pPlane2|pPlaneShape11,cameraShape1)
                >8 Renderer::oneObjectBlock_reference_attribute_begin(|pPlane2|pPlaneShape11,cameraShape1)
                >8 Renderer::oneObjectBlock_reference_attribute_block0(|pPlane2|pPlaneShape11,cameraShape1)
                >8 liqRibTranslatorNew::tRiIlluminate(cameraShape1,|pPlane2|pPlaneShape11)
                  >9 Renderer::exportLightLinks(cameraShape1,|pPlane2|pPlaneShape11,lightedByWhichLightShapes.size=2)
                >8 liqRibTranslatorNew::checkSurfaceShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                >8 liqRibTranslatorNew::checkDisplacementShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                >8 liqRibTranslatorNew::checkVolumeShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                >8 Renderer::oneObjectBlock_reference_attribute_block1(|pPlane2|pPlaneShape11,cameraShape1)
                >8 liqRibTranslatorNew::writeShader_(1,|pPlane2|pPlaneShape11,v=0,s=0,c=0,,|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                >8 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|pPlane2|pPlaneShape11)
                >8 Renderer::exportOneObject_reference(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 liqRibData::getFullPathName()
                  >9 liqRibData::getFullPathName()
                  >9 liqRibData::getFullPathName()
                >8 Renderer::oneObjectBlock_reference_attribute_end(|pPlane2|pPlaneShape11,cameraShape1)
              >7 Renderer::objectBlock_reference_end()
          >5 liqRibTranslatorNew::worldEpilogue__()
            >6 liqRibTranslator::worldEpilogue()
              >7 Renderer::worldEpilogue()
          >5 liqRibTranslatorNew::frameEpilogue__(10)
            >6 Renderer::frameEpilogue(10)
          >5 liqRibTranslatorNew::ribEpilogue__(cameraShape1)
            >6 Renderer::ribPrologue_end(cameraShape1)
              >7 Renderer::cookInstanceGroup()
              >7 Renderer::render()
        >4 Renderer::HeroPassEnd(cameraShape1)
      >3 liqRenderScript::addJob(job.title=checker_animFrame9,0)
        >4 liqRenderScript::popNextJobID()
      >3 tFrameScriptJobMgr::setCommonParameters(checker_animFrame10)
      >3 liqRibTranslatorNew::processOneFrame(10, liqglo__)
        >4 liqRibTranslatorNew::buildJobs__()
          >5 liqRibTranslatorNew::buildShadowJobs__()
            >6 tJobScriptMgr::buildShadowJob(thisJob___, 0)
            >6 tJobScriptMgr::buildShadowCameraJob(thisJob___, 0)
          >5 tRibCameraMgr::gatherDataForJob(liqglo___, ,jobList__,0,1)
          >5 liqRibTranslator::generateFileName(4,cameraShape1)
          >5 liqRibTranslator::generateFileName(5,cameraShape1)
            >6 liqRibTranslator::generateImageName(, job(cameraShape1)), 
        >4 liqRibTranslatorNew::calaculateSamplingTime(11)
        >4 liqRibTranslatorNew::scanScene__(11,0)
          >5 tJobScriptMgr::scanScene(11,0, htable__, count, returnStatus__)
            >6 liqRibHT::insert(|pointLight1|pointLightShape1,lframe,0,3,0,matrix,,-1)
              >7 liqRibHT::hash(|pointLight1|pointLightShape1,0)
              >7 liqRibHT::find(|pointLight1|pointLightShape1,|pointLight1|pointLightShape1,3)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|pointLight1|pointLightShape1,0,3,-1)
                >8 liqRibNode::parseVectorAttributes(pointLight1,,2)
                >8 liqRibNode::parseVectorAttributes(pointLight1,,3)
                >8 liqRibNode::parseVectorAttributes(pointLight1,,4)
                >8 liqRibNode::findShadingGroup(|pointLight1|pointLightShape1,3)
                >8 liqRibNode::findShader()
                >8 liqRibNode::findDisp()
                >8 liqRibNode::findVolume()
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|pointLight1|pointLightShape1,3)
                  >9 liqRibLightData::liqRibLightData(|pointLight1|pointLightShape1)
                    >10 liqRibData::addAdditionalSurfaceParameters(pointLightShape1)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 liqRibHT::insert(|pointLight2|pointLightShape2,lframe,0,3,1,matrix,,-1)
              >7 liqRibHT::hash(|pointLight2|pointLightShape2,1)
              >7 liqRibHT::find(|pointLight2|pointLightShape2,|pointLight2|pointLightShape2,3)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|pointLight2|pointLightShape2,0,3,-1)
                >8 liqRibNode::parseVectorAttributes(pointLight2,,2)
                >8 liqRibNode::parseVectorAttributes(pointLight2,,3)
                >8 liqRibNode::parseVectorAttributes(pointLight2,,4)
                >8 liqRibNode::findShadingGroup(|pointLight2|pointLightShape2,3)
                >8 liqRibNode::findShader()
                >8 liqRibNode::findDisp()
                >8 liqRibNode::findVolume()
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|pointLight2|pointLightShape2,3)
                  >9 liqRibLightData::liqRibLightData(|pointLight2|pointLightShape2)
                    >10 liqRibData::addAdditionalSurfaceParameters(pointLightShape2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
          >5 tLocatorMgr::scanScene(11,0,htable__,count__,returnStatus__)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,11,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,11,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,11,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,11,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,11,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,11,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,11,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,11,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,11,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,11,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,11,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,11,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,11,0,&count)
            >6 liqRibHT::insert(|pPlane2|pPlaneShape11,lframe,0,0,2,matrix,,-1)
              >7 liqRibHT::hash(|pPlane2|pPlaneShape11,2)
              >7 liqRibHT::find(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|pPlane2|pPlaneShape11,0,0,-1)
                >8 liqRibNode::parseVectorAttributes(pPlane2,,2)
                >8 liqRibNode::parseVectorAttributes(pPlane2,,3)
                >8 liqRibNode::parseVectorAttributes(pPlane2,,4)
                >8 liqRibNode::findShadingGroup(|pPlane2|pPlaneShape11,0)
                >8 liqRibNode::findShader()
                >8 liqRibNode::findDisp()
                >8 liqRibNode::findVolume()
                >8 liqRibNode::getColor(&shader,&color)
                >8 liqRibNode::getOpacity(&shader,&color)
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|pPlane2|pPlaneShape11,0)
                  >9 liqRibMeshData::liqRibMeshData(|pPlane2|pPlaneShape11)
                    >10 liqRibData::addAdditionalSurfaceParameters(pPlaneShape11)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,11,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,11,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,11,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,11,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,11,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,11,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,11,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,11,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,11,0,&count)
            >6 liqRibHT::insert(|camera1_group|camera1_aim|camera1_aimShape,lframe,0,0,3,matrix,,-1)
              >7 liqRibHT::hash(|camera1_group|camera1_aim|camera1_aimShape,3)
              >7 liqRibHT::find(|camera1_group|camera1_aim|camera1_aimShape,|camera1_group|camera1_aim|camera1_aimShape,0)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|camera1_group|camera1_aim|camera1_aimShape,0,0,-1)
                >8 liqRibNode::parseVectorAttributes(camera1_aim,,2)
                >8 liqRibNode::parseVectorAttributes(camera1_aim,,3)
                >8 liqRibNode::parseVectorAttributes(camera1_aim,,4)
                >8 liqRibNode::findShadingGroup(|camera1_group|camera1_aim|camera1_aimShape,0)
                >8 liqRibNode::findShader()
                >8 liqRibNode::findDisp()
                >8 liqRibNode::findVolume()
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|camera1_group|camera1_aim|camera1_aimShape,0)
          >5 liqRibTranslatorNew::dealwithParticleInstancedObjects(0,11,4)
          >5 liqRibTranslatorNew::getCameraData(iter__,0)
            >6 liqRibTranslator::getCameraInfo(|camera1_group|camera1|cameraShape1,)
              >7 liqRibTranslator::portFieldOfView(224,150,&horizontal,&vertical,&fnCamera)
                >8 liqRibTranslator::computeViewingFrustum(1.49333,,&left,&right,&bottom,&top,|camera1_group|camera1|cameraShape1)
            >6 liqRibTranslator::getCameraFilmOffset(|camera1_group|camera1|cameraShape1,)
            >6 liqRibTranslator::getCameraTransform(|camera1_group|camera1|cameraShape1,)
        >4 liqRibTranslatorNew::doTextures(size=0)
          >5 Renderer::frameEpilogue(txtList_.size=0)
        >4 liqRibTranslatorNew::doShadows(size=0)
          >5 Renderer::doShadows(shadowList_.size=0)
        >4 Renderer::setRenderScriptFormatAndCompress(0,0)
        >4 Renderer::isHeroPassReady(cameraShape1)
        >4 Renderer::HeroPassBegin(cameraShape1)
        >4 tHeroRibWriterMgr::write(liqglo___,cameraShape1,11,0)
          >5 liqRibTranslatorNew::ribPrologue__(cameraShape1)
            >6 Renderer::ribPrologue_begin(cameraShape1)
              >7 Renderer::dummyPhongShader()
            >6 Renderer::ribPrologue_comment(2.3.5 (buildtime=20:51:12.30),R:/MyDocuments/maya/projects/default/checker_anim,yaoyansi,time)
            >6 Renderer::ribPrologue_options(cameraShape1)
          >5 liqRibTranslatorNew::framePrologue__(11,cameraShape1)
            >6 Renderer::framePrologue(11,cameraShape1)
              >7 Renderer::framePrologue_camera(11,cameraShape1)
                >8 Renderer::gatherCameraShaders(cameraShaders.size=0,|camera1_group|camera1|cameraShape1,liqEnvironmentShader)
                >8 Renderer::cameraOutput(cameraShape1)
          >5 ShaderMgr::exportShaderGraph()
            >6 ConvertShadingNetwork::exportShaderGraph()
              >7 ConvertShadingNetwork::beforeExport()
              >7 ConvertShadingNetwork::__export()
                >8 ConvertShadingNetwork::canShadingGroupExported(phong1SG)
                >8 Renderer::getValidShaderPlugsInShadingGroup()
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,surfaceShader)
                  >9 ConvertShadingNetwork::canShaderExported(phong1)
                  >9 ConvertShadingNetwork::exportShaderBegin(phong1)
                  >9 ConvertShadingNetwork::convertShadingNetworkToRSL(phong1,surfaceShader)
                    >10 Visitor::initShaderData(phong1,surfaceShader)
                    >10 ConvertShadingNetwork::getUpstreamConvertibleNodes(phong1, nodes, numConnections)
                      >11 ConvertShadingNetwork::nodeIsConvertible(phong1)
                        >12 ShaderMgr::hasShaderType(phong)
                      >11 ShaderMgr::getValidConnection(phong1)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.colorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.colorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.colorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.colorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.colorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.colorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.color)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                        >12 ConvertShadingNetwork::nodeIsConvertible(checker1)
                          >13 ShaderMgr::hasShaderType(checker)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.transparencyR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.transparencyG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.transparencyB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraX)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraX)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraY)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraY)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraZ)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraZ)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.specularColorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.specularColorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.specularColorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outColorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outColorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outColorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outColorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outColorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outColorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                        >12 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                          >13 ShaderMgr::hasShaderType(shadingEngine)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                      >11 ConvertShadingNetwork::getUpstreamConvertibleNodes(checker1, nodes, numConnections)
                        >12 ConvertShadingNetwork::nodeIsConvertible(checker1)
                          >13 ShaderMgr::hasShaderType(checker)
                        >12 ShaderMgr::getValidConnection(checker1)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1R)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1R)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1G)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1G)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1B)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1B)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2R)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2R)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2G)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2G)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2B)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2B)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.uCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.uCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.vCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.vCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                            >14 ShaderMgr::hasShaderType(place2dTexture)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                          >13 ConvertShadingNetwork::nodeIsConvertible(phong1)
                            >14 ShaderMgr::hasShaderType(phong)
                        >12 ConvertShadingNetwork::getUpstreamConvertibleNodes(place2dTexture1, nodes, numConnections)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                            >14 ShaderMgr::hasShaderType(place2dTexture)
                          >13 ShaderMgr::getValidConnection(place2dTexture1)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.vCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.vCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverage)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverage)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offset)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offset)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                              >15 ShaderMgr::hasShaderType(animCurveTU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                              >15 ShaderMgr::hasShaderType(animCurveTU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrame)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrame)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                            >14 ConvertShadingNetwork::nodeIsConvertible(checker1)
                              >15 ShaderMgr::hasShaderType(checker)
                    >10 Visitor::preOutput(phong1)
                    >10 Visitor::outputBegin(phong1)
                    >10 ConvertShadingNetwork::traverseGraphAndOutputNodeFunctions( nodes, numConnections)
                      >11 Visitor::outputUpstreamShader(place2dTexture1)
                        >12 ShaderOutputVisitor::_outputUpstreamShader(place2dTexture1,place2dTexture)
                          >13 Visitor::visitPlace2dTexture(place2dTexture1)
                            >14 OutputHelper::beginRSL(maya_place2dTexture,place2dTexture1)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.uvCoord)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.coverageU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.coverageV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.mirrorU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.mirrorV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.noiseU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.noiseV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.offsetU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.offsetV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.repeatU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                                >16 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                                  >17 ShaderMgr::hasShaderType(animCurveTU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.repeatV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                                >16 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                                  >17 ShaderMgr::hasShaderType(animCurveTU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.rotateFrame)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.rotateUV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.stagger)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.translateFrameU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.translateFrameV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.wrapU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.wrapV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.outUV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                                >16 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                  >17 ShaderMgr::hasShaderType(checker)
                            >14 OutputHelper::endRSL()
                      >11 ShaderMgr::getValidConnection(place2dTexture1)
                      >11 ConvertShadingNetwork::decrementDownstreamConnections(place2dTexture1, nodes, numConnections, validConnections)
                      >11 ConvertShadingNetwork::getNodeVariables(place2dTexture1, validConnections,  inputSrc, inputDes, outputSrc)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.vCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.vCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverage)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverage)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseUV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseUV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offset)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offset)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                            >14 ShaderMgr::hasShaderType(animCurveTU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                            >14 ShaderMgr::hasShaderType(animCurveTU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatUV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatUV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrame)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrame)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                        >12 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture1,outUV,place2dTexture1.outUV, outputVars)
                          >13 Visitor::addShaderMethodVariavles(place2dTexture1,outUV,float,2,)
                      >11 Visitor::addShaderMethodBody(place2dTexture1,,,place2dTexture1.outUV124)
                      >11 Visitor::outputUpstreamShader(checker1)
                        >12 ShaderOutputVisitor::_outputUpstreamShader(checker1,checker)
                          >13 Visitor::visitChecker(checker1)
                            >14 OutputHelper::beginRSL(maya_checker,checker1)
                            >14 ShaderMgr::convertibleConnection(checker1.alphaGain)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                            >14 ShaderMgr::convertibleConnection(checker1.alphaIsLuminance)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                            >14 ShaderMgr::convertibleConnection(checker1.alphaOffset)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                            >14 ShaderMgr::convertibleConnection(checker1.color1)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                            >14 ShaderMgr::convertibleConnection(checker1.color2)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                            >14 ShaderMgr::convertibleConnection(checker1.colorGain)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                            >14 ShaderMgr::convertibleConnection(checker1.colorOffset)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                            >14 ShaderMgr::convertibleConnection(checker1.contrast)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                            >14 ShaderMgr::convertibleConnection(checker1.defaultColor)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                            >14 ShaderMgr::convertibleConnection(checker1.filter)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                            >14 ShaderMgr::convertibleConnection(checker1.filterOffset)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                            >14 ShaderMgr::convertibleConnection(checker1.invert)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                            >14 ShaderMgr::convertibleConnection(checker1.uvCoord)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                                >16 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                                  >17 ShaderMgr::hasShaderType(place2dTexture)
                            >14 ShaderMgr::convertibleConnection(checker1.outAlpha)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                            >14 ShaderMgr::convertibleConnection(checker1.outColor)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                                >16 ConvertShadingNetwork::nodeIsConvertible(phong1)
                                  >17 ShaderMgr::hasShaderType(phong)
                            >14 OutputHelper::endRSL()
                      >11 ShaderMgr::getValidConnection(checker1)
                      >11 ConvertShadingNetwork::decrementDownstreamConnections(checker1, nodes, numConnections, validConnections)
                      >11 ConvertShadingNetwork::getNodeVariables(checker1, validConnections,  inputSrc, inputDes, outputSrc)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1R)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1R)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1G)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1G)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1B)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1B)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2R)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2R)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2G)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2G)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2B)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2B)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.uCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.uCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.vCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.vCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                            >14 ShaderMgr::hasShaderType(place2dTexture)
                        >12 ConvertShadingNetwork::addNodeInputVariable(checker1.uvCoord, inputSrc, inputDes)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                            >14 ShaderMgr::hasShaderType(place2dTexture)
                          >13 ShaderMgr::getValidConnection(place2dTexture1)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                          >13 ConvertShadingNetwork::nodeIsConvertible(phong1)
                            >14 ShaderMgr::hasShaderType(phong)
                        >12 ConvertShadingNetwork::addNodeOutputVariable(checker1,outColor,checker1.outColor, outputVars)
                          >13 Visitor::addShaderMethodVariavles(checker1,outColor,color,-1,)
                      >11 Visitor::addShaderMethodBody(checker1,place2dTexture1.outUV124,checker1.uvCoord124,checker1.outColor124)
                      >11 Visitor::outputUpstreamShader(phong1)
                        >12 ShaderOutputVisitor::_outputUpstreamShader(phong1,phong)
                          >13 Visitor::visitPhong(phong1)
                            >14 OutputHelper::beginRSL(maya_phong,phong1)
                            >14 ShaderMgr::convertibleConnection(phong1.color)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.color)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                                >16 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                  >17 ShaderMgr::hasShaderType(checker)
                            >14 ShaderMgr::convertibleConnection(phong1.transparency)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                            >14 ShaderMgr::convertibleConnection(phong1.ambientColor)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                            >14 ShaderMgr::convertibleConnection(phong1.incandescence)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                            >14 OutputHelper::add_liq_UserDefinedNormal(phong1)
                            >14 ShaderMgr::convertibleConnection(phong1.normalCamera)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                            >14 ShaderMgr::convertibleConnection(phong1.diffuse)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                            >14 ShaderMgr::convertibleConnection(phong1.translucence)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                            >14 ShaderMgr::convertibleConnection(phong1.translucenceDepth)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                            >14 ShaderMgr::convertibleConnection(phong1.translucenceFocus)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                            >14 ShaderMgr::convertibleConnection(phong1.cosinePower)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                            >14 ShaderMgr::convertibleConnection(phong1.specularColor)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                            >14 ShaderMgr::convertibleConnection(phong1.reflectivity)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                            >14 ShaderMgr::convertibleConnection(phong1.reflectedColor)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                            >14 ShaderMgr::convertibleConnection(phong1.matteOpacityMode)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                            >14 ShaderMgr::convertibleConnection(phong1.matteOpacity)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                            >14 ShaderMgr::convertibleConnection(phong1.reflectionLimit)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                            >14 ShaderMgr::convertibleConnection(phong1.outColor)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                                >16 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                                  >17 ShaderMgr::hasShaderType(shadingEngine)
                            >14 ShaderMgr::convertibleConnection(phong1.outTransparency)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                            >14 OutputHelper::endRSL()
                      >11 ShaderMgr::getValidConnection(phong1)
                      >11 ConvertShadingNetwork::decrementDownstreamConnections(phong1, nodes, numConnections, validConnections)
                      >11 ConvertShadingNetwork::getNodeVariables(phong1, validConnections,  inputSrc, inputDes, outputSrc)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.color)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                        >12 ConvertShadingNetwork::addNodeInputVariable(phong1.color, inputSrc, inputDes)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                          >13 ShaderMgr::getValidConnection(checker1)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraX)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraX)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraY)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraY)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraZ)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraZ)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                          >13 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                            >14 ShaderMgr::hasShaderType(shadingEngine)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                      >11 Visitor::addShaderMethodBody(phong1,checker1.outColor124,phong1.color124,)
                    >10 ConvertShadingNetwork::outputShaderMethod()
                      >11 Visitor::outputShaderMethod()
                    >10 Visitor::outputEnd()
                    >10 Visitor::postOutput()
                  >9 ConvertShadingNetwork::exportShaderEnd(phong1)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,displacementShader)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,volumeShader)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,liqShadowShader)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,liqEnvironmentShader)
                >8 ConvertShadingNetwork::exportShadingGroupBegin(phong1SG)
                >8 ConvertShadingNetwork::outputShadingGroup(phong1SG)
                  >9 Visitor::outputShadingGroup(phong1SG)
                >8 ConvertShadingNetwork::exportShadingGroupEnd(phong1SG)
              >7  ConvertShadingNetwork::afterExport()
          >5 liqRibTranslatorNew::worldPrologue__(cameraShape1)
            >6 Renderer::worldPrologue(cameraShape1)
          >5 liqRibTranslatorNew::lightBlock__(cameraShape1)
            >6 Renderer::writeLight_pre(|pointLight1|pointLightShape1,cameraShape1)
            >6 liqRibObj::writeObject(,cameraShape1,0)
              >7 liqRibLightData::write(,job=cameraShape1,0)
                >8 liqRibData::getFullPathName()
                >8 Renderer::write(|pointLight1|pointLightShape1,,cameraShape1,ref=0)
                  >9 liqRibData::getFullPathName()
                  >9 er_writeLightData.cpp::_write(|pointLight1|pointLightShape1,cameraShape1,...)
                    >10 Renderer::exportPointLight(pointlight,pointLightShape1,...)
                      >11 addLightGroupForLight(|pointLight1|pointLightShape1)
            >6 Renderer::writeLight_post(|pointLight1|pointLightShape1,cameraShape1)
            >6 Renderer::writeLight_pre(|pointLight2|pointLightShape2,cameraShape1)
            >6 liqRibObj::writeObject(,cameraShape1,0)
              >7 liqRibLightData::write(,job=cameraShape1,0)
                >8 liqRibData::getFullPathName()
                >8 Renderer::write(|pointLight2|pointLightShape2,,cameraShape1,ref=0)
                  >9 liqRibData::getFullPathName()
                  >9 er_writeLightData.cpp::_write(|pointLight2|pointLightShape2,cameraShape1,...)
                    >10 Renderer::exportPointLight(pointlight,pointLightShape2,...)
                      >11 addLightGroupForLight(|pointLight2|pointLightShape2)
            >6 Renderer::writeLight_post(|pointLight2|pointLightShape2,cameraShape1)
          >5 liqRibTranslatorNew::coordSysBlock__(cameraShape1)
            >6 Renderer::coordSysBlock__(cameraShape1)
          >5 liqRibTranslatorNew::objectBlock__(cameraShape1)
            >6 liqRibTranslatorNew::objectBlock_data(cameraShape1)
              >7 liqRibTranslatorNew::getShadowSetObject(cameraShape1)
              >7 liqRibTranslatorNew::oneObjectBlock_data(|pPlane2|pPlaneShape11,cameraShape1)
                >8 Renderer::exportOneObject_data(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::_writeObject(|pPlane2|pPlaneShape11,cameraShape1,0,0,0)
                    >10 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.11.rib,cameraShape1,0)
                      >11 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.11.rib,job=cameraShape1,0)
                        >12 liqRibData::getFullPathName()
                        >12 Renderer::write(|pPlane2|pPlaneShape11,R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.11.rib,cameraShape1,ref=0)
                          >13 liqRibData::getFullPathName()
                          >13 er_writeMeshData.cpp::_write1(|pPlane2|pPlaneShape11,cameraShape1)
                            >14 liqRibHT::find(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                            >14 _exportVertexFromNodePlug(|pPlane2|pPlaneShape11,0)
                            >14 liqRibData::getFullPathName()
            >6 liqRibTranslatorNew::objectBlock_reference(cameraShape1)
              >7 Renderer::objectBlock_reference_begin()
              >7 liqRibTranslatorNew::preGeometryMel()
                >8 Renderer::preGeometryMel()
              >7 liqRibTranslatorNew::getShadowSetObject(cameraShape1)
              >7 liqRibTranslatorNew::oneObjectBlock_reference(|pPlane2|pPlaneShape11,cameraShape1)
                >8 Renderer::oneObjectBlock_reference_attribute_begin(|pPlane2|pPlaneShape11,cameraShape1)
                >8 Renderer::oneObjectBlock_reference_attribute_block0(|pPlane2|pPlaneShape11,cameraShape1)
                >8 liqRibTranslatorNew::tRiIlluminate(cameraShape1,|pPlane2|pPlaneShape11)
                  >9 Renderer::exportLightLinks(cameraShape1,|pPlane2|pPlaneShape11,lightedByWhichLightShapes.size=2)
                >8 liqRibTranslatorNew::checkSurfaceShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                >8 liqRibTranslatorNew::checkDisplacementShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                >8 liqRibTranslatorNew::checkVolumeShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                >8 Renderer::oneObjectBlock_reference_attribute_block1(|pPlane2|pPlaneShape11,cameraShape1)
                >8 liqRibTranslatorNew::writeShader_(1,|pPlane2|pPlaneShape11,v=0,s=0,c=0,,|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                >8 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|pPlane2|pPlaneShape11)
                >8 Renderer::exportOneObject_reference(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 liqRibData::getFullPathName()
                  >9 liqRibData::getFullPathName()
                  >9 liqRibData::getFullPathName()
                >8 Renderer::oneObjectBlock_reference_attribute_end(|pPlane2|pPlaneShape11,cameraShape1)
              >7 Renderer::objectBlock_reference_end()
          >5 liqRibTranslatorNew::worldEpilogue__()
            >6 liqRibTranslator::worldEpilogue()
              >7 Renderer::worldEpilogue()
          >5 liqRibTranslatorNew::frameEpilogue__(11)
            >6 Renderer::frameEpilogue(11)
          >5 liqRibTranslatorNew::ribEpilogue__(cameraShape1)
            >6 Renderer::ribPrologue_end(cameraShape1)
              >7 Renderer::cookInstanceGroup()
              >7 Renderer::render()
        >4 Renderer::HeroPassEnd(cameraShape1)
      >3 liqRenderScript::addJob(job.title=checker_animFrame10,0)
        >4 liqRenderScript::popNextJobID()
      >3 tFrameScriptJobMgr::setCommonParameters(checker_animFrame11)
      >3 liqRibTranslatorNew::processOneFrame(11, liqglo__)
        >4 liqRibTranslatorNew::buildJobs__()
          >5 liqRibTranslatorNew::buildShadowJobs__()
            >6 tJobScriptMgr::buildShadowJob(thisJob___, 0)
            >6 tJobScriptMgr::buildShadowCameraJob(thisJob___, 0)
          >5 tRibCameraMgr::gatherDataForJob(liqglo___, ,jobList__,0,1)
          >5 liqRibTranslator::generateFileName(4,cameraShape1)
          >5 liqRibTranslator::generateFileName(5,cameraShape1)
            >6 liqRibTranslator::generateImageName(, job(cameraShape1)), 
        >4 liqRibTranslatorNew::calaculateSamplingTime(14)
        >4 liqRibTranslatorNew::scanScene__(14,0)
          >5 tJobScriptMgr::scanScene(14,0, htable__, count, returnStatus__)
            >6 liqRibHT::insert(|pointLight1|pointLightShape1,lframe,0,3,0,matrix,,-1)
              >7 liqRibHT::hash(|pointLight1|pointLightShape1,0)
              >7 liqRibHT::find(|pointLight1|pointLightShape1,|pointLight1|pointLightShape1,3)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|pointLight1|pointLightShape1,0,3,-1)
                >8 liqRibNode::parseVectorAttributes(pointLight1,,2)
                >8 liqRibNode::parseVectorAttributes(pointLight1,,3)
                >8 liqRibNode::parseVectorAttributes(pointLight1,,4)
                >8 liqRibNode::findShadingGroup(|pointLight1|pointLightShape1,3)
                >8 liqRibNode::findShader()
                >8 liqRibNode::findDisp()
                >8 liqRibNode::findVolume()
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|pointLight1|pointLightShape1,3)
                  >9 liqRibLightData::liqRibLightData(|pointLight1|pointLightShape1)
                    >10 liqRibData::addAdditionalSurfaceParameters(pointLightShape1)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 liqRibHT::insert(|pointLight2|pointLightShape2,lframe,0,3,1,matrix,,-1)
              >7 liqRibHT::hash(|pointLight2|pointLightShape2,1)
              >7 liqRibHT::find(|pointLight2|pointLightShape2,|pointLight2|pointLightShape2,3)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|pointLight2|pointLightShape2,0,3,-1)
                >8 liqRibNode::parseVectorAttributes(pointLight2,,2)
                >8 liqRibNode::parseVectorAttributes(pointLight2,,3)
                >8 liqRibNode::parseVectorAttributes(pointLight2,,4)
                >8 liqRibNode::findShadingGroup(|pointLight2|pointLightShape2,3)
                >8 liqRibNode::findShader()
                >8 liqRibNode::findDisp()
                >8 liqRibNode::findVolume()
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|pointLight2|pointLightShape2,3)
                  >9 liqRibLightData::liqRibLightData(|pointLight2|pointLightShape2)
                    >10 liqRibData::addAdditionalSurfaceParameters(pointLightShape2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
          >5 tLocatorMgr::scanScene(14,0,htable__,count__,returnStatus__)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,14,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,14,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,14,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,14,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,14,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,14,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,14,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,14,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,14,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,14,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,14,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,14,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,14,0,&count)
            >6 liqRibHT::insert(|pPlane2|pPlaneShape11,lframe,0,0,2,matrix,,-1)
              >7 liqRibHT::hash(|pPlane2|pPlaneShape11,2)
              >7 liqRibHT::find(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|pPlane2|pPlaneShape11,0,0,-1)
                >8 liqRibNode::parseVectorAttributes(pPlane2,,2)
                >8 liqRibNode::parseVectorAttributes(pPlane2,,3)
                >8 liqRibNode::parseVectorAttributes(pPlane2,,4)
                >8 liqRibNode::findShadingGroup(|pPlane2|pPlaneShape11,0)
                >8 liqRibNode::findShader()
                >8 liqRibNode::findDisp()
                >8 liqRibNode::findVolume()
                >8 liqRibNode::getColor(&shader,&color)
                >8 liqRibNode::getOpacity(&shader,&color)
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|pPlane2|pPlaneShape11,0)
                  >9 liqRibMeshData::liqRibMeshData(|pPlane2|pPlaneShape11)
                    >10 liqRibData::addAdditionalSurfaceParameters(pPlaneShape11)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,14,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,14,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,14,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,14,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,14,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,14,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,14,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,14,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,14,0,&count)
            >6 liqRibHT::insert(|camera1_group|camera1_aim|camera1_aimShape,lframe,0,0,3,matrix,,-1)
              >7 liqRibHT::hash(|camera1_group|camera1_aim|camera1_aimShape,3)
              >7 liqRibHT::find(|camera1_group|camera1_aim|camera1_aimShape,|camera1_group|camera1_aim|camera1_aimShape,0)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|camera1_group|camera1_aim|camera1_aimShape,0,0,-1)
                >8 liqRibNode::parseVectorAttributes(camera1_aim,,2)
                >8 liqRibNode::parseVectorAttributes(camera1_aim,,3)
                >8 liqRibNode::parseVectorAttributes(camera1_aim,,4)
                >8 liqRibNode::findShadingGroup(|camera1_group|camera1_aim|camera1_aimShape,0)
                >8 liqRibNode::findShader()
                >8 liqRibNode::findDisp()
                >8 liqRibNode::findVolume()
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|camera1_group|camera1_aim|camera1_aimShape,0)
          >5 liqRibTranslatorNew::dealwithParticleInstancedObjects(0,14,4)
          >5 liqRibTranslatorNew::getCameraData(iter__,0)
            >6 liqRibTranslator::getCameraInfo(|camera1_group|camera1|cameraShape1,)
              >7 liqRibTranslator::portFieldOfView(224,150,&horizontal,&vertical,&fnCamera)
                >8 liqRibTranslator::computeViewingFrustum(1.49333,,&left,&right,&bottom,&top,|camera1_group|camera1|cameraShape1)
            >6 liqRibTranslator::getCameraFilmOffset(|camera1_group|camera1|cameraShape1,)
            >6 liqRibTranslator::getCameraTransform(|camera1_group|camera1|cameraShape1,)
        >4 liqRibTranslatorNew::doTextures(size=0)
          >5 Renderer::frameEpilogue(txtList_.size=0)
        >4 liqRibTranslatorNew::doShadows(size=0)
          >5 Renderer::doShadows(shadowList_.size=0)
        >4 Renderer::setRenderScriptFormatAndCompress(0,0)
        >4 Renderer::isHeroPassReady(cameraShape1)
        >4 Renderer::HeroPassBegin(cameraShape1)
        >4 tHeroRibWriterMgr::write(liqglo___,cameraShape1,14,0)
          >5 liqRibTranslatorNew::ribPrologue__(cameraShape1)
            >6 Renderer::ribPrologue_begin(cameraShape1)
              >7 Renderer::dummyPhongShader()
            >6 Renderer::ribPrologue_comment(2.3.5 (buildtime=20:51:12.30),R:/MyDocuments/maya/projects/default/checker_anim,yaoyansi,time)
            >6 Renderer::ribPrologue_options(cameraShape1)
          >5 liqRibTranslatorNew::framePrologue__(14,cameraShape1)
            >6 Renderer::framePrologue(14,cameraShape1)
              >7 Renderer::framePrologue_camera(14,cameraShape1)
                >8 Renderer::gatherCameraShaders(cameraShaders.size=0,|camera1_group|camera1|cameraShape1,liqEnvironmentShader)
                >8 Renderer::cameraOutput(cameraShape1)
          >5 ShaderMgr::exportShaderGraph()
            >6 ConvertShadingNetwork::exportShaderGraph()
              >7 ConvertShadingNetwork::beforeExport()
              >7 ConvertShadingNetwork::__export()
                >8 ConvertShadingNetwork::canShadingGroupExported(phong1SG)
                >8 Renderer::getValidShaderPlugsInShadingGroup()
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,surfaceShader)
                  >9 ConvertShadingNetwork::canShaderExported(phong1)
                  >9 ConvertShadingNetwork::exportShaderBegin(phong1)
                  >9 ConvertShadingNetwork::convertShadingNetworkToRSL(phong1,surfaceShader)
                    >10 Visitor::initShaderData(phong1,surfaceShader)
                    >10 ConvertShadingNetwork::getUpstreamConvertibleNodes(phong1, nodes, numConnections)
                      >11 ConvertShadingNetwork::nodeIsConvertible(phong1)
                        >12 ShaderMgr::hasShaderType(phong)
                      >11 ShaderMgr::getValidConnection(phong1)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.colorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.colorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.colorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.colorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.colorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.colorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.color)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                        >12 ConvertShadingNetwork::nodeIsConvertible(checker1)
                          >13 ShaderMgr::hasShaderType(checker)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.transparencyR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.transparencyG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.transparencyB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraX)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraX)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraY)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraY)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraZ)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraZ)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.specularColorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.specularColorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.specularColorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outColorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outColorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outColorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outColorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outColorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outColorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                        >12 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                          >13 ShaderMgr::hasShaderType(shadingEngine)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                      >11 ConvertShadingNetwork::getUpstreamConvertibleNodes(checker1, nodes, numConnections)
                        >12 ConvertShadingNetwork::nodeIsConvertible(checker1)
                          >13 ShaderMgr::hasShaderType(checker)
                        >12 ShaderMgr::getValidConnection(checker1)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1R)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1R)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1G)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1G)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1B)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1B)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2R)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2R)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2G)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2G)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2B)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2B)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.uCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.uCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.vCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.vCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                            >14 ShaderMgr::hasShaderType(place2dTexture)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                          >13 ConvertShadingNetwork::nodeIsConvertible(phong1)
                            >14 ShaderMgr::hasShaderType(phong)
                        >12 ConvertShadingNetwork::getUpstreamConvertibleNodes(place2dTexture1, nodes, numConnections)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                            >14 ShaderMgr::hasShaderType(place2dTexture)
                          >13 ShaderMgr::getValidConnection(place2dTexture1)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.vCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.vCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverage)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverage)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offset)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offset)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                              >15 ShaderMgr::hasShaderType(animCurveTU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                              >15 ShaderMgr::hasShaderType(animCurveTU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrame)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrame)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                            >14 ConvertShadingNetwork::nodeIsConvertible(checker1)
                              >15 ShaderMgr::hasShaderType(checker)
                    >10 Visitor::preOutput(phong1)
                    >10 Visitor::outputBegin(phong1)
                    >10 ConvertShadingNetwork::traverseGraphAndOutputNodeFunctions( nodes, numConnections)
                      >11 Visitor::outputUpstreamShader(place2dTexture1)
                        >12 ShaderOutputVisitor::_outputUpstreamShader(place2dTexture1,place2dTexture)
                          >13 Visitor::visitPlace2dTexture(place2dTexture1)
                            >14 OutputHelper::beginRSL(maya_place2dTexture,place2dTexture1)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.uvCoord)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.coverageU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.coverageV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.mirrorU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.mirrorV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.noiseU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.noiseV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.offsetU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.offsetV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.repeatU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                                >16 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                                  >17 ShaderMgr::hasShaderType(animCurveTU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.repeatV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                                >16 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                                  >17 ShaderMgr::hasShaderType(animCurveTU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.rotateFrame)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.rotateUV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.stagger)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.translateFrameU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.translateFrameV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.wrapU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.wrapV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.outUV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                                >16 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                  >17 ShaderMgr::hasShaderType(checker)
                            >14 OutputHelper::endRSL()
                      >11 ShaderMgr::getValidConnection(place2dTexture1)
                      >11 ConvertShadingNetwork::decrementDownstreamConnections(place2dTexture1, nodes, numConnections, validConnections)
                      >11 ConvertShadingNetwork::getNodeVariables(place2dTexture1, validConnections,  inputSrc, inputDes, outputSrc)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.vCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.vCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverage)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverage)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseUV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseUV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offset)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offset)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                            >14 ShaderMgr::hasShaderType(animCurveTU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                            >14 ShaderMgr::hasShaderType(animCurveTU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatUV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatUV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrame)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrame)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                        >12 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture1,outUV,place2dTexture1.outUV, outputVars)
                          >13 Visitor::addShaderMethodVariavles(place2dTexture1,outUV,float,2,)
                      >11 Visitor::addShaderMethodBody(place2dTexture1,,,place2dTexture1.outUV124)
                      >11 Visitor::outputUpstreamShader(checker1)
                        >12 ShaderOutputVisitor::_outputUpstreamShader(checker1,checker)
                          >13 Visitor::visitChecker(checker1)
                            >14 OutputHelper::beginRSL(maya_checker,checker1)
                            >14 ShaderMgr::convertibleConnection(checker1.alphaGain)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                            >14 ShaderMgr::convertibleConnection(checker1.alphaIsLuminance)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                            >14 ShaderMgr::convertibleConnection(checker1.alphaOffset)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                            >14 ShaderMgr::convertibleConnection(checker1.color1)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                            >14 ShaderMgr::convertibleConnection(checker1.color2)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                            >14 ShaderMgr::convertibleConnection(checker1.colorGain)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                            >14 ShaderMgr::convertibleConnection(checker1.colorOffset)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                            >14 ShaderMgr::convertibleConnection(checker1.contrast)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                            >14 ShaderMgr::convertibleConnection(checker1.defaultColor)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                            >14 ShaderMgr::convertibleConnection(checker1.filter)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                            >14 ShaderMgr::convertibleConnection(checker1.filterOffset)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                            >14 ShaderMgr::convertibleConnection(checker1.invert)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                            >14 ShaderMgr::convertibleConnection(checker1.uvCoord)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                                >16 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                                  >17 ShaderMgr::hasShaderType(place2dTexture)
                            >14 ShaderMgr::convertibleConnection(checker1.outAlpha)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                            >14 ShaderMgr::convertibleConnection(checker1.outColor)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                                >16 ConvertShadingNetwork::nodeIsConvertible(phong1)
                                  >17 ShaderMgr::hasShaderType(phong)
                            >14 OutputHelper::endRSL()
                      >11 ShaderMgr::getValidConnection(checker1)
                      >11 ConvertShadingNetwork::decrementDownstreamConnections(checker1, nodes, numConnections, validConnections)
                      >11 ConvertShadingNetwork::getNodeVariables(checker1, validConnections,  inputSrc, inputDes, outputSrc)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1R)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1R)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1G)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1G)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1B)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1B)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2R)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2R)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2G)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2G)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2B)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2B)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.uCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.uCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.vCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.vCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                            >14 ShaderMgr::hasShaderType(place2dTexture)
                        >12 ConvertShadingNetwork::addNodeInputVariable(checker1.uvCoord, inputSrc, inputDes)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                            >14 ShaderMgr::hasShaderType(place2dTexture)
                          >13 ShaderMgr::getValidConnection(place2dTexture1)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                          >13 ConvertShadingNetwork::nodeIsConvertible(phong1)
                            >14 ShaderMgr::hasShaderType(phong)
                        >12 ConvertShadingNetwork::addNodeOutputVariable(checker1,outColor,checker1.outColor, outputVars)
                          >13 Visitor::addShaderMethodVariavles(checker1,outColor,color,-1,)
                      >11 Visitor::addShaderMethodBody(checker1,place2dTexture1.outUV124,checker1.uvCoord124,checker1.outColor124)
                      >11 Visitor::outputUpstreamShader(phong1)
                        >12 ShaderOutputVisitor::_outputUpstreamShader(phong1,phong)
                          >13 Visitor::visitPhong(phong1)
                            >14 OutputHelper::beginRSL(maya_phong,phong1)
                            >14 ShaderMgr::convertibleConnection(phong1.color)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.color)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                                >16 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                  >17 ShaderMgr::hasShaderType(checker)
                            >14 ShaderMgr::convertibleConnection(phong1.transparency)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                            >14 ShaderMgr::convertibleConnection(phong1.ambientColor)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                            >14 ShaderMgr::convertibleConnection(phong1.incandescence)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                            >14 OutputHelper::add_liq_UserDefinedNormal(phong1)
                            >14 ShaderMgr::convertibleConnection(phong1.normalCamera)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                            >14 ShaderMgr::convertibleConnection(phong1.diffuse)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                            >14 ShaderMgr::convertibleConnection(phong1.translucence)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                            >14 ShaderMgr::convertibleConnection(phong1.translucenceDepth)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                            >14 ShaderMgr::convertibleConnection(phong1.translucenceFocus)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                            >14 ShaderMgr::convertibleConnection(phong1.cosinePower)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                            >14 ShaderMgr::convertibleConnection(phong1.specularColor)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                            >14 ShaderMgr::convertibleConnection(phong1.reflectivity)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                            >14 ShaderMgr::convertibleConnection(phong1.reflectedColor)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                            >14 ShaderMgr::convertibleConnection(phong1.matteOpacityMode)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                            >14 ShaderMgr::convertibleConnection(phong1.matteOpacity)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                            >14 ShaderMgr::convertibleConnection(phong1.reflectionLimit)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                            >14 ShaderMgr::convertibleConnection(phong1.outColor)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                                >16 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                                  >17 ShaderMgr::hasShaderType(shadingEngine)
                            >14 ShaderMgr::convertibleConnection(phong1.outTransparency)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                            >14 OutputHelper::endRSL()
                      >11 ShaderMgr::getValidConnection(phong1)
                      >11 ConvertShadingNetwork::decrementDownstreamConnections(phong1, nodes, numConnections, validConnections)
                      >11 ConvertShadingNetwork::getNodeVariables(phong1, validConnections,  inputSrc, inputDes, outputSrc)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.color)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                        >12 ConvertShadingNetwork::addNodeInputVariable(phong1.color, inputSrc, inputDes)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                          >13 ShaderMgr::getValidConnection(checker1)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraX)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraX)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraY)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraY)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraZ)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraZ)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                          >13 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                            >14 ShaderMgr::hasShaderType(shadingEngine)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                      >11 Visitor::addShaderMethodBody(phong1,checker1.outColor124,phong1.color124,)
                    >10 ConvertShadingNetwork::outputShaderMethod()
                      >11 Visitor::outputShaderMethod()
                    >10 Visitor::outputEnd()
                    >10 Visitor::postOutput()
                  >9 ConvertShadingNetwork::exportShaderEnd(phong1)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,displacementShader)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,volumeShader)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,liqShadowShader)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,liqEnvironmentShader)
                >8 ConvertShadingNetwork::exportShadingGroupBegin(phong1SG)
                >8 ConvertShadingNetwork::outputShadingGroup(phong1SG)
                  >9 Visitor::outputShadingGroup(phong1SG)
                >8 ConvertShadingNetwork::exportShadingGroupEnd(phong1SG)
              >7  ConvertShadingNetwork::afterExport()
          >5 liqRibTranslatorNew::worldPrologue__(cameraShape1)
            >6 Renderer::worldPrologue(cameraShape1)
          >5 liqRibTranslatorNew::lightBlock__(cameraShape1)
            >6 Renderer::writeLight_pre(|pointLight1|pointLightShape1,cameraShape1)
            >6 liqRibObj::writeObject(,cameraShape1,0)
              >7 liqRibLightData::write(,job=cameraShape1,0)
                >8 liqRibData::getFullPathName()
                >8 Renderer::write(|pointLight1|pointLightShape1,,cameraShape1,ref=0)
                  >9 liqRibData::getFullPathName()
                  >9 er_writeLightData.cpp::_write(|pointLight1|pointLightShape1,cameraShape1,...)
                    >10 Renderer::exportPointLight(pointlight,pointLightShape1,...)
                      >11 addLightGroupForLight(|pointLight1|pointLightShape1)
            >6 Renderer::writeLight_post(|pointLight1|pointLightShape1,cameraShape1)
            >6 Renderer::writeLight_pre(|pointLight2|pointLightShape2,cameraShape1)
            >6 liqRibObj::writeObject(,cameraShape1,0)
              >7 liqRibLightData::write(,job=cameraShape1,0)
                >8 liqRibData::getFullPathName()
                >8 Renderer::write(|pointLight2|pointLightShape2,,cameraShape1,ref=0)
                  >9 liqRibData::getFullPathName()
                  >9 er_writeLightData.cpp::_write(|pointLight2|pointLightShape2,cameraShape1,...)
                    >10 Renderer::exportPointLight(pointlight,pointLightShape2,...)
                      >11 addLightGroupForLight(|pointLight2|pointLightShape2)
            >6 Renderer::writeLight_post(|pointLight2|pointLightShape2,cameraShape1)
          >5 liqRibTranslatorNew::coordSysBlock__(cameraShape1)
            >6 Renderer::coordSysBlock__(cameraShape1)
          >5 liqRibTranslatorNew::objectBlock__(cameraShape1)
            >6 liqRibTranslatorNew::objectBlock_data(cameraShape1)
              >7 liqRibTranslatorNew::getShadowSetObject(cameraShape1)
              >7 liqRibTranslatorNew::oneObjectBlock_data(|pPlane2|pPlaneShape11,cameraShape1)
                >8 Renderer::exportOneObject_data(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::_writeObject(|pPlane2|pPlaneShape11,cameraShape1,0,0,0)
                    >10 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.14.rib,cameraShape1,0)
                      >11 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.14.rib,job=cameraShape1,0)
                        >12 liqRibData::getFullPathName()
                        >12 Renderer::write(|pPlane2|pPlaneShape11,R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.14.rib,cameraShape1,ref=0)
                          >13 liqRibData::getFullPathName()
                          >13 er_writeMeshData.cpp::_write1(|pPlane2|pPlaneShape11,cameraShape1)
                            >14 liqRibHT::find(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                            >14 _exportVertexFromNodePlug(|pPlane2|pPlaneShape11,0)
                            >14 liqRibData::getFullPathName()
            >6 liqRibTranslatorNew::objectBlock_reference(cameraShape1)
              >7 Renderer::objectBlock_reference_begin()
              >7 liqRibTranslatorNew::preGeometryMel()
                >8 Renderer::preGeometryMel()
              >7 liqRibTranslatorNew::getShadowSetObject(cameraShape1)
              >7 liqRibTranslatorNew::oneObjectBlock_reference(|pPlane2|pPlaneShape11,cameraShape1)
                >8 Renderer::oneObjectBlock_reference_attribute_begin(|pPlane2|pPlaneShape11,cameraShape1)
                >8 Renderer::oneObjectBlock_reference_attribute_block0(|pPlane2|pPlaneShape11,cameraShape1)
                >8 liqRibTranslatorNew::tRiIlluminate(cameraShape1,|pPlane2|pPlaneShape11)
                  >9 Renderer::exportLightLinks(cameraShape1,|pPlane2|pPlaneShape11,lightedByWhichLightShapes.size=2)
                >8 liqRibTranslatorNew::checkSurfaceShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                >8 liqRibTranslatorNew::checkDisplacementShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                >8 liqRibTranslatorNew::checkVolumeShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                >8 Renderer::oneObjectBlock_reference_attribute_block1(|pPlane2|pPlaneShape11,cameraShape1)
                >8 liqRibTranslatorNew::writeShader_(1,|pPlane2|pPlaneShape11,v=0,s=0,c=0,,|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                >8 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|pPlane2|pPlaneShape11)
                >8 Renderer::exportOneObject_reference(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 liqRibData::getFullPathName()
                  >9 liqRibData::getFullPathName()
                  >9 liqRibData::getFullPathName()
                >8 Renderer::oneObjectBlock_reference_attribute_end(|pPlane2|pPlaneShape11,cameraShape1)
              >7 Renderer::objectBlock_reference_end()
          >5 liqRibTranslatorNew::worldEpilogue__()
            >6 liqRibTranslator::worldEpilogue()
              >7 Renderer::worldEpilogue()
          >5 liqRibTranslatorNew::frameEpilogue__(14)
            >6 Renderer::frameEpilogue(14)
          >5 liqRibTranslatorNew::ribEpilogue__(cameraShape1)
            >6 Renderer::ribPrologue_end(cameraShape1)
              >7 Renderer::cookInstanceGroup()
              >7 Renderer::render()
        >4 Renderer::HeroPassEnd(cameraShape1)
      >3 liqRenderScript::addJob(job.title=checker_animFrame11,0)
        >4 liqRenderScript::popNextJobID()
      >3 tFrameScriptJobMgr::setCommonParameters(checker_animFrame14)
      >3 liqRibTranslatorNew::processOneFrame(12, liqglo__)
        >4 liqRibTranslatorNew::buildJobs__()
          >5 liqRibTranslatorNew::buildShadowJobs__()
            >6 tJobScriptMgr::buildShadowJob(thisJob___, 0)
            >6 tJobScriptMgr::buildShadowCameraJob(thisJob___, 0)
          >5 tRibCameraMgr::gatherDataForJob(liqglo___, ,jobList__,0,1)
          >5 liqRibTranslator::generateFileName(4,cameraShape1)
          >5 liqRibTranslator::generateFileName(5,cameraShape1)
            >6 liqRibTranslator::generateImageName(, job(cameraShape1)), 
        >4 liqRibTranslatorNew::calaculateSamplingTime(17)
        >4 liqRibTranslatorNew::scanScene__(17,0)
          >5 tJobScriptMgr::scanScene(17,0, htable__, count, returnStatus__)
            >6 liqRibHT::insert(|pointLight1|pointLightShape1,lframe,0,3,0,matrix,,-1)
              >7 liqRibHT::hash(|pointLight1|pointLightShape1,0)
              >7 liqRibHT::find(|pointLight1|pointLightShape1,|pointLight1|pointLightShape1,3)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|pointLight1|pointLightShape1,0,3,-1)
                >8 liqRibNode::parseVectorAttributes(pointLight1,,2)
                >8 liqRibNode::parseVectorAttributes(pointLight1,,3)
                >8 liqRibNode::parseVectorAttributes(pointLight1,,4)
                >8 liqRibNode::findShadingGroup(|pointLight1|pointLightShape1,3)
                >8 liqRibNode::findShader()
                >8 liqRibNode::findDisp()
                >8 liqRibNode::findVolume()
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|pointLight1|pointLightShape1,3)
                  >9 liqRibLightData::liqRibLightData(|pointLight1|pointLightShape1)
                    >10 liqRibData::addAdditionalSurfaceParameters(pointLightShape1)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 liqRibHT::insert(|pointLight2|pointLightShape2,lframe,0,3,1,matrix,,-1)
              >7 liqRibHT::hash(|pointLight2|pointLightShape2,1)
              >7 liqRibHT::find(|pointLight2|pointLightShape2,|pointLight2|pointLightShape2,3)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|pointLight2|pointLightShape2,0,3,-1)
                >8 liqRibNode::parseVectorAttributes(pointLight2,,2)
                >8 liqRibNode::parseVectorAttributes(pointLight2,,3)
                >8 liqRibNode::parseVectorAttributes(pointLight2,,4)
                >8 liqRibNode::findShadingGroup(|pointLight2|pointLightShape2,3)
                >8 liqRibNode::findShader()
                >8 liqRibNode::findDisp()
                >8 liqRibNode::findVolume()
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|pointLight2|pointLightShape2,3)
                  >9 liqRibLightData::liqRibLightData(|pointLight2|pointLightShape2)
                    >10 liqRibData::addAdditionalSurfaceParameters(pointLightShape2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
          >5 tLocatorMgr::scanScene(17,0,htable__,count__,returnStatus__)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,17,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,17,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,17,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,17,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,17,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,17,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,17,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,17,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,17,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,17,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,17,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,17,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,17,0,&count)
            >6 liqRibHT::insert(|pPlane2|pPlaneShape11,lframe,0,0,2,matrix,,-1)
              >7 liqRibHT::hash(|pPlane2|pPlaneShape11,2)
              >7 liqRibHT::find(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|pPlane2|pPlaneShape11,0,0,-1)
                >8 liqRibNode::parseVectorAttributes(pPlane2,,2)
                >8 liqRibNode::parseVectorAttributes(pPlane2,,3)
                >8 liqRibNode::parseVectorAttributes(pPlane2,,4)
                >8 liqRibNode::findShadingGroup(|pPlane2|pPlaneShape11,0)
                >8 liqRibNode::findShader()
                >8 liqRibNode::findDisp()
                >8 liqRibNode::findVolume()
                >8 liqRibNode::getColor(&shader,&color)
                >8 liqRibNode::getOpacity(&shader,&color)
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|pPlane2|pPlaneShape11,0)
                  >9 liqRibMeshData::liqRibMeshData(|pPlane2|pPlaneShape11)
                    >10 liqRibData::addAdditionalSurfaceParameters(pPlaneShape11)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,17,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,17,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,17,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,17,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,17,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,17,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,17,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,17,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,17,0,&count)
            >6 liqRibHT::insert(|camera1_group|camera1_aim|camera1_aimShape,lframe,0,0,3,matrix,,-1)
              >7 liqRibHT::hash(|camera1_group|camera1_aim|camera1_aimShape,3)
              >7 liqRibHT::find(|camera1_group|camera1_aim|camera1_aimShape,|camera1_group|camera1_aim|camera1_aimShape,0)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|camera1_group|camera1_aim|camera1_aimShape,0,0,-1)
                >8 liqRibNode::parseVectorAttributes(camera1_aim,,2)
                >8 liqRibNode::parseVectorAttributes(camera1_aim,,3)
                >8 liqRibNode::parseVectorAttributes(camera1_aim,,4)
                >8 liqRibNode::findShadingGroup(|camera1_group|camera1_aim|camera1_aimShape,0)
                >8 liqRibNode::findShader()
                >8 liqRibNode::findDisp()
                >8 liqRibNode::findVolume()
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|camera1_group|camera1_aim|camera1_aimShape,0)
          >5 liqRibTranslatorNew::dealwithParticleInstancedObjects(0,17,4)
          >5 liqRibTranslatorNew::getCameraData(iter__,0)
            >6 liqRibTranslator::getCameraInfo(|camera1_group|camera1|cameraShape1,)
              >7 liqRibTranslator::portFieldOfView(224,150,&horizontal,&vertical,&fnCamera)
                >8 liqRibTranslator::computeViewingFrustum(1.49333,,&left,&right,&bottom,&top,|camera1_group|camera1|cameraShape1)
            >6 liqRibTranslator::getCameraFilmOffset(|camera1_group|camera1|cameraShape1,)
            >6 liqRibTranslator::getCameraTransform(|camera1_group|camera1|cameraShape1,)
        >4 liqRibTranslatorNew::doTextures(size=0)
          >5 Renderer::frameEpilogue(txtList_.size=0)
        >4 liqRibTranslatorNew::doShadows(size=0)
          >5 Renderer::doShadows(shadowList_.size=0)
        >4 Renderer::setRenderScriptFormatAndCompress(0,0)
        >4 Renderer::isHeroPassReady(cameraShape1)
        >4 Renderer::HeroPassBegin(cameraShape1)
        >4 tHeroRibWriterMgr::write(liqglo___,cameraShape1,17,0)
          >5 liqRibTranslatorNew::ribPrologue__(cameraShape1)
            >6 Renderer::ribPrologue_begin(cameraShape1)
              >7 Renderer::dummyPhongShader()
            >6 Renderer::ribPrologue_comment(2.3.5 (buildtime=20:51:12.30),R:/MyDocuments/maya/projects/default/checker_anim,yaoyansi,time)
            >6 Renderer::ribPrologue_options(cameraShape1)
          >5 liqRibTranslatorNew::framePrologue__(17,cameraShape1)
            >6 Renderer::framePrologue(17,cameraShape1)
              >7 Renderer::framePrologue_camera(17,cameraShape1)
                >8 Renderer::gatherCameraShaders(cameraShaders.size=0,|camera1_group|camera1|cameraShape1,liqEnvironmentShader)
                >8 Renderer::cameraOutput(cameraShape1)
          >5 ShaderMgr::exportShaderGraph()
            >6 ConvertShadingNetwork::exportShaderGraph()
              >7 ConvertShadingNetwork::beforeExport()
              >7 ConvertShadingNetwork::__export()
                >8 ConvertShadingNetwork::canShadingGroupExported(phong1SG)
                >8 Renderer::getValidShaderPlugsInShadingGroup()
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,surfaceShader)
                  >9 ConvertShadingNetwork::canShaderExported(phong1)
                  >9 ConvertShadingNetwork::exportShaderBegin(phong1)
                  >9 ConvertShadingNetwork::convertShadingNetworkToRSL(phong1,surfaceShader)
                    >10 Visitor::initShaderData(phong1,surfaceShader)
                    >10 ConvertShadingNetwork::getUpstreamConvertibleNodes(phong1, nodes, numConnections)
                      >11 ConvertShadingNetwork::nodeIsConvertible(phong1)
                        >12 ShaderMgr::hasShaderType(phong)
                      >11 ShaderMgr::getValidConnection(phong1)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.colorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.colorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.colorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.colorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.colorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.colorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.color)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                        >12 ConvertShadingNetwork::nodeIsConvertible(checker1)
                          >13 ShaderMgr::hasShaderType(checker)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.transparencyR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.transparencyG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.transparencyB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraX)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraX)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraY)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraY)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraZ)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraZ)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.specularColorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.specularColorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.specularColorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outColorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outColorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outColorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outColorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outColorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outColorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                        >12 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                          >13 ShaderMgr::hasShaderType(shadingEngine)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                      >11 ConvertShadingNetwork::getUpstreamConvertibleNodes(checker1, nodes, numConnections)
                        >12 ConvertShadingNetwork::nodeIsConvertible(checker1)
                          >13 ShaderMgr::hasShaderType(checker)
                        >12 ShaderMgr::getValidConnection(checker1)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1R)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1R)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1G)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1G)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1B)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1B)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2R)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2R)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2G)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2G)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2B)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2B)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.uCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.uCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.vCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.vCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                            >14 ShaderMgr::hasShaderType(place2dTexture)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                          >13 ConvertShadingNetwork::nodeIsConvertible(phong1)
                            >14 ShaderMgr::hasShaderType(phong)
                        >12 ConvertShadingNetwork::getUpstreamConvertibleNodes(place2dTexture1, nodes, numConnections)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                            >14 ShaderMgr::hasShaderType(place2dTexture)
                          >13 ShaderMgr::getValidConnection(place2dTexture1)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.vCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.vCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverage)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverage)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offset)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offset)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                              >15 ShaderMgr::hasShaderType(animCurveTU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                              >15 ShaderMgr::hasShaderType(animCurveTU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrame)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrame)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                            >14 ConvertShadingNetwork::nodeIsConvertible(checker1)
                              >15 ShaderMgr::hasShaderType(checker)
                    >10 Visitor::preOutput(phong1)
                    >10 Visitor::outputBegin(phong1)
                    >10 ConvertShadingNetwork::traverseGraphAndOutputNodeFunctions( nodes, numConnections)
                      >11 Visitor::outputUpstreamShader(place2dTexture1)
                        >12 ShaderOutputVisitor::_outputUpstreamShader(place2dTexture1,place2dTexture)
                          >13 Visitor::visitPlace2dTexture(place2dTexture1)
                            >14 OutputHelper::beginRSL(maya_place2dTexture,place2dTexture1)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.uvCoord)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.coverageU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.coverageV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.mirrorU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.mirrorV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.noiseU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.noiseV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.offsetU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.offsetV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.repeatU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                                >16 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                                  >17 ShaderMgr::hasShaderType(animCurveTU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.repeatV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                                >16 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                                  >17 ShaderMgr::hasShaderType(animCurveTU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.rotateFrame)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.rotateUV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.stagger)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.translateFrameU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.translateFrameV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.wrapU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.wrapV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.outUV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                                >16 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                  >17 ShaderMgr::hasShaderType(checker)
                            >14 OutputHelper::endRSL()
                      >11 ShaderMgr::getValidConnection(place2dTexture1)
                      >11 ConvertShadingNetwork::decrementDownstreamConnections(place2dTexture1, nodes, numConnections, validConnections)
                      >11 ConvertShadingNetwork::getNodeVariables(place2dTexture1, validConnections,  inputSrc, inputDes, outputSrc)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.vCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.vCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverage)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverage)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseUV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseUV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offset)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offset)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                            >14 ShaderMgr::hasShaderType(animCurveTU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                            >14 ShaderMgr::hasShaderType(animCurveTU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatUV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatUV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrame)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrame)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                        >12 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture1,outUV,place2dTexture1.outUV, outputVars)
                          >13 Visitor::addShaderMethodVariavles(place2dTexture1,outUV,float,2,)
                      >11 Visitor::addShaderMethodBody(place2dTexture1,,,place2dTexture1.outUV124)
                      >11 Visitor::outputUpstreamShader(checker1)
                        >12 ShaderOutputVisitor::_outputUpstreamShader(checker1,checker)
                          >13 Visitor::visitChecker(checker1)
                            >14 OutputHelper::beginRSL(maya_checker,checker1)
                            >14 ShaderMgr::convertibleConnection(checker1.alphaGain)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                            >14 ShaderMgr::convertibleConnection(checker1.alphaIsLuminance)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                            >14 ShaderMgr::convertibleConnection(checker1.alphaOffset)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                            >14 ShaderMgr::convertibleConnection(checker1.color1)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                            >14 ShaderMgr::convertibleConnection(checker1.color2)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                            >14 ShaderMgr::convertibleConnection(checker1.colorGain)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                            >14 ShaderMgr::convertibleConnection(checker1.colorOffset)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                            >14 ShaderMgr::convertibleConnection(checker1.contrast)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                            >14 ShaderMgr::convertibleConnection(checker1.defaultColor)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                            >14 ShaderMgr::convertibleConnection(checker1.filter)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                            >14 ShaderMgr::convertibleConnection(checker1.filterOffset)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                            >14 ShaderMgr::convertibleConnection(checker1.invert)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                            >14 ShaderMgr::convertibleConnection(checker1.uvCoord)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                                >16 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                                  >17 ShaderMgr::hasShaderType(place2dTexture)
                            >14 ShaderMgr::convertibleConnection(checker1.outAlpha)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                            >14 ShaderMgr::convertibleConnection(checker1.outColor)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                                >16 ConvertShadingNetwork::nodeIsConvertible(phong1)
                                  >17 ShaderMgr::hasShaderType(phong)
                            >14 OutputHelper::endRSL()
                      >11 ShaderMgr::getValidConnection(checker1)
                      >11 ConvertShadingNetwork::decrementDownstreamConnections(checker1, nodes, numConnections, validConnections)
                      >11 ConvertShadingNetwork::getNodeVariables(checker1, validConnections,  inputSrc, inputDes, outputSrc)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1R)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1R)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1G)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1G)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1B)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1B)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2R)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2R)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2G)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2G)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2B)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2B)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.uCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.uCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.vCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.vCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                            >14 ShaderMgr::hasShaderType(place2dTexture)
                        >12 ConvertShadingNetwork::addNodeInputVariable(checker1.uvCoord, inputSrc, inputDes)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                            >14 ShaderMgr::hasShaderType(place2dTexture)
                          >13 ShaderMgr::getValidConnection(place2dTexture1)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                          >13 ConvertShadingNetwork::nodeIsConvertible(phong1)
                            >14 ShaderMgr::hasShaderType(phong)
                        >12 ConvertShadingNetwork::addNodeOutputVariable(checker1,outColor,checker1.outColor, outputVars)
                          >13 Visitor::addShaderMethodVariavles(checker1,outColor,color,-1,)
                      >11 Visitor::addShaderMethodBody(checker1,place2dTexture1.outUV124,checker1.uvCoord124,checker1.outColor124)
                      >11 Visitor::outputUpstreamShader(phong1)
                        >12 ShaderOutputVisitor::_outputUpstreamShader(phong1,phong)
                          >13 Visitor::visitPhong(phong1)
                            >14 OutputHelper::beginRSL(maya_phong,phong1)
                            >14 ShaderMgr::convertibleConnection(phong1.color)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.color)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                                >16 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                  >17 ShaderMgr::hasShaderType(checker)
                            >14 ShaderMgr::convertibleConnection(phong1.transparency)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                            >14 ShaderMgr::convertibleConnection(phong1.ambientColor)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                            >14 ShaderMgr::convertibleConnection(phong1.incandescence)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                            >14 OutputHelper::add_liq_UserDefinedNormal(phong1)
                            >14 ShaderMgr::convertibleConnection(phong1.normalCamera)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                            >14 ShaderMgr::convertibleConnection(phong1.diffuse)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                            >14 ShaderMgr::convertibleConnection(phong1.translucence)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                            >14 ShaderMgr::convertibleConnection(phong1.translucenceDepth)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                            >14 ShaderMgr::convertibleConnection(phong1.translucenceFocus)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                            >14 ShaderMgr::convertibleConnection(phong1.cosinePower)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                            >14 ShaderMgr::convertibleConnection(phong1.specularColor)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                            >14 ShaderMgr::convertibleConnection(phong1.reflectivity)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                            >14 ShaderMgr::convertibleConnection(phong1.reflectedColor)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                            >14 ShaderMgr::convertibleConnection(phong1.matteOpacityMode)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                            >14 ShaderMgr::convertibleConnection(phong1.matteOpacity)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                            >14 ShaderMgr::convertibleConnection(phong1.reflectionLimit)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                            >14 ShaderMgr::convertibleConnection(phong1.outColor)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                                >16 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                                  >17 ShaderMgr::hasShaderType(shadingEngine)
                            >14 ShaderMgr::convertibleConnection(phong1.outTransparency)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                            >14 OutputHelper::endRSL()
                      >11 ShaderMgr::getValidConnection(phong1)
                      >11 ConvertShadingNetwork::decrementDownstreamConnections(phong1, nodes, numConnections, validConnections)
                      >11 ConvertShadingNetwork::getNodeVariables(phong1, validConnections,  inputSrc, inputDes, outputSrc)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.color)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                        >12 ConvertShadingNetwork::addNodeInputVariable(phong1.color, inputSrc, inputDes)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                          >13 ShaderMgr::getValidConnection(checker1)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraX)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraX)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraY)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraY)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraZ)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraZ)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                          >13 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                            >14 ShaderMgr::hasShaderType(shadingEngine)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                      >11 Visitor::addShaderMethodBody(phong1,checker1.outColor124,phong1.color124,)
                    >10 ConvertShadingNetwork::outputShaderMethod()
                      >11 Visitor::outputShaderMethod()
                    >10 Visitor::outputEnd()
                    >10 Visitor::postOutput()
                  >9 ConvertShadingNetwork::exportShaderEnd(phong1)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,displacementShader)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,volumeShader)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,liqShadowShader)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,liqEnvironmentShader)
                >8 ConvertShadingNetwork::exportShadingGroupBegin(phong1SG)
                >8 ConvertShadingNetwork::outputShadingGroup(phong1SG)
                  >9 Visitor::outputShadingGroup(phong1SG)
                >8 ConvertShadingNetwork::exportShadingGroupEnd(phong1SG)
              >7  ConvertShadingNetwork::afterExport()
          >5 liqRibTranslatorNew::worldPrologue__(cameraShape1)
            >6 Renderer::worldPrologue(cameraShape1)
          >5 liqRibTranslatorNew::lightBlock__(cameraShape1)
            >6 Renderer::writeLight_pre(|pointLight1|pointLightShape1,cameraShape1)
            >6 liqRibObj::writeObject(,cameraShape1,0)
              >7 liqRibLightData::write(,job=cameraShape1,0)
                >8 liqRibData::getFullPathName()
                >8 Renderer::write(|pointLight1|pointLightShape1,,cameraShape1,ref=0)
                  >9 liqRibData::getFullPathName()
                  >9 er_writeLightData.cpp::_write(|pointLight1|pointLightShape1,cameraShape1,...)
                    >10 Renderer::exportPointLight(pointlight,pointLightShape1,...)
                      >11 addLightGroupForLight(|pointLight1|pointLightShape1)
            >6 Renderer::writeLight_post(|pointLight1|pointLightShape1,cameraShape1)
            >6 Renderer::writeLight_pre(|pointLight2|pointLightShape2,cameraShape1)
            >6 liqRibObj::writeObject(,cameraShape1,0)
              >7 liqRibLightData::write(,job=cameraShape1,0)
                >8 liqRibData::getFullPathName()
                >8 Renderer::write(|pointLight2|pointLightShape2,,cameraShape1,ref=0)
                  >9 liqRibData::getFullPathName()
                  >9 er_writeLightData.cpp::_write(|pointLight2|pointLightShape2,cameraShape1,...)
                    >10 Renderer::exportPointLight(pointlight,pointLightShape2,...)
                      >11 addLightGroupForLight(|pointLight2|pointLightShape2)
            >6 Renderer::writeLight_post(|pointLight2|pointLightShape2,cameraShape1)
          >5 liqRibTranslatorNew::coordSysBlock__(cameraShape1)
            >6 Renderer::coordSysBlock__(cameraShape1)
          >5 liqRibTranslatorNew::objectBlock__(cameraShape1)
            >6 liqRibTranslatorNew::objectBlock_data(cameraShape1)
              >7 liqRibTranslatorNew::getShadowSetObject(cameraShape1)
              >7 liqRibTranslatorNew::oneObjectBlock_data(|pPlane2|pPlaneShape11,cameraShape1)
                >8 Renderer::exportOneObject_data(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::_writeObject(|pPlane2|pPlaneShape11,cameraShape1,0,0,0)
                    >10 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.17.rib,cameraShape1,0)
                      >11 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.17.rib,job=cameraShape1,0)
                        >12 liqRibData::getFullPathName()
                        >12 Renderer::write(|pPlane2|pPlaneShape11,R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.17.rib,cameraShape1,ref=0)
                          >13 liqRibData::getFullPathName()
                          >13 er_writeMeshData.cpp::_write1(|pPlane2|pPlaneShape11,cameraShape1)
                            >14 liqRibHT::find(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                            >14 _exportVertexFromNodePlug(|pPlane2|pPlaneShape11,0)
                            >14 liqRibData::getFullPathName()
            >6 liqRibTranslatorNew::objectBlock_reference(cameraShape1)
              >7 Renderer::objectBlock_reference_begin()
              >7 liqRibTranslatorNew::preGeometryMel()
                >8 Renderer::preGeometryMel()
              >7 liqRibTranslatorNew::getShadowSetObject(cameraShape1)
              >7 liqRibTranslatorNew::oneObjectBlock_reference(|pPlane2|pPlaneShape11,cameraShape1)
                >8 Renderer::oneObjectBlock_reference_attribute_begin(|pPlane2|pPlaneShape11,cameraShape1)
                >8 Renderer::oneObjectBlock_reference_attribute_block0(|pPlane2|pPlaneShape11,cameraShape1)
                >8 liqRibTranslatorNew::tRiIlluminate(cameraShape1,|pPlane2|pPlaneShape11)
                  >9 Renderer::exportLightLinks(cameraShape1,|pPlane2|pPlaneShape11,lightedByWhichLightShapes.size=2)
                >8 liqRibTranslatorNew::checkSurfaceShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                >8 liqRibTranslatorNew::checkDisplacementShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                >8 liqRibTranslatorNew::checkVolumeShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                >8 Renderer::oneObjectBlock_reference_attribute_block1(|pPlane2|pPlaneShape11,cameraShape1)
                >8 liqRibTranslatorNew::writeShader_(1,|pPlane2|pPlaneShape11,v=0,s=0,c=0,,|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                >8 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|pPlane2|pPlaneShape11)
                >8 Renderer::exportOneObject_reference(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 liqRibData::getFullPathName()
                  >9 liqRibData::getFullPathName()
                  >9 liqRibData::getFullPathName()
                >8 Renderer::oneObjectBlock_reference_attribute_end(|pPlane2|pPlaneShape11,cameraShape1)
              >7 Renderer::objectBlock_reference_end()
          >5 liqRibTranslatorNew::worldEpilogue__()
            >6 liqRibTranslator::worldEpilogue()
              >7 Renderer::worldEpilogue()
          >5 liqRibTranslatorNew::frameEpilogue__(17)
            >6 Renderer::frameEpilogue(17)
          >5 liqRibTranslatorNew::ribEpilogue__(cameraShape1)
            >6 Renderer::ribPrologue_end(cameraShape1)
              >7 Renderer::cookInstanceGroup()
              >7 Renderer::render()
        >4 Renderer::HeroPassEnd(cameraShape1)
      >3 liqRenderScript::addJob(job.title=checker_animFrame14,0)
        >4 liqRenderScript::popNextJobID()
      >3 tFrameScriptJobMgr::setCommonParameters(checker_animFrame17)
      >3 liqRibTranslatorNew::processOneFrame(13, liqglo__)
        >4 liqRibTranslatorNew::buildJobs__()
          >5 liqRibTranslatorNew::buildShadowJobs__()
            >6 tJobScriptMgr::buildShadowJob(thisJob___, 0)
            >6 tJobScriptMgr::buildShadowCameraJob(thisJob___, 0)
          >5 tRibCameraMgr::gatherDataForJob(liqglo___, ,jobList__,0,1)
          >5 liqRibTranslator::generateFileName(4,cameraShape1)
          >5 liqRibTranslator::generateFileName(5,cameraShape1)
            >6 liqRibTranslator::generateImageName(, job(cameraShape1)), 
        >4 liqRibTranslatorNew::calaculateSamplingTime(18)
        >4 liqRibTranslatorNew::scanScene__(18,0)
          >5 tJobScriptMgr::scanScene(18,0, htable__, count, returnStatus__)
            >6 liqRibHT::insert(|pointLight1|pointLightShape1,lframe,0,3,0,matrix,,-1)
              >7 liqRibHT::hash(|pointLight1|pointLightShape1,0)
              >7 liqRibHT::find(|pointLight1|pointLightShape1,|pointLight1|pointLightShape1,3)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|pointLight1|pointLightShape1,0,3,-1)
                >8 liqRibNode::parseVectorAttributes(pointLight1,,2)
                >8 liqRibNode::parseVectorAttributes(pointLight1,,3)
                >8 liqRibNode::parseVectorAttributes(pointLight1,,4)
                >8 liqRibNode::findShadingGroup(|pointLight1|pointLightShape1,3)
                >8 liqRibNode::findShader()
                >8 liqRibNode::findDisp()
                >8 liqRibNode::findVolume()
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|pointLight1|pointLightShape1,3)
                  >9 liqRibLightData::liqRibLightData(|pointLight1|pointLightShape1)
                    >10 liqRibData::addAdditionalSurfaceParameters(pointLightShape1)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 liqRibHT::insert(|pointLight2|pointLightShape2,lframe,0,3,1,matrix,,-1)
              >7 liqRibHT::hash(|pointLight2|pointLightShape2,1)
              >7 liqRibHT::find(|pointLight2|pointLightShape2,|pointLight2|pointLightShape2,3)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|pointLight2|pointLightShape2,0,3,-1)
                >8 liqRibNode::parseVectorAttributes(pointLight2,,2)
                >8 liqRibNode::parseVectorAttributes(pointLight2,,3)
                >8 liqRibNode::parseVectorAttributes(pointLight2,,4)
                >8 liqRibNode::findShadingGroup(|pointLight2|pointLightShape2,3)
                >8 liqRibNode::findShader()
                >8 liqRibNode::findDisp()
                >8 liqRibNode::findVolume()
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|pointLight2|pointLightShape2,3)
                  >9 liqRibLightData::liqRibLightData(|pointLight2|pointLightShape2)
                    >10 liqRibData::addAdditionalSurfaceParameters(pointLightShape2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
          >5 tLocatorMgr::scanScene(18,0,htable__,count__,returnStatus__)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,18,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,18,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,18,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,18,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,18,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,18,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,18,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,18,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,18,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,18,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,18,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,18,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,18,0,&count)
            >6 liqRibHT::insert(|pPlane2|pPlaneShape11,lframe,0,0,2,matrix,,-1)
              >7 liqRibHT::hash(|pPlane2|pPlaneShape11,2)
              >7 liqRibHT::find(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|pPlane2|pPlaneShape11,0,0,-1)
                >8 liqRibNode::parseVectorAttributes(pPlane2,,2)
                >8 liqRibNode::parseVectorAttributes(pPlane2,,3)
                >8 liqRibNode::parseVectorAttributes(pPlane2,,4)
                >8 liqRibNode::findShadingGroup(|pPlane2|pPlaneShape11,0)
                >8 liqRibNode::findShader()
                >8 liqRibNode::findDisp()
                >8 liqRibNode::findVolume()
                >8 liqRibNode::getColor(&shader,&color)
                >8 liqRibNode::getOpacity(&shader,&color)
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|pPlane2|pPlaneShape11,0)
                  >9 liqRibMeshData::liqRibMeshData(|pPlane2|pPlaneShape11)
                    >10 liqRibData::addAdditionalSurfaceParameters(pPlaneShape11)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,18,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,18,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,18,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,18,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,18,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,18,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,18,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,18,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,18,0,&count)
            >6 liqRibHT::insert(|camera1_group|camera1_aim|camera1_aimShape,lframe,0,0,3,matrix,,-1)
              >7 liqRibHT::hash(|camera1_group|camera1_aim|camera1_aimShape,3)
              >7 liqRibHT::find(|camera1_group|camera1_aim|camera1_aimShape,|camera1_group|camera1_aim|camera1_aimShape,0)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|camera1_group|camera1_aim|camera1_aimShape,0,0,-1)
                >8 liqRibNode::parseVectorAttributes(camera1_aim,,2)
                >8 liqRibNode::parseVectorAttributes(camera1_aim,,3)
                >8 liqRibNode::parseVectorAttributes(camera1_aim,,4)
                >8 liqRibNode::findShadingGroup(|camera1_group|camera1_aim|camera1_aimShape,0)
                >8 liqRibNode::findShader()
                >8 liqRibNode::findDisp()
                >8 liqRibNode::findVolume()
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|camera1_group|camera1_aim|camera1_aimShape,0)
          >5 liqRibTranslatorNew::dealwithParticleInstancedObjects(0,18,4)
          >5 liqRibTranslatorNew::getCameraData(iter__,0)
            >6 liqRibTranslator::getCameraInfo(|camera1_group|camera1|cameraShape1,)
              >7 liqRibTranslator::portFieldOfView(224,150,&horizontal,&vertical,&fnCamera)
                >8 liqRibTranslator::computeViewingFrustum(1.49333,,&left,&right,&bottom,&top,|camera1_group|camera1|cameraShape1)
            >6 liqRibTranslator::getCameraFilmOffset(|camera1_group|camera1|cameraShape1,)
            >6 liqRibTranslator::getCameraTransform(|camera1_group|camera1|cameraShape1,)
        >4 liqRibTranslatorNew::doTextures(size=0)
          >5 Renderer::frameEpilogue(txtList_.size=0)
        >4 liqRibTranslatorNew::doShadows(size=0)
          >5 Renderer::doShadows(shadowList_.size=0)
        >4 Renderer::setRenderScriptFormatAndCompress(0,0)
        >4 Renderer::isHeroPassReady(cameraShape1)
        >4 Renderer::HeroPassBegin(cameraShape1)
        >4 tHeroRibWriterMgr::write(liqglo___,cameraShape1,18,0)
          >5 liqRibTranslatorNew::ribPrologue__(cameraShape1)
            >6 Renderer::ribPrologue_begin(cameraShape1)
              >7 Renderer::dummyPhongShader()
            >6 Renderer::ribPrologue_comment(2.3.5 (buildtime=20:51:12.30),R:/MyDocuments/maya/projects/default/checker_anim,yaoyansi,time)
            >6 Renderer::ribPrologue_options(cameraShape1)
          >5 liqRibTranslatorNew::framePrologue__(18,cameraShape1)
            >6 Renderer::framePrologue(18,cameraShape1)
              >7 Renderer::framePrologue_camera(18,cameraShape1)
                >8 Renderer::gatherCameraShaders(cameraShaders.size=0,|camera1_group|camera1|cameraShape1,liqEnvironmentShader)
                >8 Renderer::cameraOutput(cameraShape1)
          >5 ShaderMgr::exportShaderGraph()
            >6 ConvertShadingNetwork::exportShaderGraph()
              >7 ConvertShadingNetwork::beforeExport()
              >7 ConvertShadingNetwork::__export()
                >8 ConvertShadingNetwork::canShadingGroupExported(phong1SG)
                >8 Renderer::getValidShaderPlugsInShadingGroup()
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,surfaceShader)
                  >9 ConvertShadingNetwork::canShaderExported(phong1)
                  >9 ConvertShadingNetwork::exportShaderBegin(phong1)
                  >9 ConvertShadingNetwork::convertShadingNetworkToRSL(phong1,surfaceShader)
                    >10 Visitor::initShaderData(phong1,surfaceShader)
                    >10 ConvertShadingNetwork::getUpstreamConvertibleNodes(phong1, nodes, numConnections)
                      >11 ConvertShadingNetwork::nodeIsConvertible(phong1)
                        >12 ShaderMgr::hasShaderType(phong)
                      >11 ShaderMgr::getValidConnection(phong1)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.colorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.colorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.colorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.colorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.colorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.colorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.color)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                        >12 ConvertShadingNetwork::nodeIsConvertible(checker1)
                          >13 ShaderMgr::hasShaderType(checker)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.transparencyR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.transparencyG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.transparencyB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraX)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraX)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraY)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraY)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraZ)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraZ)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.specularColorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.specularColorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.specularColorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outColorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outColorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outColorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outColorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outColorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outColorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                        >12 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                          >13 ShaderMgr::hasShaderType(shadingEngine)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                      >11 ConvertShadingNetwork::getUpstreamConvertibleNodes(checker1, nodes, numConnections)
                        >12 ConvertShadingNetwork::nodeIsConvertible(checker1)
                          >13 ShaderMgr::hasShaderType(checker)
                        >12 ShaderMgr::getValidConnection(checker1)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1R)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1R)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1G)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1G)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1B)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1B)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2R)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2R)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2G)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2G)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2B)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2B)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.uCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.uCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.vCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.vCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                            >14 ShaderMgr::hasShaderType(place2dTexture)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                          >13 ConvertShadingNetwork::nodeIsConvertible(phong1)
                            >14 ShaderMgr::hasShaderType(phong)
                        >12 ConvertShadingNetwork::getUpstreamConvertibleNodes(place2dTexture1, nodes, numConnections)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                            >14 ShaderMgr::hasShaderType(place2dTexture)
                          >13 ShaderMgr::getValidConnection(place2dTexture1)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.vCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.vCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverage)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverage)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offset)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offset)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                              >15 ShaderMgr::hasShaderType(animCurveTU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                              >15 ShaderMgr::hasShaderType(animCurveTU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrame)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrame)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                            >14 ConvertShadingNetwork::nodeIsConvertible(checker1)
                              >15 ShaderMgr::hasShaderType(checker)
                    >10 Visitor::preOutput(phong1)
                    >10 Visitor::outputBegin(phong1)
                    >10 ConvertShadingNetwork::traverseGraphAndOutputNodeFunctions( nodes, numConnections)
                      >11 Visitor::outputUpstreamShader(place2dTexture1)
                        >12 ShaderOutputVisitor::_outputUpstreamShader(place2dTexture1,place2dTexture)
                          >13 Visitor::visitPlace2dTexture(place2dTexture1)
                            >14 OutputHelper::beginRSL(maya_place2dTexture,place2dTexture1)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.uvCoord)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.coverageU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.coverageV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.mirrorU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.mirrorV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.noiseU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.noiseV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.offsetU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.offsetV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.repeatU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                                >16 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                                  >17 ShaderMgr::hasShaderType(animCurveTU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.repeatV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                                >16 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                                  >17 ShaderMgr::hasShaderType(animCurveTU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.rotateFrame)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.rotateUV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.stagger)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.translateFrameU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.translateFrameV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.wrapU)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.wrapV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                            >14 ShaderMgr::convertibleConnection(place2dTexture1.outUV)
                              >15 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                                >16 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                                >16 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                  >17 ShaderMgr::hasShaderType(checker)
                            >14 OutputHelper::endRSL()
                      >11 ShaderMgr::getValidConnection(place2dTexture1)
                      >11 ConvertShadingNetwork::decrementDownstreamConnections(place2dTexture1, nodes, numConnections, validConnections)
                      >11 ConvertShadingNetwork::getNodeVariables(place2dTexture1, validConnections,  inputSrc, inputDes, outputSrc)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.vCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.vCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverage)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverage)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseUV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseUV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offset)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offset)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatU)
                            >14 ShaderMgr::hasShaderType(animCurveTU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1_repeatV)
                            >14 ShaderMgr::hasShaderType(animCurveTU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatUV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatUV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrame)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrame)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outU)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outU)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outV)
                        >12 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                          >13 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                        >12 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture1,outUV,place2dTexture1.outUV, outputVars)
                          >13 Visitor::addShaderMethodVariavles(place2dTexture1,outUV,float,2,)
                      >11 Visitor::addShaderMethodBody(place2dTexture1,,,place2dTexture1.outUV124)
                      >11 Visitor::outputUpstreamShader(checker1)
                        >12 ShaderOutputVisitor::_outputUpstreamShader(checker1,checker)
                          >13 Visitor::visitChecker(checker1)
                            >14 OutputHelper::beginRSL(maya_checker,checker1)
                            >14 ShaderMgr::convertibleConnection(checker1.alphaGain)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                            >14 ShaderMgr::convertibleConnection(checker1.alphaIsLuminance)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                            >14 ShaderMgr::convertibleConnection(checker1.alphaOffset)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                            >14 ShaderMgr::convertibleConnection(checker1.color1)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                            >14 ShaderMgr::convertibleConnection(checker1.color2)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                            >14 ShaderMgr::convertibleConnection(checker1.colorGain)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                            >14 ShaderMgr::convertibleConnection(checker1.colorOffset)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                            >14 ShaderMgr::convertibleConnection(checker1.contrast)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                            >14 ShaderMgr::convertibleConnection(checker1.defaultColor)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                            >14 ShaderMgr::convertibleConnection(checker1.filter)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                            >14 ShaderMgr::convertibleConnection(checker1.filterOffset)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                            >14 ShaderMgr::convertibleConnection(checker1.invert)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                            >14 ShaderMgr::convertibleConnection(checker1.uvCoord)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                                >16 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                                  >17 ShaderMgr::hasShaderType(place2dTexture)
                            >14 ShaderMgr::convertibleConnection(checker1.outAlpha)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                            >14 ShaderMgr::convertibleConnection(checker1.outColor)
                              >15 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                                >16 ConvertShadingNetwork::nodeIsConvertible(phong1)
                                  >17 ShaderMgr::hasShaderType(phong)
                            >14 OutputHelper::endRSL()
                      >11 ShaderMgr::getValidConnection(checker1)
                      >11 ConvertShadingNetwork::decrementDownstreamConnections(checker1, nodes, numConnections, validConnections)
                      >11 ConvertShadingNetwork::getNodeVariables(checker1, validConnections,  inputSrc, inputDes, outputSrc)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaGain)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaGain)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaIsLuminance)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaIsLuminance)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.alphaOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.alphaOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1R)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1R)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1G)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1G)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1B)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1B)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color1)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color1)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2R)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2R)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2G)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2G)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2B)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2B)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.color2)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.color2)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGainB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGainB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorGain)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorGain)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffsetB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffsetB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.colorOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.colorOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.contrast)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.contrast)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.defaultColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.defaultColor)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.filter)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.filter)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.filterOffset)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.filterOffset)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.invert)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.invert)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.uCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.uCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.vCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.vCoord)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.uvCoord)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.uvCoord)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                            >14 ShaderMgr::hasShaderType(place2dTexture)
                        >12 ConvertShadingNetwork::addNodeInputVariable(checker1.uvCoord, inputSrc, inputDes)
                          >13 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                            >14 ShaderMgr::hasShaderType(place2dTexture)
                          >13 ShaderMgr::getValidConnection(place2dTexture1)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outAlpha)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outAlpha)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(checker1.outColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(checker1.outColor)
                          >13 ConvertShadingNetwork::nodeIsConvertible(phong1)
                            >14 ShaderMgr::hasShaderType(phong)
                        >12 ConvertShadingNetwork::addNodeOutputVariable(checker1,outColor,checker1.outColor, outputVars)
                          >13 Visitor::addShaderMethodVariavles(checker1,outColor,color,-1,)
                      >11 Visitor::addShaderMethodBody(checker1,place2dTexture1.outUV124,checker1.uvCoord124,checker1.outColor124)
                      >11 Visitor::outputUpstreamShader(phong1)
                        >12 ShaderOutputVisitor::_outputUpstreamShader(phong1,phong)
                          >13 Visitor::visitPhong(phong1)
                            >14 OutputHelper::beginRSL(maya_phong,phong1)
                            >14 ShaderMgr::convertibleConnection(phong1.color)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.color)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                                >16 ConvertShadingNetwork::nodeIsConvertible(checker1)
                                  >17 ShaderMgr::hasShaderType(checker)
                            >14 ShaderMgr::convertibleConnection(phong1.transparency)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                            >14 ShaderMgr::convertibleConnection(phong1.ambientColor)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                            >14 ShaderMgr::convertibleConnection(phong1.incandescence)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                            >14 OutputHelper::add_liq_UserDefinedNormal(phong1)
                            >14 ShaderMgr::convertibleConnection(phong1.normalCamera)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                            >14 ShaderMgr::convertibleConnection(phong1.diffuse)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                            >14 ShaderMgr::convertibleConnection(phong1.translucence)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                            >14 ShaderMgr::convertibleConnection(phong1.translucenceDepth)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                            >14 ShaderMgr::convertibleConnection(phong1.translucenceFocus)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                            >14 ShaderMgr::convertibleConnection(phong1.cosinePower)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                            >14 ShaderMgr::convertibleConnection(phong1.specularColor)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                            >14 ShaderMgr::convertibleConnection(phong1.reflectivity)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                            >14 ShaderMgr::convertibleConnection(phong1.reflectedColor)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                            >14 ShaderMgr::convertibleConnection(phong1.matteOpacityMode)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                            >14 ShaderMgr::convertibleConnection(phong1.matteOpacity)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                            >14 ShaderMgr::convertibleConnection(phong1.reflectionLimit)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                            >14 ShaderMgr::convertibleConnection(phong1.outColor)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                                >16 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                                  >17 ShaderMgr::hasShaderType(shadingEngine)
                            >14 ShaderMgr::convertibleConnection(phong1.outTransparency)
                              >15 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                            >14 OutputHelper::endRSL()
                      >11 ShaderMgr::getValidConnection(phong1)
                      >11 ConvertShadingNetwork::decrementDownstreamConnections(phong1, nodes, numConnections, validConnections)
                      >11 ConvertShadingNetwork::getNodeVariables(phong1, validConnections,  inputSrc, inputDes, outputSrc)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.colorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.colorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.color)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                        >12 ConvertShadingNetwork::addNodeInputVariable(phong1.color, inputSrc, inputDes)
                          >13 ConvertShadingNetwork::nodeIsConvertible(checker1)
                            >14 ShaderMgr::hasShaderType(checker)
                          >13 ShaderMgr::getValidConnection(checker1)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparencyB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraX)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraX)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraY)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraY)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraZ)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraZ)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                          >13 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                            >14 ShaderMgr::hasShaderType(shadingEngine)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                      >11 Visitor::addShaderMethodBody(phong1,checker1.outColor124,phong1.color124,)
                    >10 ConvertShadingNetwork::outputShaderMethod()
                      >11 Visitor::outputShaderMethod()
                    >10 Visitor::outputEnd()
                    >10 Visitor::postOutput()
                  >9 ConvertShadingNetwork::exportShaderEnd(phong1)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,displacementShader)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,volumeShader)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,liqShadowShader)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,liqEnvironmentShader)
                >8 ConvertShadingNetwork::exportShadingGroupBegin(phong1SG)
                >8 ConvertShadingNetwork::outputShadingGroup(phong1SG)
                  >9 Visitor::outputShadingGroup(phong1SG)
                >8 ConvertShadingNetwork::exportShadingGroupEnd(phong1SG)
              >7  ConvertShadingNetwork::afterExport()
          >5 liqRibTranslatorNew::worldPrologue__(cameraShape1)
            >6 Renderer::worldPrologue(cameraShape1)
          >5 liqRibTranslatorNew::lightBlock__(cameraShape1)
            >6 Renderer::writeLight_pre(|pointLight1|pointLightShape1,cameraShape1)
            >6 liqRibObj::writeObject(,cameraShape1,0)
              >7 liqRibLightData::write(,job=cameraShape1,0)
                >8 liqRibData::getFullPathName()
                >8 Renderer::write(|pointLight1|pointLightShape1,,cameraShape1,ref=0)
                  >9 liqRibData::getFullPathName()
                  >9 er_writeLightData.cpp::_write(|pointLight1|pointLightShape1,cameraShape1,...)
                    >10 Renderer::exportPointLight(pointlight,pointLightShape1,...)
                      >11 addLightGroupForLight(|pointLight1|pointLightShape1)
            >6 Renderer::writeLight_post(|pointLight1|pointLightShape1,cameraShape1)
            >6 Renderer::writeLight_pre(|pointLight2|pointLightShape2,cameraShape1)
            >6 liqRibObj::writeObject(,cameraShape1,0)
              >7 liqRibLightData::write(,job=cameraShape1,0)
                >8 liqRibData::getFullPathName()
                >8 Renderer::write(|pointLight2|pointLightShape2,,cameraShape1,ref=0)
                  >9 liqRibData::getFullPathName()
                  >9 er_writeLightData.cpp::_write(|pointLight2|pointLightShape2,cameraShape1,...)
                    >10 Renderer::exportPointLight(pointlight,pointLightShape2,...)
                      >11 addLightGroupForLight(|pointLight2|pointLightShape2)
            >6 Renderer::writeLight_post(|pointLight2|pointLightShape2,cameraShape1)
          >5 liqRibTranslatorNew::coordSysBlock__(cameraShape1)
            >6 Renderer::coordSysBlock__(cameraShape1)
          >5 liqRibTranslatorNew::objectBlock__(cameraShape1)
            >6 liqRibTranslatorNew::objectBlock_data(cameraShape1)
              >7 liqRibTranslatorNew::getShadowSetObject(cameraShape1)
              >7 liqRibTranslatorNew::oneObjectBlock_data(|pPlane2|pPlaneShape11,cameraShape1)
                >8 Renderer::exportOneObject_data(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::_writeObject(|pPlane2|pPlaneShape11,cameraShape1,0,0,0)
                    >10 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.18.rib,cameraShape1,0)
                      >11 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.18.rib,job=cameraShape1,0)
                        >12 liqRibData::getFullPathName()
                        >12 Renderer::write(|pPlane2|pPlaneShape11,R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.18.rib,cameraShape1,ref=0)
                          >13 liqRibData::getFullPathName()
                          >13 er_writeMeshData.cpp::_write1(|pPlane2|pPlaneShape11,cameraShape1)
                            >14 liqRibHT::find(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                            >14 _exportVertexFromNodePlug(|pPlane2|pPlaneShape11,0)
                            >14 liqRibData::getFullPathName()
            >6 liqRibTranslatorNew::objectBlock_reference(cameraShape1)
              >7 Renderer::objectBlock_reference_begin()
              >7 liqRibTranslatorNew::preGeometryMel()
                >8 Renderer::preGeometryMel()
              >7 liqRibTranslatorNew::getShadowSetObject(cameraShape1)
              >7 liqRibTranslatorNew::oneObjectBlock_reference(|pPlane2|pPlaneShape11,cameraShape1)
                >8 Renderer::oneObjectBlock_reference_attribute_begin(|pPlane2|pPlaneShape11,cameraShape1)
                >8 Renderer::oneObjectBlock_reference_attribute_block0(|pPlane2|pPlaneShape11,cameraShape1)
                >8 liqRibTranslatorNew::tRiIlluminate(cameraShape1,|pPlane2|pPlaneShape11)
                  >9 Renderer::exportLightLinks(cameraShape1,|pPlane2|pPlaneShape11,lightedByWhichLightShapes.size=2)
                >8 liqRibTranslatorNew::checkSurfaceShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                >8 liqRibTranslatorNew::checkDisplacementShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                >8 liqRibTranslatorNew::checkVolumeShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                >8 Renderer::oneObjectBlock_reference_attribute_block1(|pPlane2|pPlaneShape11,cameraShape1)
                >8 liqRibTranslatorNew::writeShader_(1,|pPlane2|pPlaneShape11,v=0,s=0,c=0,,|pPlane2|pPlaneShape11,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                >8 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|pPlane2|pPlaneShape11)
                >8 Renderer::exportOneObject_reference(|pPlane2|pPlaneShape11,cameraShape1)
                  >9 liqRibData::getFullPathName()
                  >9 liqRibData::getFullPathName()
                  >9 liqRibData::getFullPathName()
                >8 Renderer::oneObjectBlock_reference_attribute_end(|pPlane2|pPlaneShape11,cameraShape1)
              >7 Renderer::objectBlock_reference_end()
          >5 liqRibTranslatorNew::worldEpilogue__()
            >6 liqRibTranslator::worldEpilogue()
              >7 Renderer::worldEpilogue()
          >5 liqRibTranslatorNew::frameEpilogue__(18)
            >6 Renderer::frameEpilogue(18)
          >5 liqRibTranslatorNew::ribEpilogue__(cameraShape1)
            >6 Renderer::ribPrologue_end(cameraShape1)
              >7 Renderer::cookInstanceGroup()
              >7 Renderer::render()
        >4 Renderer::HeroPassEnd(cameraShape1)
      >3 liqRenderScript::addJob(job.title=checker_animFrame17,0)
        >4 liqRenderScript::popNextJobID()
      >3 liqRibTranslatorNew::postActions(defaultRenderLayer)
  >1 RendererMgr::test()
  >1 Renderer::closeLog()(but do nothing now)
    >2 OutputMgr::uninit()
      >3 OutputCall::~OutputCall()
      >3 OutputBase::~OutputBase()
      >3 OutputESS::~OutputESS()
      >3 OutputBase::~OutputBase()
      >3 OutputESA::~OutputESA()
      >3 OutputBase::~OutputBase()
  >1 RendererMgr::epilogue()
  >1 RendererMgr::uninstall()
    >2 Renderer::~Renderer()
  >1 RendererMgr::unsetFactory()
