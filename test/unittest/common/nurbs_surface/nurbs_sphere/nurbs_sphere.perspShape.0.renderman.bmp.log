  >1 liqRibTranslator::doIt()-->if(checkSettings()==true)
    >2 RendererMgr::setFactory(renderman)
    >2 RendererMgr::install()
      >3 ShaderMgr::setValidConnection()
      >3 ShaderMgr::getShaderConnectionMap()
    >2 RendererMgr::prologue()
    >2 Renderer::openLog(R:/MyDocuments/maya/projects/default/rib/nurbs_sphere.perspShape.1.renderman.bmp)(but do nothing now)
    >2 Renderer::canExport()
    >2 liqRibTranslatorNew::_doItNew(args,defaultRenderLayer)
      >3 liqRibTranslatorNew::_doItNewWithoutRenderScript(arg,defaultRenderLayer)
        >4 liqRibTranslator::verifyOutputDirectories()
          >5 liqRibTranslator::verifyResourceDir(RIB, rib, 0)
          >5 liqRibTranslator::verifyResourceDir(Texture, rmantex, 0)
          >5 liqRibTranslator::verifyResourceDir(Picture, rmanpix/, 0)
          >5 liqRibTranslator::verifyResourceDir(Temp Files, rmantmp/, 0)
        >4 liqRibTranslator::generateRenderScriptName()
        >4 liqRibTranslator::generateTempMayaSceneName()
        >4 tFrameScriptJobMgr::setCommonParameters(nurbs_sphereFrame0)
        >4 liqRibTranslatorNew::processOneFrame(0, liqglo__)
          >5 liqRibTranslatorNew::buildJobs__()
            >6 liqRibTranslatorNew::buildShadowJobs__()
              >7 tLightMgr::buildShadowJob(thisJob___, 0)
              >7 tLightMgr::buildShadowCameraJob(thisJob___, 0)
            >6 tRibCameraMgr::gatherDataForJob(liqglo___, ,jobList__,0,1)
            >6 liqRibTranslator::generateFileName(4,perspShape)
            >6 liqRibTranslator::generateFileName(5,perspShape)
              >7 liqRibTranslator::generateImageName(, job(perspShape)), 
          >5 liqRibTranslatorNew::calaculateSamplingTime(1)
          >5 liqRibTranslatorNew::scanScene__(1,0)
            >6 tLightMgr::scanScene(1,0, htable__, count, returnStatus__)
              >7 liqRibHT::insert(|pointLight1|pointLightShape1,lframe,0,3,0,matrix,,-1)
                >8 liqRibHT::hash(|pointLight1|pointLightShape1,0)
                >8 liqRibHT::find(|pointLight1|pointLightShape1,|pointLight1|pointLightShape1,3)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pointLight1|pointLightShape1,0,3,-1)
                  >9 liqRibNode::parseVectorAttributes(pointLight1,,2)
                  >9 liqRibNode::parseVectorAttributes(pointLight1,,3)
                  >9 liqRibNode::parseVectorAttributes(pointLight1,,4)
                  >9 liqRibNode::findShadingGroup(|pointLight1|pointLightShape1,3)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pointLight1|pointLightShape1,3)
                    >10 liqRibLightData::liqRibLightData(|pointLight1|pointLightShape1)
                      >11 liqRibData::addAdditionalSurfaceParameters(pointLightShape1)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
              >7 liqRibHT::insert(|pointLight2|pointLightShape2,lframe,0,3,1,matrix,,-1)
                >8 liqRibHT::hash(|pointLight2|pointLightShape2,1)
                >8 liqRibHT::find(|pointLight2|pointLightShape2,|pointLight2|pointLightShape2,3)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pointLight2|pointLightShape2,0,3,-1)
                  >9 liqRibNode::parseVectorAttributes(pointLight2,,2)
                  >9 liqRibNode::parseVectorAttributes(pointLight2,,3)
                  >9 liqRibNode::parseVectorAttributes(pointLight2,,4)
                  >9 liqRibNode::findShadingGroup(|pointLight2|pointLightShape2,3)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pointLight2|pointLightShape2,3)
                    >10 liqRibLightData::liqRibLightData(|pointLight2|pointLightShape2)
                      >11 liqRibData::addAdditionalSurfaceParameters(pointLightShape2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 tLocatorMgr::scanScene(1,0,htable__,count__,returnStatus__)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
              >7 liqRibHT::insert(|persp|perspShape,lframe,0,0,2,matrix,,-1)
                >8 liqRibHT::hash(|persp|perspShape,2)
                >8 liqRibHT::find(|persp|perspShape,|persp|perspShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|persp|perspShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(persp,,2)
                  >9 liqRibNode::parseVectorAttributes(persp,,3)
                  >9 liqRibNode::parseVectorAttributes(persp,,4)
                  >9 liqRibNode::findShadingGroup(|persp|perspShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|persp|perspShape,0)
                    >10 liqRibCameraData::liqRibCameraData(|persp|perspShape)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
              >7 liqRibHT::insert(|top|topShape,lframe,0,0,3,matrix,,-1)
                >8 liqRibHT::hash(|top|topShape,3)
                >8 liqRibHT::find(|top|topShape,|top|topShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|top|topShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(top,,2)
                  >9 liqRibNode::parseVectorAttributes(top,,3)
                  >9 liqRibNode::parseVectorAttributes(top,,4)
                  >9 liqRibNode::findShadingGroup(|top|topShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|top|topShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
              >7 liqRibHT::insert(|front|frontShape,lframe,0,0,4,matrix,,-1)
                >8 liqRibHT::hash(|front|frontShape,4)
                >8 liqRibHT::find(|front|frontShape,|front|frontShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|front|frontShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(front,,2)
                  >9 liqRibNode::parseVectorAttributes(front,,3)
                  >9 liqRibNode::parseVectorAttributes(front,,4)
                  >9 liqRibNode::findShadingGroup(|front|frontShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|front|frontShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
              >7 liqRibHT::insert(|side|sideShape,lframe,0,0,5,matrix,,-1)
                >8 liqRibHT::hash(|side|sideShape,5)
                >8 liqRibHT::find(|side|sideShape,|side|sideShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|side|sideShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(side,,2)
                  >9 liqRibNode::parseVectorAttributes(side,,3)
                  >9 liqRibNode::parseVectorAttributes(side,,4)
                  >9 liqRibNode::findShadingGroup(|side|sideShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|side|sideShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
              >7 liqRibHT::insert(|nurbsSphere1|nurbsSphereShape1,lframe,0,0,6,matrix,,-1)
                >8 liqRibHT::hash(|nurbsSphere1|nurbsSphereShape1,6)
                >8 liqRibHT::find(|nurbsSphere1|nurbsSphereShape1,|nurbsSphere1|nurbsSphereShape1,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|nurbsSphere1|nurbsSphereShape1,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(nurbsSphere1,,2)
                  >9 liqRibNode::parseVectorAttributes(nurbsSphere1,,3)
                  >9 liqRibNode::parseVectorAttributes(nurbsSphere1,,4)
                  >9 liqRibNode::findShadingGroup(|nurbsSphere1|nurbsSphereShape1,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getColor(&shader,&color)
                  >9 liqRibNode::getOpacity(&shader,&color)
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|nurbsSphere1|nurbsSphereShape1,0)
                    >10 liqRibSurfaceData::liqRibSurfaceData(nurbsSphereShape1)
                      >11 liqRibData::addAdditionalSurfaceParameters(nurbsSphereShape1)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
              >7 liqRibHT::insert(|nurbsSphere2|nurbsSphereShape2,lframe,0,0,7,matrix,,-1)
                >8 liqRibHT::hash(|nurbsSphere2|nurbsSphereShape2,7)
                >8 liqRibHT::find(|nurbsSphere2|nurbsSphereShape2,|nurbsSphere2|nurbsSphereShape2,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|nurbsSphere2|nurbsSphereShape2,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(nurbsSphere2,,2)
                  >9 liqRibNode::parseVectorAttributes(nurbsSphere2,,3)
                  >9 liqRibNode::parseVectorAttributes(nurbsSphere2,,4)
                  >9 liqRibNode::findShadingGroup(|nurbsSphere2|nurbsSphereShape2,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getColor(&shader,&color)
                  >9 liqRibNode::getOpacity(&shader,&color)
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|nurbsSphere2|nurbsSphereShape2,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
              >7 liqRibHT::insert(|nurbsSphereShape1_liq_|nurbsSphereShape1_liq_Shape,lframe,0,0,8,matrix,,-1)
                >8 liqRibHT::hash(|nurbsSphereShape1_liq_|nurbsSphereShape1_liq_Shape,8)
                >8 liqRibHT::find(|nurbsSphereShape1_liq_|nurbsSphereShape1_liq_Shape,|nurbsSphereShape1_liq_|nurbsSphereShape1_liq_Shape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|nurbsSphereShape1_liq_|nurbsSphereShape1_liq_Shape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(nurbsSphereShape1_liq_,,2)
                  >9 liqRibNode::parseVectorAttributes(nurbsSphereShape1_liq_,,3)
                  >9 liqRibNode::parseVectorAttributes(nurbsSphereShape1_liq_,,4)
                  >9 liqRibNode::findShadingGroup(|nurbsSphereShape1_liq_|nurbsSphereShape1_liq_Shape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getColor(&shader,&color)
                  >9 liqRibNode::getOpacity(&shader,&color)
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|nurbsSphereShape1_liq_|nurbsSphereShape1_liq_Shape,0)
                    >10 liqRibMeshData::liqRibMeshData(|nurbsSphereShape1_liq_|nurbsSphereShape1_liq_Shape)
                      >11 liqRibData::addAdditionalSurfaceParameters(nurbsSphereShape1_liq_Shape)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 liqRibTranslatorNew::dealwithParticleInstancedObjects(0,1,9)
            >6 tCameraMgr::getCameraData(perspShape,0)
              >7 tCameraMgr::getCameraInfo(|persp|perspShape,)
                >8 tCameraMgr::portFieldOfView(200,150,&horizontal,&vertical,&fnCamera)
                  >9 tCameraMgr::computeViewingFrustum(1.33333,,&left,&right,&bottom,&top,|persp|perspShape)
              >7 tCameraMgr::getCameraFilmOffset(|persp|perspShape,)
              >7 tCameraMgr::getCameraTransform(|persp|perspShape,)
          >5 liqRibTranslatorNew::doTextures(size=0)
            >6 rm::Renderer::doTextures(txtList.size()=0)
          >5 liqRibTranslatorNew::doShadows(size=0)
            >6 rm::Renderer::doShadows(shadowList_.size()=0)
          >5 Renderer::setRenderScriptFormatAndCompress(0,0)
            >6 Renderer::_RiOption_format_compress(0,0)
          >5 Renderer::isHeroPassReady(perspShape)
          >5 Renderer::HeroPassBegin(perspShape)
          >5 tHeroRibWriterMgr::write(liqglo___,perspShape,1,0)
            >6 liqRibTranslatorNew::ribPrologue__(perspShape)
              >7 Renderer::ribPrologue_begin(perspShape)
                >8 RiBegin_liq(R:/MyDocuments/maya/projects/default/rib/nurbs_sphere_perspShape.0001..rib(strlen=74)
              >7 Renderer::ribPrologue_comment(2.3.5,R:/MyDocuments/maya/projects/default/nurbs_sphere,yaoyansi,time)
              >7 Renderer::ribPrologue_options(perspShape)
                >8 Renderer::ribPrologue_writeSearthPath()
                >8 tHeroRibWriterMgr::ribPrologue_hider(0)
                >8 tHeroRibWriterMgr::ribPrologue_samples(4,4)
                >8 tHeroRibWriterMgr::ribPrologue_shadingrate(1)
                >8 tHeroRibWriterMgr::ribPrologue_filter(0,2,2)
                >8 tHeroRibWriterMgr::ribPrologue_pass(beauty)
            >6 liqRibTranslatorNew::framePrologue__(1,perspShape)
              >7 Renderer::framePrologue(1,perspShape)
                >8 tHeroRibWriterMgr::framePrologue_display(perspShape)
                  >9 exportJobCamera(perspShape,,)
                >8 Renderer::framePrologue_camera(1,perspShape)
            >6 ShaderMgr::exportShaderGraph()
              >7 ConvertShadingNetwork::exportShaderGraph()
                >8 ConvertShadingNetwork::beforeExport()
                >8 ConvertShadingNetwork::__export()
                  >9 ConvertShadingNetwork::canShadingGroupExported(initialShadingGroup)
                  >9 Renderer::getValidShaderPlugsInShadingGroup()
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(initialShadingGroup,surfaceShader)
                    >10 ConvertShadingNetwork::exportShaderNodeInPlug(initialShadingGroup,surfaceShader)
                      >11 ConvertShadingNetwork::_exportShaderNodeInPlug(initialShadingGroup,surfaceShader)
                        >12 ConvertShadingNetwork::exportShaderNode(lambert1)
                          >13 ConvertShadingNetwork::canShaderExported(lambert1)
                          >13 ConvertShadingNetwork::exportShaderBegin(lambert1)
                          >13 ConvertShadingNetwork::convertShadingNetworkToRSL(lambert1,surfaceShader)
                            >14 Visitor::initShaderData(lambert1,surfaceShader)
                              >15 NodePlugConnectionMgr::setNodePlugMgr(...)
                              >15 NodePlugConnectionMgr::reset()
                            >14 ConvertShadingNetwork::getUpstreamConvertibleNodes(lambert1, nodes, numConnections)
                              >15 ConvertShadingNetwork::nodeIsConvertible(lambert1)
                                >16 ShaderMgr::hasShaderType(lambert)
                              >15 ShaderMgr::getValidConnection(lambert1)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert1.colorR)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert1.colorR)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert1.colorG)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert1.colorG)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert1.colorB)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert1.colorB)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert1.color)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert1.color)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert1.transparencyR)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert1.transparencyR)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert1.transparencyG)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert1.transparencyG)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert1.transparencyB)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert1.transparencyB)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert1.transparency)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert1.transparency)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert1.ambientColorR)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert1.ambientColorR)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert1.ambientColorG)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert1.ambientColorG)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert1.ambientColorB)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert1.ambientColorB)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert1.ambientColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert1.ambientColor)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert1.incandescenceR)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert1.incandescenceR)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert1.incandescenceG)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert1.incandescenceG)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert1.incandescenceB)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert1.incandescenceB)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert1.incandescence)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert1.incandescence)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert1.normalCameraX)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert1.normalCameraX)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert1.normalCameraY)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert1.normalCameraY)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert1.normalCameraZ)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert1.normalCameraZ)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert1.normalCamera)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert1.normalCamera)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert1.diffuse)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert1.diffuse)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert1.translucence)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert1.translucence)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert1.translucenceDepth)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert1.translucenceDepth)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert1.translucenceFocus)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert1.translucenceFocus)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert1.outColorR)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert1.outColorR)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert1.outColorG)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert1.outColorG)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert1.outColorB)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert1.outColorB)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert1.outColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert1.outColor)
                                >16 ConvertShadingNetwork::nodeIsConvertible(initialParticleSE)
                                  >17 ShaderMgr::hasShaderType(shadingEngine)
                                >16 ConvertShadingNetwork::nodeIsConvertible(initialShadingGroup)
                                  >17 ShaderMgr::hasShaderType(shadingEngine)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert1.outTransparencyR)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert1.outTransparencyR)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert1.outTransparencyG)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert1.outTransparencyG)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert1.outTransparencyB)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert1.outTransparencyB)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert1.outTransparency)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert1.outTransparency)
                            >14 Visitor::preOutput(lambert1)
                            >14 Visitor::outputBegin(lambert1), open shader file
                              >15 getShaderFilePath_SRC(lambert1)
                                >16 getShaderFilePath_NoExt(lambert1)
                              >15 Visitor::getSurfaceShaderAOVOutputParametersString()
                              >15 Visitor::defineAOVVariables(lambert1)
                            >14 ConvertShadingNetwork::traverseGraphAndOutputNodeFunctions( nodes, numConnections)
                              >15 Visitor::outputUpstreamShader(lambert1)
                                >16 ShaderOutputVisitor::_outputUpstreamShader(lambert1,lambert)
                                  >17 Visitor::visitLambert(lambert1)
                                    >18 OutputHelper::addInclude(lambert.h)
                                    >18 OutputHelper::beginRSL(lambert1)
                                    >18 ShaderMgr::convertibleConnection(lambert1.ambientColor)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert1.ambientColor)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert1.ambientColor)
                                    >18 NodePlugInfo::add(lambert1,ambientColor,color)
                                      >19 NodePlug::add(ambientColor, color)
                                    >18 ShaderMgr::convertibleConnection(lambert1.color)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert1.color)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert1.color)
                                    >18 NodePlugInfo::add(lambert1,color,color)
                                      >19 NodePlug::add(color, color)
                                    >18 ShaderMgr::convertibleConnection(lambert1.diffuse)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert1.diffuse)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert1.diffuse)
                                    >18 NodePlugInfo::add(lambert1,diffuse,float)
                                      >19 NodePlug::add(diffuse, float)
                                    >18 ShaderMgr::convertibleConnection(lambert1.incandescence)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert1.incandescence)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert1.incandescence)
                                    >18 NodePlugInfo::add(lambert1,incandescence,color)
                                      >19 NodePlug::add(incandescence, color)
                                    >18 ShaderMgr::convertibleConnection(lambert1.matteOpacityMode)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert1.matteOpacityMode)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert1.matteOpacityMode)
                                    >18 NodePlugInfo::add(lambert1,matteOpacityMode,float)
                                      >19 NodePlug::add(matteOpacityMode, float)
                                    >18 ShaderMgr::convertibleConnection(lambert1.matteOpacity)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert1.matteOpacity)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert1.matteOpacity)
                                    >18 NodePlugInfo::add(lambert1,matteOpacity,float)
                                      >19 NodePlug::add(matteOpacity, float)
                                    >18 ShaderMgr::convertibleConnection(lambert1.refractions)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert1.refractions)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert1.refractions)
                                    >18 NodePlugInfo::add(lambert1,refractions,float)
                                      >19 NodePlug::add(refractions, float)
                                    >18 ShaderMgr::convertibleConnection(lambert1.refractiveIndex)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert1.refractiveIndex)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert1.refractiveIndex)
                                    >18 NodePlugInfo::add(lambert1,refractiveIndex,float)
                                      >19 NodePlug::add(refractiveIndex, float)
                                    >18 ShaderMgr::convertibleConnection(lambert1.refractionLimit)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert1.refractionLimit)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert1.refractionLimit)
                                    >18 NodePlugInfo::add(lambert1,refractionLimit,float)
                                      >19 NodePlug::add(refractionLimit, float)
                                    >18 ShaderMgr::convertibleConnection(lambert1.lightAbsorbance)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert1.lightAbsorbance)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert1.lightAbsorbance)
                                    >18 NodePlugInfo::add(lambert1,lightAbsorbance,float)
                                      >19 NodePlug::add(lightAbsorbance, float)
                                    >18 ShaderMgr::convertibleConnection(lambert1.shadowAttenuation)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert1.shadowAttenuation)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert1.shadowAttenuation)
                                    >18 NodePlugInfo::add(lambert1,shadowAttenuation,float)
                                      >19 NodePlug::add(shadowAttenuation, float)
                                    >18 ShaderMgr::convertibleConnection(lambert1.transparency)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert1.transparency)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert1.transparency)
                                    >18 NodePlugInfo::add(lambert1,transparency,color)
                                      >19 NodePlug::add(transparency, color)
                                    >18 ShaderMgr::convertibleConnection(lambert1.translucence)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert1.translucence)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert1.translucence)
                                    >18 NodePlugInfo::add(lambert1,translucence,float)
                                      >19 NodePlug::add(translucence, float)
                                    >18 ShaderMgr::convertibleConnection(lambert1.translucenceDepth)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert1.translucenceDepth)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert1.translucenceDepth)
                                    >18 NodePlugInfo::add(lambert1,translucenceDepth,float)
                                      >19 NodePlug::add(translucenceDepth, float)
                                    >18 ShaderMgr::convertibleConnection(lambert1.translucenceFocus)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert1.translucenceFocus)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert1.translucenceFocus)
                                    >18 NodePlugInfo::add(lambert1,translucenceFocus,float)
                                      >19 NodePlug::add(translucenceFocus, float)
                                    >18 ShaderMgr::convertibleConnection(lambert1.outColor)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert1.outColor)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert1.outColor)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(initialParticleSE)
                                          >21 ShaderMgr::hasShaderType(shadingEngine)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(initialShadingGroup)
                                          >21 ShaderMgr::hasShaderType(shadingEngine)
                                    >18 NodePlugInfo::add(lambert1,outColor,color)
                                      >19 NodePlug::add(outColor, color)
                                    >18 ShaderMgr::convertibleConnection(lambert1.outTransparency)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert1.outTransparency)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert1.outTransparency)
                                    >18 NodePlugInfo::add(lambert1,outTransparency,color)
                                      >19 NodePlug::add(outTransparency, color)
                                    >18 OutputHelper::endRSL()
                              >15 ShaderMgr::getValidConnection(lambert1)
                              >15 ConvertShadingNetwork::decrementDownstreamConnections(lambert1, nodes, numConnections, validConnections)
                              >15 ConvertShadingNetwork::getNodeVariables(lambert1, validConnections,  inputSrc, inputDes, outputSrc)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert1.colorR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert1.colorR)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert1.colorG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert1.colorG)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert1.colorB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert1.colorB)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert1.color)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert1.color)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert1.transparencyR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert1.transparencyR)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert1.transparencyG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert1.transparencyG)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert1.transparencyB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert1.transparencyB)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert1.transparency)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert1.transparency)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert1.ambientColorR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert1.ambientColorR)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert1.ambientColorG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert1.ambientColorG)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert1.ambientColorB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert1.ambientColorB)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert1.ambientColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert1.ambientColor)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert1.incandescenceR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert1.incandescenceR)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert1.incandescenceG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert1.incandescenceG)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert1.incandescenceB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert1.incandescenceB)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert1.incandescence)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert1.incandescence)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert1.normalCameraX)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert1.normalCameraX)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert1.normalCameraY)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert1.normalCameraY)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert1.normalCameraZ)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert1.normalCameraZ)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert1.normalCamera)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert1.normalCamera)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert1.diffuse)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert1.diffuse)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert1.translucence)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert1.translucence)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert1.translucenceDepth)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert1.translucenceDepth)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert1.translucenceFocus)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert1.translucenceFocus)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert1.outColorR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert1.outColorR)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert1.outColorG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert1.outColorG)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert1.outColorB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert1.outColorB)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert1.outColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert1.outColor)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(initialParticleSE)
                                    >18 ShaderMgr::hasShaderType(shadingEngine)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(initialShadingGroup)
                                    >18 ShaderMgr::hasShaderType(shadingEngine)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert1.outTransparencyR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert1.outTransparencyR)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert1.outTransparencyG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert1.outTransparencyG)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert1.outTransparencyB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert1.outTransparencyB)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert1.outTransparency)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert1.outTransparency)
                              >15 Visitor::addShaderMethodBody(lambert1,,,)
                                >16 NodePlugConnectionMgr::add(lambert1)
                            >14 ConvertShadingNetwork::outputShaderMethod()
                              >15 Visitor::outputShaderMethod()
                                >16 NodePlugConnectionMgr::cookRSLFunctionCallString(0)
                                >16 NodePlugConnectionMgr::log(0)
                            >14 Visitor::outputEnd(), close shader file
                            >14 Visitor::postOutput()
                              >15 getShaderFilePath_SLO(lambert1)
                                >16 getShaderFilePath_NoExt(lambert1)
                              >15 getShaderFilePath_SRC(lambert1)
                                >16 getShaderFilePath_NoExt(lambert1)
                          >13 ConvertShadingNetwork::exportShaderEnd(lambert1)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(initialShadingGroup,displacementShader)
                    >10 ConvertShadingNetwork::exportShaderNodeInPlug(initialShadingGroup,displacementShader)
                      >11 ConvertShadingNetwork::_exportShaderNodeInPlug(initialShadingGroup,displacementShader)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(initialShadingGroup,volumeShader)
                    >10 ConvertShadingNetwork::exportShaderNodeInPlug(initialShadingGroup,volumeShader)
                      >11 ConvertShadingNetwork::_exportShaderNodeInPlug(initialShadingGroup,volumeShader)
                  >9 ConvertShadingNetwork::exportShadingGroupBegin(initialShadingGroup)
                  >9 ConvertShadingNetwork::outputShadingGroup(initialShadingGroup)
                    >10 Visitor::outputShadingGroup(initialShadingGroup)
                      >11 Visitor::outputShadingGroup(initialShadingGroup,0)
                  >9 ConvertShadingNetwork::exportShadingGroupEnd(initialShadingGroup)
                  >9 ConvertShadingNetwork::canShadingGroupExported(initialShadingGroup)
                  >9 ConvertShadingNetwork::canShadingGroupExported(initialShadingGroup)
                  >9 ConvertShadingNetwork::exportShaderNodeInPlug(perspShape,miEnvironmentShader)
                    >10 ConvertShadingNetwork::_exportShaderNodeInPlug(perspShape,miEnvironmentShader)
                  >9 ConvertShadingNetwork::exportShaderNodeInPlug(perspShape,liqVolumeShader)
                  >9 ConvertShadingNetwork::exportShaderNodeInPlug(perspShape,liqEnvironmentShader)
                  >9 ConvertShadingNetwork::exportShaderNodeInPlug(perspShape,liqLensShader)
                >8  ConvertShadingNetwork::afterExport()
            >6 liqRibTranslatorNew::worldPrologue__(perspShape)
              >7 Renderer::worldPrologue(perspShape)
            >6 liqRibTranslatorNew::lightBlock__(perspShape)
              >7 Renderer::writeLight_pre(|pointLight1|pointLightShape1,perspShape)
              >7 liqRibObj::writeObject(,perspShape,0)
                >8 liqRibLightData::write(,job=perspShape,0)
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::write(|pointLight1|pointLightShape1,,perspShape,ref=0)
                    >10 Helper::RiBeginRef()
                      >11 liqRibData::getFullPathName()
                    >10 rm_writeLightData.cpp::_write(|pointLight1|pointLightShape1,perspShape,...)
                      >11 Renderer::exportPointLight(pointlight,pointLightShape1,...)
                    >10 Helper::RiEndRef()
              >7 Renderer::writeLight_post(|pointLight1|pointLightShape1,perspShape)
              >7 Renderer::writeLight_pre(|pointLight2|pointLightShape2,perspShape)
              >7 liqRibObj::writeObject(,perspShape,0)
                >8 liqRibLightData::write(,job=perspShape,0)
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::write(|pointLight2|pointLightShape2,,perspShape,ref=0)
                    >10 Helper::RiBeginRef()
                      >11 liqRibData::getFullPathName()
                    >10 rm_writeLightData.cpp::_write(|pointLight2|pointLightShape2,perspShape,...)
                      >11 Renderer::exportPointLight(pointlight,pointLightShape2,...)
                    >10 Helper::RiEndRef()
              >7 Renderer::writeLight_post(|pointLight2|pointLightShape2,perspShape)
            >6 liqRibTranslatorNew::coordSysBlock__(perspShape)
              >7 Renderer::coordSysBlock__(perspShape)
            >6 liqRibTranslatorNew::objectBlock__(perspShape)
              >7 liqRibTranslatorNew::objectBlock_data(perspShape)
                >8 liqRibTranslatorNew::getShadowSetObject(perspShape)
                >8 liqRibTranslatorNew::oneObjectBlock_data(|persp|perspShape,perspShape)
                  >9 Renderer::exportOneObject_data(|persp|perspShape,perspShape)
                    >10 Renderer::_writeObject(|persp|perspShape,perspShape,0,0,0)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_persp_perspShape.1.rib,perspShape,0)
                        >12 liqRibCameraData::write(R:/MyDocuments/maya/projects/default/rib/_persp_perspShape.1.rib,job=perspShape,0)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|persp|perspShape,R:/MyDocuments/maya/projects/default/rib/_persp_perspShape.1.rib,perspShape,ref=0)
                >8 liqRibTranslatorNew::oneObjectBlock_data(|nurbsSphere1|nurbsSphereShape1,perspShape)
                  >9 Renderer::exportOneObject_data(|nurbsSphere1|nurbsSphereShape1,perspShape)
                    >10 Renderer::_writeObject(|nurbsSphere1|nurbsSphereShape1,perspShape,0,0,0)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_nurbsSphere1_nurbsSphereShape1.1.rib,perspShape,0)
                        >12 liqRibSurfaceData::write(R:/MyDocuments/maya/projects/default/rib/_nurbsSphere1_nurbsSphereShape1.1.rib,job=perspShape,0)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|nurbsSphere1|nurbsSphereShape1,R:/MyDocuments/maya/projects/default/rib/_nurbsSphere1_nurbsSphereShape1.1.rib,perspShape,ref=0)
                >8 liqRibTranslatorNew::oneObjectBlock_data(|nurbsSphereShape1_liq_|nurbsSphereShape1_liq_Shape,perspShape)
                  >9 Renderer::exportOneObject_data(|nurbsSphereShape1_liq_|nurbsSphereShape1_liq_Shape,perspShape)
                    >10 Renderer::_writeObject(|nurbsSphereShape1_liq_|nurbsSphereShape1_liq_Shape,perspShape,0,0,0)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_nurbsSphereShape1_liq__nurbsSphereShape1_liq_Shape.1.rib,perspShape,0)
                        >12 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_nurbsSphereShape1_liq__nurbsSphereShape1_liq_Shape.1.rib,job=perspShape,0)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|nurbsSphereShape1_liq_|nurbsSphereShape1_liq_Shape,R:/MyDocuments/maya/projects/default/rib/_nurbsSphereShape1_liq__nurbsSphereShape1_liq_Shape.1.rib,perspShape,ref=0)
              >7 liqRibTranslatorNew::objectBlock_reference(perspShape)
                >8 Renderer::objectBlock_reference_begin()
                >8 liqRibTranslatorNew::preGeometryMel()
                  >9 Renderer::preGeometryMel()
                >8 liqRibTranslatorNew::getShadowSetObject(perspShape)
                >8 liqRibTranslatorNew::oneObjectBlock_reference(|persp|perspShape,perspShape)
                  >9 Renderer::oneObjectBlock_reference_attribute_begin(|persp|perspShape,perspShape)
                  >9 Renderer::oneObjectBlock_reference_attribute_block0(|persp|perspShape,perspShape)
                  >9 liqRibTranslatorNew::tRiIlluminate(perspShape,|persp|perspShape)
                    >10 Renderer::exportLightLinks(perspShape,|persp|perspShape,lightedByWhichLightShapes.size=0)
                      >11 Renderer::logFrame(|persp|perspShape is not lighted.)
                  >9 liqRibTranslatorNew::checkSurfaceShader(|persp|perspShape,|persp|perspShape,,,)
                  >9 liqRibTranslatorNew::checkDisplacementShader(|persp|perspShape,|persp|perspShape,,,)
                  >9 liqRibTranslatorNew::checkVolumeShader(|persp|perspShape,|persp|perspShape,,,)
                  >9 Renderer::oneObjectBlock_reference_attribute_block1(|persp|perspShape,perspShape)
                    >10 objectNonShadowAttribute(|persp|perspShape)
                      >11 liqRibNode::writeUserAttributes()
                        >12 Renderer::writeUserAttributes()
                  >9 liqRibTranslatorNew::writeShader_(1,|persp|perspShape,v=0,s=0,c=0,,|persp|perspShape,perspShape)
                    >10 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|persp|perspShape,|persp|perspShape,0)
                      >11 Renderer::F2(0,|persp|perspShape)
                      >11 liqRibNode::findShader()
                  >9 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|persp|perspShape)
                  >9 Renderer::exportOneObject_reference(|persp|perspShape,perspShape)
                    >10 liqRibTranslatorNew::preTransformMel
                    >10 MaxtrixMotionBlur(|persp|perspShape,|persp|perspShape,0)
                    >10 liqRibTranslatorNew::postTransformMel(kTransform)
                    >10 liqRibTranslatorNew::preShapeMel(kTransform)
                    >10 Renderer::_writeObject(|persp|perspShape,perspShape,0,0,1)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_persp_perspShape.1.rib,perspShape,1)
                        >12 liqRibCameraData::write(R:/MyDocuments/maya/projects/default/rib/_persp_perspShape.1.rib,job=perspShape,1)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|persp|perspShape,R:/MyDocuments/maya/projects/default/rib/_persp_perspShape.1.rib,perspShape,ref=1)
                              >15 liqRibData::getFullPathName()
                            >14 rm_writeCameraData.cpp::_write(|persp|perspShape,perspShape)
                    >10 liqRibTranslatorNew::postShapeMel(kTransform)
                  >9 Renderer::oneObjectBlock_reference_attribute_end(|persp|perspShape,perspShape)
                >8 liqRibTranslatorNew::oneObjectBlock_reference(|nurbsSphere1|nurbsSphereShape1,perspShape)
                  >9 Renderer::oneObjectBlock_reference_attribute_begin(|nurbsSphere1|nurbsSphereShape1,perspShape)
                  >9 Renderer::oneObjectBlock_reference_attribute_block0(|nurbsSphere1|nurbsSphereShape1,perspShape)
                  >9 liqRibTranslatorNew::tRiIlluminate(perspShape,|nurbsSphere1|nurbsSphereShape1)
                    >10 Renderer::exportLightLinks(perspShape,|nurbsSphere1|nurbsSphereShape1,lightedByWhichLightShapes.size=2)
                  >9 liqRibTranslatorNew::checkSurfaceShader(|nurbsSphere1|nurbsSphereShape1,|nurbsSphere1|nurbsSphereShape1,,,)
                  >9 liqRibTranslatorNew::checkDisplacementShader(|nurbsSphere1|nurbsSphereShape1,|nurbsSphere1|nurbsSphereShape1,,,)
                  >9 liqRibTranslatorNew::checkVolumeShader(|nurbsSphere1|nurbsSphereShape1,|nurbsSphere1|nurbsSphereShape1,,,)
                  >9 Renderer::oneObjectBlock_reference_attribute_block1(|nurbsSphere1|nurbsSphereShape1,perspShape)
                    >10 objectNonShadowAttribute(|nurbsSphere1|nurbsSphereShape1)
                      >11 liqRibNode::writeUserAttributes()
                        >12 Renderer::writeUserAttributes()
                  >9 liqRibTranslatorNew::writeShader_(1,|nurbsSphere1|nurbsSphereShape1,v=0,s=0,c=0,,|nurbsSphere1|nurbsSphereShape1,perspShape)
                    >10 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|nurbsSphere1|nurbsSphereShape1,|nurbsSphere1|nurbsSphereShape1,0)
                      >11 Renderer::F2(0,|nurbsSphere1|nurbsSphereShape1)
                      >11 liqRibNode::findShader()
                  >9 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|nurbsSphere1|nurbsSphereShape1)
                    >10 Visitor::outputShadingGroup(initialShadingGroup,1)
                      >11 _outputShadingGroup(initialShadingGroup)
                        >12 getShaderFilePath_NoExt(lambert1)
                  >9 Renderer::exportOneObject_reference(|nurbsSphere1|nurbsSphereShape1,perspShape)
                    >10 liqRibTranslatorNew::preTransformMel
                    >10 MaxtrixMotionBlur(|nurbsSphere1|nurbsSphereShape1,|nurbsSphere1|nurbsSphereShape1,0)
                    >10 liqRibTranslatorNew::postTransformMel(kTransform)
                    >10 liqRibTranslatorNew::preShapeMel(kTransform)
                    >10 Renderer::_writeObject(|nurbsSphere1|nurbsSphereShape1,perspShape,0,0,1)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_nurbsSphere1_nurbsSphereShape1.1.rib,perspShape,1)
                        >12 liqRibSurfaceData::write(R:/MyDocuments/maya/projects/default/rib/_nurbsSphere1_nurbsSphereShape1.1.rib,job=perspShape,1)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|nurbsSphere1|nurbsSphereShape1,R:/MyDocuments/maya/projects/default/rib/_nurbsSphere1_nurbsSphereShape1.1.rib,perspShape,ref=1)
                              >15 liqRibData::getFullPathName()
                            >14 rm_writeSurfaceData.cpp::_write(|nurbsSphere1|nurbsSphereShape1,perspShape,...)
                    >10 liqRibTranslatorNew::postShapeMel(kTransform)
                  >9 Renderer::oneObjectBlock_reference_attribute_end(|nurbsSphere1|nurbsSphereShape1,perspShape)
                >8 liqRibTranslatorNew::oneObjectBlock_reference(|nurbsSphereShape1_liq_|nurbsSphereShape1_liq_Shape,perspShape)
                  >9 Renderer::oneObjectBlock_reference_attribute_begin(|nurbsSphereShape1_liq_|nurbsSphereShape1_liq_Shape,perspShape)
                  >9 Renderer::oneObjectBlock_reference_attribute_block0(|nurbsSphereShape1_liq_|nurbsSphereShape1_liq_Shape,perspShape)
                  >9 liqRibTranslatorNew::tRiIlluminate(perspShape,|nurbsSphereShape1_liq_|nurbsSphereShape1_liq_Shape)
                    >10 Renderer::exportLightLinks(perspShape,|nurbsSphereShape1_liq_|nurbsSphereShape1_liq_Shape,lightedByWhichLightShapes.size=2)
                  >9 liqRibTranslatorNew::checkSurfaceShader(|nurbsSphereShape1_liq_|nurbsSphereShape1_liq_Shape,|nurbsSphereShape1_liq_|nurbsSphereShape1_liq_Shape,,,)
                  >9 liqRibTranslatorNew::checkDisplacementShader(|nurbsSphereShape1_liq_|nurbsSphereShape1_liq_Shape,|nurbsSphereShape1_liq_|nurbsSphereShape1_liq_Shape,,,)
                  >9 liqRibTranslatorNew::checkVolumeShader(|nurbsSphereShape1_liq_|nurbsSphereShape1_liq_Shape,|nurbsSphereShape1_liq_|nurbsSphereShape1_liq_Shape,,,)
                  >9 Renderer::oneObjectBlock_reference_attribute_block1(|nurbsSphereShape1_liq_|nurbsSphereShape1_liq_Shape,perspShape)
                    >10 objectNonShadowAttribute(|nurbsSphereShape1_liq_|nurbsSphereShape1_liq_Shape)
                      >11 liqRibNode::writeUserAttributes()
                        >12 Renderer::writeUserAttributes()
                  >9 liqRibTranslatorNew::writeShader_(1,|nurbsSphereShape1_liq_|nurbsSphereShape1_liq_Shape,v=0,s=0,c=0,,|nurbsSphereShape1_liq_|nurbsSphereShape1_liq_Shape,perspShape)
                    >10 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|nurbsSphereShape1_liq_|nurbsSphereShape1_liq_Shape,|nurbsSphereShape1_liq_|nurbsSphereShape1_liq_Shape,0)
                      >11 Renderer::F2(0,|nurbsSphereShape1_liq_|nurbsSphereShape1_liq_Shape)
                      >11 liqRibNode::findShader()
                  >9 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|nurbsSphereShape1_liq_|nurbsSphereShape1_liq_Shape)
                    >10 Visitor::outputShadingGroup(initialShadingGroup,1)
                      >11 _outputShadingGroup(initialShadingGroup)
                        >12 getShaderFilePath_NoExt(lambert1)
                  >9 Renderer::exportOneObject_reference(|nurbsSphereShape1_liq_|nurbsSphereShape1_liq_Shape,perspShape)
                    >10 liqRibTranslatorNew::preTransformMel
                    >10 MaxtrixMotionBlur(|nurbsSphereShape1_liq_|nurbsSphereShape1_liq_Shape,|nurbsSphereShape1_liq_|nurbsSphereShape1_liq_Shape,0)
                    >10 liqRibTranslatorNew::postTransformMel(kTransform)
                    >10 liqRibTranslatorNew::preShapeMel(kTransform)
                    >10 Renderer::_writeObject(|nurbsSphereShape1_liq_|nurbsSphereShape1_liq_Shape,perspShape,0,0,1)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_nurbsSphereShape1_liq__nurbsSphereShape1_liq_Shape.1.rib,perspShape,1)
                        >12 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_nurbsSphereShape1_liq__nurbsSphereShape1_liq_Shape.1.rib,job=perspShape,1)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|nurbsSphereShape1_liq_|nurbsSphereShape1_liq_Shape,R:/MyDocuments/maya/projects/default/rib/_nurbsSphereShape1_liq__nurbsSphereShape1_liq_Shape.1.rib,perspShape,ref=1)
                              >15 liqRibData::getFullPathName()
                            >14 rm_writeMeshData.cpp::_write(|nurbsSphereShape1_liq_|nurbsSphereShape1_liq_Shape,perspShape)
                    >10 liqRibTranslatorNew::postShapeMel(kTransform)
                  >9 Renderer::oneObjectBlock_reference_attribute_end(|nurbsSphereShape1_liq_|nurbsSphereShape1_liq_Shape,perspShape)
                >8 Renderer::objectBlock_reference_end()
            >6 liqRibTranslatorNew::worldEpilogue__()
              >7 liqRibTranslator::worldEpilogue()
                >8 Renderer::worldEpilogue()
            >6 liqRibTranslatorNew::frameEpilogue__(1)
              >7 Renderer::frameEpilogue(1)
            >6 liqRibTranslatorNew::ribEpilogue__(perspShape)
              >7 Renderer::ribPrologue_end(perspShape)
          >5 Renderer::HeroPassEnd(perspShape)
            >6 rm::Renderer::renderAll_local(R:/MyDocuments/maya/projects/default/rib/nurbs_sphere_perspShape.0001..rib)
              >7 liqProcessLauncher::_execute(renderdl,   "R:/MyDocuments/maya/projects/default/rib/nurbs_sphere_perspShape.0001..rib","R:/MyDocuments/maya/projects/default/", wait=0)
                >8 liqProcessLauncher::_execute(renderdl,   "R:/MyDocuments/maya/projects/default/rib/nurbs_sphere_perspShape.0001..rib","R:/MyDocuments/maya/projects/default/", wait=0)
        >4 liqRenderScript::addJob(job.title=nurbs_sphereFrame0,0)
          >5 liqRenderScript::popNextJobID()
        >4 liqRibTranslatorNew::postActions(defaultRenderLayer)
    >2 RendererMgr::test()
    >2 Renderer::closeLog()(but do nothing now)
    >2 RendererMgr::epilogue()
    >2 RendererMgr::uninstall()
      >3 ShaderMgr::clearValidConnection()
    >2 RendererMgr::unsetFactory()
