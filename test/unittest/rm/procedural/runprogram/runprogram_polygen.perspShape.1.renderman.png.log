  >1 liqRibTranslator::doIt()-->if(checkSettings()==true)
    >2 RendererMgr::setFactory(renderman)
    >2 RendererMgr::install()
      >3 ShaderMgr::setValidConnection()
      >3 ShaderMgr::getShaderConnectionMap()
      >3 RNodeVisitorMgr::setValidConnection(...)
        >4 FlatNodeVisitor::setValidConnection(...)
        >4 OccLightNodeVisitor::setValidConnection(...)
        >4 PhysicalsunNodeVisitor::setValidConnection(...)
    >2 RendererMgr::prologue()
    >2 Renderer::openLog(R:/MyDocuments/maya/projects/default/rib/runprogram_polygen.perspShape.1.renderman.png)(but do nothing now)
    >2 Renderer::canExport()
    >2 liqRibTranslatorNew::_doItNew(args,defaultRenderLayer)
      >3 liqRibTranslatorNew::_doItNewWithoutRenderScript(arg,defaultRenderLayer)
        >4 liqRibTranslator::verifyOutputDirectories()
          >5 liqRibTranslator::verifyResourceDir(RIB, rib, 0)
          >5 liqRibTranslator::verifyResourceDir(Texture, rmantex, 0)
          >5 liqRibTranslator::verifyResourceDir(Picture, rmanpix/, 0)
          >5 liqRibTranslator::verifyResourceDir(Temp Files, rmantmp/, 0)
        >4 liqRibTranslator::generateRenderScriptName()
        >4 liqRibTranslator::generateTempMayaSceneName()
        >4 tFrameScriptJobMgr::setCommonParameters(runprogram_polygenFrame1)
        >4 liqRibTranslatorNew::processOneFrame(0, liqglo__)
          >5 liqRibTranslatorNew::buildJobs__()
            >6 liqShader::liqShader(liquidDisplacement1)
              >7 liqShaderFactory::getUniqueShaderHandler()
              >7 liqGetSloInfo::setShaderNode(liquidDisplacement1)
              >7 Renderer::getTextureExt()
            >6 liqShader::buildJobs()
              >7 liqShader::scanExpressions(liquidDisplacement1)
                >8 liqShader::processExpression(texname,*light)
                  >9 removeRedundentExtsion(E:/dev/Autodesk/maya/myplugin/project/liquid_/test/texture/mold_normals.tif)
                  >9 liqExpression::liqExpression([MakeTexture E:/dev/Autodesk/maya/myplugin/project/liquid_/test/texture/mold_normals.tif],)
                  >9 liqExpression::CalcValue()
                    >10 Renderer::getTextureExt()
                    >10 Renderer::getTextureExt()
            >6 liqRibTranslatorNew::buildShadowJobs__()
              >7 tLightMgr::buildShadowJob(thisJob___, 0)
              >7 tLightMgr::buildShadowCameraJob(thisJob___, 0)
            >6 tRibCameraMgr::gatherDataForJob(liqglo___, ,jobList__,0,1)
            >6 liqRibTranslator::generateFileName(4,perspShape)
            >6 liqRibTranslator::generateFileName(5,perspShape)
              >7 liqRibTranslator::generateImageName(, job(perspShape)), 
          >5 liqRibTranslatorNew::calaculateSamplingTime(1)
          >5 liqRibTranslatorNew::scanScene__(1,0)
            >6 tLightMgr::scanScene(1,0, htable__, count, returnStatus__)
              >7 liqRibHT::insert(|pointLight1|pointLightShape1,lframe,0,3,0,matrix,,-1)
                >8 liqRibHT::hash(|pointLight1|pointLightShape1,0)
                >8 liqRibHT::find(|pointLight1|pointLightShape1,|pointLight1|pointLightShape1,3)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pointLight1|pointLightShape1,0,3,-1)
                  >9 liqRibNode::parseVectorAttributes(pointLight1,,2)
                  >9 liqRibNode::parseVectorAttributes(pointLight1,,3)
                  >9 liqRibNode::parseVectorAttributes(pointLight1,,4)
                  >9 liqRibNode::findShadingGroup(|pointLight1|pointLightShape1,3)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pointLight1|pointLightShape1,3)
                    >10 liqRibLightData::liqRibLightData(|pointLight1|pointLightShape1)
                      >11 liqRibData::addAdditionalSurfaceParameters(pointLightShape1)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 tLocatorMgr::scanScene(1,0,htable__,count__,returnStatus__)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
              >7 liqRibHT::insert(|persp|perspShape,lframe,0,0,1,matrix,,-1)
                >8 liqRibHT::hash(|persp|perspShape,1)
                >8 liqRibHT::find(|persp|perspShape,|persp|perspShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|persp|perspShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(persp,,2)
                  >9 liqRibNode::parseVectorAttributes(persp,,3)
                  >9 liqRibNode::parseVectorAttributes(persp,,4)
                  >9 liqRibNode::findShadingGroup(|persp|perspShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|persp|perspShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
              >7 liqRibHT::insert(|top|topShape,lframe,0,0,2,matrix,,-1)
                >8 liqRibHT::hash(|top|topShape,2)
                >8 liqRibHT::find(|top|topShape,|top|topShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|top|topShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(top,,2)
                  >9 liqRibNode::parseVectorAttributes(top,,3)
                  >9 liqRibNode::parseVectorAttributes(top,,4)
                  >9 liqRibNode::findShadingGroup(|top|topShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|top|topShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
              >7 liqRibHT::insert(|front|frontShape,lframe,0,0,3,matrix,,-1)
                >8 liqRibHT::hash(|front|frontShape,3)
                >8 liqRibHT::find(|front|frontShape,|front|frontShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|front|frontShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(front,,2)
                  >9 liqRibNode::parseVectorAttributes(front,,3)
                  >9 liqRibNode::parseVectorAttributes(front,,4)
                  >9 liqRibNode::findShadingGroup(|front|frontShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|front|frontShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
              >7 liqRibHT::insert(|side|sideShape,lframe,0,0,4,matrix,,-1)
                >8 liqRibHT::hash(|side|sideShape,4)
                >8 liqRibHT::find(|side|sideShape,|side|sideShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|side|sideShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(side,,2)
                  >9 liqRibNode::parseVectorAttributes(side,,3)
                  >9 liqRibNode::parseVectorAttributes(side,,4)
                  >9 liqRibNode::findShadingGroup(|side|sideShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|side|sideShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
              >7 liqRibHT::insert(|pCone1|pConeShape1,lframe,0,0,5,matrix,,-1)
                >8 liqRibHT::hash(|pCone1|pConeShape1,5)
                >8 liqRibHT::find(|pCone1|pConeShape1,|pCone1|pConeShape1,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pCone1|pConeShape1,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(pCone1,,2)
                  >9 liqRibNode::parseVectorAttributes(pCone1,,3)
                  >9 liqRibNode::parseVectorAttributes(pCone1,,4)
                  >9 liqRibNode::findShadingGroup(|pCone1|pConeShape1,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getColor(&shader,&color)
                  >9 liqRibNode::getOpacity(&shader,&color)
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pCone1|pConeShape1,0)
                    >10 liqRibMeshData::liqRibMeshData(|pCone1|pConeShape1)
                      >11 liqRibData::addAdditionalSurfaceParameters(pConeShape1)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslatorNew::dealwithParticleInstancedObjects(0,1,6)
            >6 tCameraMgr::getCameraData(perspShape,0)
              >7 tCameraMgr::getCameraInfo(|persp|perspShape,)
                >8 tCameraMgr::portFieldOfView(200,150,&horizontal,&vertical,&fnCamera)
                  >9 tCameraMgr::computeViewingFrustum(1.33333,,&left,&right,&bottom,&top,|persp|perspShape)
              >7 tCameraMgr::getCameraFilmOffset(|persp|perspShape,)
              >7 tCameraMgr::getCameraTransform(|persp|perspShape,)
          >5 liqRibTranslatorNew::doTextures(size=0)
            >6 rm::Renderer::doTextures(txtList.size()=0)
          >5 liqRibTranslatorNew::doShadows(size=0)
            >6 rm::Renderer::doShadows(shadowList_.size()=0)
          >5 Renderer::setRenderScriptFormatAndCompress(0,0)
            >6 Renderer::_RiOption_format_compress(0,0)
          >5 Renderer::isHeroPassReady(perspShape)
          >5 Renderer::HeroPassBegin(perspShape)
          >5 tHeroRibWriterMgr::write(liqglo___,perspShape,1,0)
            >6 liqRibTranslatorNew::ribPrologue__(perspShape)
              >7 Renderer::ribPrologue_begin(perspShape)
                >8 RiBegin_liq(R:/MyDocuments/maya/projects/default/rib/runprogram_polygen_perspShape.0001..rib(strlen=80)
              >7 Renderer::ribPrologue_comment(2.3.5,R:/MyDocuments/maya/projects/default/runprogram_polygen,yaoyansi,time)
              >7 Renderer::ribPrologue_options(perspShape)
                >8 Renderer::ribPrologue_writeSearthPath()
                >8 tHeroRibWriterMgr::ribPrologue_hider(0)
                >8 tHeroRibWriterMgr::ribPrologue_samples(4,4)
                >8 tHeroRibWriterMgr::ribPrologue_shadingrate(1)
                >8 tHeroRibWriterMgr::ribPrologue_filter(0,2,2)
                >8 tHeroRibWriterMgr::ribPrologue_pass(beauty)
            >6 liqRibTranslatorNew::framePrologue__(1,perspShape)
              >7 Renderer::framePrologue(1,perspShape)
                >8 tHeroRibWriterMgr::framePrologue_display(perspShape)
                  >9 exportJobCamera(perspShape,,)
                >8 Renderer::framePrologue_camera(1,perspShape)
            >6 ShaderMgr::exportShaderGraph()
              >7 ConvertShadingNetwork::exportShaderGraph()
                >8 ConvertShadingNetwork::beforeExport()
                  >9 ShadingNetworkUser::beforeExport_user()
                >8 ConvertShadingNetwork::__export()
                  >9 ConvertShadingNetwork::canShadingGroupExported(phong1SG)
                  >9 Renderer::getValidShaderPlugsInShadingGroup()
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,surfaceShader)
                    >10 ConvertShadingNetwork::exportShaderNodeInPlug(phong1SG,surfaceShader)
                      >11 ConvertShadingNetwork::_exportShaderNodeInPlug(phong1SG,surfaceShader)
                        >12 ConvertShadingNetwork::exportShaderNode(phong1)
                          >13 ConvertShadingNetwork::canShaderExported(phong1)
                          >13 ConvertShadingNetwork::exportShaderBegin(phong1)
                          >13 ConvertShadingNetwork::convertShadingNetworkToRSL(phong1)
                            >14 Visitor::initShaderData(phong1)
                              >15 NodePlugConnectionMgr::setNodePlugMgr(...)
                              >15 NodePlugConnectionMgr::reset()
                            >14 ConvertShadingNetwork::getUpstreamConvertibleNodes(phong1, nodes, numConnections)
                              >15 DagMgr::BreadthFirstTraversal(phong1, ret)
                                >16 DagMgr::begin(phong1)
                                  >17 DagMgr::pushInputPlugs(phong1)
                                    >18 ShaderMgr::getValidConnection(phong1)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.colorR)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.colorR)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.colorG)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.colorG)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.colorB)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.colorB)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.color)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                                      >19 ConvertShadingNetwork::nodeIsConvertible(checker2)
                                        >20 ShaderMgr::hasShaderType(checker)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.transparencyR)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyR)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.transparencyG)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyG)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.transparencyB)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyB)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorR)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorR)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorG)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorG)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorB)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorB)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceR)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceR)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceG)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceG)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceB)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceB)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraX)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraX)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraY)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraY)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraZ)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraZ)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.specularColorR)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorR)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.specularColorG)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorG)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.specularColorB)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorB)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorR)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorR)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorG)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorG)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorB)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorB)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.outColorR)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.outColorR)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.outColorG)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.outColorG)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.outColorB)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.outColorB)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                                      >19 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                                        >20 ShaderMgr::hasShaderType(shadingEngine)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyR)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyR)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyG)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyG)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyB)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyB)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                                >16 DagMgr::pushInputPlugs(checker2)
                                  >17 ShaderMgr::getValidConnection(checker2)
                                  >17 ConvertShadingNetwork::convertibleConnection(checker2.alphaGain)
                                    >18 ConvertShadingNetwork::ensurePlugExists(checker2.alphaGain)
                                  >17 ConvertShadingNetwork::convertibleConnection(checker2.alphaIsLuminance)
                                    >18 ConvertShadingNetwork::ensurePlugExists(checker2.alphaIsLuminance)
                                  >17 ConvertShadingNetwork::convertibleConnection(checker2.alphaOffset)
                                    >18 ConvertShadingNetwork::ensurePlugExists(checker2.alphaOffset)
                                  >17 ConvertShadingNetwork::convertibleConnection(checker2.color1R)
                                    >18 ConvertShadingNetwork::ensurePlugExists(checker2.color1R)
                                  >17 ConvertShadingNetwork::convertibleConnection(checker2.color1G)
                                    >18 ConvertShadingNetwork::ensurePlugExists(checker2.color1G)
                                  >17 ConvertShadingNetwork::convertibleConnection(checker2.color1B)
                                    >18 ConvertShadingNetwork::ensurePlugExists(checker2.color1B)
                                  >17 ConvertShadingNetwork::convertibleConnection(checker2.color1)
                                    >18 ConvertShadingNetwork::ensurePlugExists(checker2.color1)
                                  >17 ConvertShadingNetwork::convertibleConnection(checker2.color2R)
                                    >18 ConvertShadingNetwork::ensurePlugExists(checker2.color2R)
                                  >17 ConvertShadingNetwork::convertibleConnection(checker2.color2G)
                                    >18 ConvertShadingNetwork::ensurePlugExists(checker2.color2G)
                                  >17 ConvertShadingNetwork::convertibleConnection(checker2.color2B)
                                    >18 ConvertShadingNetwork::ensurePlugExists(checker2.color2B)
                                  >17 ConvertShadingNetwork::convertibleConnection(checker2.color2)
                                    >18 ConvertShadingNetwork::ensurePlugExists(checker2.color2)
                                  >17 ConvertShadingNetwork::convertibleConnection(checker2.colorGainR)
                                    >18 ConvertShadingNetwork::ensurePlugExists(checker2.colorGainR)
                                  >17 ConvertShadingNetwork::convertibleConnection(checker2.colorGainG)
                                    >18 ConvertShadingNetwork::ensurePlugExists(checker2.colorGainG)
                                  >17 ConvertShadingNetwork::convertibleConnection(checker2.colorGainB)
                                    >18 ConvertShadingNetwork::ensurePlugExists(checker2.colorGainB)
                                  >17 ConvertShadingNetwork::convertibleConnection(checker2.colorGain)
                                    >18 ConvertShadingNetwork::ensurePlugExists(checker2.colorGain)
                                  >17 ConvertShadingNetwork::convertibleConnection(checker2.colorOffsetR)
                                    >18 ConvertShadingNetwork::ensurePlugExists(checker2.colorOffsetR)
                                  >17 ConvertShadingNetwork::convertibleConnection(checker2.colorOffsetG)
                                    >18 ConvertShadingNetwork::ensurePlugExists(checker2.colorOffsetG)
                                  >17 ConvertShadingNetwork::convertibleConnection(checker2.colorOffsetB)
                                    >18 ConvertShadingNetwork::ensurePlugExists(checker2.colorOffsetB)
                                  >17 ConvertShadingNetwork::convertibleConnection(checker2.colorOffset)
                                    >18 ConvertShadingNetwork::ensurePlugExists(checker2.colorOffset)
                                  >17 ConvertShadingNetwork::convertibleConnection(checker2.contrast)
                                    >18 ConvertShadingNetwork::ensurePlugExists(checker2.contrast)
                                  >17 ConvertShadingNetwork::convertibleConnection(checker2.defaultColorR)
                                    >18 ConvertShadingNetwork::ensurePlugExists(checker2.defaultColorR)
                                  >17 ConvertShadingNetwork::convertibleConnection(checker2.defaultColorG)
                                    >18 ConvertShadingNetwork::ensurePlugExists(checker2.defaultColorG)
                                  >17 ConvertShadingNetwork::convertibleConnection(checker2.defaultColorB)
                                    >18 ConvertShadingNetwork::ensurePlugExists(checker2.defaultColorB)
                                  >17 ConvertShadingNetwork::convertibleConnection(checker2.defaultColor)
                                    >18 ConvertShadingNetwork::ensurePlugExists(checker2.defaultColor)
                                  >17 ConvertShadingNetwork::convertibleConnection(checker2.filter)
                                    >18 ConvertShadingNetwork::ensurePlugExists(checker2.filter)
                                  >17 ConvertShadingNetwork::convertibleConnection(checker2.filterOffset)
                                    >18 ConvertShadingNetwork::ensurePlugExists(checker2.filterOffset)
                                  >17 ConvertShadingNetwork::convertibleConnection(checker2.invert)
                                    >18 ConvertShadingNetwork::ensurePlugExists(checker2.invert)
                                  >17 ConvertShadingNetwork::convertibleConnection(checker2.uCoord)
                                    >18 ConvertShadingNetwork::ensurePlugExists(checker2.uCoord)
                                  >17 ConvertShadingNetwork::convertibleConnection(checker2.vCoord)
                                    >18 ConvertShadingNetwork::ensurePlugExists(checker2.vCoord)
                                  >17 ConvertShadingNetwork::convertibleConnection(checker2.uvCoord)
                                    >18 ConvertShadingNetwork::ensurePlugExists(checker2.uvCoord)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(place2dTexture2)
                                      >19 ShaderMgr::hasShaderType(place2dTexture)
                                  >17 ConvertShadingNetwork::convertibleConnection(checker2.outAlpha)
                                    >18 ConvertShadingNetwork::ensurePlugExists(checker2.outAlpha)
                                  >17 ConvertShadingNetwork::convertibleConnection(checker2.outColorR)
                                    >18 ConvertShadingNetwork::ensurePlugExists(checker2.outColorR)
                                  >17 ConvertShadingNetwork::convertibleConnection(checker2.outColorG)
                                    >18 ConvertShadingNetwork::ensurePlugExists(checker2.outColorG)
                                  >17 ConvertShadingNetwork::convertibleConnection(checker2.outColorB)
                                    >18 ConvertShadingNetwork::ensurePlugExists(checker2.outColorB)
                                  >17 ConvertShadingNetwork::convertibleConnection(checker2.outColor)
                                    >18 ConvertShadingNetwork::ensurePlugExists(checker2.outColor)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(phong1)
                                      >19 ShaderMgr::hasShaderType(phong)
                                >16 DagMgr::pushInputPlugs(place2dTexture2)
                                  >17 ShaderMgr::getValidConnection(place2dTexture2)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.uCoord)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.uCoord)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.vCoord)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.vCoord)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.uvCoord)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.uvCoord)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.coverageU)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.coverageU)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.coverageV)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.coverageV)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.coverage)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.coverage)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.mirrorU)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.mirrorU)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.mirrorV)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.mirrorV)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.noiseU)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.noiseU)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.noiseV)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.noiseV)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.noiseUV)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.noiseUV)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.offsetU)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.offsetU)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.offsetV)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.offsetV)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.offset)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.offset)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.repeatU)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.repeatU)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.repeatV)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.repeatV)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.repeatUV)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.repeatUV)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.rotateFrame)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.rotateFrame)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.rotateUV)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.rotateUV)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.stagger)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.stagger)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.translateFrameU)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.translateFrameU)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.translateFrameV)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.translateFrameV)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.translateFrame)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.translateFrame)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.wrapU)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.wrapU)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.wrapV)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.wrapV)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.outU)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.outU)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.outV)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.outV)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.outUV)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.outUV)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(checker2)
                                      >19 ShaderMgr::hasShaderType(checker)
                                >16 DagMgr::isVisited(place2dTexture2)
                                >16 DagMgr::visit(place2dTexture2)
                                >16 DagMgr::isVisited(checker2)
                                >16 DagMgr::visit(checker2)
                                >16 DagMgr::end()
                            >14 Visitor::preOutput(phong1)
                            >14 Visitor::outputBegin(phong1), open shader file
                              >15 getShaderFilePath_SRC(phong1)
                                >16 getShaderFilePath_NoExt(phong1)
                              >15 Visitor::getSurfaceShaderAOVOutputParametersString()
                              >15 Visitor::defineAOVVariables(phong1)
                            >14 ConvertShadingNetwork::traverseGraphAndOutputNodeFunctions( nodes, numConnections)
                              >15 Visitor::outputUpstreamShader(place2dTexture2)
                                >16 ShaderOutputVisitor::_outputUpstreamShader(place2dTexture2,place2dTexture)
                                  >17 Visitor::visitPlace2dTexture(place2dTexture2)
                                    >18 OutputHelper::addInclude(place2dTexture.h)
                                    >18 OutputHelper::beginRSL(place2dTexture2)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture2.coverage)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture2.coverage)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.coverage)
                                    >18 NodePlugInfo::add(place2dTexture2,coverage,float2)
                                      >19 NodePlug::add(coverage, float2)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture2.mirrorU)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture2.mirrorU)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.mirrorU)
                                    >18 NodePlugInfo::add(place2dTexture2,mirrorU,float)
                                      >19 NodePlug::add(mirrorU, float)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture2.mirrorV)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture2.mirrorV)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.mirrorV)
                                    >18 NodePlugInfo::add(place2dTexture2,mirrorV,float)
                                      >19 NodePlug::add(mirrorV, float)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture2.noiseUV)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture2.noiseUV)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.noiseUV)
                                    >18 NodePlugInfo::add(place2dTexture2,noiseUV,float2)
                                      >19 NodePlug::add(noiseUV, float2)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture2.offset)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture2.offset)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.offset)
                                    >18 NodePlugInfo::add(place2dTexture2,offset,float2)
                                      >19 NodePlug::add(offset, float2)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture2.repeatUV)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture2.repeatUV)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.repeatUV)
                                    >18 NodePlugInfo::add(place2dTexture2,repeatUV,float2)
                                      >19 NodePlug::add(repeatUV, float2)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture2.rotateFrame)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture2.rotateFrame)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.rotateFrame)
                                    >18 NodePlugInfo::add(place2dTexture2,rotateFrame,float)
                                      >19 NodePlug::add(rotateFrame, float)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture2.rotateUV)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture2.rotateUV)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.rotateUV)
                                    >18 NodePlugInfo::add(place2dTexture2,rotateUV,float)
                                      >19 NodePlug::add(rotateUV, float)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture2.stagger)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture2.stagger)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.stagger)
                                    >18 NodePlugInfo::add(place2dTexture2,stagger,float)
                                      >19 NodePlug::add(stagger, float)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture2.translateFrame)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture2.translateFrame)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.translateFrame)
                                    >18 NodePlugInfo::add(place2dTexture2,translateFrame,float2)
                                      >19 NodePlug::add(translateFrame, float2)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture2.wrapU)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture2.wrapU)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.wrapU)
                                    >18 NodePlugInfo::add(place2dTexture2,wrapU,float)
                                      >19 NodePlug::add(wrapU, float)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture2.wrapV)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture2.wrapV)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.wrapV)
                                    >18 NodePlugInfo::add(place2dTexture2,wrapV,float)
                                      >19 NodePlug::add(wrapV, float)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture2.outUV)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture2.outUV)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.outUV)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(checker2)
                                          >21 ShaderMgr::hasShaderType(checker)
                                    >18 NodePlugInfo::add(place2dTexture2,outUV,float2)
                                      >19 NodePlug::add(outUV, float2)
                                    >18 OutputHelper::endRSL()
                              >15 ShaderMgr::getValidConnection(place2dTexture2)
                              >15 ConvertShadingNetwork::getNodeVariables(place2dTexture2, validConnections,  inputSrc, inputDes, outputSrc)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.uCoord)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.uCoord)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.vCoord)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.vCoord)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.uvCoord)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.uvCoord)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.coverageU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.coverageU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.coverageV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.coverageV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.coverage)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.coverage)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.mirrorU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.mirrorU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.mirrorV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.mirrorV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.noiseU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.noiseU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.noiseV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.noiseV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.noiseUV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.noiseUV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.offsetU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.offsetU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.offsetV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.offsetV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.offset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.offset)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.repeatU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.repeatU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.repeatV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.repeatV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.repeatUV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.repeatUV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.rotateFrame)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.rotateFrame)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.rotateUV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.rotateUV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.stagger)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.stagger)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.translateFrameU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.translateFrameU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.translateFrameV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.translateFrameV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.translateFrame)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.translateFrame)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.wrapU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.wrapU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.wrapV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.wrapV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.outU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.outU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.outV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.outV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.outUV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.outUV)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(checker2)
                                    >18 ShaderMgr::hasShaderType(checker)
                                >16 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture2,outUV,place2dTexture2.outUV, outputVars)
                                  >17 Visitor::addShaderMethodVariavles(place2dTexture2,outUV,float,2,)
                              >15 Visitor::addShaderMethodBody(place2dTexture2,,,place2dTexture2.outUV124)
                                >16 NodePlugConnectionMgr::add(place2dTexture2)
                              >15 Visitor::outputUpstreamShader(checker2)
                                >16 ShaderOutputVisitor::_outputUpstreamShader(checker2,checker)
                                  >17 Visitor::visitChecker(checker2)
                                    >18 OutputHelper::addInclude(checker.h)
                                    >18 OutputHelper::beginRSL(checker2)
                                    >18 ShaderMgr::convertibleConnection(checker2.alphaGain)
                                      >19 ConvertShadingNetwork::convertibleConnection(checker2.alphaGain)
                                        >20 ConvertShadingNetwork::ensurePlugExists(checker2.alphaGain)
                                    >18 NodePlugInfo::add(checker2,alphaGain,float)
                                      >19 NodePlug::add(alphaGain, float)
                                    >18 ShaderMgr::convertibleConnection(checker2.alphaIsLuminance)
                                      >19 ConvertShadingNetwork::convertibleConnection(checker2.alphaIsLuminance)
                                        >20 ConvertShadingNetwork::ensurePlugExists(checker2.alphaIsLuminance)
                                    >18 NodePlugInfo::add(checker2,alphaIsLuminance,float)
                                      >19 NodePlug::add(alphaIsLuminance, float)
                                    >18 ShaderMgr::convertibleConnection(checker2.alphaOffset)
                                      >19 ConvertShadingNetwork::convertibleConnection(checker2.alphaOffset)
                                        >20 ConvertShadingNetwork::ensurePlugExists(checker2.alphaOffset)
                                    >18 NodePlugInfo::add(checker2,alphaOffset,float)
                                      >19 NodePlug::add(alphaOffset, float)
                                    >18 ShaderMgr::convertibleConnection(checker2.color1)
                                      >19 ConvertShadingNetwork::convertibleConnection(checker2.color1)
                                        >20 ConvertShadingNetwork::ensurePlugExists(checker2.color1)
                                    >18 NodePlugInfo::add(checker2,color1,color)
                                      >19 NodePlug::add(color1, color)
                                    >18 ShaderMgr::convertibleConnection(checker2.color2)
                                      >19 ConvertShadingNetwork::convertibleConnection(checker2.color2)
                                        >20 ConvertShadingNetwork::ensurePlugExists(checker2.color2)
                                    >18 NodePlugInfo::add(checker2,color2,color)
                                      >19 NodePlug::add(color2, color)
                                    >18 ShaderMgr::convertibleConnection(checker2.colorGain)
                                      >19 ConvertShadingNetwork::convertibleConnection(checker2.colorGain)
                                        >20 ConvertShadingNetwork::ensurePlugExists(checker2.colorGain)
                                    >18 NodePlugInfo::add(checker2,colorGain,color)
                                      >19 NodePlug::add(colorGain, color)
                                    >18 ShaderMgr::convertibleConnection(checker2.colorOffset)
                                      >19 ConvertShadingNetwork::convertibleConnection(checker2.colorOffset)
                                        >20 ConvertShadingNetwork::ensurePlugExists(checker2.colorOffset)
                                    >18 NodePlugInfo::add(checker2,colorOffset,color)
                                      >19 NodePlug::add(colorOffset, color)
                                    >18 ShaderMgr::convertibleConnection(checker2.contrast)
                                      >19 ConvertShadingNetwork::convertibleConnection(checker2.contrast)
                                        >20 ConvertShadingNetwork::ensurePlugExists(checker2.contrast)
                                    >18 NodePlugInfo::add(checker2,contrast,float)
                                      >19 NodePlug::add(contrast, float)
                                    >18 ShaderMgr::convertibleConnection(checker2.defaultColor)
                                      >19 ConvertShadingNetwork::convertibleConnection(checker2.defaultColor)
                                        >20 ConvertShadingNetwork::ensurePlugExists(checker2.defaultColor)
                                    >18 NodePlugInfo::add(checker2,defaultColor,color)
                                      >19 NodePlug::add(defaultColor, color)
                                    >18 ShaderMgr::convertibleConnection(checker2.filter)
                                      >19 ConvertShadingNetwork::convertibleConnection(checker2.filter)
                                        >20 ConvertShadingNetwork::ensurePlugExists(checker2.filter)
                                    >18 NodePlugInfo::add(checker2,filter,float)
                                      >19 NodePlug::add(filter, float)
                                    >18 ShaderMgr::convertibleConnection(checker2.filterOffset)
                                      >19 ConvertShadingNetwork::convertibleConnection(checker2.filterOffset)
                                        >20 ConvertShadingNetwork::ensurePlugExists(checker2.filterOffset)
                                    >18 NodePlugInfo::add(checker2,filterOffset,float)
                                      >19 NodePlug::add(filterOffset, float)
                                    >18 ShaderMgr::convertibleConnection(checker2.invert)
                                      >19 ConvertShadingNetwork::convertibleConnection(checker2.invert)
                                        >20 ConvertShadingNetwork::ensurePlugExists(checker2.invert)
                                    >18 NodePlugInfo::add(checker2,invert,float)
                                      >19 NodePlug::add(invert, float)
                                    >18 ShaderMgr::convertibleConnection(checker2.uvCoord)
                                      >19 ConvertShadingNetwork::convertibleConnection(checker2.uvCoord)
                                        >20 ConvertShadingNetwork::ensurePlugExists(checker2.uvCoord)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(place2dTexture2)
                                          >21 ShaderMgr::hasShaderType(place2dTexture)
                                    >18 NodePlugInfo::add(checker2,uvCoord,float2)
                                      >19 NodePlug::add(uvCoord, float2)
                                    >18 ShaderMgr::convertibleConnection(checker2.outAlpha)
                                      >19 ConvertShadingNetwork::convertibleConnection(checker2.outAlpha)
                                        >20 ConvertShadingNetwork::ensurePlugExists(checker2.outAlpha)
                                    >18 NodePlugInfo::add(checker2,outAlpha,float)
                                      >19 NodePlug::add(outAlpha, float)
                                    >18 ShaderMgr::convertibleConnection(checker2.outColor)
                                      >19 ConvertShadingNetwork::convertibleConnection(checker2.outColor)
                                        >20 ConvertShadingNetwork::ensurePlugExists(checker2.outColor)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(phong1)
                                          >21 ShaderMgr::hasShaderType(phong)
                                    >18 NodePlugInfo::add(checker2,outColor,color)
                                      >19 NodePlug::add(outColor, color)
                                    >18 OutputHelper::endRSL()
                              >15 ShaderMgr::getValidConnection(checker2)
                              >15 ConvertShadingNetwork::getNodeVariables(checker2, validConnections,  inputSrc, inputDes, outputSrc)
                                >16 ConvertShadingNetwork::convertibleConnection(checker2.alphaGain)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker2.alphaGain)
                                >16 ConvertShadingNetwork::convertibleConnection(checker2.alphaIsLuminance)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker2.alphaIsLuminance)
                                >16 ConvertShadingNetwork::convertibleConnection(checker2.alphaOffset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker2.alphaOffset)
                                >16 ConvertShadingNetwork::convertibleConnection(checker2.color1R)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker2.color1R)
                                >16 ConvertShadingNetwork::convertibleConnection(checker2.color1G)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker2.color1G)
                                >16 ConvertShadingNetwork::convertibleConnection(checker2.color1B)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker2.color1B)
                                >16 ConvertShadingNetwork::convertibleConnection(checker2.color1)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker2.color1)
                                >16 ConvertShadingNetwork::convertibleConnection(checker2.color2R)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker2.color2R)
                                >16 ConvertShadingNetwork::convertibleConnection(checker2.color2G)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker2.color2G)
                                >16 ConvertShadingNetwork::convertibleConnection(checker2.color2B)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker2.color2B)
                                >16 ConvertShadingNetwork::convertibleConnection(checker2.color2)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker2.color2)
                                >16 ConvertShadingNetwork::convertibleConnection(checker2.colorGainR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker2.colorGainR)
                                >16 ConvertShadingNetwork::convertibleConnection(checker2.colorGainG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker2.colorGainG)
                                >16 ConvertShadingNetwork::convertibleConnection(checker2.colorGainB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker2.colorGainB)
                                >16 ConvertShadingNetwork::convertibleConnection(checker2.colorGain)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker2.colorGain)
                                >16 ConvertShadingNetwork::convertibleConnection(checker2.colorOffsetR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker2.colorOffsetR)
                                >16 ConvertShadingNetwork::convertibleConnection(checker2.colorOffsetG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker2.colorOffsetG)
                                >16 ConvertShadingNetwork::convertibleConnection(checker2.colorOffsetB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker2.colorOffsetB)
                                >16 ConvertShadingNetwork::convertibleConnection(checker2.colorOffset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker2.colorOffset)
                                >16 ConvertShadingNetwork::convertibleConnection(checker2.contrast)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker2.contrast)
                                >16 ConvertShadingNetwork::convertibleConnection(checker2.defaultColorR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker2.defaultColorR)
                                >16 ConvertShadingNetwork::convertibleConnection(checker2.defaultColorG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker2.defaultColorG)
                                >16 ConvertShadingNetwork::convertibleConnection(checker2.defaultColorB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker2.defaultColorB)
                                >16 ConvertShadingNetwork::convertibleConnection(checker2.defaultColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker2.defaultColor)
                                >16 ConvertShadingNetwork::convertibleConnection(checker2.filter)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker2.filter)
                                >16 ConvertShadingNetwork::convertibleConnection(checker2.filterOffset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker2.filterOffset)
                                >16 ConvertShadingNetwork::convertibleConnection(checker2.invert)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker2.invert)
                                >16 ConvertShadingNetwork::convertibleConnection(checker2.uCoord)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker2.uCoord)
                                >16 ConvertShadingNetwork::convertibleConnection(checker2.vCoord)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker2.vCoord)
                                >16 ConvertShadingNetwork::convertibleConnection(checker2.uvCoord)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker2.uvCoord)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(place2dTexture2)
                                    >18 ShaderMgr::hasShaderType(place2dTexture)
                                >16 ConvertShadingNetwork::addNodeInputVariable(checker2.uvCoord, inputSrc, inputDes)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(place2dTexture2)
                                    >18 ShaderMgr::hasShaderType(place2dTexture)
                                  >17 ShaderMgr::getValidConnection(place2dTexture2)
                                >16 ConvertShadingNetwork::convertibleConnection(checker2.outAlpha)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker2.outAlpha)
                                >16 ConvertShadingNetwork::convertibleConnection(checker2.outColorR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker2.outColorR)
                                >16 ConvertShadingNetwork::convertibleConnection(checker2.outColorG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker2.outColorG)
                                >16 ConvertShadingNetwork::convertibleConnection(checker2.outColorB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker2.outColorB)
                                >16 ConvertShadingNetwork::convertibleConnection(checker2.outColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(checker2.outColor)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(phong1)
                                    >18 ShaderMgr::hasShaderType(phong)
                                >16 ConvertShadingNetwork::addNodeOutputVariable(checker2,outColor,checker2.outColor, outputVars)
                                  >17 Visitor::addShaderMethodVariavles(checker2,outColor,color,-1,)
                              >15 Visitor::addShaderMethodBody(checker2,place2dTexture2.outUV124,checker2.uvCoord124,checker2.outColor124)
                                >16 NodePlugConnectionMgr::add(checker2)
                              >15 Visitor::outputUpstreamShader(phong1)
                                >16 ShaderOutputVisitor::_outputUpstreamShader(phong1,phong)
                                  >17 Visitor::visitPhong(phong1)
                                    >18 OutputHelper::addInclude(phong.h)
                                    >18 OutputHelper::beginRSL(phong1)
                                    >18 ShaderMgr::convertibleConnection(phong1.ambientColor)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                                    >18 NodePlugInfo::add(phong1,ambientColor,color)
                                      >19 NodePlug::add(ambientColor, color)
                                    >18 ShaderMgr::convertibleConnection(phong1.color)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong1.color)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(checker2)
                                          >21 ShaderMgr::hasShaderType(checker)
                                    >18 NodePlugInfo::add(phong1,color,color)
                                      >19 NodePlug::add(color, color)
                                    >18 ShaderMgr::convertibleConnection(phong1.cosinePower)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                                    >18 NodePlugInfo::add(phong1,cosinePower,float)
                                      >19 NodePlug::add(cosinePower, float)
                                    >18 ShaderMgr::convertibleConnection(phong1.diffuse)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                                    >18 NodePlugInfo::add(phong1,diffuse,float)
                                      >19 NodePlug::add(diffuse, float)
                                    >18 ShaderMgr::convertibleConnection(phong1.incandescence)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                                    >18 NodePlugInfo::add(phong1,incandescence,color)
                                      >19 NodePlug::add(incandescence, color)
                                    >18 ShaderMgr::convertibleConnection(phong1.matteOpacity)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                                    >18 NodePlugInfo::add(phong1,matteOpacity,float)
                                      >19 NodePlug::add(matteOpacity, float)
                                    >18 ShaderMgr::convertibleConnection(phong1.matteOpacityMode)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                                    >18 NodePlugInfo::add(phong1,matteOpacityMode,float)
                                      >19 NodePlug::add(matteOpacityMode, float)
                                    >18 ShaderMgr::convertibleConnection(phong1.specularColor)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                                    >18 NodePlugInfo::add(phong1,specularColor,color)
                                      >19 NodePlug::add(specularColor, color)
                                    >18 ShaderMgr::convertibleConnection(phong1.reflectivity)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                                    >18 NodePlugInfo::add(phong1,reflectivity,float)
                                      >19 NodePlug::add(reflectivity, float)
                                    >18 ShaderMgr::convertibleConnection(phong1.reflectedColor)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                                    >18 NodePlugInfo::add(phong1,reflectedColor,color)
                                      >19 NodePlug::add(reflectedColor, color)
                                    >18 ShaderMgr::convertibleConnection(phong1.refractions)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong1.refractions)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong1.refractions)
                                    >18 NodePlugInfo::add(phong1,refractions,float)
                                      >19 NodePlug::add(refractions, float)
                                    >18 ShaderMgr::convertibleConnection(phong1.refractiveIndex)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong1.refractiveIndex)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong1.refractiveIndex)
                                    >18 NodePlugInfo::add(phong1,refractiveIndex,float)
                                      >19 NodePlug::add(refractiveIndex, float)
                                    >18 ShaderMgr::convertibleConnection(phong1.refractionLimit)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong1.refractionLimit)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong1.refractionLimit)
                                    >18 NodePlugInfo::add(phong1,refractionLimit,float)
                                      >19 NodePlug::add(refractionLimit, float)
                                    >18 ShaderMgr::convertibleConnection(phong1.lightAbsorbance)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong1.lightAbsorbance)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong1.lightAbsorbance)
                                    >18 NodePlugInfo::add(phong1,lightAbsorbance,float)
                                      >19 NodePlug::add(lightAbsorbance, float)
                                    >18 ShaderMgr::convertibleConnection(phong1.shadowAttenuation)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong1.shadowAttenuation)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong1.shadowAttenuation)
                                    >18 NodePlugInfo::add(phong1,shadowAttenuation,float)
                                      >19 NodePlug::add(shadowAttenuation, float)
                                    >18 ShaderMgr::convertibleConnection(phong1.reflectionLimit)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                                    >18 NodePlugInfo::add(phong1,reflectionLimit,float)
                                      >19 NodePlug::add(reflectionLimit, float)
                                    >18 ShaderMgr::convertibleConnection(phong1.translucence)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                                    >18 NodePlugInfo::add(phong1,translucence,float)
                                      >19 NodePlug::add(translucence, float)
                                    >18 ShaderMgr::convertibleConnection(phong1.translucenceDepth)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                                    >18 NodePlugInfo::add(phong1,translucenceDepth,float)
                                      >19 NodePlug::add(translucenceDepth, float)
                                    >18 ShaderMgr::convertibleConnection(phong1.translucenceFocus)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                                    >18 NodePlugInfo::add(phong1,translucenceFocus,float)
                                      >19 NodePlug::add(translucenceFocus, float)
                                    >18 ShaderMgr::convertibleConnection(phong1.transparency)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                                    >18 NodePlugInfo::add(phong1,transparency,color)
                                      >19 NodePlug::add(transparency, color)
                                    >18 ShaderMgr::convertibleConnection(phong1.outColor)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                                          >21 ShaderMgr::hasShaderType(shadingEngine)
                                    >18 NodePlugInfo::add(phong1,outColor,color)
                                      >19 NodePlug::add(outColor, color)
                                    >18 ShaderMgr::convertibleConnection(phong1.outTransparency)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                                    >18 NodePlugInfo::add(phong1,outTransparency,color)
                                      >19 NodePlug::add(outTransparency, color)
                                    >18 OutputHelper::endRSL()
                              >15 ShaderMgr::getValidConnection(phong1)
                              >15 ConvertShadingNetwork::getNodeVariables(phong1, validConnections,  inputSrc, inputDes, outputSrc)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.colorR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.colorR)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.colorG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.colorG)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.colorB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.colorB)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.color)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(checker2)
                                    >18 ShaderMgr::hasShaderType(checker)
                                >16 ConvertShadingNetwork::addNodeInputVariable(phong1.color, inputSrc, inputDes)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(checker2)
                                    >18 ShaderMgr::hasShaderType(checker)
                                  >17 ShaderMgr::getValidConnection(checker2)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.transparencyR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyR)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.transparencyG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyG)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.transparencyB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyB)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorR)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorG)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorB)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceR)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceG)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceB)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraX)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraX)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraY)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraY)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraZ)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraZ)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.specularColorR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorR)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.specularColorG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorG)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.specularColorB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorB)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorR)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorG)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorB)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.outColorR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.outColorR)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.outColorG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.outColorG)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.outColorB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.outColorB)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                                    >18 ShaderMgr::hasShaderType(shadingEngine)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyR)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyG)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyB)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                              >15 Visitor::addShaderMethodBody(phong1,checker2.outColor124,phong1.color124,)
                                >16 NodePlugConnectionMgr::add(phong1)
                            >14 ConvertShadingNetwork::outputShaderMethod()
                              >15 Visitor::outputShaderMethod()
                                >16 NodePlugConnectionMgr::cookRSLFunctionCallString(0)
                                >16 NodePlugConnectionMgr::log(0)
                                >16 NodePlugConnectionMgr::cookRSLFunctionCallString(1)
                                  >17 NodePlugInfo::getPlugInfo(place2dTexture2.outUV)
                                    >18 NodePlugInfo::getPlugInfo(place2dTexture2,outUV)
                                      >19 NodePlug::getPlugInfo(outUV)
                                  >17 NodePlugInfo::getPlugInfo(checker2.uvCoord)
                                    >18 NodePlugInfo::getPlugInfo(checker2,uvCoord)
                                      >19 NodePlug::getPlugInfo(uvCoord)
                                >16 NodePlugConnectionMgr::log(1)
                                >16 NodePlugConnectionMgr::cookRSLFunctionCallString(2)
                                  >17 NodePlugInfo::getPlugInfo(checker2.outColor)
                                    >18 NodePlugInfo::getPlugInfo(checker2,outColor)
                                      >19 NodePlug::getPlugInfo(outColor)
                                  >17 NodePlugInfo::getPlugInfo(phong1.color)
                                    >18 NodePlugInfo::getPlugInfo(phong1,color)
                                      >19 NodePlug::getPlugInfo(color)
                                >16 NodePlugConnectionMgr::log(2)
                            >14 Visitor::outputEnd(), close shader file
                            >14 Visitor::postOutput()
                              >15 getShaderFilePath_SLO(phong1)
                                >16 getShaderFilePath_NoExt(phong1)
                              >15 getShaderFilePath_SRC(phong1)
                                >16 getShaderFilePath_NoExt(phong1)
                          >13 ConvertShadingNetwork::exportShaderEnd(phong1)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,displacementShader)
                    >10 ConvertShadingNetwork::exportShaderNodeInPlug(phong1SG,displacementShader)
                      >11 ConvertShadingNetwork::_exportShaderNodeInPlug(phong1SG,displacementShader)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,volumeShader)
                    >10 ConvertShadingNetwork::exportShaderNodeInPlug(phong1SG,volumeShader)
                      >11 ConvertShadingNetwork::_exportShaderNodeInPlug(phong1SG,volumeShader)
                  >9 ConvertShadingNetwork::exportShadingGroupBegin(phong1SG)
                  >9 ConvertShadingNetwork::outputShadingGroup(phong1SG)
                    >10 Visitor::outputShadingGroup(phong1SG)
                      >11 Visitor::outputShadingGroup(phong1SG,0)
                  >9 ConvertShadingNetwork::exportShadingGroupEnd(phong1SG)
                  >9 ConvertShadingNetwork::exportShaderNodeInPlug(perspShape,miEnvironmentShader)
                    >10 ConvertShadingNetwork::_exportShaderNodeInPlug(perspShape,miEnvironmentShader)
                  >9 ConvertShadingNetwork::exportShaderNodeInPlug(perspShape,liqVolumeShader)
                  >9 ConvertShadingNetwork::exportShaderNodeInPlug(perspShape,liqEnvironmentShader)
                    >10 ConvertShadingNetwork::_exportShaderNodeInPlug(perspShape,liqEnvironmentShader)
                  >9 ConvertShadingNetwork::exportShaderNodeInPlug(perspShape,liqLensShader)
                    >10 ConvertShadingNetwork::_exportShaderNodeInPlug(perspShape,liqLensShader)
                  >9 ShadingNetworkUser::export_user()
                >8  ConvertShadingNetwork::afterExport()
                  >9 ShadingNetworkUser::afterExport_user()
            >6 liqRibTranslatorNew::worldPrologue__(perspShape)
              >7 Renderer::worldPrologue(perspShape)
            >6 liqRibTranslatorNew::lightBlock__(perspShape)
              >7 Renderer::writeLight_pre(|pointLight1|pointLightShape1,perspShape)
              >7 liqRibObj::writeObject(,perspShape,0)
                >8 liqRibLightData::write(,job=perspShape,0)
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::write(|pointLight1|pointLightShape1,,perspShape,ref=0)
                    >10 Helper::RiBeginRef()
                      >11 liqRibData::getFullPathName()
                    >10 rm_writeLightData.cpp::_write(|pointLight1|pointLightShape1,perspShape,...)
                      >11 Renderer::exportPointLight(pointlight,pointLightShape1,...)
                    >10 Helper::RiEndRef()
              >7 Renderer::writeLight_post(|pointLight1|pointLightShape1,perspShape)
            >6 liqRibTranslatorNew::coordSysBlock__(perspShape)
              >7 Renderer::coordSysBlock__(perspShape)
            >6 liqRibTranslatorNew::objectBlock__(perspShape)
              >7 liqRibTranslatorNew::objectBlock_data(perspShape)
                >8 liqRibTranslatorNew::getShadowSetObject(perspShape)
                >8 liqRibTranslatorNew::oneObjectBlock_data(|pCone1|pConeShape1,perspShape)
                  >9 Renderer::exportOneObject_data(|pCone1|pConeShape1,perspShape)
              >7 liqRibTranslatorNew::objectBlock_reference(perspShape)
                >8 Renderer::objectBlock_reference_begin()
                >8 liqRibTranslatorNew::preGeometryMel()
                  >9 Renderer::preGeometryMel()
                >8 liqRibTranslatorNew::getShadowSetObject(perspShape)
                >8 liqRibTranslatorNew::oneObjectBlock_reference(|pCone1|pConeShape1,perspShape)
                  >9 Renderer::oneObjectBlock_reference_attribute_begin(|pCone1|pConeShape1,perspShape)
                  >9 Renderer::oneObjectBlock_reference_attribute_block0(|pCone1|pConeShape1,perspShape)
                  >9 liqRibTranslatorNew::tRiIlluminate(perspShape,|pCone1|pConeShape1)
                    >10 Renderer::exportLightLinks(perspShape,|pCone1|pConeShape1,lightedByWhichLightShapes.size=1)
                  >9 liqRibTranslatorNew::checkSurfaceShader(|pCone1|pConeShape1,|pCone1|pConeShape1,,,)
                  >9 liqRibTranslatorNew::checkDisplacementShader(|pCone1|pConeShape1,|pCone1|pConeShape1,,,)
                  >9 liqRibTranslatorNew::checkVolumeShader(|pCone1|pConeShape1,|pCone1|pConeShape1,,,)
                  >9 Renderer::oneObjectBlock_reference_attribute_block1(|pCone1|pConeShape1,perspShape)
                    >10 objectNonShadowAttribute(|pCone1|pConeShape1)
                      >11 liqRibNode::writeUserAttributes()
                        >12 Renderer::writeUserAttributes()
                  >9 liqRibTranslatorNew::writeShader_(1,|pCone1|pConeShape1,v=0,s=0,c=0,,|pCone1|pConeShape1,perspShape)
                    >10 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|pCone1|pConeShape1,|pCone1|pConeShape1,0)
                      >11 Renderer::F2(0,|pCone1|pConeShape1)
                      >11 liqRibNode::findShader()
                  >9 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|pCone1|pConeShape1)
                    >10 Visitor::outputShadingGroup(phong1SG,1)
                      >11 _outputShadingGroup(phong1SG)
                        >12 getShaderFilePath_NoExt(phong1)
                  >9 Renderer::exportOneObject_reference(|pCone1|pConeShape1,perspShape)
                    >10 liqRibTranslatorNew::preTransformMel
                    >10 MaxtrixMotionBlur(|pCone1|pConeShape1,|pCone1|pConeShape1,0)
                    >10 liqRibTranslatorNew::postTransformMel(kTransform)
                    >10 RIProcedural::doIt()
                    >10 liqRibTranslatorNew::preShapeMel(kTransform)
                    >10 liqRibTranslatorNew::postShapeMel(kTransform)
                  >9 Renderer::oneObjectBlock_reference_attribute_end(|pCone1|pConeShape1,perspShape)
                >8 Renderer::objectBlock_reference_end()
            >6 liqRibTranslatorNew::worldEpilogue__()
              >7 liqRibTranslator::worldEpilogue()
                >8 Renderer::worldEpilogue()
            >6 liqRibTranslatorNew::frameEpilogue__(1)
              >7 Renderer::frameEpilogue(1)
            >6 liqRibTranslatorNew::ribEpilogue__(perspShape)
              >7 Renderer::ribPrologue_end(perspShape)
          >5 Renderer::HeroPassEnd(perspShape)
            >6 rm::Renderer::renderAll_local(R:/MyDocuments/maya/projects/default/rib/runprogram_polygen_perspShape.0001..rib)
              >7 liqProcessLauncher::_execute(renderdl,   "R:/MyDocuments/maya/projects/default/rib/runprogram_polygen_perspShape.0001..rib","R:/MyDocuments/maya/projects/default/", wait=0)
                >8 liqProcessLauncher::_execute(renderdl,   "R:/MyDocuments/maya/projects/default/rib/runprogram_polygen_perspShape.0001..rib","R:/MyDocuments/maya/projects/default/", wait=0)
        >4 liqRenderScript::addJob(job.title=runprogram_polygenFrame1,0)
          >5 liqRenderScript::popNextJobID()
        >4 liqRibTranslatorNew::postActions(defaultRenderLayer)
    >2 RendererMgr::test()
    >2 Renderer::closeLog()(but do nothing now)
    >2 RendererMgr::epilogue()
    >2 RendererMgr::uninstall()
      >3 ShaderMgr::clearValidConnection()
    >2 RendererMgr::unsetFactory()
