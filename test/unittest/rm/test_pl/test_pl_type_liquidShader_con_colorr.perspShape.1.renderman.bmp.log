  >1 liqRibTranslator::doIt()-->if(checkSettings()==true)
    >2 RendererMgr::setFactory(renderman)
    >2 RendererMgr::install()
      >3 ShaderMgr::setValidConnection()
      >3 ShaderMgr::getShaderConnectionMap()
      >3 RNodeVisitorMgr::setValidConnection(...)
        >4 FlatNodeVisitor::setValidConnection(...)
        >4 OccLightNodeVisitor::setValidConnection(...)
        >4 PhysicalsunNodeVisitor::setValidConnection(...)
    >2 RendererMgr::prologue()
    >2 Renderer::openLog(R:/MyDocuments/maya/projects/default/rib/test_pl_type_liquidShader_con_colorr.perspShape.1.renderman.bmp)(but do nothing now)
    >2 Renderer::canExport()
    >2 liqRibTranslatorNew::_doItNew(args,defaultRenderLayer)
      >3 liqRibTranslatorNew::_doItNewWithoutRenderScript(arg,defaultRenderLayer)
        >4 liqRibTranslator::verifyOutputDirectories()
          >5 liqRibTranslator::verifyResourceDir(RIB, rib, 0)
          >5 liqRibTranslator::verifyResourceDir(Texture, rmantex, 0)
          >5 liqRibTranslator::verifyResourceDir(Picture, rmanpix/, 0)
          >5 liqRibTranslator::verifyResourceDir(Temp Files, rmantmp/, 0)
        >4 liqRibTranslator::generateRenderScriptName()
        >4 liqRibTranslator::generateTempMayaSceneName()
        >4 tFrameScriptJobMgr::setCommonParameters(test_pl_type_liquidShader_con_colorrFrame1)
        >4 liqRibTranslatorNew::processOneFrame(0, liqglo__)
          >5 liqRibTranslatorNew::buildJobs__()
            >6 liqShader::liqShader(test_pl_type_liquidShader_con_colorr_liquidShader7)
              >7 liqShaderFactory::getUniqueShaderHandler()
              >7 liqGetSloInfo::setShaderNode(test_pl_type_liquidShader_con_colorr_liquidShader7)
            >6 liqShader::buildJobs()
              >7 liqShader::scanExpressions(test_pl_type_liquidShader_con_colorr_liquidShader7)
                >8 liqShader::processExpression(s0,*light)
                  >9 removeRedundentExtsion(test stringATT)
                  >9 liqExpression::liqExpression([MakeTexture test stringATT],)
                  >9 liqExpression::CalcValue()
                    >10 Renderer::getTextureExt()
                    >10 Renderer::getTextureExt()
                  >9 liqExpression::GetCmd()
                  >9 Renderer::getTextureExt()
            >6 liqShader::liqShader(test_pl_type_liquidShader_con_colorr_liquidShader8)
              >7 liqShaderFactory::getUniqueShaderHandler()
              >7 liqGetSloInfo::setShaderNode(test_pl_type_liquidShader_con_colorr_liquidShader8)
            >6 liqShader::buildJobs()
              >7 liqShader::scanExpressions(test_pl_type_liquidShader_con_colorr_liquidShader8)
                >8 liqShader::processExpression(s0,*light)
                  >9 removeRedundentExtsion(test stringATT)
                  >9 liqExpression::liqExpression([MakeTexture test stringATT],)
                  >9 liqExpression::CalcValue()
                    >10 Renderer::getTextureExt()
                    >10 Renderer::getTextureExt()
                  >9 liqExpression::GetCmd()
                  >9 Renderer::getTextureExt()
            >6 liqRibTranslatorNew::buildShadowJobs__()
              >7 tLightMgr::buildShadowJob(thisJob___, 0)
              >7 tLightMgr::buildShadowCameraJob(thisJob___, 0)
            >6 tRibCameraMgr::gatherDataForJob(liqglo___, ,jobList__,0,1)
            >6 liqRibTranslator::generateFileName(4,perspShape)
            >6 liqRibTranslator::generateFileName(5,perspShape)
              >7 liqRibTranslator::generateImageName(, job(perspShape)), 
            >6 liqRibTranslator::renderFrameSort(,)
            >6 liqRibTranslator::renderFrameSort(,)
          >5 liqRibTranslatorNew::calaculateSamplingTime(1)
          >5 liqRibTranslatorNew::scanScene__(1,0)
            >6 tLightMgr::scanScene(1,0, htable__, count, returnStatus__)
              >7 liqRibHT::insert(|pointLight1|pointLightShape1,lframe,0,3,0,matrix,,-1)
                >8 liqRibHT::hash(|pointLight1|pointLightShape1,0)
                >8 liqRibHT::find(|pointLight1|pointLightShape1,|pointLight1|pointLightShape1,3)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pointLight1|pointLightShape1,0,3,-1)
                  >9 liqRibNode::parseVectorAttributes(pointLight1,,2)
                  >9 liqRibNode::parseVectorAttributes(pointLight1,,3)
                  >9 liqRibNode::parseVectorAttributes(pointLight1,,4)
                  >9 liqRibNode::findShadingGroup(|pointLight1|pointLightShape1,3)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pointLight1|pointLightShape1,3)
                    >10 liqRibLightData::liqRibLightData(|pointLight1|pointLightShape1)
                      >11 liqRibData::addAdditionalSurfaceParameters(pointLightShape1)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
              >7 liqRibHT::insert(|pointLight2|pointLightShape2,lframe,0,3,1,matrix,,-1)
                >8 liqRibHT::hash(|pointLight2|pointLightShape2,1)
                >8 liqRibHT::find(|pointLight2|pointLightShape2,|pointLight2|pointLightShape2,3)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pointLight2|pointLightShape2,0,3,-1)
                  >9 liqRibNode::parseVectorAttributes(pointLight2,,2)
                  >9 liqRibNode::parseVectorAttributes(pointLight2,,3)
                  >9 liqRibNode::parseVectorAttributes(pointLight2,,4)
                  >9 liqRibNode::findShadingGroup(|pointLight2|pointLightShape2,3)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pointLight2|pointLightShape2,3)
                    >10 liqRibLightData::liqRibLightData(|pointLight2|pointLightShape2)
                      >11 liqRibData::addAdditionalSurfaceParameters(pointLightShape2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 tLocatorMgr::scanScene(1,0,htable__,count__,returnStatus__)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
              >7 liqRibHT::insert(|persp|perspShape,lframe,0,0,2,matrix,,-1)
                >8 liqRibHT::hash(|persp|perspShape,2)
                >8 liqRibHT::find(|persp|perspShape,|persp|perspShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|persp|perspShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(persp,,2)
                  >9 liqRibNode::parseVectorAttributes(persp,,3)
                  >9 liqRibNode::parseVectorAttributes(persp,,4)
                  >9 liqRibNode::findShadingGroup(|persp|perspShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|persp|perspShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
              >7 liqRibHT::insert(|top|topShape,lframe,0,0,3,matrix,,-1)
                >8 liqRibHT::hash(|top|topShape,3)
                >8 liqRibHT::find(|top|topShape,|top|topShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|top|topShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(top,,2)
                  >9 liqRibNode::parseVectorAttributes(top,,3)
                  >9 liqRibNode::parseVectorAttributes(top,,4)
                  >9 liqRibNode::findShadingGroup(|top|topShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|top|topShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
              >7 liqRibHT::insert(|front|frontShape,lframe,0,0,4,matrix,,-1)
                >8 liqRibHT::hash(|front|frontShape,4)
                >8 liqRibHT::find(|front|frontShape,|front|frontShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|front|frontShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(front,,2)
                  >9 liqRibNode::parseVectorAttributes(front,,3)
                  >9 liqRibNode::parseVectorAttributes(front,,4)
                  >9 liqRibNode::findShadingGroup(|front|frontShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|front|frontShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
              >7 liqRibHT::insert(|side|sideShape,lframe,0,0,5,matrix,,-1)
                >8 liqRibHT::hash(|side|sideShape,5)
                >8 liqRibHT::find(|side|sideShape,|side|sideShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|side|sideShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(side,,2)
                  >9 liqRibNode::parseVectorAttributes(side,,3)
                  >9 liqRibNode::parseVectorAttributes(side,,4)
                  >9 liqRibNode::findShadingGroup(|side|sideShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|side|sideShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
              >7 liqRibHT::insert(|pPlane2|pPlaneShape11,lframe,0,0,6,matrix,,-1)
                >8 liqRibHT::hash(|pPlane2|pPlaneShape11,6)
                >8 liqRibHT::find(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pPlane2|pPlaneShape11,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(pPlane2,,2)
                  >9 liqRibNode::parseVectorAttributes(pPlane2,,3)
                  >9 liqRibNode::parseVectorAttributes(pPlane2,,4)
                  >9 liqRibNode::findShadingGroup(|pPlane2|pPlaneShape11,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getColor(&shader,&color)
                  >9 liqRibNode::getOpacity(&shader,&color)
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pPlane2|pPlaneShape11,0)
                    >10 liqRibMeshData::liqRibMeshData(|pPlane2|pPlaneShape11)
                      >11 liqRibData::addAdditionalSurfaceParameters(pPlaneShape11)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
              >7 liqRibHT::insert(|locator1|locatorShape1,lframe,0,0,7,matrix,,-1)
                >8 liqRibHT::hash(|locator1|locatorShape1,7)
                >8 liqRibHT::find(|locator1|locatorShape1,|locator1|locatorShape1,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|locator1|locatorShape1,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(locator1,,2)
                  >9 liqRibNode::parseVectorAttributes(locator1,,3)
                  >9 liqRibNode::parseVectorAttributes(locator1,,4)
                  >9 liqRibNode::findShadingGroup(|locator1|locatorShape1,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|locator1|locatorShape1,0)
            >6 liqRibTranslatorNew::dealwithParticleInstancedObjects(0,1,8)
            >6 tCameraMgr::getCameraData(perspShape,0)
              >7 tCameraMgr::getCameraInfo(|persp|perspShape,)
                >8 tCameraMgr::portFieldOfView(200,150,&horizontal,&vertical,&fnCamera)
                  >9 tCameraMgr::computeViewingFrustum(1.33333,,&left,&right,&bottom,&top,|persp|perspShape)
              >7 tCameraMgr::getCameraFilmOffset(|persp|perspShape,)
              >7 tCameraMgr::getCameraTransform(|persp|perspShape,)
          >5 liqRibTranslatorNew::doTextures(size=2)
            >6 rm::Renderer::doTextures(txtList.size()=2)
              >7 liqProcessLauncher::_execute(tdlmake, -progress stringATT  "test" "test.tif",R:/MyDocuments/maya/projects/default/, wait=1)
                >8 liqProcessLauncher::_execute(tdlmake, -progress stringATT  "test" "test.tif",R:/MyDocuments/maya/projects/default/, wait=1)
              >7 liqProcessLauncher::_execute(tdlmake, -progress stringATT  "test" "test.tif",R:/MyDocuments/maya/projects/default/, wait=1)
                >8 liqProcessLauncher::_execute(tdlmake, -progress stringATT  "test" "test.tif",R:/MyDocuments/maya/projects/default/, wait=1)
          >5 liqRibTranslatorNew::doShadows(size=0)
            >6 rm::Renderer::doShadows(shadowList_.size()=0)
          >5 Renderer::setRenderScriptFormatAndCompress(0,0)
            >6 Renderer::_RiOption_format_compress(0,0)
          >5 Renderer::isHeroPassReady(perspShape)
          >5 Renderer::HeroPassBegin(perspShape)
          >5 tHeroRibWriterMgr::write(liqglo___,perspShape,1,0)
            >6 liqRibTranslatorNew::ribPrologue__(perspShape)
              >7 Renderer::ribPrologue_begin(perspShape)
                >8 RiBegin_liq(R:/MyDocuments/maya/projects/default/rib/test_pl_type_liquidShader_con_colorr_perspShape.0001..rib(strlen=98)
              >7 Renderer::ribPrologue_comment(2.3.5,R:/MyDocuments/maya/projects/default/test_pl_type_liquidShader_con_colorr,yaoyansi,time)
              >7 Renderer::ribPrologue_options(perspShape)
                >8 Renderer::ribPrologue_writeSearthPath()
                >8 tHeroRibWriterMgr::ribPrologue_hider(0)
                >8 tHeroRibWriterMgr::ribPrologue_samples(4,4)
                >8 tHeroRibWriterMgr::ribPrologue_shadingrate(1)
                >8 tHeroRibWriterMgr::ribPrologue_filter(0,2,2)
                >8 tHeroRibWriterMgr::ribPrologue_pass(beauty)
            >6 liqRibTranslatorNew::framePrologue__(1,perspShape)
              >7 Renderer::framePrologue(1,perspShape)
                >8 tHeroRibWriterMgr::framePrologue_display(perspShape)
                  >9 exportJobCamera(perspShape,,)
                >8 Renderer::framePrologue_camera(1,perspShape)
            >6 ShaderMgr::exportShaderGraph()
              >7 ConvertShadingNetwork::exportShaderGraph()
                >8 ConvertShadingNetwork::beforeExport()
                  >9 ShadingNetworkUser::beforeExport_user()
                >8 ConvertShadingNetwork::__export()
                  >9 ConvertShadingNetwork::canShadingGroupExported(liquidShader8SG)
                  >9 Renderer::getValidShaderPlugsInShadingGroup()
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(liquidShader8SG,surfaceShader)
                    >10 ConvertShadingNetwork::exportShaderNodeInPlug(liquidShader8SG,surfaceShader)
                      >11 ConvertShadingNetwork::_exportShaderNodeInPlug(liquidShader8SG,surfaceShader)
                        >12 ConvertShadingNetwork::exportShaderNode(test_pl_type_liquidShader_con_colorr_liquidShader8)
                          >13 ConvertShadingNetwork::canShaderExported(test_pl_type_liquidShader_con_colorr_liquidShader8)
                          >13 ConvertShadingNetwork::exportShaderBegin(test_pl_type_liquidShader_con_colorr_liquidShader8)
                          >13 ConvertShadingNetwork::convertShadingNetworkToRSL(test_pl_type_liquidShader_con_colorr_liquidShader8)
                            >14 Visitor::initShaderData(test_pl_type_liquidShader_con_colorr_liquidShader8)
                              >15 NodePlugConnectionMgr::setNodePlugMgr(...)
                              >15 NodePlugConnectionMgr::reset()
                            >14 ConvertShadingNetwork::getUpstreamConvertibleNodes(test_pl_type_liquidShader_con_colorr_liquidShader8, nodes, numConnections)
                              >15 DagMgr::BreadthFirstTraversal(test_pl_type_liquidShader_con_colorr_liquidShader8, ret)
                                >16 DagMgr::begin(test_pl_type_liquidShader_con_colorr_liquidShader8)
                                  >17 DagMgr::pushInputPlugs(test_pl_type_liquidShader_con_colorr_liquidShader8)
                                    >18 ShaderMgr::getValidConnection(test_pl_type_liquidShader_con_colorr_liquidShader8)
                                      >19 liqShaderFactory::getShader(test_pl_type_liquidShader_con_colorr_liquidShader8)
                                        >20 liqShaderFactory::getShader(test_pl_type_liquidShader_con_colorr_liquidShader8)
                                          >21 liqShader::liqShader(test_pl_type_liquidShader_con_colorr_liquidShader8)
                                            >22 liqShaderFactory::getUniqueShaderHandler()
                                            >22 liqGetSloInfo::setShaderNode(test_pl_type_liquidShader_con_colorr_liquidShader8)
                                      >19 liqShader::getValidConnection(...)
                                        >20 liqShader::getName()
                                    >18 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_liquidShader8.frequency)
                                      >19 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_liquidShader8.frequency)
                                      >19 ConvertShadingNetwork::nodeIsConvertible(test_pl_type_liquidShader_con_colorr_phong1)
                                        >20 ShaderMgr::hasShaderType(phong)
                                    >18 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_liquidShader8.s0)
                                      >19 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_liquidShader8.s0)
                                    >18 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_liquidShader8.c0)
                                      >19 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_liquidShader8.c0)
                                    >18 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_liquidShader8.p0)
                                      >19 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_liquidShader8.p0)
                                    >18 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_liquidShader8.v0)
                                      >19 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_liquidShader8.v0)
                                    >18 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_liquidShader8.n0)
                                      >19 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_liquidShader8.n0)
                                    >18 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_liquidShader8.m0)
                                      >19 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_liquidShader8.m0)
                                    >18 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_liquidShader8.m1)
                                      >19 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_liquidShader8.m1)
                                >16 DagMgr::pushInputPlugs(test_pl_type_liquidShader_con_colorr_phong1)
                                  >17 ShaderMgr::getValidConnection(test_pl_type_liquidShader_con_colorr_phong1)
                                  >17 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.colorR)
                                    >18 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.colorR)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(test_pl_type_liquidShader_con_colorr_liquidShader8)
                                      >19 ShaderMgr::hasShaderType(liquidShader)
                                  >17 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.colorG)
                                    >18 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.colorG)
                                  >17 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.colorB)
                                    >18 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.colorB)
                                  >17 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.color)
                                    >18 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.color)
                                  >17 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.transparencyR)
                                    >18 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.transparencyR)
                                  >17 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.transparencyG)
                                    >18 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.transparencyG)
                                  >17 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.transparencyB)
                                    >18 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.transparencyB)
                                  >17 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.transparency)
                                    >18 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.transparency)
                                  >17 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.ambientColorR)
                                    >18 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.ambientColorR)
                                  >17 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.ambientColorG)
                                    >18 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.ambientColorG)
                                  >17 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.ambientColorB)
                                    >18 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.ambientColorB)
                                  >17 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.ambientColor)
                                    >18 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.ambientColor)
                                  >17 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.incandescenceR)
                                    >18 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.incandescenceR)
                                  >17 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.incandescenceG)
                                    >18 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.incandescenceG)
                                  >17 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.incandescenceB)
                                    >18 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.incandescenceB)
                                  >17 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.incandescence)
                                    >18 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.incandescence)
                                  >17 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.normalCameraX)
                                    >18 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.normalCameraX)
                                  >17 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.normalCameraY)
                                    >18 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.normalCameraY)
                                  >17 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.normalCameraZ)
                                    >18 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.normalCameraZ)
                                  >17 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.normalCamera)
                                    >18 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.normalCamera)
                                  >17 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.diffuse)
                                    >18 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.diffuse)
                                  >17 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.translucence)
                                    >18 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.translucence)
                                  >17 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.translucenceDepth)
                                    >18 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.translucenceDepth)
                                  >17 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.translucenceFocus)
                                    >18 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.translucenceFocus)
                                  >17 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.cosinePower)
                                    >18 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.cosinePower)
                                  >17 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.specularColorR)
                                    >18 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.specularColorR)
                                  >17 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.specularColorG)
                                    >18 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.specularColorG)
                                  >17 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.specularColorB)
                                    >18 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.specularColorB)
                                  >17 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.specularColor)
                                    >18 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.specularColor)
                                  >17 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.reflectivity)
                                    >18 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.reflectivity)
                                  >17 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.reflectedColorR)
                                    >18 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.reflectedColorR)
                                  >17 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.reflectedColorG)
                                    >18 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.reflectedColorG)
                                  >17 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.reflectedColorB)
                                    >18 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.reflectedColorB)
                                  >17 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.reflectedColor)
                                    >18 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.reflectedColor)
                                  >17 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.matteOpacityMode)
                                    >18 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.matteOpacityMode)
                                  >17 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.matteOpacity)
                                    >18 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.matteOpacity)
                                  >17 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.reflectionLimit)
                                    >18 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.reflectionLimit)
                                  >17 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.outColorR)
                                    >18 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.outColorR)
                                  >17 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.outColorG)
                                    >18 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.outColorG)
                                  >17 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.outColorB)
                                    >18 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.outColorB)
                                  >17 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.outColor)
                                    >18 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.outColor)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                                      >19 ShaderMgr::hasShaderType(shadingEngine)
                                  >17 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.outTransparencyR)
                                    >18 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.outTransparencyR)
                                  >17 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.outTransparencyG)
                                    >18 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.outTransparencyG)
                                  >17 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.outTransparencyB)
                                    >18 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.outTransparencyB)
                                  >17 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.outTransparency)
                                    >18 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.outTransparency)
                                >16 DagMgr::isVisited(test_pl_type_liquidShader_con_colorr_phong1)
                                >16 DagMgr::visit(test_pl_type_liquidShader_con_colorr_phong1)
                                >16 DagMgr::end()
                            >14 Visitor::preOutput(test_pl_type_liquidShader_con_colorr_liquidShader8)
                            >14 Visitor::outputBegin(test_pl_type_liquidShader_con_colorr_liquidShader8), open shader file
                              >15 getShaderFilePath_SRC(test_pl_type_liquidShader_con_colorr_liquidShader8)
                                >16 getShaderFilePath_NoExt(test_pl_type_liquidShader_con_colorr_liquidShader8)
                              >15 Visitor::getSurfaceShaderAOVOutputParametersString()
                              >15 Visitor::defineAOVVariables(test_pl_type_liquidShader_con_colorr_liquidShader8)
                            >14 ConvertShadingNetwork::traverseGraphAndOutputNodeFunctions( nodes, numConnections)
                              >15 Visitor::outputUpstreamShader(test_pl_type_liquidShader_con_colorr_phong1)
                                >16 ShaderOutputVisitor::_outputUpstreamShader(test_pl_type_liquidShader_con_colorr_phong1,phong)
                                  >17 Visitor::visitPhong(test_pl_type_liquidShader_con_colorr_phong1)
                                    >18 OutputHelper::addInclude(phong.h)
                                    >18 OutputHelper::beginRSL(test_pl_type_liquidShader_con_colorr_phong1)
                                    >18 ShaderMgr::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.ambientColor)
                                      >19 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.ambientColor)
                                        >20 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.ambientColor)
                                    >18 NodePlugInfo::add(test_pl_type_liquidShader_con_colorr_phong1,ambientColor,color)
                                      >19 NodePlug::add(ambientColor, color)
                                    >18 ShaderMgr::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.colorR)
                                      >19 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.colorR)
                                        >20 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.colorR)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(test_pl_type_liquidShader_con_colorr_liquidShader8)
                                          >21 ShaderMgr::hasShaderType(liquidShader)
                                    >18 NodePlugInfo::add(test_pl_type_liquidShader_con_colorr_phong1,colorR,float)
                                      >19 NodePlug::add(colorR, float)
                                    >18 ShaderMgr::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.color)
                                      >19 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.color)
                                        >20 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.color)
                                    >18 NodePlugInfo::add(test_pl_type_liquidShader_con_colorr_phong1,color,color)
                                      >19 NodePlug::add(color, color)
                                    >18 ShaderMgr::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.cosinePower)
                                      >19 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.cosinePower)
                                        >20 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.cosinePower)
                                    >18 NodePlugInfo::add(test_pl_type_liquidShader_con_colorr_phong1,cosinePower,float)
                                      >19 NodePlug::add(cosinePower, float)
                                    >18 ShaderMgr::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.diffuse)
                                      >19 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.diffuse)
                                        >20 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.diffuse)
                                    >18 NodePlugInfo::add(test_pl_type_liquidShader_con_colorr_phong1,diffuse,float)
                                      >19 NodePlug::add(diffuse, float)
                                    >18 ShaderMgr::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.incandescence)
                                      >19 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.incandescence)
                                        >20 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.incandescence)
                                    >18 NodePlugInfo::add(test_pl_type_liquidShader_con_colorr_phong1,incandescence,color)
                                      >19 NodePlug::add(incandescence, color)
                                    >18 ShaderMgr::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.matteOpacity)
                                      >19 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.matteOpacity)
                                        >20 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.matteOpacity)
                                    >18 NodePlugInfo::add(test_pl_type_liquidShader_con_colorr_phong1,matteOpacity,float)
                                      >19 NodePlug::add(matteOpacity, float)
                                    >18 ShaderMgr::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.matteOpacityMode)
                                      >19 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.matteOpacityMode)
                                        >20 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.matteOpacityMode)
                                    >18 NodePlugInfo::add(test_pl_type_liquidShader_con_colorr_phong1,matteOpacityMode,float)
                                      >19 NodePlug::add(matteOpacityMode, float)
                                    >18 ShaderMgr::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.specularColor)
                                      >19 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.specularColor)
                                        >20 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.specularColor)
                                    >18 NodePlugInfo::add(test_pl_type_liquidShader_con_colorr_phong1,specularColor,color)
                                      >19 NodePlug::add(specularColor, color)
                                    >18 ShaderMgr::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.reflectivity)
                                      >19 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.reflectivity)
                                        >20 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.reflectivity)
                                    >18 NodePlugInfo::add(test_pl_type_liquidShader_con_colorr_phong1,reflectivity,float)
                                      >19 NodePlug::add(reflectivity, float)
                                    >18 ShaderMgr::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.reflectedColor)
                                      >19 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.reflectedColor)
                                        >20 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.reflectedColor)
                                    >18 NodePlugInfo::add(test_pl_type_liquidShader_con_colorr_phong1,reflectedColor,color)
                                      >19 NodePlug::add(reflectedColor, color)
                                    >18 ShaderMgr::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.refractions)
                                      >19 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.refractions)
                                        >20 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.refractions)
                                    >18 NodePlugInfo::add(test_pl_type_liquidShader_con_colorr_phong1,refractions,float)
                                      >19 NodePlug::add(refractions, float)
                                    >18 ShaderMgr::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.refractiveIndex)
                                      >19 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.refractiveIndex)
                                        >20 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.refractiveIndex)
                                    >18 NodePlugInfo::add(test_pl_type_liquidShader_con_colorr_phong1,refractiveIndex,float)
                                      >19 NodePlug::add(refractiveIndex, float)
                                    >18 ShaderMgr::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.refractionLimit)
                                      >19 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.refractionLimit)
                                        >20 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.refractionLimit)
                                    >18 NodePlugInfo::add(test_pl_type_liquidShader_con_colorr_phong1,refractionLimit,float)
                                      >19 NodePlug::add(refractionLimit, float)
                                    >18 ShaderMgr::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.lightAbsorbance)
                                      >19 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.lightAbsorbance)
                                        >20 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.lightAbsorbance)
                                    >18 NodePlugInfo::add(test_pl_type_liquidShader_con_colorr_phong1,lightAbsorbance,float)
                                      >19 NodePlug::add(lightAbsorbance, float)
                                    >18 ShaderMgr::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.shadowAttenuation)
                                      >19 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.shadowAttenuation)
                                        >20 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.shadowAttenuation)
                                    >18 NodePlugInfo::add(test_pl_type_liquidShader_con_colorr_phong1,shadowAttenuation,float)
                                      >19 NodePlug::add(shadowAttenuation, float)
                                    >18 ShaderMgr::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.reflectionLimit)
                                      >19 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.reflectionLimit)
                                        >20 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.reflectionLimit)
                                    >18 NodePlugInfo::add(test_pl_type_liquidShader_con_colorr_phong1,reflectionLimit,float)
                                      >19 NodePlug::add(reflectionLimit, float)
                                    >18 ShaderMgr::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.translucence)
                                      >19 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.translucence)
                                        >20 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.translucence)
                                    >18 NodePlugInfo::add(test_pl_type_liquidShader_con_colorr_phong1,translucence,float)
                                      >19 NodePlug::add(translucence, float)
                                    >18 ShaderMgr::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.translucenceDepth)
                                      >19 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.translucenceDepth)
                                        >20 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.translucenceDepth)
                                    >18 NodePlugInfo::add(test_pl_type_liquidShader_con_colorr_phong1,translucenceDepth,float)
                                      >19 NodePlug::add(translucenceDepth, float)
                                    >18 ShaderMgr::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.translucenceFocus)
                                      >19 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.translucenceFocus)
                                        >20 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.translucenceFocus)
                                    >18 NodePlugInfo::add(test_pl_type_liquidShader_con_colorr_phong1,translucenceFocus,float)
                                      >19 NodePlug::add(translucenceFocus, float)
                                    >18 ShaderMgr::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.transparency)
                                      >19 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.transparency)
                                        >20 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.transparency)
                                    >18 NodePlugInfo::add(test_pl_type_liquidShader_con_colorr_phong1,transparency,color)
                                      >19 NodePlug::add(transparency, color)
                                    >18 ShaderMgr::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.outColor)
                                      >19 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.outColor)
                                        >20 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.outColor)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                                          >21 ShaderMgr::hasShaderType(shadingEngine)
                                    >18 NodePlugInfo::add(test_pl_type_liquidShader_con_colorr_phong1,outColor,color)
                                      >19 NodePlug::add(outColor, color)
                                    >18 ShaderMgr::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.outTransparency)
                                      >19 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.outTransparency)
                                        >20 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.outTransparency)
                                    >18 NodePlugInfo::add(test_pl_type_liquidShader_con_colorr_phong1,outTransparency,color)
                                      >19 NodePlug::add(outTransparency, color)
                                    >18 OutputHelper::endRSL()
                              >15 ShaderMgr::getValidConnection(test_pl_type_liquidShader_con_colorr_phong1)
                              >15 ConvertShadingNetwork::getNodeVariables(test_pl_type_liquidShader_con_colorr_phong1, validConnections,  inputSrc, inputDes, outputSrc)
                                >16 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.colorR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.colorR)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(test_pl_type_liquidShader_con_colorr_liquidShader8)
                                    >18 ShaderMgr::hasShaderType(liquidShader)
                                >16 ConvertShadingNetwork::addNodeOutputVariable(test_pl_type_liquidShader_con_colorr_phong1,colorR,test_pl_type_liquidShader_con_colorr_phong1.colorR, outputVars)
                                  >17 Visitor::addShaderMethodVariavles(test_pl_type_liquidShader_con_colorr_phong1,colorR,float,-1,)
                                >16 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.colorG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.colorG)
                                >16 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.colorB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.colorB)
                                >16 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.color)
                                  >17 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.color)
                                >16 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.transparencyR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.transparencyR)
                                >16 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.transparencyG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.transparencyG)
                                >16 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.transparencyB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.transparencyB)
                                >16 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.transparency)
                                  >17 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.transparency)
                                >16 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.ambientColorR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.ambientColorR)
                                >16 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.ambientColorG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.ambientColorG)
                                >16 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.ambientColorB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.ambientColorB)
                                >16 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.ambientColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.ambientColor)
                                >16 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.incandescenceR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.incandescenceR)
                                >16 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.incandescenceG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.incandescenceG)
                                >16 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.incandescenceB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.incandescenceB)
                                >16 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.incandescence)
                                  >17 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.incandescence)
                                >16 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.normalCameraX)
                                  >17 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.normalCameraX)
                                >16 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.normalCameraY)
                                  >17 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.normalCameraY)
                                >16 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.normalCameraZ)
                                  >17 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.normalCameraZ)
                                >16 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.normalCamera)
                                  >17 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.normalCamera)
                                >16 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.diffuse)
                                  >17 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.diffuse)
                                >16 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.translucence)
                                  >17 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.translucence)
                                >16 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.translucenceDepth)
                                  >17 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.translucenceDepth)
                                >16 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.translucenceFocus)
                                  >17 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.translucenceFocus)
                                >16 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.cosinePower)
                                  >17 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.cosinePower)
                                >16 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.specularColorR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.specularColorR)
                                >16 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.specularColorG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.specularColorG)
                                >16 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.specularColorB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.specularColorB)
                                >16 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.specularColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.specularColor)
                                >16 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.reflectivity)
                                  >17 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.reflectivity)
                                >16 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.reflectedColorR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.reflectedColorR)
                                >16 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.reflectedColorG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.reflectedColorG)
                                >16 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.reflectedColorB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.reflectedColorB)
                                >16 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.reflectedColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.reflectedColor)
                                >16 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.matteOpacityMode)
                                  >17 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.matteOpacityMode)
                                >16 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.matteOpacity)
                                  >17 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.matteOpacity)
                                >16 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.reflectionLimit)
                                  >17 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.reflectionLimit)
                                >16 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.outColorR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.outColorR)
                                >16 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.outColorG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.outColorG)
                                >16 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.outColorB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.outColorB)
                                >16 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.outColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.outColor)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                                    >18 ShaderMgr::hasShaderType(shadingEngine)
                                >16 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.outTransparencyR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.outTransparencyR)
                                >16 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.outTransparencyG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.outTransparencyG)
                                >16 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.outTransparencyB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.outTransparencyB)
                                >16 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_phong1.outTransparency)
                                  >17 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_phong1.outTransparency)
                              >15 Visitor::addShaderMethodBody(test_pl_type_liquidShader_con_colorr_phong1,,,test_pl_type_liquidShader_con_colorr_phong1.colorR124)
                                >16 NodePlugConnectionMgr::add(test_pl_type_liquidShader_con_colorr_phong1)
                              >15 Visitor::outputUpstreamShader(test_pl_type_liquidShader_con_colorr_liquidShader8)
                                >16 ShaderOutputVisitor::_outputUpstreamShader(test_pl_type_liquidShader_con_colorr_liquidShader8,liquidShader)
                                  >17 Visitor::visit_liquidShader(test_pl_type_liquidShader_con_colorr_liquidShader8)
                                    >18 liqShaderFactory::getShader(test_pl_type_liquidShader_con_colorr_liquidShader8)
                                      >19 liqShaderFactory::getShader(test_pl_type_liquidShader_con_colorr_liquidShader8)
                                    >18 liqShader::getName()
                                    >18 liqShader::getShaderFileName()
                                    >18 OutputHelper::addInclude(E:/dev/Autodesk/maya/myplugin/project/liquid_/2.3.3/lib/shaders/test_type.impl)
                                    >18 OutputHelper::beginRSL(test_pl_type_liquidShader_con_colorr_liquidShader8)
                                    >18 ShaderMgr::convertibleConnection(test_pl_type_liquidShader_con_colorr_liquidShader8.frequency)
                                      >19 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_liquidShader8.frequency)
                                        >20 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_liquidShader8.frequency)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(test_pl_type_liquidShader_con_colorr_phong1)
                                          >21 ShaderMgr::hasShaderType(phong)
                                    >18 NodePlugInfo::add(test_pl_type_liquidShader_con_colorr_liquidShader8,frequency,float)
                                      >19 NodePlug::add(frequency, float)
                                    >18 ShaderMgr::convertibleConnection(test_pl_type_liquidShader_con_colorr_liquidShader8.s0)
                                      >19 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_liquidShader8.s0)
                                        >20 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_liquidShader8.s0)
                                    >18 NodePlugInfo::add(test_pl_type_liquidShader_con_colorr_liquidShader8,s0,string)
                                      >19 NodePlug::add(s0, string)
                                    >18 ShaderMgr::convertibleConnection(test_pl_type_liquidShader_con_colorr_liquidShader8.c0)
                                      >19 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_liquidShader8.c0)
                                        >20 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_liquidShader8.c0)
                                    >18 NodePlugInfo::add(test_pl_type_liquidShader_con_colorr_liquidShader8,c0,color)
                                      >19 NodePlug::add(c0, color)
                                    >18 ShaderMgr::convertibleConnection(test_pl_type_liquidShader_con_colorr_liquidShader8.p0)
                                      >19 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_liquidShader8.p0)
                                        >20 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_liquidShader8.p0)
                                    >18 NodePlugInfo::add(test_pl_type_liquidShader_con_colorr_liquidShader8,p0,point)
                                      >19 NodePlug::add(p0, point)
                                    >18 ShaderMgr::convertibleConnection(test_pl_type_liquidShader_con_colorr_liquidShader8.v0)
                                      >19 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_liquidShader8.v0)
                                        >20 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_liquidShader8.v0)
                                    >18 NodePlugInfo::add(test_pl_type_liquidShader_con_colorr_liquidShader8,v0,vector)
                                      >19 NodePlug::add(v0, vector)
                                    >18 ShaderMgr::convertibleConnection(test_pl_type_liquidShader_con_colorr_liquidShader8.n0)
                                      >19 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_liquidShader8.n0)
                                        >20 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_liquidShader8.n0)
                                    >18 NodePlugInfo::add(test_pl_type_liquidShader_con_colorr_liquidShader8,n0,normal)
                                      >19 NodePlug::add(n0, normal)
                                    >18 ShaderMgr::convertibleConnection(test_pl_type_liquidShader_con_colorr_liquidShader8.m0)
                                      >19 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_liquidShader8.m0)
                                        >20 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_liquidShader8.m0)
                                    >18 NodePlugInfo::add(test_pl_type_liquidShader_con_colorr_liquidShader8,m0,matrix)
                                      >19 NodePlug::add(m0, matrix)
                                    >18 ShaderMgr::convertibleConnection(test_pl_type_liquidShader_con_colorr_liquidShader8.m1)
                                      >19 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_liquidShader8.m1)
                                        >20 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_liquidShader8.m1)
                                    >18 NodePlugInfo::add(test_pl_type_liquidShader_con_colorr_liquidShader8,m1,matrix)
                                      >19 NodePlug::add(m1, matrix)
                                    >18 OutputHelper::endRSL()
                              >15 ShaderMgr::getValidConnection(test_pl_type_liquidShader_con_colorr_liquidShader8)
                                >16 liqShaderFactory::getShader(test_pl_type_liquidShader_con_colorr_liquidShader8)
                                  >17 liqShaderFactory::getShader(test_pl_type_liquidShader_con_colorr_liquidShader8)
                                >16 liqShader::getValidConnection(...)
                                  >17 liqShader::getName()
                              >15 ConvertShadingNetwork::getNodeVariables(test_pl_type_liquidShader_con_colorr_liquidShader8, validConnections,  inputSrc, inputDes, outputSrc)
                                >16 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_liquidShader8.frequency)
                                  >17 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_liquidShader8.frequency)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(test_pl_type_liquidShader_con_colorr_phong1)
                                    >18 ShaderMgr::hasShaderType(phong)
                                >16 ConvertShadingNetwork::addNodeInputVariable(test_pl_type_liquidShader_con_colorr_liquidShader8.frequency, inputSrc, inputDes)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(test_pl_type_liquidShader_con_colorr_phong1)
                                    >18 ShaderMgr::hasShaderType(phong)
                                  >17 ShaderMgr::getValidConnection(test_pl_type_liquidShader_con_colorr_phong1)
                                >16 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_liquidShader8.s0)
                                  >17 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_liquidShader8.s0)
                                >16 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_liquidShader8.c0)
                                  >17 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_liquidShader8.c0)
                                >16 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_liquidShader8.p0)
                                  >17 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_liquidShader8.p0)
                                >16 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_liquidShader8.v0)
                                  >17 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_liquidShader8.v0)
                                >16 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_liquidShader8.n0)
                                  >17 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_liquidShader8.n0)
                                >16 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_liquidShader8.m0)
                                  >17 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_liquidShader8.m0)
                                >16 ConvertShadingNetwork::convertibleConnection(test_pl_type_liquidShader_con_colorr_liquidShader8.m1)
                                  >17 ConvertShadingNetwork::ensurePlugExists(test_pl_type_liquidShader_con_colorr_liquidShader8.m1)
                              >15 Visitor::addShaderMethodBody(test_pl_type_liquidShader_con_colorr_liquidShader8,test_pl_type_liquidShader_con_colorr_phong1.colorR124,test_pl_type_liquidShader_con_colorr_liquidShader8.frequency124,)
                                >16 NodePlugConnectionMgr::add(test_pl_type_liquidShader_con_colorr_liquidShader8)
                            >14 ConvertShadingNetwork::outputShaderMethod()
                              >15 Visitor::outputShaderMethod()
                                >16 NodePlugConnectionMgr::cookRSLFunctionCallString(0)
                                >16 NodePlugConnectionMgr::log(0)
                                >16 NodePlugConnectionMgr::cookRSLFunctionCallString(1)
                                  >17 NodePlugInfo::getPlugInfo(test_pl_type_liquidShader_con_colorr_phong1.colorR)
                                    >18 NodePlugInfo::getPlugInfo(test_pl_type_liquidShader_con_colorr_phong1,colorR)
                                      >19 NodePlug::getPlugInfo(colorR)
                                  >17 NodePlugInfo::getPlugInfo(test_pl_type_liquidShader_con_colorr_liquidShader8.frequency)
                                    >18 NodePlugInfo::getPlugInfo(test_pl_type_liquidShader_con_colorr_liquidShader8,frequency)
                                      >19 NodePlug::getPlugInfo(frequency)
                                >16 NodePlugConnectionMgr::log(1)
                            >14 Visitor::outputEnd(), close shader file
                            >14 Visitor::postOutput()
                              >15 getShaderFilePath_SLO(test_pl_type_liquidShader_con_colorr_liquidShader8)
                                >16 getShaderFilePath_NoExt(test_pl_type_liquidShader_con_colorr_liquidShader8)
                              >15 getShaderFilePath_SRC(test_pl_type_liquidShader_con_colorr_liquidShader8)
                                >16 getShaderFilePath_NoExt(test_pl_type_liquidShader_con_colorr_liquidShader8)
                          >13 ConvertShadingNetwork::exportShaderEnd(test_pl_type_liquidShader_con_colorr_liquidShader8)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(liquidShader8SG,displacementShader)
                    >10 ConvertShadingNetwork::exportShaderNodeInPlug(liquidShader8SG,displacementShader)
                      >11 ConvertShadingNetwork::_exportShaderNodeInPlug(liquidShader8SG,displacementShader)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(liquidShader8SG,volumeShader)
                    >10 ConvertShadingNetwork::exportShaderNodeInPlug(liquidShader8SG,volumeShader)
                      >11 ConvertShadingNetwork::_exportShaderNodeInPlug(liquidShader8SG,volumeShader)
                  >9 ConvertShadingNetwork::exportShadingGroupBegin(liquidShader8SG)
                  >9 ConvertShadingNetwork::outputShadingGroup(liquidShader8SG)
                    >10 Visitor::outputShadingGroup(liquidShader8SG)
                      >11 Visitor::outputShadingGroup(liquidShader8SG,0)
                  >9 ConvertShadingNetwork::exportShadingGroupEnd(liquidShader8SG)
                  >9 ConvertShadingNetwork::exportShaderNodeInPlug(perspShape,miEnvironmentShader)
                  >9 ConvertShadingNetwork::exportShaderNodeInPlug(perspShape,liqVolumeShader)
                  >9 ConvertShadingNetwork::exportShaderNodeInPlug(perspShape,liqEnvironmentShader)
                  >9 ConvertShadingNetwork::exportShaderNodeInPlug(perspShape,liqLensShader)
                  >9 ShadingNetworkUser::export_user()
                >8  ConvertShadingNetwork::afterExport()
                  >9 ShadingNetworkUser::afterExport_user()
            >6 liqRibTranslatorNew::worldPrologue__(perspShape)
              >7 Renderer::worldPrologue(perspShape)
            >6 liqRibTranslatorNew::lightBlock__(perspShape)
              >7 Renderer::writeLight_pre(|pointLight1|pointLightShape1,perspShape)
              >7 liqRibObj::writeObject(,perspShape,0)
                >8 liqRibLightData::write(,job=perspShape,0)
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::write(|pointLight1|pointLightShape1,,perspShape,ref=0)
                    >10 Helper::RiBeginRef()
                      >11 liqRibData::getFullPathName()
                    >10 rm_writeLightData.cpp::_write(|pointLight1|pointLightShape1,perspShape,...)
                      >11 Renderer::exportPointLight(pointlight,pointLightShape1,...)
                    >10 Helper::RiEndRef()
              >7 Renderer::writeLight_post(|pointLight1|pointLightShape1,perspShape)
              >7 Renderer::writeLight_pre(|pointLight2|pointLightShape2,perspShape)
              >7 liqRibObj::writeObject(,perspShape,0)
                >8 liqRibLightData::write(,job=perspShape,0)
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::write(|pointLight2|pointLightShape2,,perspShape,ref=0)
                    >10 Helper::RiBeginRef()
                      >11 liqRibData::getFullPathName()
                    >10 rm_writeLightData.cpp::_write(|pointLight2|pointLightShape2,perspShape,...)
                      >11 Renderer::exportPointLight(pointlight,pointLightShape2,...)
                    >10 Helper::RiEndRef()
              >7 Renderer::writeLight_post(|pointLight2|pointLightShape2,perspShape)
            >6 liqRibTranslatorNew::coordSysBlock__(perspShape)
              >7 Renderer::coordSysBlock__(perspShape)
            >6 liqRibTranslatorNew::objectBlock__(perspShape)
              >7 liqRibTranslatorNew::objectBlock_data(perspShape)
                >8 liqRibTranslatorNew::getShadowSetObject(perspShape)
                >8 liqRibTranslatorNew::oneObjectBlock_data(|pPlane2|pPlaneShape11,perspShape)
                  >9 Renderer::exportOneObject_data(|pPlane2|pPlaneShape11,perspShape)
                    >10 Renderer::_writeObject(|pPlane2|pPlaneShape11,perspShape,0,0,0)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.1.rib,perspShape,0)
                        >12 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.1.rib,job=perspShape,0)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|pPlane2|pPlaneShape11,R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.1.rib,perspShape,ref=0)
                >8 liqRibTranslatorNew::oneObjectBlock_data(|locator1|locatorShape1,perspShape)
                  >9 Renderer::exportOneObject_data(|locator1|locatorShape1,perspShape)
                    >10 Renderer::_writeObject(|locator1|locatorShape1,perspShape,0,0,0)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_locator1_locatorShape1.1.rib,perspShape,0)
                        >12 liqRibLocatorData::write(R:/MyDocuments/maya/projects/default/rib/_locator1_locatorShape1.1.rib,job=perspShape,0)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|locator1|locatorShape1,R:/MyDocuments/maya/projects/default/rib/_locator1_locatorShape1.1.rib,perspShape,ref=0)
              >7 liqRibTranslatorNew::objectBlock_reference(perspShape)
                >8 Renderer::objectBlock_reference_begin()
                >8 liqRibTranslatorNew::preGeometryMel()
                  >9 Renderer::preGeometryMel()
                >8 liqRibTranslatorNew::getShadowSetObject(perspShape)
                >8 liqRibTranslatorNew::oneObjectBlock_reference(|pPlane2|pPlaneShape11,perspShape)
                  >9 Renderer::oneObjectBlock_reference_attribute_begin(|pPlane2|pPlaneShape11,perspShape)
                  >9 Renderer::oneObjectBlock_reference_attribute_block0(|pPlane2|pPlaneShape11,perspShape)
                  >9 liqRibTranslatorNew::tRiIlluminate(perspShape,|pPlane2|pPlaneShape11)
                    >10 Renderer::exportLightLinks(perspShape,|pPlane2|pPlaneShape11,lightedByWhichLightShapes.size=2)
                  >9 liqRibTranslatorNew::checkSurfaceShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                  >9 liqRibTranslatorNew::checkDisplacementShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                  >9 liqRibTranslatorNew::checkVolumeShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                  >9 Renderer::oneObjectBlock_reference_attribute_block1(|pPlane2|pPlaneShape11,perspShape)
                    >10 objectNonShadowAttribute(|pPlane2|pPlaneShape11)
                      >11 liqRibNode::writeUserAttributes()
                        >12 Renderer::writeUserAttributes()
                  >9 liqRibTranslatorNew::writeShader_(1,|pPlane2|pPlaneShape11,v=0,s=1,c=0,,|pPlane2|pPlaneShape11,perspShape)
                    >10 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_RegularShader(|pPlane2|pPlaneShape11,perspShape)
                      >11 liqShaderFactory::getShader(test_pl_type_liquidShader_con_colorr_liquidShader8)
                        >12 liqShader::getName()
                      >11 Renderer::F1(|pPlane2|pPlaneShape11,test_pl_type_liquidShader_con_colorr_liquidShader8)
                  >9 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|pPlane2|pPlaneShape11)
                    >10 Visitor::outputShadingGroup(liquidShader8SG,1)
                      >11 _outputShadingGroup(liquidShader8SG)
                        >12 getShaderFilePath_NoExt(test_pl_type_liquidShader_con_colorr_liquidShader8)
                  >9 Renderer::exportOneObject_reference(|pPlane2|pPlaneShape11,perspShape)
                    >10 liqRibTranslatorNew::preTransformMel
                    >10 MaxtrixMotionBlur(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                    >10 liqRibTranslatorNew::postTransformMel(kTransform)
                    >10 liqRibTranslatorNew::preShapeMel(kTransform)
                    >10 Renderer::_writeObject(|pPlane2|pPlaneShape11,perspShape,0,0,1)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.1.rib,perspShape,1)
                        >12 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.1.rib,job=perspShape,1)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|pPlane2|pPlaneShape11,R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.1.rib,perspShape,ref=1)
                              >15 liqRibData::getFullPathName()
                            >14 rm_writeMeshData.cpp::_write(|pPlane2|pPlaneShape11,perspShape)
                    >10 liqRibTranslatorNew::postShapeMel(kTransform)
                  >9 Renderer::oneObjectBlock_reference_attribute_end(|pPlane2|pPlaneShape11,perspShape)
                >8 liqRibTranslatorNew::oneObjectBlock_reference(|locator1|locatorShape1,perspShape)
                  >9 Renderer::oneObjectBlock_reference_attribute_begin(|locator1|locatorShape1,perspShape)
                  >9 Renderer::oneObjectBlock_reference_attribute_block0(|locator1|locatorShape1,perspShape)
                  >9 liqRibTranslatorNew::tRiIlluminate(perspShape,|locator1|locatorShape1)
                    >10 Renderer::exportLightLinks(perspShape,|locator1|locatorShape1,lightedByWhichLightShapes.size=0)
                      >11 Renderer::logFrame(|locator1|locatorShape1 is not lighted.)
                  >9 liqRibTranslatorNew::checkSurfaceShader(|locator1|locatorShape1,|locator1|locatorShape1,,,)
                  >9 liqRibTranslatorNew::checkDisplacementShader(|locator1|locatorShape1,|locator1|locatorShape1,,,)
                  >9 liqRibTranslatorNew::checkVolumeShader(|locator1|locatorShape1,|locator1|locatorShape1,,,)
                  >9 Renderer::oneObjectBlock_reference_attribute_block1(|locator1|locatorShape1,perspShape)
                    >10 objectNonShadowAttribute(|locator1|locatorShape1)
                      >11 liqRibNode::writeUserAttributes()
                        >12 Renderer::writeUserAttributes()
                  >9 liqRibTranslatorNew::writeShader_(1,|locator1|locatorShape1,v=0,s=0,c=0,,|locator1|locatorShape1,perspShape)
                    >10 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|locator1|locatorShape1,|locator1|locatorShape1,0)
                      >11 Renderer::F2(0,|locator1|locatorShape1)
                      >11 liqRibNode::findShader()
                  >9 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|locator1|locatorShape1)
                  >9 Renderer::exportOneObject_reference(|locator1|locatorShape1,perspShape)
                    >10 liqRibTranslatorNew::preTransformMel
                    >10 MaxtrixMotionBlur(|locator1|locatorShape1,|locator1|locatorShape1,0)
                    >10 liqRibTranslatorNew::postTransformMel(kTransform)
                    >10 liqRibTranslatorNew::preShapeMel(kTransform)
                    >10 Renderer::_writeObject(|locator1|locatorShape1,perspShape,0,0,1)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_locator1_locatorShape1.1.rib,perspShape,1)
                        >12 liqRibLocatorData::write(R:/MyDocuments/maya/projects/default/rib/_locator1_locatorShape1.1.rib,job=perspShape,1)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|locator1|locatorShape1,R:/MyDocuments/maya/projects/default/rib/_locator1_locatorShape1.1.rib,perspShape,ref=1)
                              >15 liqRibData::getFullPathName()
                            >14 rm_writeLocatorData.cpp::write(|locator1|locatorShape1,perspShape,...)
                    >10 liqRibTranslatorNew::postShapeMel(kTransform)
                  >9 Renderer::oneObjectBlock_reference_attribute_end(|locator1|locatorShape1,perspShape)
                >8 Renderer::objectBlock_reference_end()
            >6 liqRibTranslatorNew::worldEpilogue__()
              >7 liqRibTranslator::worldEpilogue()
                >8 Renderer::worldEpilogue()
            >6 liqRibTranslatorNew::frameEpilogue__(1)
              >7 Renderer::frameEpilogue(1)
            >6 liqRibTranslatorNew::ribEpilogue__(perspShape)
              >7 Renderer::ribPrologue_end(perspShape)
          >5 Renderer::HeroPassEnd(perspShape)
            >6 rm::Renderer::renderAll_local(R:/MyDocuments/maya/projects/default/rib/test_pl_type_liquidShader_con_colorr_perspShape.0001..rib)
              >7 liqProcessLauncher::_execute(renderdl,   "R:/MyDocuments/maya/projects/default/rib/test_pl_type_liquidShader_con_colorr_perspShape.0001..rib","R:/MyDocuments/maya/projects/default/", wait=0)
                >8 liqProcessLauncher::_execute(renderdl,   "R:/MyDocuments/maya/projects/default/rib/test_pl_type_liquidShader_con_colorr_perspShape.0001..rib","R:/MyDocuments/maya/projects/default/", wait=0)
        >4 liqRenderScript::addJob(job.title=test_pl_type_liquidShader_con_colorrFrame1,0)
          >5 liqRenderScript::popNextJobID()
        >4 liqRibTranslatorNew::postActions(defaultRenderLayer)
    >2 RendererMgr::test()
    >2 Renderer::closeLog()(but do nothing now)
    >2 RendererMgr::epilogue()
    >2 RendererMgr::uninstall()
      >3 ShaderMgr::clearValidConnection()
    >2 RendererMgr::unsetFactory()
