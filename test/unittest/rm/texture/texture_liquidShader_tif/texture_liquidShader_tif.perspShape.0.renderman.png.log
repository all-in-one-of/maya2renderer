>0 liqRibTranslator::doIt()-->if(checkSettings()==true)
  >1 RendererMgr::setFactory(renderman)
  >1 RendererMgr::install()
  >1 RendererMgr::prologue()
  >1 Renderer::openLog(R:/MyDocuments/maya/projects/default/rib/texture_liquidShader_tif.perspShape.1.renderman.png)(but do nothing now)
  >1 Renderer::canExport()
  >1 liqRibTranslatorNew::_doItNew(args,defaultRenderLayer)
    >2 liqRibTranslatorNew::_doItNewWithoutRenderScript(arg,defaultRenderLayer)
      >3 liqRibTranslator::verifyOutputDirectories()
        >4 liqRibTranslator::verifyResourceDir(RIB, rib, 0)
        >4 liqRibTranslator::verifyResourceDir(Texture, rmantex, 0)
        >4 liqRibTranslator::verifyResourceDir(Picture, rmanpix/, 0)
        >4 liqRibTranslator::verifyResourceDir(Temp Files, rmantmp/, 0)
      >3 liqRibTranslator::generateRenderScriptName()
      >3 liqRibTranslator::generateTempMayaSceneName()
      >3 tFrameScriptJobMgr::setCommonParameters(texture_liquidShader_tifFrame0)
      >3 liqRibTranslatorNew::processOneFrame(0, liqglo__)
        >4 liqRibTranslatorNew::buildJobs__()
          >5 liqShader::liqShader(liquidSurface11)
            >6 liqShaderFactory::getUniqueShaderHandler()
            >6 liqGetSloInfo::setShaderNode(liquidSurface11)
            >6 Renderer::getTextureExt()
          >5 liqShader::buildJobs()
            >6 liqShader::scanExpressions(liquidSurface11)
              >7 liqShader::processExpression(texname,*light)
                >8 removeRedundentExtsion(E:/dev/Autodesk/maya/myplugin/project/liquid_/test/unittest/rm/texture/texture_liquidShader_tif/check11.bmp.tif)
                >8 liqExpression::liqExpression([MakeTexture E:/dev/Autodesk/maya/myplugin/project/liquid_/test/unittest/rm/texture/texture_liquidShader_tif/check11.bmp],)
                >8 liqExpression::CalcValue()
                  >9 Renderer::getTextureExt()
                  >9 Renderer::getTextureExt()
          >5 liqShader::liqShader(liquidShader1)
            >6 liqShaderFactory::getUniqueShaderHandler()
            >6 liqGetSloInfo::setShaderNode(liquidShader1)
            >6 Renderer::getTextureExt()
          >5 liqShader::buildJobs()
            >6 liqShader::scanExpressions(liquidShader1)
              >7 liqShader::processExpression(texname,*light)
                >8 removeRedundentExtsion(E:/dev/Autodesk/maya/myplugin/project/liquid_/test/unittest/rm/texture/texture_liquidShader_tif/check11.png.tif)
                >8 liqExpression::liqExpression([MakeTexture E:/dev/Autodesk/maya/myplugin/project/liquid_/test/unittest/rm/texture/texture_liquidShader_tif/check11.png],)
                >8 liqExpression::CalcValue()
                  >9 Renderer::getTextureExt()
                  >9 Renderer::getTextureExt()
          >5 liqRibTranslatorNew::buildShadowJobs__()
            >6 tJobScriptMgr::buildShadowJob(thisJob___, 0)
            >6 tJobScriptMgr::buildShadowCameraJob(thisJob___, 0)
          >5 tRibCameraMgr::gatherDataForJob(liqglo___, ,jobList__,0,1)
          >5 liqRibTranslator::generateFileName(4,perspShape)
          >5 liqRibTranslator::generateFileName(5,perspShape)
            >6 liqRibTranslator::generateImageName(, job(perspShape)), 
        >4 liqRibTranslatorNew::calaculateSamplingTime(1)
        >4 liqRibTranslatorNew::scanScene__(1,0)
          >5 tJobScriptMgr::scanScene(1,0, htable__, count, returnStatus__)
            >6 liqRibHT::insert(|pointLight1|pointLightShape1,lframe,0,3,0,matrix,,-1)
              >7 liqRibHT::hash(|pointLight1|pointLightShape1,0)
              >7 liqRibHT::find(|pointLight1|pointLightShape1,|pointLight1|pointLightShape1,3)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|pointLight1|pointLightShape1,0,3,-1)
                >8 liqRibNode::parseVectorAttributes(pointLight1,,2)
                >8 liqRibNode::parseVectorAttributes(pointLight1,,3)
                >8 liqRibNode::parseVectorAttributes(pointLight1,,4)
                >8 liqRibNode::findShadingGroup(|pointLight1|pointLightShape1,3)
                >8 liqRibNode::findShader()
                >8 liqRibNode::findDisp()
                >8 liqRibNode::findVolume()
                >8 liqRibNode::getColor(&shader,&color)
                >8 liqRibNode::getOpacity(&shader,&color)
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|pointLight1|pointLightShape1,3)
                  >9 liqRibLightData::liqRibLightData(|pointLight1|pointLightShape1)
                    >10 liqRibData::addAdditionalSurfaceParameters(pointLightShape1)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 liqRibHT::insert(|pointLight2|pointLightShape2,lframe,0,3,1,matrix,,-1)
              >7 liqRibHT::hash(|pointLight2|pointLightShape2,1)
              >7 liqRibHT::find(|pointLight2|pointLightShape2,|pointLight2|pointLightShape2,3)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|pointLight2|pointLightShape2,0,3,-1)
                >8 liqRibNode::parseVectorAttributes(pointLight2,,2)
                >8 liqRibNode::parseVectorAttributes(pointLight2,,3)
                >8 liqRibNode::parseVectorAttributes(pointLight2,,4)
                >8 liqRibNode::findShadingGroup(|pointLight2|pointLightShape2,3)
                >8 liqRibNode::findShader()
                >8 liqRibNode::findDisp()
                >8 liqRibNode::findVolume()
                >8 liqRibNode::getColor(&shader,&color)
                >8 liqRibNode::getOpacity(&shader,&color)
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|pointLight2|pointLightShape2,3)
                  >9 liqRibLightData::liqRibLightData(|pointLight2|pointLightShape2)
                    >10 liqRibData::addAdditionalSurfaceParameters(pointLightShape2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
          >5 tLocatorMgr::scanScene(1,0,htable__,count__,returnStatus__)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibHT::insert(|pPlane2|pPlaneShape11,lframe,0,0,2,matrix,,-1)
              >7 liqRibHT::hash(|pPlane2|pPlaneShape11,2)
              >7 liqRibHT::find(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|pPlane2|pPlaneShape11,0,0,-1)
                >8 liqRibNode::parseVectorAttributes(pPlane2,,2)
                >8 liqRibNode::parseVectorAttributes(pPlane2,,3)
                >8 liqRibNode::parseVectorAttributes(pPlane2,,4)
                >8 liqRibNode::findShadingGroup(|pPlane2|pPlaneShape11,0)
                >8 liqRibNode::findShader()
                >8 liqRibNode::findDisp()
                >8 liqRibNode::findVolume()
                >8 liqRibNode::getColor(&shader,&color)
                >8 liqRibNode::getOpacity(&shader,&color)
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|pPlane2|pPlaneShape11,0)
                  >9 liqRibMeshData::liqRibMeshData(|pPlane2|pPlaneShape11)
                    >10 liqRibData::addAdditionalSurfaceParameters(pPlaneShape11)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibHT::insert(|pPlane9|pPlaneShape18,lframe,0,0,3,matrix,,-1)
              >7 liqRibHT::hash(|pPlane9|pPlaneShape18,3)
              >7 liqRibHT::find(|pPlane9|pPlaneShape18,|pPlane9|pPlaneShape18,0)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|pPlane9|pPlaneShape18,0,0,-1)
                >8 liqRibNode::parseVectorAttributes(pPlane9,,2)
                >8 liqRibNode::parseVectorAttributes(pPlane9,,3)
                >8 liqRibNode::parseVectorAttributes(pPlane9,,4)
                >8 liqRibNode::findShadingGroup(|pPlane9|pPlaneShape18,0)
                >8 liqRibNode::findShader()
                >8 liqRibNode::findDisp()
                >8 liqRibNode::findVolume()
                >8 liqRibNode::getColor(&shader,&color)
                >8 liqRibNode::getOpacity(&shader,&color)
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|pPlane9|pPlaneShape18,0)
                  >9 liqRibMeshData::liqRibMeshData(|pPlane9|pPlaneShape18)
                    >10 liqRibData::addAdditionalSurfaceParameters(pPlaneShape18)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
          >5 liqRibTranslatorNew::dealwithParticleInstancedObjects(0,1,4)
          >5 liqRibTranslatorNew::getCameraData(iter__,0)
            >6 liqRibTranslator::getCameraInfo(|persp|perspShape,)
              >7 liqRibTranslator::portFieldOfView(200,150,&horizontal,&vertical,&fnCamera)
                >8 liqRibTranslator::computeViewingFrustum(1.33333,,&left,&right,&bottom,&top,|persp|perspShape)
            >6 liqRibTranslator::getCameraFilmOffset(|persp|perspShape,)
            >6 liqRibTranslator::getCameraTransform(|persp|perspShape,)
        >4 liqRibTranslatorNew::doTextures(size=0)
          >5 rm::Renderer::doTextures(txtList.size()=0)
        >4 liqRibTranslatorNew::doShadows(size=0)
          >5 rm::Renderer::doShadows(shadowList_.size()=0)
        >4 Renderer::setRenderScriptFormatAndCompress(0,0)
          >5 Renderer::_RiOption_format_compress(0,0)
        >4 Renderer::isHeroPassReady(perspShape)
        >4 Renderer::HeroPassBegin(perspShape)
        >4 tHeroRibWriterMgr::write(liqglo___,perspShape,1,0)
          >5 liqRibTranslatorNew::ribPrologue__(perspShape)
            >6 Renderer::ribPrologue_begin(perspShape)
              >7 RiBegin_liq(R:/MyDocuments/maya/projects/default/rib/texture_liquidShader_tif_perspShape.0001..rib(strlen=86)
            >6 Renderer::ribPrologue_comment(2.3.5 (buildtime=20:51:12.30),R:/MyDocuments/maya/projects/default/texture_liquidShader_tif,yaoyansi,time)
            >6 Renderer::ribPrologue_options(perspShape)
              >7 Renderer::ribPrologue_writeSearthPath()
              >7 tHeroRibWriterMgr::ribPrologue_hider(0)
              >7 tHeroRibWriterMgr::ribPrologue_samples(4,4)
              >7 tHeroRibWriterMgr::ribPrologue_shadingrate(1)
              >7 tHeroRibWriterMgr::ribPrologue_filter(0,2,2)
              >7 tHeroRibWriterMgr::ribPrologue_pass(beauty)
          >5 liqRibTranslatorNew::framePrologue__(1,perspShape)
            >6 Renderer::framePrologue(1,perspShape)
              >7 tHeroRibWriterMgr::framePrologue_display(perspShape)
                >8 exportJobCamera(perspShape,,)
              >7 Renderer::framePrologue_camera(1,perspShape)
          >5 ShaderMgr::exportShaderGraph()
            >6 ConvertShadingNetwork::exportShaderGraph()
              >7 ConvertShadingNetwork::beforeExport()
              >7 ConvertShadingNetwork::__export()
                >8 ConvertShadingNetwork::canShadingGroupExported(liquidShader1SG)
                >8 Renderer::getValidShaderPlugsInShadingGroup()
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(liquidShader1SG,surfaceShader)
                  >9 ConvertShadingNetwork::canShaderExported(liquidShader1)
                  >9 ConvertShadingNetwork::exportShaderBegin(liquidShader1)
                  >9 ConvertShadingNetwork::convertShadingNetworkToRSL(liquidShader1,surfaceShader)
                    >10 Visitor::initShaderData(liquidShader1,surfaceShader)
                      >11 NodePlugConnectionMgr::setNodePlugMgr(...)
                      >11 NodePlugConnectionMgr::reset()
                    >10 ConvertShadingNetwork::getUpstreamConvertibleNodes(liquidShader1, nodes, numConnections)
                      >11 ConvertShadingNetwork::nodeIsConvertible(liquidShader1)
                        >12 ShaderMgr::hasShaderType(liquidShader)
                      >11 ShaderMgr::getValidConnection(liquidShader1)
                        >12 liqShaderFactory::getShader(liquidShader1)
                          >13 liqShaderFactory::getShader(liquidShader1)
                            >14 liqShader::liqShader(liquidShader1)
                              >15 liqShaderFactory::getUniqueShaderHandler()
                              >15 liqGetSloInfo::setShaderNode(liquidShader1)
                              >15 Renderer::getTextureExt()
                        >12 liqShader::getValidConnection(...)
                          >13 liqShader::getName()
                      >11 ConvertShadingNetwork::convertibleConnection(liquidShader1.texname)
                        >12 ConvertShadingNetwork::ensurePlugExists(liquidShader1.texname)
                      >11 ConvertShadingNetwork::convertibleConnection(liquidShader1.maptype)
                        >12 ConvertShadingNetwork::ensurePlugExists(liquidShader1.maptype)
                      >11 ConvertShadingNetwork::convertibleConnection(liquidShader1.maporigin)
                        >12 ConvertShadingNetwork::ensurePlugExists(liquidShader1.maporigin)
                      >11 ConvertShadingNetwork::convertibleConnection(liquidShader1.xaxis)
                        >12 ConvertShadingNetwork::ensurePlugExists(liquidShader1.xaxis)
                      >11 ConvertShadingNetwork::convertibleConnection(liquidShader1.yaxis)
                        >12 ConvertShadingNetwork::ensurePlugExists(liquidShader1.yaxis)
                      >11 ConvertShadingNetwork::convertibleConnection(liquidShader1.zaxis)
                        >12 ConvertShadingNetwork::ensurePlugExists(liquidShader1.zaxis)
                      >11 ConvertShadingNetwork::convertibleConnection(liquidShader1.s1)
                        >12 ConvertShadingNetwork::ensurePlugExists(liquidShader1.s1)
                      >11 ConvertShadingNetwork::convertibleConnection(liquidShader1.t1)
                        >12 ConvertShadingNetwork::ensurePlugExists(liquidShader1.t1)
                      >11 ConvertShadingNetwork::convertibleConnection(liquidShader1.s2)
                        >12 ConvertShadingNetwork::ensurePlugExists(liquidShader1.s2)
                      >11 ConvertShadingNetwork::convertibleConnection(liquidShader1.t2)
                        >12 ConvertShadingNetwork::ensurePlugExists(liquidShader1.t2)
                      >11 ConvertShadingNetwork::convertibleConnection(liquidShader1.s3)
                        >12 ConvertShadingNetwork::ensurePlugExists(liquidShader1.s3)
                      >11 ConvertShadingNetwork::convertibleConnection(liquidShader1.t3)
                        >12 ConvertShadingNetwork::ensurePlugExists(liquidShader1.t3)
                      >11 ConvertShadingNetwork::convertibleConnection(liquidShader1.s4)
                        >12 ConvertShadingNetwork::ensurePlugExists(liquidShader1.s4)
                      >11 ConvertShadingNetwork::convertibleConnection(liquidShader1.t4)
                        >12 ConvertShadingNetwork::ensurePlugExists(liquidShader1.t4)
                      >11 ConvertShadingNetwork::convertibleConnection(liquidShader1.Ka)
                        >12 ConvertShadingNetwork::ensurePlugExists(liquidShader1.Ka)
                      >11 ConvertShadingNetwork::convertibleConnection(liquidShader1.Kd)
                        >12 ConvertShadingNetwork::ensurePlugExists(liquidShader1.Kd)
                      >11 ConvertShadingNetwork::convertibleConnection(liquidShader1.Ks)
                        >12 ConvertShadingNetwork::ensurePlugExists(liquidShader1.Ks)
                      >11 ConvertShadingNetwork::convertibleConnection(liquidShader1.roughness)
                        >12 ConvertShadingNetwork::ensurePlugExists(liquidShader1.roughness)
                      >11 ConvertShadingNetwork::convertibleConnection(liquidShader1.specularcolor)
                        >12 ConvertShadingNetwork::ensurePlugExists(liquidShader1.specularcolor)
                    >10 Visitor::preOutput(liquidShader1)
                    >10 Visitor::outputBegin(liquidShader1), open shader file
                      >11 getShaderFilePath_SRC(liquidShader1)
                        >12 getShaderFilePath_NoExt(liquidShader1)
                      >11 Visitor::getSurfaceShaderAOVOutputParametersString()
                      >11 Visitor::defineAOVVariables(liquidShader1)
                    >10 ConvertShadingNetwork::traverseGraphAndOutputNodeFunctions( nodes, numConnections)
                      >11 Visitor::outputUpstreamShader(liquidShader1)
                        >12 ShaderOutputVisitor::_outputUpstreamShader(liquidShader1,liquidShader)
                          >13 Visitor::visit_liquidShader(liquidShader1)
                            >14 liqShaderFactory::getShader(liquidShader1)
                              >15 liqShaderFactory::getShader(liquidShader1)
                            >14 liqShader::getName()
                            >14 liqShader::getShaderFileName()
                            >14 OutputHelper::addInclude(E:/dev/Autodesk/maya/myplugin/project/liquid_/2.3.3/lib/shaders/prman13.5/texmap.impl)
                            >14 OutputHelper::beginRSL(liquidShader1)
                            >14 ShaderMgr::convertibleConnection(liquidShader1.texname)
                              >15 ConvertShadingNetwork::convertibleConnection(liquidShader1.texname)
                                >16 ConvertShadingNetwork::ensurePlugExists(liquidShader1.texname)
                            >14 Renderer::getTextureExt()
                            >14 NodePlugInfo::add(liquidShader1,texname,string)
                              >15 NodePlug::add(texname, string)
                            >14 ShaderMgr::convertibleConnection(liquidShader1.maptype)
                              >15 ConvertShadingNetwork::convertibleConnection(liquidShader1.maptype)
                                >16 ConvertShadingNetwork::ensurePlugExists(liquidShader1.maptype)
                            >14 NodePlugInfo::add(liquidShader1,maptype,float)
                              >15 NodePlug::add(maptype, float)
                            >14 ShaderMgr::convertibleConnection(liquidShader1.maporigin)
                              >15 ConvertShadingNetwork::convertibleConnection(liquidShader1.maporigin)
                                >16 ConvertShadingNetwork::ensurePlugExists(liquidShader1.maporigin)
                            >14 NodePlugInfo::add(liquidShader1,maporigin,point)
                              >15 NodePlug::add(maporigin, point)
                            >14 ShaderMgr::convertibleConnection(liquidShader1.xaxis)
                              >15 ConvertShadingNetwork::convertibleConnection(liquidShader1.xaxis)
                                >16 ConvertShadingNetwork::ensurePlugExists(liquidShader1.xaxis)
                            >14 NodePlugInfo::add(liquidShader1,xaxis,point)
                              >15 NodePlug::add(xaxis, point)
                            >14 ShaderMgr::convertibleConnection(liquidShader1.yaxis)
                              >15 ConvertShadingNetwork::convertibleConnection(liquidShader1.yaxis)
                                >16 ConvertShadingNetwork::ensurePlugExists(liquidShader1.yaxis)
                            >14 NodePlugInfo::add(liquidShader1,yaxis,point)
                              >15 NodePlug::add(yaxis, point)
                            >14 ShaderMgr::convertibleConnection(liquidShader1.zaxis)
                              >15 ConvertShadingNetwork::convertibleConnection(liquidShader1.zaxis)
                                >16 ConvertShadingNetwork::ensurePlugExists(liquidShader1.zaxis)
                            >14 NodePlugInfo::add(liquidShader1,zaxis,point)
                              >15 NodePlug::add(zaxis, point)
                            >14 ShaderMgr::convertibleConnection(liquidShader1.s1)
                              >15 ConvertShadingNetwork::convertibleConnection(liquidShader1.s1)
                                >16 ConvertShadingNetwork::ensurePlugExists(liquidShader1.s1)
                            >14 NodePlugInfo::add(liquidShader1,s1,float)
                              >15 NodePlug::add(s1, float)
                            >14 ShaderMgr::convertibleConnection(liquidShader1.t1)
                              >15 ConvertShadingNetwork::convertibleConnection(liquidShader1.t1)
                                >16 ConvertShadingNetwork::ensurePlugExists(liquidShader1.t1)
                            >14 NodePlugInfo::add(liquidShader1,t1,float)
                              >15 NodePlug::add(t1, float)
                            >14 ShaderMgr::convertibleConnection(liquidShader1.s2)
                              >15 ConvertShadingNetwork::convertibleConnection(liquidShader1.s2)
                                >16 ConvertShadingNetwork::ensurePlugExists(liquidShader1.s2)
                            >14 NodePlugInfo::add(liquidShader1,s2,float)
                              >15 NodePlug::add(s2, float)
                            >14 ShaderMgr::convertibleConnection(liquidShader1.t2)
                              >15 ConvertShadingNetwork::convertibleConnection(liquidShader1.t2)
                                >16 ConvertShadingNetwork::ensurePlugExists(liquidShader1.t2)
                            >14 NodePlugInfo::add(liquidShader1,t2,float)
                              >15 NodePlug::add(t2, float)
                            >14 ShaderMgr::convertibleConnection(liquidShader1.s3)
                              >15 ConvertShadingNetwork::convertibleConnection(liquidShader1.s3)
                                >16 ConvertShadingNetwork::ensurePlugExists(liquidShader1.s3)
                            >14 NodePlugInfo::add(liquidShader1,s3,float)
                              >15 NodePlug::add(s3, float)
                            >14 ShaderMgr::convertibleConnection(liquidShader1.t3)
                              >15 ConvertShadingNetwork::convertibleConnection(liquidShader1.t3)
                                >16 ConvertShadingNetwork::ensurePlugExists(liquidShader1.t3)
                            >14 NodePlugInfo::add(liquidShader1,t3,float)
                              >15 NodePlug::add(t3, float)
                            >14 ShaderMgr::convertibleConnection(liquidShader1.s4)
                              >15 ConvertShadingNetwork::convertibleConnection(liquidShader1.s4)
                                >16 ConvertShadingNetwork::ensurePlugExists(liquidShader1.s4)
                            >14 NodePlugInfo::add(liquidShader1,s4,float)
                              >15 NodePlug::add(s4, float)
                            >14 ShaderMgr::convertibleConnection(liquidShader1.t4)
                              >15 ConvertShadingNetwork::convertibleConnection(liquidShader1.t4)
                                >16 ConvertShadingNetwork::ensurePlugExists(liquidShader1.t4)
                            >14 NodePlugInfo::add(liquidShader1,t4,float)
                              >15 NodePlug::add(t4, float)
                            >14 ShaderMgr::convertibleConnection(liquidShader1.Ka)
                              >15 ConvertShadingNetwork::convertibleConnection(liquidShader1.Ka)
                                >16 ConvertShadingNetwork::ensurePlugExists(liquidShader1.Ka)
                            >14 NodePlugInfo::add(liquidShader1,Ka,float)
                              >15 NodePlug::add(Ka, float)
                            >14 ShaderMgr::convertibleConnection(liquidShader1.Kd)
                              >15 ConvertShadingNetwork::convertibleConnection(liquidShader1.Kd)
                                >16 ConvertShadingNetwork::ensurePlugExists(liquidShader1.Kd)
                            >14 NodePlugInfo::add(liquidShader1,Kd,float)
                              >15 NodePlug::add(Kd, float)
                            >14 ShaderMgr::convertibleConnection(liquidShader1.Ks)
                              >15 ConvertShadingNetwork::convertibleConnection(liquidShader1.Ks)
                                >16 ConvertShadingNetwork::ensurePlugExists(liquidShader1.Ks)
                            >14 NodePlugInfo::add(liquidShader1,Ks,float)
                              >15 NodePlug::add(Ks, float)
                            >14 ShaderMgr::convertibleConnection(liquidShader1.roughness)
                              >15 ConvertShadingNetwork::convertibleConnection(liquidShader1.roughness)
                                >16 ConvertShadingNetwork::ensurePlugExists(liquidShader1.roughness)
                            >14 NodePlugInfo::add(liquidShader1,roughness,float)
                              >15 NodePlug::add(roughness, float)
                            >14 ShaderMgr::convertibleConnection(liquidShader1.specularcolor)
                              >15 ConvertShadingNetwork::convertibleConnection(liquidShader1.specularcolor)
                                >16 ConvertShadingNetwork::ensurePlugExists(liquidShader1.specularcolor)
                            >14 NodePlugInfo::add(liquidShader1,specularcolor,color)
                              >15 NodePlug::add(specularcolor, color)
                            >14 OutputHelper::endRSL()
                      >11 ShaderMgr::getValidConnection(liquidShader1)
                        >12 liqShaderFactory::getShader(liquidShader1)
                          >13 liqShaderFactory::getShader(liquidShader1)
                        >12 liqShader::getValidConnection(...)
                          >13 liqShader::getName()
                      >11 ConvertShadingNetwork::decrementDownstreamConnections(liquidShader1, nodes, numConnections, validConnections)
                      >11 ConvertShadingNetwork::getNodeVariables(liquidShader1, validConnections,  inputSrc, inputDes, outputSrc)
                        >12 ConvertShadingNetwork::convertibleConnection(liquidShader1.texname)
                          >13 ConvertShadingNetwork::ensurePlugExists(liquidShader1.texname)
                        >12 ConvertShadingNetwork::convertibleConnection(liquidShader1.maptype)
                          >13 ConvertShadingNetwork::ensurePlugExists(liquidShader1.maptype)
                        >12 ConvertShadingNetwork::convertibleConnection(liquidShader1.maporigin)
                          >13 ConvertShadingNetwork::ensurePlugExists(liquidShader1.maporigin)
                        >12 ConvertShadingNetwork::convertibleConnection(liquidShader1.xaxis)
                          >13 ConvertShadingNetwork::ensurePlugExists(liquidShader1.xaxis)
                        >12 ConvertShadingNetwork::convertibleConnection(liquidShader1.yaxis)
                          >13 ConvertShadingNetwork::ensurePlugExists(liquidShader1.yaxis)
                        >12 ConvertShadingNetwork::convertibleConnection(liquidShader1.zaxis)
                          >13 ConvertShadingNetwork::ensurePlugExists(liquidShader1.zaxis)
                        >12 ConvertShadingNetwork::convertibleConnection(liquidShader1.s1)
                          >13 ConvertShadingNetwork::ensurePlugExists(liquidShader1.s1)
                        >12 ConvertShadingNetwork::convertibleConnection(liquidShader1.t1)
                          >13 ConvertShadingNetwork::ensurePlugExists(liquidShader1.t1)
                        >12 ConvertShadingNetwork::convertibleConnection(liquidShader1.s2)
                          >13 ConvertShadingNetwork::ensurePlugExists(liquidShader1.s2)
                        >12 ConvertShadingNetwork::convertibleConnection(liquidShader1.t2)
                          >13 ConvertShadingNetwork::ensurePlugExists(liquidShader1.t2)
                        >12 ConvertShadingNetwork::convertibleConnection(liquidShader1.s3)
                          >13 ConvertShadingNetwork::ensurePlugExists(liquidShader1.s3)
                        >12 ConvertShadingNetwork::convertibleConnection(liquidShader1.t3)
                          >13 ConvertShadingNetwork::ensurePlugExists(liquidShader1.t3)
                        >12 ConvertShadingNetwork::convertibleConnection(liquidShader1.s4)
                          >13 ConvertShadingNetwork::ensurePlugExists(liquidShader1.s4)
                        >12 ConvertShadingNetwork::convertibleConnection(liquidShader1.t4)
                          >13 ConvertShadingNetwork::ensurePlugExists(liquidShader1.t4)
                        >12 ConvertShadingNetwork::convertibleConnection(liquidShader1.Ka)
                          >13 ConvertShadingNetwork::ensurePlugExists(liquidShader1.Ka)
                        >12 ConvertShadingNetwork::convertibleConnection(liquidShader1.Kd)
                          >13 ConvertShadingNetwork::ensurePlugExists(liquidShader1.Kd)
                        >12 ConvertShadingNetwork::convertibleConnection(liquidShader1.Ks)
                          >13 ConvertShadingNetwork::ensurePlugExists(liquidShader1.Ks)
                        >12 ConvertShadingNetwork::convertibleConnection(liquidShader1.roughness)
                          >13 ConvertShadingNetwork::ensurePlugExists(liquidShader1.roughness)
                        >12 ConvertShadingNetwork::convertibleConnection(liquidShader1.specularcolor)
                          >13 ConvertShadingNetwork::ensurePlugExists(liquidShader1.specularcolor)
                      >11 Visitor::addShaderMethodBody(liquidShader1,,,)
                        >12 NodePlugConnectionMgr::add(liquidShader1)
                    >10 ConvertShadingNetwork::outputShaderMethod()
                      >11 Visitor::outputShaderMethod()
                        >12 NodePlugConnectionMgr::cookRSLFunctionCallString(0)
                        >12 NodePlugConnectionMgr::log(0)
                    >10 Visitor::outputEnd(), close shader file
                    >10 Visitor::postOutput()
                      >11 getShaderFilePath_SLO(liquidShader1)
                        >12 getShaderFilePath_NoExt(liquidShader1)
                      >11 getShaderFilePath_SRC(liquidShader1)
                        >12 getShaderFilePath_NoExt(liquidShader1)
                  >9 ConvertShadingNetwork::exportShaderEnd(liquidShader1)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(liquidShader1SG,displacementShader)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(liquidShader1SG,volumeShader)
                >8 ConvertShadingNetwork::exportShadingGroupBegin(liquidShader1SG)
                >8 ConvertShadingNetwork::outputShadingGroup(liquidShader1SG)
                  >9 Visitor::outputShadingGroup(liquidShader1SG)
                    >10 Visitor::outputShadingGroup(liquidShader1SG,0)
                >8 ConvertShadingNetwork::exportShadingGroupEnd(liquidShader1SG)
                >8 ConvertShadingNetwork::canShadingGroupExported(liquidSurface16SG)
                >8 Renderer::getValidShaderPlugsInShadingGroup()
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(liquidSurface16SG,surfaceShader)
                  >9 ConvertShadingNetwork::canShaderExported(liquidSurface11)
                  >9 ConvertShadingNetwork::exportShaderBegin(liquidSurface11)
                  >9 liqShaderFactory::getShader(liquidSurface11)
                    >10 liqShaderFactory::getShader(liquidSurface11)
                      >11 liqShader::liqShader(liquidSurface11)
                        >12 liqShaderFactory::getUniqueShaderHandler()
                        >12 liqGetSloInfo::setShaderNode(liquidSurface11)
                        >12 Renderer::getTextureExt()
                  >9 liqShader::write()
                    >10 liqShader::getName()
                    >10 Renderer::shader_UserDefinedShader(liquidSurface11)
                      >11 liqShader::getName()
                      >11 Renderer::shader_UserDefinedShader(liquidSurface11,...)
                        >12 liqShader::getShaderFileName()
                        >12 liqShader::getName()
                        >12 Renderer::shader_surface(liquidSurface11, tokenPointerArray)
                          >13 liqShader::getShaderFileName()
                  >9 ConvertShadingNetwork::exportShaderEnd(liquidSurface11)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(liquidSurface16SG,displacementShader)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(liquidSurface16SG,volumeShader)
                >8 ConvertShadingNetwork::exportShadingGroupBegin(liquidSurface16SG)
                >8 ConvertShadingNetwork::outputShadingGroup(liquidSurface16SG)
                  >9 Visitor::outputShadingGroup(liquidSurface16SG)
                    >10 Visitor::outputShadingGroup(liquidSurface16SG,0)
                >8 ConvertShadingNetwork::exportShadingGroupEnd(liquidSurface16SG)
              >7  ConvertShadingNetwork::afterExport()
          >5 liqRibTranslatorNew::worldPrologue__(perspShape)
            >6 Renderer::worldPrologue(perspShape)
          >5 liqRibTranslatorNew::lightBlock__(perspShape)
            >6 Renderer::writeLight_pre(|pointLight1|pointLightShape1,perspShape)
            >6 liqRibObj::writeObject(,perspShape,0)
              >7 liqRibLightData::write(,job=perspShape,0)
                >8 liqRibData::getFullPathName()
                >8 Renderer::write(|pointLight1|pointLightShape1,,perspShape,ref=0)
                  >9 Helper::RiBeginRef()
                  >9 liqRibData::getFullPathName()
                  >9 rm_writeLightData.cpp::_write(|pointLight1|pointLightShape1,perspShape,...)
                    >10 Renderer::exportPointLight(pointlight,pointLightShape1,...)
                  >9 Helper::RiEndRef()
            >6 Renderer::writeLight_post(|pointLight1|pointLightShape1,perspShape)
            >6 Renderer::writeLight_pre(|pointLight2|pointLightShape2,perspShape)
            >6 liqRibObj::writeObject(,perspShape,0)
              >7 liqRibLightData::write(,job=perspShape,0)
                >8 liqRibData::getFullPathName()
                >8 Renderer::write(|pointLight2|pointLightShape2,,perspShape,ref=0)
                  >9 Helper::RiBeginRef()
                  >9 liqRibData::getFullPathName()
                  >9 rm_writeLightData.cpp::_write(|pointLight2|pointLightShape2,perspShape,...)
                    >10 Renderer::exportPointLight(pointlight,pointLightShape2,...)
                  >9 Helper::RiEndRef()
            >6 Renderer::writeLight_post(|pointLight2|pointLightShape2,perspShape)
          >5 liqRibTranslatorNew::coordSysBlock__(perspShape)
            >6 Renderer::coordSysBlock__(perspShape)
          >5 liqRibTranslatorNew::objectBlock__(perspShape)
            >6 liqRibTranslatorNew::objectBlock_data(perspShape)
              >7 liqRibTranslatorNew::getShadowSetObject(perspShape)
              >7 liqRibTranslatorNew::oneObjectBlock_data(|pPlane2|pPlaneShape11,perspShape)
                >8 Renderer::exportOneObject_data(|pPlane2|pPlaneShape11,perspShape)
                  >9 Renderer::_writeObject(|pPlane2|pPlaneShape11,perspShape,0,0,0)
                    >10 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.1.rib,perspShape,0)
                      >11 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.1.rib,job=perspShape,0)
                        >12 liqRibData::getFullPathName()
                        >12 Renderer::write(|pPlane2|pPlaneShape11,R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.1.rib,perspShape,ref=0)
              >7 liqRibTranslatorNew::oneObjectBlock_data(|pPlane9|pPlaneShape18,perspShape)
                >8 Renderer::exportOneObject_data(|pPlane9|pPlaneShape18,perspShape)
                  >9 Renderer::_writeObject(|pPlane9|pPlaneShape18,perspShape,0,0,0)
                    >10 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pPlane9_pPlaneShape18.1.rib,perspShape,0)
                      >11 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pPlane9_pPlaneShape18.1.rib,job=perspShape,0)
                        >12 liqRibData::getFullPathName()
                        >12 Renderer::write(|pPlane9|pPlaneShape18,R:/MyDocuments/maya/projects/default/rib/_pPlane9_pPlaneShape18.1.rib,perspShape,ref=0)
            >6 liqRibTranslatorNew::objectBlock_reference(perspShape)
              >7 Renderer::objectBlock_reference_begin()
              >7 liqRibTranslatorNew::preGeometryMel()
                >8 Renderer::preGeometryMel()
              >7 liqRibTranslatorNew::getShadowSetObject(perspShape)
              >7 liqRibTranslatorNew::oneObjectBlock_reference(|pPlane2|pPlaneShape11,perspShape)
                >8 Renderer::oneObjectBlock_reference_attribute_begin(|pPlane2|pPlaneShape11,perspShape)
                >8 Renderer::oneObjectBlock_reference_attribute_block0(|pPlane2|pPlaneShape11,perspShape)
                >8 liqRibTranslatorNew::tRiIlluminate(perspShape,|pPlane2|pPlaneShape11)
                  >9 Renderer::exportLightLinks(perspShape,|pPlane2|pPlaneShape11,lightedByWhichLightShapes.size=2)
                >8 liqRibTranslatorNew::checkSurfaceShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                >8 liqRibTranslatorNew::checkDisplacementShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                >8 liqRibTranslatorNew::checkVolumeShader(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,,,)
                >8 Renderer::oneObjectBlock_reference_attribute_block1(|pPlane2|pPlaneShape11,perspShape)
                  >9 objectNonShadowAttribute(|pPlane2|pPlaneShape11)
                    >10 liqRibNode::writeUserAttributes()
                      >11 Renderer::writeUserAttributes()
                >8 liqRibTranslatorNew::writeShader_(1,|pPlane2|pPlaneShape11,v=0,s=1,c=0,,|pPlane2|pPlaneShape11,perspShape)
                  >9 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_RegularShader(|pPlane2|pPlaneShape11,perspShape)
                    >10 liqShaderFactory::getShader(liquidShader1)
                    >10 liqShader::getName()
                    >10 Renderer::F1(|pPlane2|pPlaneShape11,liquidShader1)
                >8 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|pPlane2|pPlaneShape11)
                  >9 Visitor::outputShadingGroup(liquidShader1SG,1)
                    >10 _outputShadingGroup(liquidShader1SG)
                      >11 getShaderFilePath_NoExt(liquidShader1)
                >8 Renderer::exportOneObject_reference(|pPlane2|pPlaneShape11,perspShape)
                  >9 liqRibTranslatorNew::preTransformMel
                  >9 MaxtrixMotionBlur(|pPlane2|pPlaneShape11,|pPlane2|pPlaneShape11,0)
                  >9 liqRibTranslatorNew::postTransformMel(kTransform)
                  >9 liqRibTranslatorNew::preShapeMel(kTransform)
                  >9 Renderer::_writeObject(|pPlane2|pPlaneShape11,perspShape,0,0,1)
                    >10 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.1.rib,perspShape,1)
                      >11 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.1.rib,job=perspShape,1)
                        >12 liqRibData::getFullPathName()
                        >12 Renderer::write(|pPlane2|pPlaneShape11,R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape11.1.rib,perspShape,ref=1)
                          >13 liqRibData::getFullPathName()
                          >13 rm_writeMeshData.cpp::_write(|pPlane2|pPlaneShape11,perspShape)
                  >9 liqRibTranslatorNew::postShapeMel(kTransform)
                >8 Renderer::oneObjectBlock_reference_attribute_end(|pPlane2|pPlaneShape11,perspShape)
              >7 liqRibTranslatorNew::oneObjectBlock_reference(|pPlane9|pPlaneShape18,perspShape)
                >8 Renderer::oneObjectBlock_reference_attribute_begin(|pPlane9|pPlaneShape18,perspShape)
                >8 Renderer::oneObjectBlock_reference_attribute_block0(|pPlane9|pPlaneShape18,perspShape)
                >8 liqRibTranslatorNew::tRiIlluminate(perspShape,|pPlane9|pPlaneShape18)
                  >9 Renderer::exportLightLinks(perspShape,|pPlane9|pPlaneShape18,lightedByWhichLightShapes.size=2)
                >8 liqRibTranslatorNew::checkSurfaceShader(|pPlane9|pPlaneShape18,|pPlane9|pPlaneShape18,,,)
                >8 liqRibTranslatorNew::checkDisplacementShader(|pPlane9|pPlaneShape18,|pPlane9|pPlaneShape18,,,)
                >8 liqRibTranslatorNew::checkVolumeShader(|pPlane9|pPlaneShape18,|pPlane9|pPlaneShape18,,,)
                >8 Renderer::oneObjectBlock_reference_attribute_block1(|pPlane9|pPlaneShape18,perspShape)
                  >9 objectNonShadowAttribute(|pPlane9|pPlaneShape18)
                    >10 liqRibNode::writeUserAttributes()
                      >11 Renderer::writeUserAttributes()
                >8 liqRibTranslatorNew::writeShader_(1,|pPlane9|pPlaneShape18,v=0,s=1,c=0,,|pPlane9|pPlaneShape18,perspShape)
                  >9 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_RegularShader(|pPlane9|pPlaneShape18,perspShape)
                    >10 liqShaderFactory::getShader(liquidSurface11)
                    >10 liqShader::getName()
                    >10 Renderer::F1(|pPlane9|pPlaneShape18,liquidSurface11)
                >8 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|pPlane9|pPlaneShape18)
                  >9 Visitor::outputShadingGroup(liquidSurface16SG,1)
                    >10 _outputShadingGroup(liquidSurface16SG)
                      >11 liqShaderFactory::getShader(liquidSurface11)
                        >12 liqShaderFactory::getShader(liquidSurface11)
                      >11 liqShader::write()
                        >12 liqShader::getName()
                        >12 Renderer::shader_UserDefinedShader(liquidSurface11)
                          >13 liqShader::getName()
                          >13 Renderer::shader_UserDefinedShader(liquidSurface11,...)
                            >14 liqShader::getShaderFileName()
                            >14 liqShader::getName()
                            >14 Renderer::shader_surface(liquidSurface11, tokenPointerArray)
                              >15 liqShader::getShaderFileName()
                >8 Renderer::exportOneObject_reference(|pPlane9|pPlaneShape18,perspShape)
                  >9 liqRibTranslatorNew::preTransformMel
                  >9 MaxtrixMotionBlur(|pPlane9|pPlaneShape18,|pPlane9|pPlaneShape18,0)
                  >9 liqRibTranslatorNew::postTransformMel(kTransform)
                  >9 liqRibTranslatorNew::preShapeMel(kTransform)
                  >9 Renderer::_writeObject(|pPlane9|pPlaneShape18,perspShape,0,0,1)
                    >10 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pPlane9_pPlaneShape18.1.rib,perspShape,1)
                      >11 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pPlane9_pPlaneShape18.1.rib,job=perspShape,1)
                        >12 liqRibData::getFullPathName()
                        >12 Renderer::write(|pPlane9|pPlaneShape18,R:/MyDocuments/maya/projects/default/rib/_pPlane9_pPlaneShape18.1.rib,perspShape,ref=1)
                          >13 liqRibData::getFullPathName()
                          >13 rm_writeMeshData.cpp::_write(|pPlane9|pPlaneShape18,perspShape)
                  >9 liqRibTranslatorNew::postShapeMel(kTransform)
                >8 Renderer::oneObjectBlock_reference_attribute_end(|pPlane9|pPlaneShape18,perspShape)
              >7 Renderer::objectBlock_reference_end()
          >5 liqRibTranslatorNew::worldEpilogue__()
            >6 liqRibTranslator::worldEpilogue()
              >7 Renderer::worldEpilogue()
          >5 liqRibTranslatorNew::frameEpilogue__(1)
            >6 Renderer::frameEpilogue(1)
          >5 liqRibTranslatorNew::ribEpilogue__(perspShape)
            >6 Renderer::ribPrologue_end(perspShape)
        >4 Renderer::HeroPassEnd(perspShape)
          >5 rm::Renderer::renderAll_local(R:/MyDocuments/maya/projects/default/rib/texture_liquidShader_tif_perspShape.0001..rib)
            >6 liqProcessLauncher::_execute(renderdl,   "R:/MyDocuments/maya/projects/default/rib/texture_liquidShader_tif_perspShape.0001..rib","R:/MyDocuments/maya/projects/default/", wait=0)
      >3 liqRenderScript::addJob(job.title=texture_liquidShader_tifFrame0,0)
        >4 liqRenderScript::popNextJobID()
      >3 liqRibTranslatorNew::postActions(defaultRenderLayer)
  >1 RendererMgr::test()
  >1 Renderer::closeLog()(but do nothing now)
  >1 RendererMgr::epilogue()
  >1 RendererMgr::uninstall()
  >1 RendererMgr::unsetFactory()
