  >1 liqRibTranslator::doIt()-->if(checkSettings()==true)
    >2 RendererMgr::setFactory(renderman)
    >2 RendererMgr::install()
      >3 ShaderMgr::setValidConnection()
      >3 ShaderMgr::getShaderConnectionMap()
      >3 RNodeVisitorMgr::setValidConnection(...)
        >4 FlatNodeVisitor::setValidConnection(...)
        >4 OccLightNodeVisitor::setValidConnection(...)
        >4 PhysicalsunNodeVisitor::setValidConnection(...)
    >2 RendererMgr::prologue()
    >2 Renderer::openLog(R:/MyDocuments/maya/projects/default/rib/stereo_camera.stereoCameraCenterCamShape.1.renderman.tif)(but do nothing now)
    >2 Renderer::canExport()
    >2 liqRibTranslatorNew::_doItNew(args,defaultRenderLayer)
      >3 liqRibTranslatorNew::_doItNewWithoutRenderScript(arg,defaultRenderLayer)
        >4 liqRibTranslator::verifyOutputDirectories()
          >5 liqRibTranslator::verifyResourceDir(RIB, rib, 0)
          >5 liqRibTranslator::verifyResourceDir(Texture, rmantex, 0)
          >5 liqRibTranslator::verifyResourceDir(Picture, rmanpix/, 0)
          >5 liqRibTranslator::verifyResourceDir(Temp Files, rmantmp/, 0)
        >4 liqRibTranslator::generateRenderScriptName()
        >4 liqRibTranslator::generateTempMayaSceneName()
        >4 tFrameScriptJobMgr::setCommonParameters(stereo_cameraFrame0)
        >4 liqRibTranslatorNew::processOneFrame(0, liqglo__)
          >5 liqRibTranslatorNew::buildJobs__()
            >6 liqRibTranslatorNew::buildShadowJobs__()
              >7 tLightMgr::buildShadowJob(thisJob___, 0)
              >7 tLightMgr::buildShadowCameraJob(thisJob___, 0)
            >6 tRibCameraMgr::gatherDataForJob(liqglo___, ,jobList__,0,1)
            >6 liqRibTranslator::generateFileName(4,stereoCameraCenterCamShape)
            >6 liqRibTranslator::generateFileName(5,stereoCameraCenterCamShape)
              >7 liqRibTranslator::generateImageName(, job(stereoCameraCenterCamShape)), 
          >5 liqRibTranslatorNew::calaculateSamplingTime(1)
          >5 liqRibTranslatorNew::scanScene__(1,0)
            >6 tLightMgr::scanScene(1,0, htable__, count, returnStatus__)
              >7 liqRibHT::insert(|pointLight1|pointLightShape1,lframe,0,3,0,matrix,,-1)
                >8 liqRibHT::hash(|pointLight1|pointLightShape1,0)
                >8 liqRibHT::find(|pointLight1|pointLightShape1,|pointLight1|pointLightShape1,3)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pointLight1|pointLightShape1,0,3,-1)
                  >9 liqRibNode::parseVectorAttributes(pointLight1,,2)
                  >9 liqRibNode::parseVectorAttributes(pointLight1,,3)
                  >9 liqRibNode::parseVectorAttributes(pointLight1,,4)
                  >9 liqRibNode::findShadingGroup(|pointLight1|pointLightShape1,3)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pointLight1|pointLightShape1,3)
                    >10 liqRibLightData::liqRibLightData(|pointLight1|pointLightShape1)
                      >11 liqRibData::addAdditionalSurfaceParameters(pointLightShape1)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
              >7 liqRibHT::insert(|pointLight2|pointLightShape2,lframe,0,3,1,matrix,,-1)
                >8 liqRibHT::hash(|pointLight2|pointLightShape2,1)
                >8 liqRibHT::find(|pointLight2|pointLightShape2,|pointLight2|pointLightShape2,3)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pointLight2|pointLightShape2,0,3,-1)
                  >9 liqRibNode::parseVectorAttributes(pointLight2,,2)
                  >9 liqRibNode::parseVectorAttributes(pointLight2,,3)
                  >9 liqRibNode::parseVectorAttributes(pointLight2,,4)
                  >9 liqRibNode::findShadingGroup(|pointLight2|pointLightShape2,3)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pointLight2|pointLightShape2,3)
                    >10 liqRibLightData::liqRibLightData(|pointLight2|pointLightShape2)
                      >11 liqRibData::addAdditionalSurfaceParameters(pointLightShape2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 tLocatorMgr::scanScene(1,0,htable__,count__,returnStatus__)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
              >7 liqRibHT::insert(|persp|perspShape,lframe,0,0,2,matrix,,-1)
                >8 liqRibHT::hash(|persp|perspShape,2)
                >8 liqRibHT::find(|persp|perspShape,|persp|perspShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|persp|perspShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(persp,,2)
                  >9 liqRibNode::parseVectorAttributes(persp,,3)
                  >9 liqRibNode::parseVectorAttributes(persp,,4)
                  >9 liqRibNode::findShadingGroup(|persp|perspShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|persp|perspShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
              >7 liqRibHT::insert(|top|topShape,lframe,0,0,3,matrix,,-1)
                >8 liqRibHT::hash(|top|topShape,3)
                >8 liqRibHT::find(|top|topShape,|top|topShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|top|topShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(top,,2)
                  >9 liqRibNode::parseVectorAttributes(top,,3)
                  >9 liqRibNode::parseVectorAttributes(top,,4)
                  >9 liqRibNode::findShadingGroup(|top|topShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|top|topShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
              >7 liqRibHT::insert(|front|frontShape,lframe,0,0,4,matrix,,-1)
                >8 liqRibHT::hash(|front|frontShape,4)
                >8 liqRibHT::find(|front|frontShape,|front|frontShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|front|frontShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(front,,2)
                  >9 liqRibNode::parseVectorAttributes(front,,3)
                  >9 liqRibNode::parseVectorAttributes(front,,4)
                  >9 liqRibNode::findShadingGroup(|front|frontShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|front|frontShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
              >7 liqRibHT::insert(|side|sideShape,lframe,0,0,5,matrix,,-1)
                >8 liqRibHT::hash(|side|sideShape,5)
                >8 liqRibHT::find(|side|sideShape,|side|sideShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|side|sideShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(side,,2)
                  >9 liqRibNode::parseVectorAttributes(side,,3)
                  >9 liqRibNode::parseVectorAttributes(side,,4)
                  >9 liqRibNode::findShadingGroup(|side|sideShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|side|sideShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
              >7 liqRibHT::insert(|pCube1|pCubeShape1,lframe,0,0,6,matrix,,-1)
                >8 liqRibHT::hash(|pCube1|pCubeShape1,6)
                >8 liqRibHT::find(|pCube1|pCubeShape1,|pCube1|pCubeShape1,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pCube1|pCubeShape1,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(pCube1,,2)
                  >9 liqRibNode::parseVectorAttributes(pCube1,,3)
                  >9 liqRibNode::parseVectorAttributes(pCube1,,4)
                  >9 liqRibNode::findShadingGroup(|pCube1|pCubeShape1,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getColor(&shader,&color)
                  >9 liqRibNode::getOpacity(&shader,&color)
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pCube1|pCubeShape1,0)
                    >10 liqRibMeshData::liqRibMeshData(|pCube1|pCubeShape1)
                      >11 liqRibData::addAdditionalSurfaceParameters(pCubeShape1)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
              >7 liqRibHT::insert(|camera1|cameraShape1,lframe,0,0,7,matrix,,-1)
                >8 liqRibHT::hash(|camera1|cameraShape1,7)
                >8 liqRibHT::find(|camera1|cameraShape1,|camera1|cameraShape1,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|camera1|cameraShape1,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(camera1,,2)
                  >9 liqRibNode::parseVectorAttributes(camera1,,3)
                  >9 liqRibNode::parseVectorAttributes(camera1,,4)
                  >9 liqRibNode::findShadingGroup(|camera1|cameraShape1,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|camera1|cameraShape1,0)
                    >10 liqRibCameraData::liqRibCameraData(|camera1|cameraShape1)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
              >7 liqRibHT::insert(|pCube2|pCubeShape2,lframe,0,0,8,matrix,,-1)
                >8 liqRibHT::hash(|pCube2|pCubeShape2,8)
                >8 liqRibHT::find(|pCube2|pCubeShape2,|pCube2|pCubeShape2,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pCube2|pCubeShape2,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(pCube2,,2)
                  >9 liqRibNode::parseVectorAttributes(pCube2,,3)
                  >9 liqRibNode::parseVectorAttributes(pCube2,,4)
                  >9 liqRibNode::findShadingGroup(|pCube2|pCubeShape2,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getColor(&shader,&color)
                  >9 liqRibNode::getOpacity(&shader,&color)
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pCube2|pCubeShape2,0)
                    >10 liqRibMeshData::liqRibMeshData(|pCube2|pCubeShape2)
                      >11 liqRibData::addAdditionalSurfaceParameters(pCubeShape2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
              >7 liqRibHT::insert(|pCube3|pCubeShape3,lframe,0,0,9,matrix,,-1)
                >8 liqRibHT::hash(|pCube3|pCubeShape3,9)
                >8 liqRibHT::find(|pCube3|pCubeShape3,|pCube3|pCubeShape3,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pCube3|pCubeShape3,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(pCube3,,2)
                  >9 liqRibNode::parseVectorAttributes(pCube3,,3)
                  >9 liqRibNode::parseVectorAttributes(pCube3,,4)
                  >9 liqRibNode::findShadingGroup(|pCube3|pCubeShape3,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getColor(&shader,&color)
                  >9 liqRibNode::getOpacity(&shader,&color)
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pCube3|pCubeShape3,0)
                    >10 liqRibMeshData::liqRibMeshData(|pCube3|pCubeShape3)
                      >11 liqRibData::addAdditionalSurfaceParameters(pCubeShape3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
              >7 liqRibHT::insert(|stereoCamera|stereoCameraCenterCamShape,lframe,0,0,10,matrix,,-1)
                >8 liqRibHT::hash(|stereoCamera|stereoCameraCenterCamShape,10)
                >8 liqRibHT::find(|stereoCamera|stereoCameraCenterCamShape,|stereoCamera|stereoCameraCenterCamShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|stereoCamera|stereoCameraCenterCamShape,0,0,-1)
                  >9 liqRibNode::findShadingGroup(|stereoCamera|stereoCameraCenterCamShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|stereoCamera|stereoCameraCenterCamShape,0)
                    >10 liqRibCameraData::liqRibCameraData(|stereoCamera|stereoCameraCenterCamShape)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
              >7 liqRibHT::insert(|stereoCamera|stereoCameraFrustum,lframe,0,10,11,matrix,,-1)
                >8 liqRibHT::hash(|stereoCamera|stereoCameraFrustum,11)
                >8 liqRibHT::find(|stereoCamera|stereoCameraFrustum,|stereoCamera|stereoCameraFrustum,10)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|stereoCamera|stereoCameraFrustum,0,10,-1)
                  >9 liqRibNode::findShadingGroup(|stereoCamera|stereoCameraFrustum,10)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|stereoCamera|stereoCameraFrustum,10)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
              >7 liqRibHT::insert(|stereoCamera|stereoCameraLeft|stereoCameraLeftShape,lframe,0,0,12,matrix,,-1)
                >8 liqRibHT::hash(|stereoCamera|stereoCameraLeft|stereoCameraLeftShape,12)
                >8 liqRibHT::find(|stereoCamera|stereoCameraLeft|stereoCameraLeftShape,|stereoCamera|stereoCameraLeft|stereoCameraLeftShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|stereoCamera|stereoCameraLeft|stereoCameraLeftShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(stereoCameraLeft,,2)
                  >9 liqRibNode::parseVectorAttributes(stereoCameraLeft,,3)
                  >9 liqRibNode::parseVectorAttributes(stereoCameraLeft,,4)
                  >9 liqRibNode::findShadingGroup(|stereoCamera|stereoCameraLeft|stereoCameraLeftShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|stereoCamera|stereoCameraLeft|stereoCameraLeftShape,0)
                    >10 liqRibCameraData::liqRibCameraData(|stereoCamera|stereoCameraLeft|stereoCameraLeftShape)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
              >7 liqRibHT::insert(|stereoCamera|stereoCameraRight|stereoCameraRightShape,lframe,0,0,13,matrix,,-1)
                >8 liqRibHT::hash(|stereoCamera|stereoCameraRight|stereoCameraRightShape,13)
                >8 liqRibHT::find(|stereoCamera|stereoCameraRight|stereoCameraRightShape,|stereoCamera|stereoCameraRight|stereoCameraRightShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|stereoCamera|stereoCameraRight|stereoCameraRightShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(stereoCameraRight,,2)
                  >9 liqRibNode::parseVectorAttributes(stereoCameraRight,,3)
                  >9 liqRibNode::parseVectorAttributes(stereoCameraRight,,4)
                  >9 liqRibNode::findShadingGroup(|stereoCamera|stereoCameraRight|stereoCameraRightShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|stereoCamera|stereoCameraRight|stereoCameraRightShape,0)
                    >10 liqRibCameraData::liqRibCameraData(|stereoCamera|stereoCameraRight|stereoCameraRightShape)
            >6 liqRibTranslatorNew::dealwithParticleInstancedObjects(0,1,14)
            >6 tCameraMgr::getCameraData(stereoCameraCenterCamShape,0)
              >7 tCameraMgr::getCameraInfo(|stereoCamera|stereoCameraCenterCamShape,)
                >8 tCameraMgr::portFieldOfView(768,576,&horizontal,&vertical,&fnCamera)
                  >9 tCameraMgr::computeViewingFrustum(1.33333,,&left,&right,&bottom,&top,|stereoCamera|stereoCameraCenterCamShape)
              >7 tCameraMgr::getCameraFilmOffset(|stereoCamera|stereoCameraCenterCamShape,)
              >7 tCameraMgr::getCameraTransform(|stereoCamera|stereoCameraCenterCamShape,)
              >7 tCameraMgr::getCameraInfo(|stereoCamera|stereoCameraLeft|stereoCameraLeftShape,)
                >8 tCameraMgr::portFieldOfView(768,576,&horizontal,&vertical,&fnCamera)
                  >9 tCameraMgr::computeViewingFrustum(1.33333,,&left,&right,&bottom,&top,|stereoCamera|stereoCameraLeft|stereoCameraLeftShape)
              >7 tCameraMgr::getCameraFilmOffset(|stereoCamera|stereoCameraLeft|stereoCameraLeftShape,)
              >7 tCameraMgr::getCameraTransform(|stereoCamera|stereoCameraLeft|stereoCameraLeftShape,)
              >7 tCameraMgr::getCameraInfo(|stereoCamera|stereoCameraRight|stereoCameraRightShape,)
                >8 tCameraMgr::portFieldOfView(768,576,&horizontal,&vertical,&fnCamera)
                  >9 tCameraMgr::computeViewingFrustum(1.33333,,&left,&right,&bottom,&top,|stereoCamera|stereoCameraRight|stereoCameraRightShape)
              >7 tCameraMgr::getCameraFilmOffset(|stereoCamera|stereoCameraRight|stereoCameraRightShape,)
              >7 tCameraMgr::getCameraTransform(|stereoCamera|stereoCameraRight|stereoCameraRightShape,)
          >5 liqRibTranslatorNew::doTextures(size=0)
            >6 rm::Renderer::doTextures(txtList.size()=0)
          >5 liqRibTranslatorNew::doShadows(size=0)
            >6 rm::Renderer::doShadows(shadowList_.size()=0)
          >5 Renderer::setRenderScriptFormatAndCompress(0,0)
            >6 Renderer::_RiOption_format_compress(0,0)
          >5 Renderer::isHeroPassReady(stereoCameraCenterCamShape)
          >5 Renderer::HeroPassBegin(stereoCameraCenterCamShape)
          >5 tHeroRibWriterMgr::write(liqglo___,stereoCameraCenterCamShape,1,0)
            >6 liqRibTranslatorNew::ribPrologue__(stereoCameraCenterCamShape)
              >7 Renderer::ribPrologue_begin(stereoCameraCenterCamShape)
                >8 RiBegin_liq(R:/MyDocuments/maya/projects/default/rib/stereo_camera_stereoCameraCenterCamShape.0001..rib(strlen=91)
              >7 Renderer::ribPrologue_comment(2.3.5,R:/MyDocuments/maya/projects/default/stereo_camera,yaoyansi,time)
              >7 Renderer::ribPrologue_options(stereoCameraCenterCamShape)
                >8 Renderer::ribPrologue_writeSearthPath()
                >8 tHeroRibWriterMgr::ribPrologue_hider(0)
                >8 tHeroRibWriterMgr::ribPrologue_samples(4,4)
                >8 tHeroRibWriterMgr::ribPrologue_shadingrate(1)
                >8 tHeroRibWriterMgr::ribPrologue_filter(0,2,2)
                >8 tHeroRibWriterMgr::ribPrologue_pass(beauty)
            >6 liqRibTranslatorNew::framePrologue__(1,stereoCameraCenterCamShape)
              >7 Renderer::framePrologue(1,stereoCameraCenterCamShape)
                >8 tHeroRibWriterMgr::framePrologue_display(stereoCameraCenterCamShape)
                  >9 exportJobCamera(stereoCameraCenterCamShape,,)
                  >9 exportJobCamera(stereoCameraCenterCamShape,,)
                >8 Renderer::framePrologue_camera(1,stereoCameraCenterCamShape)
            >6 ShaderMgr::exportShaderGraph()
              >7 ConvertShadingNetwork::exportShaderGraph()
                >8 ConvertShadingNetwork::beforeExport()
                  >9 ShadingNetworkUser::beforeExport_user()
                >8 ConvertShadingNetwork::__export()
                  >9 ConvertShadingNetwork::canShadingGroupExported(initialShadingGroup)
                  >9 Renderer::getValidShaderPlugsInShadingGroup()
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(initialShadingGroup,surfaceShader)
                    >10 ConvertShadingNetwork::exportShaderNodeInPlug(initialShadingGroup,surfaceShader)
                      >11 ConvertShadingNetwork::_exportShaderNodeInPlug(initialShadingGroup,surfaceShader)
                        >12 ConvertShadingNetwork::exportShaderNode(lambert1)
                          >13 ConvertShadingNetwork::canShaderExported(lambert1)
                          >13 ConvertShadingNetwork::exportShaderBegin(lambert1)
                          >13 ConvertShadingNetwork::convertShadingNetworkToRSL(lambert1)
                            >14 Visitor::initShaderData(lambert1)
                              >15 NodePlugConnectionMgr::setNodePlugMgr(...)
                              >15 NodePlugConnectionMgr::reset()
                            >14 ConvertShadingNetwork::getUpstreamConvertibleNodes(lambert1, nodes, numConnections)
                              >15 DagMgr::BreadthFirstTraversal(lambert1, ret)
                                >16 DagMgr::begin(lambert1)
                                  >17 DagMgr::pushInputPlugs(lambert1)
                                    >18 ShaderMgr::getValidConnection(lambert1)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert1.colorR)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert1.colorR)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert1.colorG)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert1.colorG)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert1.colorB)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert1.colorB)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert1.color)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert1.color)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert1.transparencyR)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert1.transparencyR)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert1.transparencyG)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert1.transparencyG)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert1.transparencyB)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert1.transparencyB)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert1.transparency)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert1.transparency)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert1.ambientColorR)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert1.ambientColorR)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert1.ambientColorG)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert1.ambientColorG)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert1.ambientColorB)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert1.ambientColorB)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert1.ambientColor)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert1.ambientColor)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert1.incandescenceR)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert1.incandescenceR)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert1.incandescenceG)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert1.incandescenceG)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert1.incandescenceB)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert1.incandescenceB)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert1.incandescence)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert1.incandescence)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert1.normalCameraX)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert1.normalCameraX)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert1.normalCameraY)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert1.normalCameraY)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert1.normalCameraZ)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert1.normalCameraZ)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert1.normalCamera)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert1.normalCamera)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert1.diffuse)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert1.diffuse)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert1.translucence)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert1.translucence)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert1.translucenceDepth)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert1.translucenceDepth)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert1.translucenceFocus)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert1.translucenceFocus)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert1.outColorR)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert1.outColorR)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert1.outColorG)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert1.outColorG)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert1.outColorB)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert1.outColorB)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert1.outColor)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert1.outColor)
                                      >19 ConvertShadingNetwork::nodeIsConvertible(initialParticleSE)
                                        >20 ShaderMgr::hasShaderType(shadingEngine)
                                      >19 ConvertShadingNetwork::nodeIsConvertible(initialShadingGroup)
                                        >20 ShaderMgr::hasShaderType(shadingEngine)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert1.outTransparencyR)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert1.outTransparencyR)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert1.outTransparencyG)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert1.outTransparencyG)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert1.outTransparencyB)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert1.outTransparencyB)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert1.outTransparency)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert1.outTransparency)
                                >16 DagMgr::end()
                            >14 Visitor::preOutput(lambert1)
                            >14 Visitor::outputBegin(lambert1), open shader file
                              >15 getShaderFilePath_SRC(lambert1)
                                >16 getShaderFilePath_NoExt(lambert1)
                              >15 Visitor::getSurfaceShaderAOVOutputParametersString()
                              >15 Visitor::defineAOVVariables(lambert1)
                            >14 ConvertShadingNetwork::traverseGraphAndOutputNodeFunctions( nodes, numConnections)
                              >15 Visitor::outputUpstreamShader(lambert1)
                                >16 ShaderOutputVisitor::_outputUpstreamShader(lambert1,lambert)
                                  >17 Visitor::visitLambert(lambert1)
                                    >18 OutputHelper::addInclude(lambert.h)
                                    >18 OutputHelper::beginRSL(lambert1)
                                    >18 ShaderMgr::convertibleConnection(lambert1.ambientColor)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert1.ambientColor)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert1.ambientColor)
                                    >18 NodePlugInfo::add(lambert1,ambientColor,color)
                                      >19 NodePlug::add(ambientColor, color)
                                    >18 ShaderMgr::convertibleConnection(lambert1.color)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert1.color)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert1.color)
                                    >18 NodePlugInfo::add(lambert1,color,color)
                                      >19 NodePlug::add(color, color)
                                    >18 ShaderMgr::convertibleConnection(lambert1.diffuse)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert1.diffuse)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert1.diffuse)
                                    >18 NodePlugInfo::add(lambert1,diffuse,float)
                                      >19 NodePlug::add(diffuse, float)
                                    >18 ShaderMgr::convertibleConnection(lambert1.incandescence)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert1.incandescence)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert1.incandescence)
                                    >18 NodePlugInfo::add(lambert1,incandescence,color)
                                      >19 NodePlug::add(incandescence, color)
                                    >18 ShaderMgr::convertibleConnection(lambert1.matteOpacityMode)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert1.matteOpacityMode)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert1.matteOpacityMode)
                                    >18 NodePlugInfo::add(lambert1,matteOpacityMode,float)
                                      >19 NodePlug::add(matteOpacityMode, float)
                                    >18 ShaderMgr::convertibleConnection(lambert1.matteOpacity)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert1.matteOpacity)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert1.matteOpacity)
                                    >18 NodePlugInfo::add(lambert1,matteOpacity,float)
                                      >19 NodePlug::add(matteOpacity, float)
                                    >18 ShaderMgr::convertibleConnection(lambert1.refractions)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert1.refractions)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert1.refractions)
                                    >18 NodePlugInfo::add(lambert1,refractions,float)
                                      >19 NodePlug::add(refractions, float)
                                    >18 ShaderMgr::convertibleConnection(lambert1.refractiveIndex)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert1.refractiveIndex)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert1.refractiveIndex)
                                    >18 NodePlugInfo::add(lambert1,refractiveIndex,float)
                                      >19 NodePlug::add(refractiveIndex, float)
                                    >18 ShaderMgr::convertibleConnection(lambert1.refractionLimit)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert1.refractionLimit)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert1.refractionLimit)
                                    >18 NodePlugInfo::add(lambert1,refractionLimit,float)
                                      >19 NodePlug::add(refractionLimit, float)
                                    >18 ShaderMgr::convertibleConnection(lambert1.lightAbsorbance)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert1.lightAbsorbance)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert1.lightAbsorbance)
                                    >18 NodePlugInfo::add(lambert1,lightAbsorbance,float)
                                      >19 NodePlug::add(lightAbsorbance, float)
                                    >18 ShaderMgr::convertibleConnection(lambert1.shadowAttenuation)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert1.shadowAttenuation)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert1.shadowAttenuation)
                                    >18 NodePlugInfo::add(lambert1,shadowAttenuation,float)
                                      >19 NodePlug::add(shadowAttenuation, float)
                                    >18 ShaderMgr::convertibleConnection(lambert1.transparency)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert1.transparency)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert1.transparency)
                                    >18 NodePlugInfo::add(lambert1,transparency,color)
                                      >19 NodePlug::add(transparency, color)
                                    >18 ShaderMgr::convertibleConnection(lambert1.translucence)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert1.translucence)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert1.translucence)
                                    >18 NodePlugInfo::add(lambert1,translucence,float)
                                      >19 NodePlug::add(translucence, float)
                                    >18 ShaderMgr::convertibleConnection(lambert1.translucenceDepth)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert1.translucenceDepth)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert1.translucenceDepth)
                                    >18 NodePlugInfo::add(lambert1,translucenceDepth,float)
                                      >19 NodePlug::add(translucenceDepth, float)
                                    >18 ShaderMgr::convertibleConnection(lambert1.translucenceFocus)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert1.translucenceFocus)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert1.translucenceFocus)
                                    >18 NodePlugInfo::add(lambert1,translucenceFocus,float)
                                      >19 NodePlug::add(translucenceFocus, float)
                                    >18 ShaderMgr::convertibleConnection(lambert1.outColor)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert1.outColor)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert1.outColor)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(initialParticleSE)
                                          >21 ShaderMgr::hasShaderType(shadingEngine)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(initialShadingGroup)
                                          >21 ShaderMgr::hasShaderType(shadingEngine)
                                    >18 NodePlugInfo::add(lambert1,outColor,color)
                                      >19 NodePlug::add(outColor, color)
                                    >18 ShaderMgr::convertibleConnection(lambert1.outTransparency)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert1.outTransparency)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert1.outTransparency)
                                    >18 NodePlugInfo::add(lambert1,outTransparency,color)
                                      >19 NodePlug::add(outTransparency, color)
                                    >18 OutputHelper::endRSL()
                              >15 ShaderMgr::getValidConnection(lambert1)
                              >15 ConvertShadingNetwork::getNodeVariables(lambert1, validConnections,  inputSrc, inputDes, outputSrc)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert1.colorR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert1.colorR)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert1.colorG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert1.colorG)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert1.colorB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert1.colorB)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert1.color)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert1.color)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert1.transparencyR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert1.transparencyR)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert1.transparencyG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert1.transparencyG)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert1.transparencyB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert1.transparencyB)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert1.transparency)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert1.transparency)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert1.ambientColorR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert1.ambientColorR)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert1.ambientColorG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert1.ambientColorG)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert1.ambientColorB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert1.ambientColorB)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert1.ambientColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert1.ambientColor)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert1.incandescenceR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert1.incandescenceR)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert1.incandescenceG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert1.incandescenceG)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert1.incandescenceB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert1.incandescenceB)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert1.incandescence)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert1.incandescence)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert1.normalCameraX)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert1.normalCameraX)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert1.normalCameraY)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert1.normalCameraY)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert1.normalCameraZ)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert1.normalCameraZ)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert1.normalCamera)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert1.normalCamera)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert1.diffuse)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert1.diffuse)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert1.translucence)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert1.translucence)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert1.translucenceDepth)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert1.translucenceDepth)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert1.translucenceFocus)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert1.translucenceFocus)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert1.outColorR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert1.outColorR)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert1.outColorG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert1.outColorG)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert1.outColorB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert1.outColorB)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert1.outColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert1.outColor)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(initialParticleSE)
                                    >18 ShaderMgr::hasShaderType(shadingEngine)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(initialShadingGroup)
                                    >18 ShaderMgr::hasShaderType(shadingEngine)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert1.outTransparencyR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert1.outTransparencyR)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert1.outTransparencyG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert1.outTransparencyG)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert1.outTransparencyB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert1.outTransparencyB)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert1.outTransparency)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert1.outTransparency)
                              >15 Visitor::addShaderMethodBody(lambert1,,,)
                                >16 NodePlugConnectionMgr::add(lambert1)
                            >14 ConvertShadingNetwork::outputShaderMethod()
                              >15 Visitor::outputShaderMethod()
                                >16 NodePlugConnectionMgr::cookRSLFunctionCallString(0)
                                >16 NodePlugConnectionMgr::log(0)
                            >14 Visitor::outputEnd(), close shader file
                            >14 Visitor::postOutput()
                              >15 getShaderFilePath_SLO(lambert1)
                                >16 getShaderFilePath_NoExt(lambert1)
                              >15 getShaderFilePath_SRC(lambert1)
                                >16 getShaderFilePath_NoExt(lambert1)
                          >13 ConvertShadingNetwork::exportShaderEnd(lambert1)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(initialShadingGroup,displacementShader)
                    >10 ConvertShadingNetwork::exportShaderNodeInPlug(initialShadingGroup,displacementShader)
                      >11 ConvertShadingNetwork::_exportShaderNodeInPlug(initialShadingGroup,displacementShader)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(initialShadingGroup,volumeShader)
                    >10 ConvertShadingNetwork::exportShaderNodeInPlug(initialShadingGroup,volumeShader)
                      >11 ConvertShadingNetwork::_exportShaderNodeInPlug(initialShadingGroup,volumeShader)
                  >9 ConvertShadingNetwork::exportShadingGroupBegin(initialShadingGroup)
                  >9 ConvertShadingNetwork::outputShadingGroup(initialShadingGroup)
                    >10 Visitor::outputShadingGroup(initialShadingGroup)
                      >11 Visitor::outputShadingGroup(initialShadingGroup,0)
                  >9 ConvertShadingNetwork::exportShadingGroupEnd(initialShadingGroup)
                  >9 ConvertShadingNetwork::canShadingGroupExported(lambert3SG)
                  >9 Renderer::getValidShaderPlugsInShadingGroup()
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(lambert3SG,surfaceShader)
                    >10 ConvertShadingNetwork::exportShaderNodeInPlug(lambert3SG,surfaceShader)
                      >11 ConvertShadingNetwork::_exportShaderNodeInPlug(lambert3SG,surfaceShader)
                        >12 ConvertShadingNetwork::exportShaderNode(lambert3)
                          >13 ConvertShadingNetwork::canShaderExported(lambert3)
                          >13 ConvertShadingNetwork::exportShaderBegin(lambert3)
                          >13 ConvertShadingNetwork::convertShadingNetworkToRSL(lambert3)
                            >14 Visitor::initShaderData(lambert3)
                              >15 NodePlugConnectionMgr::setNodePlugMgr(...)
                              >15 NodePlugConnectionMgr::reset()
                            >14 ConvertShadingNetwork::getUpstreamConvertibleNodes(lambert3, nodes, numConnections)
                              >15 DagMgr::BreadthFirstTraversal(lambert3, ret)
                                >16 DagMgr::begin(lambert3)
                                  >17 DagMgr::pushInputPlugs(lambert3)
                                    >18 ShaderMgr::getValidConnection(lambert3)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert3.colorR)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert3.colorR)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert3.colorG)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert3.colorG)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert3.colorB)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert3.colorB)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert3.color)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert3.color)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert3.transparencyR)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert3.transparencyR)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert3.transparencyG)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert3.transparencyG)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert3.transparencyB)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert3.transparencyB)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert3.transparency)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert3.transparency)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert3.ambientColorR)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert3.ambientColorR)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert3.ambientColorG)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert3.ambientColorG)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert3.ambientColorB)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert3.ambientColorB)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert3.ambientColor)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert3.ambientColor)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert3.incandescenceR)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert3.incandescenceR)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert3.incandescenceG)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert3.incandescenceG)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert3.incandescenceB)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert3.incandescenceB)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert3.incandescence)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert3.incandescence)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert3.normalCameraX)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert3.normalCameraX)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert3.normalCameraY)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert3.normalCameraY)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert3.normalCameraZ)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert3.normalCameraZ)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert3.normalCamera)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert3.normalCamera)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert3.diffuse)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert3.diffuse)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert3.translucence)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert3.translucence)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert3.translucenceDepth)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert3.translucenceDepth)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert3.translucenceFocus)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert3.translucenceFocus)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert3.outColorR)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert3.outColorR)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert3.outColorG)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert3.outColorG)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert3.outColorB)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert3.outColorB)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert3.outColor)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert3.outColor)
                                      >19 ConvertShadingNetwork::nodeIsConvertible(lambert3SG)
                                        >20 ShaderMgr::hasShaderType(shadingEngine)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert3.outTransparencyR)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert3.outTransparencyR)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert3.outTransparencyG)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert3.outTransparencyG)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert3.outTransparencyB)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert3.outTransparencyB)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert3.outTransparency)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert3.outTransparency)
                                >16 DagMgr::end()
                            >14 Visitor::preOutput(lambert3)
                            >14 Visitor::outputBegin(lambert3), open shader file
                              >15 getShaderFilePath_SRC(lambert3)
                                >16 getShaderFilePath_NoExt(lambert3)
                              >15 Visitor::getSurfaceShaderAOVOutputParametersString()
                              >15 Visitor::defineAOVVariables(lambert3)
                            >14 ConvertShadingNetwork::traverseGraphAndOutputNodeFunctions( nodes, numConnections)
                              >15 Visitor::outputUpstreamShader(lambert3)
                                >16 ShaderOutputVisitor::_outputUpstreamShader(lambert3,lambert)
                                  >17 Visitor::visitLambert(lambert3)
                                    >18 OutputHelper::addInclude(lambert.h)
                                    >18 OutputHelper::beginRSL(lambert3)
                                    >18 ShaderMgr::convertibleConnection(lambert3.ambientColor)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert3.ambientColor)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert3.ambientColor)
                                    >18 NodePlugInfo::add(lambert3,ambientColor,color)
                                      >19 NodePlug::add(ambientColor, color)
                                    >18 ShaderMgr::convertibleConnection(lambert3.color)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert3.color)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert3.color)
                                    >18 NodePlugInfo::add(lambert3,color,color)
                                      >19 NodePlug::add(color, color)
                                    >18 ShaderMgr::convertibleConnection(lambert3.diffuse)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert3.diffuse)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert3.diffuse)
                                    >18 NodePlugInfo::add(lambert3,diffuse,float)
                                      >19 NodePlug::add(diffuse, float)
                                    >18 ShaderMgr::convertibleConnection(lambert3.incandescence)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert3.incandescence)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert3.incandescence)
                                    >18 NodePlugInfo::add(lambert3,incandescence,color)
                                      >19 NodePlug::add(incandescence, color)
                                    >18 ShaderMgr::convertibleConnection(lambert3.matteOpacityMode)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert3.matteOpacityMode)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert3.matteOpacityMode)
                                    >18 NodePlugInfo::add(lambert3,matteOpacityMode,float)
                                      >19 NodePlug::add(matteOpacityMode, float)
                                    >18 ShaderMgr::convertibleConnection(lambert3.matteOpacity)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert3.matteOpacity)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert3.matteOpacity)
                                    >18 NodePlugInfo::add(lambert3,matteOpacity,float)
                                      >19 NodePlug::add(matteOpacity, float)
                                    >18 ShaderMgr::convertibleConnection(lambert3.refractions)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert3.refractions)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert3.refractions)
                                    >18 NodePlugInfo::add(lambert3,refractions,float)
                                      >19 NodePlug::add(refractions, float)
                                    >18 ShaderMgr::convertibleConnection(lambert3.refractiveIndex)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert3.refractiveIndex)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert3.refractiveIndex)
                                    >18 NodePlugInfo::add(lambert3,refractiveIndex,float)
                                      >19 NodePlug::add(refractiveIndex, float)
                                    >18 ShaderMgr::convertibleConnection(lambert3.refractionLimit)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert3.refractionLimit)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert3.refractionLimit)
                                    >18 NodePlugInfo::add(lambert3,refractionLimit,float)
                                      >19 NodePlug::add(refractionLimit, float)
                                    >18 ShaderMgr::convertibleConnection(lambert3.lightAbsorbance)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert3.lightAbsorbance)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert3.lightAbsorbance)
                                    >18 NodePlugInfo::add(lambert3,lightAbsorbance,float)
                                      >19 NodePlug::add(lightAbsorbance, float)
                                    >18 ShaderMgr::convertibleConnection(lambert3.shadowAttenuation)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert3.shadowAttenuation)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert3.shadowAttenuation)
                                    >18 NodePlugInfo::add(lambert3,shadowAttenuation,float)
                                      >19 NodePlug::add(shadowAttenuation, float)
                                    >18 ShaderMgr::convertibleConnection(lambert3.transparency)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert3.transparency)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert3.transparency)
                                    >18 NodePlugInfo::add(lambert3,transparency,color)
                                      >19 NodePlug::add(transparency, color)
                                    >18 ShaderMgr::convertibleConnection(lambert3.translucence)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert3.translucence)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert3.translucence)
                                    >18 NodePlugInfo::add(lambert3,translucence,float)
                                      >19 NodePlug::add(translucence, float)
                                    >18 ShaderMgr::convertibleConnection(lambert3.translucenceDepth)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert3.translucenceDepth)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert3.translucenceDepth)
                                    >18 NodePlugInfo::add(lambert3,translucenceDepth,float)
                                      >19 NodePlug::add(translucenceDepth, float)
                                    >18 ShaderMgr::convertibleConnection(lambert3.translucenceFocus)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert3.translucenceFocus)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert3.translucenceFocus)
                                    >18 NodePlugInfo::add(lambert3,translucenceFocus,float)
                                      >19 NodePlug::add(translucenceFocus, float)
                                    >18 ShaderMgr::convertibleConnection(lambert3.outColor)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert3.outColor)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert3.outColor)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(lambert3SG)
                                          >21 ShaderMgr::hasShaderType(shadingEngine)
                                    >18 NodePlugInfo::add(lambert3,outColor,color)
                                      >19 NodePlug::add(outColor, color)
                                    >18 ShaderMgr::convertibleConnection(lambert3.outTransparency)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert3.outTransparency)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert3.outTransparency)
                                    >18 NodePlugInfo::add(lambert3,outTransparency,color)
                                      >19 NodePlug::add(outTransparency, color)
                                    >18 OutputHelper::endRSL()
                              >15 ShaderMgr::getValidConnection(lambert3)
                              >15 ConvertShadingNetwork::getNodeVariables(lambert3, validConnections,  inputSrc, inputDes, outputSrc)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert3.colorR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert3.colorR)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert3.colorG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert3.colorG)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert3.colorB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert3.colorB)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert3.color)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert3.color)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert3.transparencyR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert3.transparencyR)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert3.transparencyG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert3.transparencyG)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert3.transparencyB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert3.transparencyB)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert3.transparency)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert3.transparency)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert3.ambientColorR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert3.ambientColorR)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert3.ambientColorG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert3.ambientColorG)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert3.ambientColorB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert3.ambientColorB)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert3.ambientColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert3.ambientColor)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert3.incandescenceR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert3.incandescenceR)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert3.incandescenceG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert3.incandescenceG)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert3.incandescenceB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert3.incandescenceB)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert3.incandescence)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert3.incandescence)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert3.normalCameraX)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert3.normalCameraX)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert3.normalCameraY)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert3.normalCameraY)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert3.normalCameraZ)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert3.normalCameraZ)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert3.normalCamera)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert3.normalCamera)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert3.diffuse)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert3.diffuse)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert3.translucence)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert3.translucence)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert3.translucenceDepth)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert3.translucenceDepth)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert3.translucenceFocus)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert3.translucenceFocus)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert3.outColorR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert3.outColorR)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert3.outColorG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert3.outColorG)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert3.outColorB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert3.outColorB)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert3.outColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert3.outColor)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(lambert3SG)
                                    >18 ShaderMgr::hasShaderType(shadingEngine)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert3.outTransparencyR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert3.outTransparencyR)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert3.outTransparencyG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert3.outTransparencyG)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert3.outTransparencyB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert3.outTransparencyB)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert3.outTransparency)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert3.outTransparency)
                              >15 Visitor::addShaderMethodBody(lambert3,,,)
                                >16 NodePlugConnectionMgr::add(lambert3)
                            >14 ConvertShadingNetwork::outputShaderMethod()
                              >15 Visitor::outputShaderMethod()
                                >16 NodePlugConnectionMgr::cookRSLFunctionCallString(0)
                                >16 NodePlugConnectionMgr::log(0)
                            >14 Visitor::outputEnd(), close shader file
                            >14 Visitor::postOutput()
                              >15 getShaderFilePath_SLO(lambert3)
                                >16 getShaderFilePath_NoExt(lambert3)
                              >15 getShaderFilePath_SRC(lambert3)
                                >16 getShaderFilePath_NoExt(lambert3)
                          >13 ConvertShadingNetwork::exportShaderEnd(lambert3)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(lambert3SG,displacementShader)
                    >10 ConvertShadingNetwork::exportShaderNodeInPlug(lambert3SG,displacementShader)
                      >11 ConvertShadingNetwork::_exportShaderNodeInPlug(lambert3SG,displacementShader)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(lambert3SG,volumeShader)
                    >10 ConvertShadingNetwork::exportShaderNodeInPlug(lambert3SG,volumeShader)
                      >11 ConvertShadingNetwork::_exportShaderNodeInPlug(lambert3SG,volumeShader)
                  >9 ConvertShadingNetwork::exportShadingGroupBegin(lambert3SG)
                  >9 ConvertShadingNetwork::outputShadingGroup(lambert3SG)
                    >10 Visitor::outputShadingGroup(lambert3SG)
                      >11 Visitor::outputShadingGroup(lambert3SG,0)
                  >9 ConvertShadingNetwork::exportShadingGroupEnd(lambert3SG)
                  >9 ConvertShadingNetwork::canShadingGroupExported(lambert4SG)
                  >9 Renderer::getValidShaderPlugsInShadingGroup()
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(lambert4SG,surfaceShader)
                    >10 ConvertShadingNetwork::exportShaderNodeInPlug(lambert4SG,surfaceShader)
                      >11 ConvertShadingNetwork::_exportShaderNodeInPlug(lambert4SG,surfaceShader)
                        >12 ConvertShadingNetwork::exportShaderNode(lambert4)
                          >13 ConvertShadingNetwork::canShaderExported(lambert4)
                          >13 ConvertShadingNetwork::exportShaderBegin(lambert4)
                          >13 ConvertShadingNetwork::convertShadingNetworkToRSL(lambert4)
                            >14 Visitor::initShaderData(lambert4)
                              >15 NodePlugConnectionMgr::setNodePlugMgr(...)
                              >15 NodePlugConnectionMgr::reset()
                            >14 ConvertShadingNetwork::getUpstreamConvertibleNodes(lambert4, nodes, numConnections)
                              >15 DagMgr::BreadthFirstTraversal(lambert4, ret)
                                >16 DagMgr::begin(lambert4)
                                  >17 DagMgr::pushInputPlugs(lambert4)
                                    >18 ShaderMgr::getValidConnection(lambert4)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert4.colorR)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert4.colorR)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert4.colorG)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert4.colorG)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert4.colorB)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert4.colorB)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert4.color)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert4.color)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert4.transparencyR)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert4.transparencyR)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert4.transparencyG)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert4.transparencyG)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert4.transparencyB)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert4.transparencyB)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert4.transparency)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert4.transparency)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert4.ambientColorR)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert4.ambientColorR)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert4.ambientColorG)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert4.ambientColorG)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert4.ambientColorB)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert4.ambientColorB)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert4.ambientColor)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert4.ambientColor)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert4.incandescenceR)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert4.incandescenceR)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert4.incandescenceG)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert4.incandescenceG)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert4.incandescenceB)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert4.incandescenceB)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert4.incandescence)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert4.incandescence)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert4.normalCameraX)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert4.normalCameraX)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert4.normalCameraY)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert4.normalCameraY)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert4.normalCameraZ)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert4.normalCameraZ)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert4.normalCamera)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert4.normalCamera)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert4.diffuse)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert4.diffuse)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert4.translucence)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert4.translucence)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert4.translucenceDepth)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert4.translucenceDepth)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert4.translucenceFocus)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert4.translucenceFocus)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert4.outColorR)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert4.outColorR)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert4.outColorG)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert4.outColorG)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert4.outColorB)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert4.outColorB)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert4.outColor)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert4.outColor)
                                      >19 ConvertShadingNetwork::nodeIsConvertible(lambert4SG)
                                        >20 ShaderMgr::hasShaderType(shadingEngine)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert4.outTransparencyR)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert4.outTransparencyR)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert4.outTransparencyG)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert4.outTransparencyG)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert4.outTransparencyB)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert4.outTransparencyB)
                                    >18 ConvertShadingNetwork::convertibleConnection(lambert4.outTransparency)
                                      >19 ConvertShadingNetwork::ensurePlugExists(lambert4.outTransparency)
                                >16 DagMgr::end()
                            >14 Visitor::preOutput(lambert4)
                            >14 Visitor::outputBegin(lambert4), open shader file
                              >15 getShaderFilePath_SRC(lambert4)
                                >16 getShaderFilePath_NoExt(lambert4)
                              >15 Visitor::getSurfaceShaderAOVOutputParametersString()
                              >15 Visitor::defineAOVVariables(lambert4)
                            >14 ConvertShadingNetwork::traverseGraphAndOutputNodeFunctions( nodes, numConnections)
                              >15 Visitor::outputUpstreamShader(lambert4)
                                >16 ShaderOutputVisitor::_outputUpstreamShader(lambert4,lambert)
                                  >17 Visitor::visitLambert(lambert4)
                                    >18 OutputHelper::addInclude(lambert.h)
                                    >18 OutputHelper::beginRSL(lambert4)
                                    >18 ShaderMgr::convertibleConnection(lambert4.ambientColor)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert4.ambientColor)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert4.ambientColor)
                                    >18 NodePlugInfo::add(lambert4,ambientColor,color)
                                      >19 NodePlug::add(ambientColor, color)
                                    >18 ShaderMgr::convertibleConnection(lambert4.color)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert4.color)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert4.color)
                                    >18 NodePlugInfo::add(lambert4,color,color)
                                      >19 NodePlug::add(color, color)
                                    >18 ShaderMgr::convertibleConnection(lambert4.diffuse)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert4.diffuse)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert4.diffuse)
                                    >18 NodePlugInfo::add(lambert4,diffuse,float)
                                      >19 NodePlug::add(diffuse, float)
                                    >18 ShaderMgr::convertibleConnection(lambert4.incandescence)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert4.incandescence)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert4.incandescence)
                                    >18 NodePlugInfo::add(lambert4,incandescence,color)
                                      >19 NodePlug::add(incandescence, color)
                                    >18 ShaderMgr::convertibleConnection(lambert4.matteOpacityMode)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert4.matteOpacityMode)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert4.matteOpacityMode)
                                    >18 NodePlugInfo::add(lambert4,matteOpacityMode,float)
                                      >19 NodePlug::add(matteOpacityMode, float)
                                    >18 ShaderMgr::convertibleConnection(lambert4.matteOpacity)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert4.matteOpacity)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert4.matteOpacity)
                                    >18 NodePlugInfo::add(lambert4,matteOpacity,float)
                                      >19 NodePlug::add(matteOpacity, float)
                                    >18 ShaderMgr::convertibleConnection(lambert4.refractions)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert4.refractions)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert4.refractions)
                                    >18 NodePlugInfo::add(lambert4,refractions,float)
                                      >19 NodePlug::add(refractions, float)
                                    >18 ShaderMgr::convertibleConnection(lambert4.refractiveIndex)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert4.refractiveIndex)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert4.refractiveIndex)
                                    >18 NodePlugInfo::add(lambert4,refractiveIndex,float)
                                      >19 NodePlug::add(refractiveIndex, float)
                                    >18 ShaderMgr::convertibleConnection(lambert4.refractionLimit)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert4.refractionLimit)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert4.refractionLimit)
                                    >18 NodePlugInfo::add(lambert4,refractionLimit,float)
                                      >19 NodePlug::add(refractionLimit, float)
                                    >18 ShaderMgr::convertibleConnection(lambert4.lightAbsorbance)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert4.lightAbsorbance)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert4.lightAbsorbance)
                                    >18 NodePlugInfo::add(lambert4,lightAbsorbance,float)
                                      >19 NodePlug::add(lightAbsorbance, float)
                                    >18 ShaderMgr::convertibleConnection(lambert4.shadowAttenuation)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert4.shadowAttenuation)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert4.shadowAttenuation)
                                    >18 NodePlugInfo::add(lambert4,shadowAttenuation,float)
                                      >19 NodePlug::add(shadowAttenuation, float)
                                    >18 ShaderMgr::convertibleConnection(lambert4.transparency)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert4.transparency)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert4.transparency)
                                    >18 NodePlugInfo::add(lambert4,transparency,color)
                                      >19 NodePlug::add(transparency, color)
                                    >18 ShaderMgr::convertibleConnection(lambert4.translucence)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert4.translucence)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert4.translucence)
                                    >18 NodePlugInfo::add(lambert4,translucence,float)
                                      >19 NodePlug::add(translucence, float)
                                    >18 ShaderMgr::convertibleConnection(lambert4.translucenceDepth)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert4.translucenceDepth)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert4.translucenceDepth)
                                    >18 NodePlugInfo::add(lambert4,translucenceDepth,float)
                                      >19 NodePlug::add(translucenceDepth, float)
                                    >18 ShaderMgr::convertibleConnection(lambert4.translucenceFocus)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert4.translucenceFocus)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert4.translucenceFocus)
                                    >18 NodePlugInfo::add(lambert4,translucenceFocus,float)
                                      >19 NodePlug::add(translucenceFocus, float)
                                    >18 ShaderMgr::convertibleConnection(lambert4.outColor)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert4.outColor)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert4.outColor)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(lambert4SG)
                                          >21 ShaderMgr::hasShaderType(shadingEngine)
                                    >18 NodePlugInfo::add(lambert4,outColor,color)
                                      >19 NodePlug::add(outColor, color)
                                    >18 ShaderMgr::convertibleConnection(lambert4.outTransparency)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert4.outTransparency)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert4.outTransparency)
                                    >18 NodePlugInfo::add(lambert4,outTransparency,color)
                                      >19 NodePlug::add(outTransparency, color)
                                    >18 OutputHelper::endRSL()
                              >15 ShaderMgr::getValidConnection(lambert4)
                              >15 ConvertShadingNetwork::getNodeVariables(lambert4, validConnections,  inputSrc, inputDes, outputSrc)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert4.colorR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert4.colorR)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert4.colorG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert4.colorG)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert4.colorB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert4.colorB)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert4.color)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert4.color)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert4.transparencyR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert4.transparencyR)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert4.transparencyG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert4.transparencyG)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert4.transparencyB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert4.transparencyB)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert4.transparency)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert4.transparency)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert4.ambientColorR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert4.ambientColorR)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert4.ambientColorG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert4.ambientColorG)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert4.ambientColorB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert4.ambientColorB)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert4.ambientColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert4.ambientColor)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert4.incandescenceR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert4.incandescenceR)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert4.incandescenceG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert4.incandescenceG)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert4.incandescenceB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert4.incandescenceB)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert4.incandescence)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert4.incandescence)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert4.normalCameraX)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert4.normalCameraX)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert4.normalCameraY)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert4.normalCameraY)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert4.normalCameraZ)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert4.normalCameraZ)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert4.normalCamera)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert4.normalCamera)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert4.diffuse)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert4.diffuse)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert4.translucence)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert4.translucence)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert4.translucenceDepth)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert4.translucenceDepth)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert4.translucenceFocus)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert4.translucenceFocus)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert4.outColorR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert4.outColorR)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert4.outColorG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert4.outColorG)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert4.outColorB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert4.outColorB)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert4.outColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert4.outColor)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(lambert4SG)
                                    >18 ShaderMgr::hasShaderType(shadingEngine)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert4.outTransparencyR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert4.outTransparencyR)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert4.outTransparencyG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert4.outTransparencyG)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert4.outTransparencyB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert4.outTransparencyB)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert4.outTransparency)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert4.outTransparency)
                              >15 Visitor::addShaderMethodBody(lambert4,,,)
                                >16 NodePlugConnectionMgr::add(lambert4)
                            >14 ConvertShadingNetwork::outputShaderMethod()
                              >15 Visitor::outputShaderMethod()
                                >16 NodePlugConnectionMgr::cookRSLFunctionCallString(0)
                                >16 NodePlugConnectionMgr::log(0)
                            >14 Visitor::outputEnd(), close shader file
                            >14 Visitor::postOutput()
                              >15 getShaderFilePath_SLO(lambert4)
                                >16 getShaderFilePath_NoExt(lambert4)
                              >15 getShaderFilePath_SRC(lambert4)
                                >16 getShaderFilePath_NoExt(lambert4)
                          >13 ConvertShadingNetwork::exportShaderEnd(lambert4)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(lambert4SG,displacementShader)
                    >10 ConvertShadingNetwork::exportShaderNodeInPlug(lambert4SG,displacementShader)
                      >11 ConvertShadingNetwork::_exportShaderNodeInPlug(lambert4SG,displacementShader)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(lambert4SG,volumeShader)
                    >10 ConvertShadingNetwork::exportShaderNodeInPlug(lambert4SG,volumeShader)
                      >11 ConvertShadingNetwork::_exportShaderNodeInPlug(lambert4SG,volumeShader)
                  >9 ConvertShadingNetwork::exportShadingGroupBegin(lambert4SG)
                  >9 ConvertShadingNetwork::outputShadingGroup(lambert4SG)
                    >10 Visitor::outputShadingGroup(lambert4SG)
                      >11 Visitor::outputShadingGroup(lambert4SG,0)
                  >9 ConvertShadingNetwork::exportShadingGroupEnd(lambert4SG)
                  >9 ConvertShadingNetwork::exportShaderNodeInPlug(stereoCameraCenterCamShape,miEnvironmentShader)
                    >10 ConvertShadingNetwork::_exportShaderNodeInPlug(stereoCameraCenterCamShape,miEnvironmentShader)
                  >9 ConvertShadingNetwork::exportShaderNodeInPlug(stereoCameraCenterCamShape,liqVolumeShader)
                  >9 ConvertShadingNetwork::exportShaderNodeInPlug(stereoCameraCenterCamShape,liqEnvironmentShader)
                  >9 ConvertShadingNetwork::exportShaderNodeInPlug(stereoCameraCenterCamShape,liqLensShader)
                  >9 ShadingNetworkUser::export_user()
                >8  ConvertShadingNetwork::afterExport()
                  >9 ShadingNetworkUser::afterExport_user()
            >6 liqRibTranslatorNew::worldPrologue__(stereoCameraCenterCamShape)
              >7 Renderer::worldPrologue(stereoCameraCenterCamShape)
            >6 liqRibTranslatorNew::lightBlock__(stereoCameraCenterCamShape)
              >7 Renderer::writeLight_pre(|pointLight1|pointLightShape1,stereoCameraCenterCamShape)
              >7 liqRibObj::writeObject(,stereoCameraCenterCamShape,0)
                >8 liqRibLightData::write(,job=stereoCameraCenterCamShape,0)
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::write(|pointLight1|pointLightShape1,,stereoCameraCenterCamShape,ref=0)
                    >10 Helper::RiBeginRef()
                      >11 liqRibData::getFullPathName()
                    >10 rm_writeLightData.cpp::_write(|pointLight1|pointLightShape1,stereoCameraCenterCamShape,...)
                      >11 Renderer::exportPointLight(pointlight,pointLightShape1,...)
                    >10 Helper::RiEndRef()
              >7 Renderer::writeLight_post(|pointLight1|pointLightShape1,stereoCameraCenterCamShape)
              >7 Renderer::writeLight_pre(|pointLight2|pointLightShape2,stereoCameraCenterCamShape)
              >7 liqRibObj::writeObject(,stereoCameraCenterCamShape,0)
                >8 liqRibLightData::write(,job=stereoCameraCenterCamShape,0)
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::write(|pointLight2|pointLightShape2,,stereoCameraCenterCamShape,ref=0)
                    >10 Helper::RiBeginRef()
                      >11 liqRibData::getFullPathName()
                    >10 rm_writeLightData.cpp::_write(|pointLight2|pointLightShape2,stereoCameraCenterCamShape,...)
                      >11 Renderer::exportPointLight(pointlight,pointLightShape2,...)
                    >10 Helper::RiEndRef()
              >7 Renderer::writeLight_post(|pointLight2|pointLightShape2,stereoCameraCenterCamShape)
            >6 liqRibTranslatorNew::coordSysBlock__(stereoCameraCenterCamShape)
              >7 Renderer::coordSysBlock__(stereoCameraCenterCamShape)
            >6 liqRibTranslatorNew::objectBlock__(stereoCameraCenterCamShape)
              >7 liqRibTranslatorNew::objectBlock_data(stereoCameraCenterCamShape)
                >8 liqRibTranslatorNew::getShadowSetObject(stereoCameraCenterCamShape)
                >8 liqRibTranslatorNew::oneObjectBlock_data(|pCube1|pCubeShape1,stereoCameraCenterCamShape)
                  >9 Renderer::exportOneObject_data(|pCube1|pCubeShape1,stereoCameraCenterCamShape)
                    >10 Renderer::_writeObject(|pCube1|pCubeShape1,stereoCameraCenterCamShape,0,0,0)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pCube1_pCubeShape1.1.rib,stereoCameraCenterCamShape,0)
                        >12 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pCube1_pCubeShape1.1.rib,job=stereoCameraCenterCamShape,0)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|pCube1|pCubeShape1,R:/MyDocuments/maya/projects/default/rib/_pCube1_pCubeShape1.1.rib,stereoCameraCenterCamShape,ref=0)
                >8 liqRibTranslatorNew::oneObjectBlock_data(|camera1|cameraShape1,stereoCameraCenterCamShape)
                  >9 Renderer::exportOneObject_data(|camera1|cameraShape1,stereoCameraCenterCamShape)
                    >10 Renderer::_writeObject(|camera1|cameraShape1,stereoCameraCenterCamShape,0,0,0)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_camera1_cameraShape1.1.rib,stereoCameraCenterCamShape,0)
                        >12 liqRibCameraData::write(R:/MyDocuments/maya/projects/default/rib/_camera1_cameraShape1.1.rib,job=stereoCameraCenterCamShape,0)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|camera1|cameraShape1,R:/MyDocuments/maya/projects/default/rib/_camera1_cameraShape1.1.rib,stereoCameraCenterCamShape,ref=0)
                >8 liqRibTranslatorNew::oneObjectBlock_data(|pCube2|pCubeShape2,stereoCameraCenterCamShape)
                  >9 Renderer::exportOneObject_data(|pCube2|pCubeShape2,stereoCameraCenterCamShape)
                    >10 Renderer::_writeObject(|pCube2|pCubeShape2,stereoCameraCenterCamShape,0,0,0)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pCube2_pCubeShape2.1.rib,stereoCameraCenterCamShape,0)
                        >12 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pCube2_pCubeShape2.1.rib,job=stereoCameraCenterCamShape,0)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|pCube2|pCubeShape2,R:/MyDocuments/maya/projects/default/rib/_pCube2_pCubeShape2.1.rib,stereoCameraCenterCamShape,ref=0)
                >8 liqRibTranslatorNew::oneObjectBlock_data(|pCube3|pCubeShape3,stereoCameraCenterCamShape)
                  >9 Renderer::exportOneObject_data(|pCube3|pCubeShape3,stereoCameraCenterCamShape)
                    >10 Renderer::_writeObject(|pCube3|pCubeShape3,stereoCameraCenterCamShape,0,0,0)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pCube3_pCubeShape3.1.rib,stereoCameraCenterCamShape,0)
                        >12 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pCube3_pCubeShape3.1.rib,job=stereoCameraCenterCamShape,0)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|pCube3|pCubeShape3,R:/MyDocuments/maya/projects/default/rib/_pCube3_pCubeShape3.1.rib,stereoCameraCenterCamShape,ref=0)
                >8 liqRibTranslatorNew::oneObjectBlock_data(|stereoCamera|stereoCameraCenterCamShape,stereoCameraCenterCamShape)
                  >9 Renderer::exportOneObject_data(|stereoCamera|stereoCameraCenterCamShape,stereoCameraCenterCamShape)
                    >10 Renderer::_writeObject(|stereoCamera|stereoCameraCenterCamShape,stereoCameraCenterCamShape,0,0,0)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_stereoCamera_stereoCameraCenterCamShape.1.rib,stereoCameraCenterCamShape,0)
                        >12 liqRibCameraData::write(R:/MyDocuments/maya/projects/default/rib/_stereoCamera_stereoCameraCenterCamShape.1.rib,job=stereoCameraCenterCamShape,0)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|stereoCamera|stereoCameraCenterCamShape,R:/MyDocuments/maya/projects/default/rib/_stereoCamera_stereoCameraCenterCamShape.1.rib,stereoCameraCenterCamShape,ref=0)
                >8 liqRibTranslatorNew::oneObjectBlock_data(|stereoCamera|stereoCameraFrustum,stereoCameraCenterCamShape)
                  >9 Renderer::exportOneObject_data(|stereoCamera|stereoCameraFrustum,stereoCameraCenterCamShape)
                    >10 Renderer::_writeObject(|stereoCamera|stereoCameraFrustum,stereoCameraCenterCamShape,0,0,0)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_stereoCamera_stereoCameraFrustum.1.rib,stereoCameraCenterCamShape,0)
                        >12 liqRibLocatorData::write(R:/MyDocuments/maya/projects/default/rib/_stereoCamera_stereoCameraFrustum.1.rib,job=stereoCameraCenterCamShape,0)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|stereoCamera|stereoCameraFrustum,R:/MyDocuments/maya/projects/default/rib/_stereoCamera_stereoCameraFrustum.1.rib,stereoCameraCenterCamShape,ref=0)
                >8 liqRibTranslatorNew::oneObjectBlock_data(|stereoCamera|stereoCameraLeft|stereoCameraLeftShape,stereoCameraCenterCamShape)
                  >9 Renderer::exportOneObject_data(|stereoCamera|stereoCameraLeft|stereoCameraLeftShape,stereoCameraCenterCamShape)
                    >10 Renderer::_writeObject(|stereoCamera|stereoCameraLeft|stereoCameraLeftShape,stereoCameraCenterCamShape,0,0,0)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_stereoCamera_stereoCameraLeft_stereoCameraLeftShape.1.rib,stereoCameraCenterCamShape,0)
                        >12 liqRibCameraData::write(R:/MyDocuments/maya/projects/default/rib/_stereoCamera_stereoCameraLeft_stereoCameraLeftShape.1.rib,job=stereoCameraCenterCamShape,0)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|stereoCamera|stereoCameraLeft|stereoCameraLeftShape,R:/MyDocuments/maya/projects/default/rib/_stereoCamera_stereoCameraLeft_stereoCameraLeftShape.1.rib,stereoCameraCenterCamShape,ref=0)
                >8 liqRibTranslatorNew::oneObjectBlock_data(|stereoCamera|stereoCameraRight|stereoCameraRightShape,stereoCameraCenterCamShape)
                  >9 Renderer::exportOneObject_data(|stereoCamera|stereoCameraRight|stereoCameraRightShape,stereoCameraCenterCamShape)
                    >10 Renderer::_writeObject(|stereoCamera|stereoCameraRight|stereoCameraRightShape,stereoCameraCenterCamShape,0,0,0)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_stereoCamera_stereoCameraRight_stereoCameraRightShape.1.rib,stereoCameraCenterCamShape,0)
                        >12 liqRibCameraData::write(R:/MyDocuments/maya/projects/default/rib/_stereoCamera_stereoCameraRight_stereoCameraRightShape.1.rib,job=stereoCameraCenterCamShape,0)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|stereoCamera|stereoCameraRight|stereoCameraRightShape,R:/MyDocuments/maya/projects/default/rib/_stereoCamera_stereoCameraRight_stereoCameraRightShape.1.rib,stereoCameraCenterCamShape,ref=0)
              >7 liqRibTranslatorNew::objectBlock_reference(stereoCameraCenterCamShape)
                >8 Renderer::objectBlock_reference_begin()
                >8 liqRibTranslatorNew::preGeometryMel()
                  >9 Renderer::preGeometryMel()
                >8 liqRibTranslatorNew::getShadowSetObject(stereoCameraCenterCamShape)
                >8 liqRibTranslatorNew::oneObjectBlock_reference(|pCube1|pCubeShape1,stereoCameraCenterCamShape)
                  >9 Renderer::oneObjectBlock_reference_attribute_begin(|pCube1|pCubeShape1,stereoCameraCenterCamShape)
                  >9 Renderer::oneObjectBlock_reference_attribute_block0(|pCube1|pCubeShape1,stereoCameraCenterCamShape)
                  >9 liqRibTranslatorNew::tRiIlluminate(stereoCameraCenterCamShape,|pCube1|pCubeShape1)
                    >10 Renderer::exportLightLinks(stereoCameraCenterCamShape,|pCube1|pCubeShape1,lightedByWhichLightShapes.size=1)
                  >9 liqRibTranslatorNew::checkSurfaceShader(|pCube1|pCubeShape1,|pCube1|pCubeShape1,,,)
                  >9 liqRibTranslatorNew::checkDisplacementShader(|pCube1|pCubeShape1,|pCube1|pCubeShape1,,,)
                  >9 liqRibTranslatorNew::checkVolumeShader(|pCube1|pCubeShape1,|pCube1|pCubeShape1,,,)
                  >9 Renderer::oneObjectBlock_reference_attribute_block1(|pCube1|pCubeShape1,stereoCameraCenterCamShape)
                    >10 objectNonShadowAttribute(|pCube1|pCubeShape1)
                      >11 liqRibNode::writeUserAttributes()
                        >12 Renderer::writeUserAttributes()
                  >9 liqRibTranslatorNew::writeShader_(1,|pCube1|pCubeShape1,v=0,s=0,c=0,,|pCube1|pCubeShape1,stereoCameraCenterCamShape)
                    >10 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|pCube1|pCubeShape1,|pCube1|pCubeShape1,0)
                      >11 Renderer::F2(0,|pCube1|pCubeShape1)
                      >11 liqRibNode::findShader()
                  >9 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|pCube1|pCubeShape1)
                    >10 Visitor::outputShadingGroup(initialShadingGroup,1)
                      >11 _outputShadingGroup(initialShadingGroup)
                        >12 getShaderFilePath_NoExt(lambert1)
                  >9 Renderer::exportOneObject_reference(|pCube1|pCubeShape1,stereoCameraCenterCamShape)
                    >10 liqRibTranslatorNew::preTransformMel
                    >10 MaxtrixMotionBlur(|pCube1|pCubeShape1,|pCube1|pCubeShape1,0)
                    >10 liqRibTranslatorNew::postTransformMel(kTransform)
                    >10 liqRibTranslatorNew::preShapeMel(kTransform)
                    >10 Renderer::_writeObject(|pCube1|pCubeShape1,stereoCameraCenterCamShape,0,0,1)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pCube1_pCubeShape1.1.rib,stereoCameraCenterCamShape,1)
                        >12 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pCube1_pCubeShape1.1.rib,job=stereoCameraCenterCamShape,1)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|pCube1|pCubeShape1,R:/MyDocuments/maya/projects/default/rib/_pCube1_pCubeShape1.1.rib,stereoCameraCenterCamShape,ref=1)
                              >15 liqRibData::getFullPathName()
                            >14 rm_writeMeshData.cpp::_write(|pCube1|pCubeShape1,stereoCameraCenterCamShape)
                    >10 liqRibTranslatorNew::postShapeMel(kTransform)
                  >9 Renderer::oneObjectBlock_reference_attribute_end(|pCube1|pCubeShape1,stereoCameraCenterCamShape)
                >8 liqRibTranslatorNew::oneObjectBlock_reference(|camera1|cameraShape1,stereoCameraCenterCamShape)
                  >9 Renderer::oneObjectBlock_reference_attribute_begin(|camera1|cameraShape1,stereoCameraCenterCamShape)
                  >9 Renderer::oneObjectBlock_reference_attribute_block0(|camera1|cameraShape1,stereoCameraCenterCamShape)
                  >9 liqRibTranslatorNew::tRiIlluminate(stereoCameraCenterCamShape,|camera1|cameraShape1)
                    >10 Renderer::exportLightLinks(stereoCameraCenterCamShape,|camera1|cameraShape1,lightedByWhichLightShapes.size=0)
                      >11 Renderer::logFrame(|camera1|cameraShape1 is not lighted.)
                  >9 liqRibTranslatorNew::checkSurfaceShader(|camera1|cameraShape1,|camera1|cameraShape1,,,)
                  >9 liqRibTranslatorNew::checkDisplacementShader(|camera1|cameraShape1,|camera1|cameraShape1,,,)
                  >9 liqRibTranslatorNew::checkVolumeShader(|camera1|cameraShape1,|camera1|cameraShape1,,,)
                  >9 Renderer::oneObjectBlock_reference_attribute_block1(|camera1|cameraShape1,stereoCameraCenterCamShape)
                    >10 objectNonShadowAttribute(|camera1|cameraShape1)
                      >11 liqRibNode::writeUserAttributes()
                        >12 Renderer::writeUserAttributes()
                  >9 liqRibTranslatorNew::writeShader_(1,|camera1|cameraShape1,v=0,s=0,c=0,,|camera1|cameraShape1,stereoCameraCenterCamShape)
                    >10 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|camera1|cameraShape1,|camera1|cameraShape1,0)
                      >11 Renderer::F2(0,|camera1|cameraShape1)
                      >11 liqRibNode::findShader()
                  >9 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|camera1|cameraShape1)
                  >9 Renderer::exportOneObject_reference(|camera1|cameraShape1,stereoCameraCenterCamShape)
                    >10 liqRibTranslatorNew::preTransformMel
                    >10 MaxtrixMotionBlur(|camera1|cameraShape1,|camera1|cameraShape1,0)
                    >10 liqRibTranslatorNew::postTransformMel(kTransform)
                    >10 liqRibTranslatorNew::preShapeMel(kTransform)
                    >10 Renderer::_writeObject(|camera1|cameraShape1,stereoCameraCenterCamShape,0,0,1)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_camera1_cameraShape1.1.rib,stereoCameraCenterCamShape,1)
                        >12 liqRibCameraData::write(R:/MyDocuments/maya/projects/default/rib/_camera1_cameraShape1.1.rib,job=stereoCameraCenterCamShape,1)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|camera1|cameraShape1,R:/MyDocuments/maya/projects/default/rib/_camera1_cameraShape1.1.rib,stereoCameraCenterCamShape,ref=1)
                              >15 liqRibData::getFullPathName()
                            >14 rm_writeCameraData.cpp::_write(|camera1|cameraShape1,stereoCameraCenterCamShape)
                    >10 liqRibTranslatorNew::postShapeMel(kTransform)
                  >9 Renderer::oneObjectBlock_reference_attribute_end(|camera1|cameraShape1,stereoCameraCenterCamShape)
                >8 liqRibTranslatorNew::oneObjectBlock_reference(|pCube2|pCubeShape2,stereoCameraCenterCamShape)
                  >9 Renderer::oneObjectBlock_reference_attribute_begin(|pCube2|pCubeShape2,stereoCameraCenterCamShape)
                  >9 Renderer::oneObjectBlock_reference_attribute_block0(|pCube2|pCubeShape2,stereoCameraCenterCamShape)
                  >9 liqRibTranslatorNew::tRiIlluminate(stereoCameraCenterCamShape,|pCube2|pCubeShape2)
                    >10 Renderer::exportLightLinks(stereoCameraCenterCamShape,|pCube2|pCubeShape2,lightedByWhichLightShapes.size=1)
                  >9 liqRibTranslatorNew::checkSurfaceShader(|pCube2|pCubeShape2,|pCube2|pCubeShape2,,,)
                  >9 liqRibTranslatorNew::checkDisplacementShader(|pCube2|pCubeShape2,|pCube2|pCubeShape2,,,)
                  >9 liqRibTranslatorNew::checkVolumeShader(|pCube2|pCubeShape2,|pCube2|pCubeShape2,,,)
                  >9 Renderer::oneObjectBlock_reference_attribute_block1(|pCube2|pCubeShape2,stereoCameraCenterCamShape)
                    >10 objectNonShadowAttribute(|pCube2|pCubeShape2)
                      >11 liqRibNode::writeUserAttributes()
                        >12 Renderer::writeUserAttributes()
                  >9 liqRibTranslatorNew::writeShader_(1,|pCube2|pCubeShape2,v=0,s=0,c=0,,|pCube2|pCubeShape2,stereoCameraCenterCamShape)
                    >10 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|pCube2|pCubeShape2,|pCube2|pCubeShape2,0)
                      >11 Renderer::F2(0,|pCube2|pCubeShape2)
                      >11 liqRibNode::findShader()
                  >9 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|pCube2|pCubeShape2)
                    >10 Visitor::outputShadingGroup(lambert3SG,1)
                      >11 _outputShadingGroup(lambert3SG)
                        >12 getShaderFilePath_NoExt(lambert3)
                  >9 Renderer::exportOneObject_reference(|pCube2|pCubeShape2,stereoCameraCenterCamShape)
                    >10 liqRibTranslatorNew::preTransformMel
                    >10 MaxtrixMotionBlur(|pCube2|pCubeShape2,|pCube2|pCubeShape2,0)
                    >10 liqRibTranslatorNew::postTransformMel(kTransform)
                    >10 liqRibTranslatorNew::preShapeMel(kTransform)
                    >10 Renderer::_writeObject(|pCube2|pCubeShape2,stereoCameraCenterCamShape,0,0,1)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pCube2_pCubeShape2.1.rib,stereoCameraCenterCamShape,1)
                        >12 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pCube2_pCubeShape2.1.rib,job=stereoCameraCenterCamShape,1)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|pCube2|pCubeShape2,R:/MyDocuments/maya/projects/default/rib/_pCube2_pCubeShape2.1.rib,stereoCameraCenterCamShape,ref=1)
                              >15 liqRibData::getFullPathName()
                            >14 rm_writeMeshData.cpp::_write(|pCube2|pCubeShape2,stereoCameraCenterCamShape)
                    >10 liqRibTranslatorNew::postShapeMel(kTransform)
                  >9 Renderer::oneObjectBlock_reference_attribute_end(|pCube2|pCubeShape2,stereoCameraCenterCamShape)
                >8 liqRibTranslatorNew::oneObjectBlock_reference(|pCube3|pCubeShape3,stereoCameraCenterCamShape)
                  >9 Renderer::oneObjectBlock_reference_attribute_begin(|pCube3|pCubeShape3,stereoCameraCenterCamShape)
                  >9 Renderer::oneObjectBlock_reference_attribute_block0(|pCube3|pCubeShape3,stereoCameraCenterCamShape)
                  >9 liqRibTranslatorNew::tRiIlluminate(stereoCameraCenterCamShape,|pCube3|pCubeShape3)
                    >10 Renderer::exportLightLinks(stereoCameraCenterCamShape,|pCube3|pCubeShape3,lightedByWhichLightShapes.size=2)
                  >9 liqRibTranslatorNew::checkSurfaceShader(|pCube3|pCubeShape3,|pCube3|pCubeShape3,,,)
                  >9 liqRibTranslatorNew::checkDisplacementShader(|pCube3|pCubeShape3,|pCube3|pCubeShape3,,,)
                  >9 liqRibTranslatorNew::checkVolumeShader(|pCube3|pCubeShape3,|pCube3|pCubeShape3,,,)
                  >9 Renderer::oneObjectBlock_reference_attribute_block1(|pCube3|pCubeShape3,stereoCameraCenterCamShape)
                    >10 objectNonShadowAttribute(|pCube3|pCubeShape3)
                      >11 liqRibNode::writeUserAttributes()
                        >12 Renderer::writeUserAttributes()
                  >9 liqRibTranslatorNew::writeShader_(1,|pCube3|pCubeShape3,v=0,s=0,c=0,,|pCube3|pCubeShape3,stereoCameraCenterCamShape)
                    >10 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|pCube3|pCubeShape3,|pCube3|pCubeShape3,0)
                      >11 Renderer::F2(0,|pCube3|pCubeShape3)
                      >11 liqRibNode::findShader()
                  >9 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|pCube3|pCubeShape3)
                    >10 Visitor::outputShadingGroup(lambert4SG,1)
                      >11 _outputShadingGroup(lambert4SG)
                        >12 getShaderFilePath_NoExt(lambert4)
                  >9 Renderer::exportOneObject_reference(|pCube3|pCubeShape3,stereoCameraCenterCamShape)
                    >10 liqRibTranslatorNew::preTransformMel
                    >10 MaxtrixMotionBlur(|pCube3|pCubeShape3,|pCube3|pCubeShape3,0)
                    >10 liqRibTranslatorNew::postTransformMel(kTransform)
                    >10 liqRibTranslatorNew::preShapeMel(kTransform)
                    >10 Renderer::_writeObject(|pCube3|pCubeShape3,stereoCameraCenterCamShape,0,0,1)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pCube3_pCubeShape3.1.rib,stereoCameraCenterCamShape,1)
                        >12 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pCube3_pCubeShape3.1.rib,job=stereoCameraCenterCamShape,1)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|pCube3|pCubeShape3,R:/MyDocuments/maya/projects/default/rib/_pCube3_pCubeShape3.1.rib,stereoCameraCenterCamShape,ref=1)
                              >15 liqRibData::getFullPathName()
                            >14 rm_writeMeshData.cpp::_write(|pCube3|pCubeShape3,stereoCameraCenterCamShape)
                    >10 liqRibTranslatorNew::postShapeMel(kTransform)
                  >9 Renderer::oneObjectBlock_reference_attribute_end(|pCube3|pCubeShape3,stereoCameraCenterCamShape)
                >8 liqRibTranslatorNew::oneObjectBlock_reference(|stereoCamera|stereoCameraCenterCamShape,stereoCameraCenterCamShape)
                  >9 Renderer::oneObjectBlock_reference_attribute_begin(|stereoCamera|stereoCameraCenterCamShape,stereoCameraCenterCamShape)
                  >9 Renderer::oneObjectBlock_reference_attribute_block0(|stereoCamera|stereoCameraCenterCamShape,stereoCameraCenterCamShape)
                  >9 liqRibTranslatorNew::tRiIlluminate(stereoCameraCenterCamShape,|stereoCamera|stereoCameraCenterCamShape)
                    >10 Renderer::exportLightLinks(stereoCameraCenterCamShape,|stereoCamera|stereoCameraCenterCamShape,lightedByWhichLightShapes.size=0)
                      >11 Renderer::logFrame(|stereoCamera|stereoCameraCenterCamShape is not lighted.)
                  >9 liqRibTranslatorNew::checkSurfaceShader(|stereoCamera|stereoCameraCenterCamShape,|stereoCamera|stereoCameraCenterCamShape,,,)
                  >9 liqRibTranslatorNew::checkDisplacementShader(|stereoCamera|stereoCameraCenterCamShape,|stereoCamera|stereoCameraCenterCamShape,,,)
                  >9 liqRibTranslatorNew::checkVolumeShader(|stereoCamera|stereoCameraCenterCamShape,|stereoCamera|stereoCameraCenterCamShape,,,)
                  >9 Renderer::oneObjectBlock_reference_attribute_block1(|stereoCamera|stereoCameraCenterCamShape,stereoCameraCenterCamShape)
                    >10 objectNonShadowAttribute(|stereoCamera|stereoCameraCenterCamShape)
                      >11 liqRibNode::writeUserAttributes()
                        >12 Renderer::writeUserAttributes()
                  >9 liqRibTranslatorNew::writeShader_(1,|stereoCamera|stereoCameraCenterCamShape,v=0,s=0,c=0,,|stereoCamera|stereoCameraCenterCamShape,stereoCameraCenterCamShape)
                    >10 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|stereoCamera|stereoCameraCenterCamShape,|stereoCamera|stereoCameraCenterCamShape,0)
                      >11 Renderer::F2(0,|stereoCamera|stereoCameraCenterCamShape)
                      >11 liqRibNode::findShader()
                  >9 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|stereoCamera|stereoCameraCenterCamShape)
                  >9 Renderer::exportOneObject_reference(|stereoCamera|stereoCameraCenterCamShape,stereoCameraCenterCamShape)
                    >10 liqRibTranslatorNew::preTransformMel
                    >10 MaxtrixMotionBlur(|stereoCamera|stereoCameraCenterCamShape,|stereoCamera|stereoCameraCenterCamShape,0)
                    >10 liqRibTranslatorNew::postTransformMel(kPluginTransformNode)
                    >10 liqRibTranslatorNew::preShapeMel(kPluginTransformNode)
                    >10 Renderer::_writeObject(|stereoCamera|stereoCameraCenterCamShape,stereoCameraCenterCamShape,0,0,1)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_stereoCamera_stereoCameraCenterCamShape.1.rib,stereoCameraCenterCamShape,1)
                        >12 liqRibCameraData::write(R:/MyDocuments/maya/projects/default/rib/_stereoCamera_stereoCameraCenterCamShape.1.rib,job=stereoCameraCenterCamShape,1)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|stereoCamera|stereoCameraCenterCamShape,R:/MyDocuments/maya/projects/default/rib/_stereoCamera_stereoCameraCenterCamShape.1.rib,stereoCameraCenterCamShape,ref=1)
                              >15 liqRibData::getFullPathName()
                            >14 rm_writeCameraData.cpp::_write(|stereoCamera|stereoCameraCenterCamShape,stereoCameraCenterCamShape)
                    >10 liqRibTranslatorNew::postShapeMel(kPluginTransformNode)
                  >9 Renderer::oneObjectBlock_reference_attribute_end(|stereoCamera|stereoCameraCenterCamShape,stereoCameraCenterCamShape)
                >8 liqRibTranslatorNew::oneObjectBlock_reference(|stereoCamera|stereoCameraFrustum,stereoCameraCenterCamShape)
                  >9 Renderer::oneObjectBlock_reference_attribute_begin(|stereoCamera|stereoCameraFrustum,stereoCameraCenterCamShape)
                  >9 Renderer::oneObjectBlock_reference_attribute_block0(|stereoCamera|stereoCameraFrustum,stereoCameraCenterCamShape)
                  >9 liqRibTranslatorNew::tRiIlluminate(stereoCameraCenterCamShape,|stereoCamera|stereoCameraFrustum)
                    >10 Renderer::exportLightLinks(stereoCameraCenterCamShape,|stereoCamera|stereoCameraFrustum,lightedByWhichLightShapes.size=0)
                      >11 Renderer::logFrame(|stereoCamera|stereoCameraFrustum is not lighted.)
                  >9 liqRibTranslatorNew::checkSurfaceShader(|stereoCamera|stereoCameraFrustum,|stereoCamera|stereoCameraFrustum,,,)
                  >9 liqRibTranslatorNew::checkDisplacementShader(|stereoCamera|stereoCameraFrustum,|stereoCamera|stereoCameraFrustum,,,)
                  >9 liqRibTranslatorNew::checkVolumeShader(|stereoCamera|stereoCameraFrustum,|stereoCamera|stereoCameraFrustum,,,)
                  >9 Renderer::oneObjectBlock_reference_attribute_block1(|stereoCamera|stereoCameraFrustum,stereoCameraCenterCamShape)
                    >10 objectNonShadowAttribute(|stereoCamera|stereoCameraFrustum)
                      >11 liqRibNode::writeUserAttributes()
                        >12 Renderer::writeUserAttributes()
                  >9 liqRibTranslatorNew::writeShader_(1,|stereoCamera|stereoCameraFrustum,v=0,s=0,c=0,,|stereoCamera|stereoCameraFrustum,stereoCameraCenterCamShape)
                    >10 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|stereoCamera|stereoCameraFrustum,|stereoCamera|stereoCameraFrustum,0)
                      >11 Renderer::F2(0,|stereoCamera|stereoCameraFrustum)
                      >11 liqRibNode::findShader()
                  >9 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|stereoCamera|stereoCameraFrustum)
                  >9 Renderer::exportOneObject_reference(|stereoCamera|stereoCameraFrustum,stereoCameraCenterCamShape)
                    >10 liqRibTranslatorNew::preTransformMel
                    >10 MaxtrixMotionBlur(|stereoCamera|stereoCameraFrustum,|stereoCamera|stereoCameraFrustum,0)
                    >10 liqRibTranslatorNew::postTransformMel(kPluginTransformNode)
                    >10 liqRibTranslatorNew::preShapeMel(kPluginTransformNode)
                    >10 Renderer::_writeObject(|stereoCamera|stereoCameraFrustum,stereoCameraCenterCamShape,0,0,1)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_stereoCamera_stereoCameraFrustum.1.rib,stereoCameraCenterCamShape,1)
                        >12 liqRibLocatorData::write(R:/MyDocuments/maya/projects/default/rib/_stereoCamera_stereoCameraFrustum.1.rib,job=stereoCameraCenterCamShape,1)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|stereoCamera|stereoCameraFrustum,R:/MyDocuments/maya/projects/default/rib/_stereoCamera_stereoCameraFrustum.1.rib,stereoCameraCenterCamShape,ref=1)
                              >15 liqRibData::getFullPathName()
                            >14 rm_writeLocatorData.cpp::write(|stereoCamera|stereoCameraFrustum,stereoCameraCenterCamShape,...)
                    >10 liqRibTranslatorNew::postShapeMel(kPluginTransformNode)
                  >9 Renderer::oneObjectBlock_reference_attribute_end(|stereoCamera|stereoCameraFrustum,stereoCameraCenterCamShape)
                >8 liqRibTranslatorNew::oneObjectBlock_reference(|stereoCamera|stereoCameraLeft|stereoCameraLeftShape,stereoCameraCenterCamShape)
                  >9 Renderer::oneObjectBlock_reference_attribute_begin(|stereoCamera|stereoCameraLeft|stereoCameraLeftShape,stereoCameraCenterCamShape)
                  >9 Renderer::oneObjectBlock_reference_attribute_block0(|stereoCamera|stereoCameraLeft|stereoCameraLeftShape,stereoCameraCenterCamShape)
                  >9 liqRibTranslatorNew::tRiIlluminate(stereoCameraCenterCamShape,|stereoCamera|stereoCameraLeft|stereoCameraLeftShape)
                    >10 Renderer::exportLightLinks(stereoCameraCenterCamShape,|stereoCamera|stereoCameraLeft|stereoCameraLeftShape,lightedByWhichLightShapes.size=0)
                      >11 Renderer::logFrame(|stereoCamera|stereoCameraLeft|stereoCameraLeftShape is not lighted.)
                  >9 liqRibTranslatorNew::checkSurfaceShader(|stereoCamera|stereoCameraLeft|stereoCameraLeftShape,|stereoCamera|stereoCameraLeft|stereoCameraLeftShape,,,)
                  >9 liqRibTranslatorNew::checkDisplacementShader(|stereoCamera|stereoCameraLeft|stereoCameraLeftShape,|stereoCamera|stereoCameraLeft|stereoCameraLeftShape,,,)
                  >9 liqRibTranslatorNew::checkVolumeShader(|stereoCamera|stereoCameraLeft|stereoCameraLeftShape,|stereoCamera|stereoCameraLeft|stereoCameraLeftShape,,,)
                  >9 Renderer::oneObjectBlock_reference_attribute_block1(|stereoCamera|stereoCameraLeft|stereoCameraLeftShape,stereoCameraCenterCamShape)
                    >10 objectNonShadowAttribute(|stereoCamera|stereoCameraLeft|stereoCameraLeftShape)
                      >11 liqRibNode::writeUserAttributes()
                        >12 Renderer::writeUserAttributes()
                  >9 liqRibTranslatorNew::writeShader_(1,|stereoCamera|stereoCameraLeft|stereoCameraLeftShape,v=0,s=0,c=0,,|stereoCamera|stereoCameraLeft|stereoCameraLeftShape,stereoCameraCenterCamShape)
                    >10 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|stereoCamera|stereoCameraLeft|stereoCameraLeftShape,|stereoCamera|stereoCameraLeft|stereoCameraLeftShape,0)
                      >11 Renderer::F2(0,|stereoCamera|stereoCameraLeft|stereoCameraLeftShape)
                      >11 liqRibNode::findShader()
                  >9 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|stereoCamera|stereoCameraLeft|stereoCameraLeftShape)
                  >9 Renderer::exportOneObject_reference(|stereoCamera|stereoCameraLeft|stereoCameraLeftShape,stereoCameraCenterCamShape)
                    >10 liqRibTranslatorNew::preTransformMel
                    >10 MaxtrixMotionBlur(|stereoCamera|stereoCameraLeft|stereoCameraLeftShape,|stereoCamera|stereoCameraLeft|stereoCameraLeftShape,0)
                    >10 liqRibTranslatorNew::postTransformMel(kTransform)
                    >10 liqRibTranslatorNew::preShapeMel(kTransform)
                    >10 Renderer::_writeObject(|stereoCamera|stereoCameraLeft|stereoCameraLeftShape,stereoCameraCenterCamShape,0,0,1)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_stereoCamera_stereoCameraLeft_stereoCameraLeftShape.1.rib,stereoCameraCenterCamShape,1)
                        >12 liqRibCameraData::write(R:/MyDocuments/maya/projects/default/rib/_stereoCamera_stereoCameraLeft_stereoCameraLeftShape.1.rib,job=stereoCameraCenterCamShape,1)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|stereoCamera|stereoCameraLeft|stereoCameraLeftShape,R:/MyDocuments/maya/projects/default/rib/_stereoCamera_stereoCameraLeft_stereoCameraLeftShape.1.rib,stereoCameraCenterCamShape,ref=1)
                              >15 liqRibData::getFullPathName()
                            >14 rm_writeCameraData.cpp::_write(|stereoCamera|stereoCameraLeft|stereoCameraLeftShape,stereoCameraCenterCamShape)
                    >10 liqRibTranslatorNew::postShapeMel(kTransform)
                  >9 Renderer::oneObjectBlock_reference_attribute_end(|stereoCamera|stereoCameraLeft|stereoCameraLeftShape,stereoCameraCenterCamShape)
                >8 liqRibTranslatorNew::oneObjectBlock_reference(|stereoCamera|stereoCameraRight|stereoCameraRightShape,stereoCameraCenterCamShape)
                  >9 Renderer::oneObjectBlock_reference_attribute_begin(|stereoCamera|stereoCameraRight|stereoCameraRightShape,stereoCameraCenterCamShape)
                  >9 Renderer::oneObjectBlock_reference_attribute_block0(|stereoCamera|stereoCameraRight|stereoCameraRightShape,stereoCameraCenterCamShape)
                  >9 liqRibTranslatorNew::tRiIlluminate(stereoCameraCenterCamShape,|stereoCamera|stereoCameraRight|stereoCameraRightShape)
                    >10 Renderer::exportLightLinks(stereoCameraCenterCamShape,|stereoCamera|stereoCameraRight|stereoCameraRightShape,lightedByWhichLightShapes.size=0)
                      >11 Renderer::logFrame(|stereoCamera|stereoCameraRight|stereoCameraRightShape is not lighted.)
                  >9 liqRibTranslatorNew::checkSurfaceShader(|stereoCamera|stereoCameraRight|stereoCameraRightShape,|stereoCamera|stereoCameraRight|stereoCameraRightShape,,,)
                  >9 liqRibTranslatorNew::checkDisplacementShader(|stereoCamera|stereoCameraRight|stereoCameraRightShape,|stereoCamera|stereoCameraRight|stereoCameraRightShape,,,)
                  >9 liqRibTranslatorNew::checkVolumeShader(|stereoCamera|stereoCameraRight|stereoCameraRightShape,|stereoCamera|stereoCameraRight|stereoCameraRightShape,,,)
                  >9 Renderer::oneObjectBlock_reference_attribute_block1(|stereoCamera|stereoCameraRight|stereoCameraRightShape,stereoCameraCenterCamShape)
                    >10 objectNonShadowAttribute(|stereoCamera|stereoCameraRight|stereoCameraRightShape)
                      >11 liqRibNode::writeUserAttributes()
                        >12 Renderer::writeUserAttributes()
                  >9 liqRibTranslatorNew::writeShader_(1,|stereoCamera|stereoCameraRight|stereoCameraRightShape,v=0,s=0,c=0,,|stereoCamera|stereoCameraRight|stereoCameraRightShape,stereoCameraCenterCamShape)
                    >10 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|stereoCamera|stereoCameraRight|stereoCameraRightShape,|stereoCamera|stereoCameraRight|stereoCameraRightShape,0)
                      >11 Renderer::F2(0,|stereoCamera|stereoCameraRight|stereoCameraRightShape)
                      >11 liqRibNode::findShader()
                  >9 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|stereoCamera|stereoCameraRight|stereoCameraRightShape)
                  >9 Renderer::exportOneObject_reference(|stereoCamera|stereoCameraRight|stereoCameraRightShape,stereoCameraCenterCamShape)
                    >10 liqRibTranslatorNew::preTransformMel
                    >10 MaxtrixMotionBlur(|stereoCamera|stereoCameraRight|stereoCameraRightShape,|stereoCamera|stereoCameraRight|stereoCameraRightShape,0)
                    >10 liqRibTranslatorNew::postTransformMel(kTransform)
                    >10 liqRibTranslatorNew::preShapeMel(kTransform)
                    >10 Renderer::_writeObject(|stereoCamera|stereoCameraRight|stereoCameraRightShape,stereoCameraCenterCamShape,0,0,1)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_stereoCamera_stereoCameraRight_stereoCameraRightShape.1.rib,stereoCameraCenterCamShape,1)
                        >12 liqRibCameraData::write(R:/MyDocuments/maya/projects/default/rib/_stereoCamera_stereoCameraRight_stereoCameraRightShape.1.rib,job=stereoCameraCenterCamShape,1)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|stereoCamera|stereoCameraRight|stereoCameraRightShape,R:/MyDocuments/maya/projects/default/rib/_stereoCamera_stereoCameraRight_stereoCameraRightShape.1.rib,stereoCameraCenterCamShape,ref=1)
                              >15 liqRibData::getFullPathName()
                            >14 rm_writeCameraData.cpp::_write(|stereoCamera|stereoCameraRight|stereoCameraRightShape,stereoCameraCenterCamShape)
                    >10 liqRibTranslatorNew::postShapeMel(kTransform)
                  >9 Renderer::oneObjectBlock_reference_attribute_end(|stereoCamera|stereoCameraRight|stereoCameraRightShape,stereoCameraCenterCamShape)
                >8 Renderer::objectBlock_reference_end()
            >6 liqRibTranslatorNew::worldEpilogue__()
              >7 liqRibTranslator::worldEpilogue()
                >8 Renderer::worldEpilogue()
            >6 liqRibTranslatorNew::frameEpilogue__(1)
              >7 Renderer::frameEpilogue(1)
            >6 liqRibTranslatorNew::ribEpilogue__(stereoCameraCenterCamShape)
              >7 Renderer::ribPrologue_end(stereoCameraCenterCamShape)
          >5 Renderer::HeroPassEnd(stereoCameraCenterCamShape)
            >6 rm::Renderer::renderAll_local(R:/MyDocuments/maya/projects/default/rib/stereo_camera_stereoCameraCenterCamShape.0001..rib)
              >7 liqProcessLauncher::_execute(renderdl,   "R:/MyDocuments/maya/projects/default/rib/stereo_camera_stereoCameraCenterCamShape.0001..rib","R:/MyDocuments/maya/projects/default/", wait=0)
                >8 liqProcessLauncher::_execute(renderdl,   "R:/MyDocuments/maya/projects/default/rib/stereo_camera_stereoCameraCenterCamShape.0001..rib","R:/MyDocuments/maya/projects/default/", wait=0)
        >4 liqRenderScript::addJob(job.title=stereo_cameraFrame0,0)
          >5 liqRenderScript::popNextJobID()
        >4 liqRibTranslatorNew::postActions(defaultRenderLayer)
    >2 RendererMgr::test()
    >2 Renderer::closeLog()(but do nothing now)
    >2 RendererMgr::epilogue()
    >2 RendererMgr::uninstall()
      >3 ShaderMgr::clearValidConnection()
    >2 RendererMgr::unsetFactory()
