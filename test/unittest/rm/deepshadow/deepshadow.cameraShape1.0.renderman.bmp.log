>0 liqRibTranslator::doIt()-->if(checkSettings()==true)
  >1 RendererMgr::setFactory(renderman)
  >1 RendererMgr::install()
  >1 RendererMgr::prologue()
  >1 Renderer::openLog(R:/MyDocuments/maya/projects/default/rib/deepshadow.cameraShape1.1.renderman.bmp)(but do nothing now)
  >1 Renderer::canExport()
  >1 liqRibTranslatorNew::_doItNew(args,defaultRenderLayer)
    >2 liqRibTranslatorNew::_doItNewWithoutRenderScript(arg,defaultRenderLayer)
      >3 liqRibTranslator::verifyOutputDirectories()
        >4 liqRibTranslator::verifyResourceDir(RIB, rib, 0)
        >4 liqRibTranslator::verifyResourceDir(Texture, rmantex, 0)
        >4 liqRibTranslator::verifyResourceDir(Picture, rmanpix/, 0)
        >4 liqRibTranslator::verifyResourceDir(Temp Files, rmantmp/, 0)
      >3 liqRibTranslator::generateRenderScriptName()
      >3 liqRibTranslator::generateTempMayaSceneName()
      >3 tFrameScriptJobMgr::setCommonParameters(deepshadowFrame0)
      >3 liqRibTranslatorNew::processOneFrame(0, liqglo__)
        >4 liqRibTranslatorNew::buildJobs__()
          >5 liqRibTranslatorNew::buildShadowJobs__()
            >6 tJobScriptMgr::buildShadowJob(thisJob___, 0)
              >7 tJobScriptMgr::buildShadowJob_SpotAndDirectionLight(thisJob___, shadowCamPath, spotLightShape3,|spotLight3|spotLightShape3,0)
              >7 tJobScriptMgr::buildShadowJob_SpotAndDirectionLight(thisJob___, shadowCamPath, spotLightShape5,|spotLight5|spotLightShape5,0)
            >6 tJobScriptMgr::buildShadowCameraJob(thisJob___, 0)
          >5 tRibCameraMgr::gatherDataForJob(liqglo___, spotLightShape5,jobList__,0,1)
          >5 liqRibTranslator::generateFileName(1,spotLightShape3)
          >5 liqRibTranslator::generateFileName(0,spotLightShape3)
          >5 liqRibTranslator::generateFileName(1,spotLightShape5)
          >5 liqRibTranslator::generateFileName(0,spotLightShape5)
          >5 liqRibTranslator::generateFileName(4,cameraShape1)
          >5 liqRibTranslator::generateFileName(5,cameraShape1)
            >6 liqRibTranslator::generateImageName(, job(cameraShape1)), deepshad
          >5 liqRibTranslator::renderFrameSort(spotLightShape5,spotLightShape3)
          >5 liqRibTranslator::renderFrameSort(spotLightShape5,spotLightShape3)
          >5 liqRibTranslator::renderFrameSort(cameraShape1,spotLightShape3)
          >5 liqRibTranslator::renderFrameSort(cameraShape1,spotLightShape5)
          >5 liqRibTranslator::renderFrameSort(spotLightShape5,spotLightShape3)
          >5 liqRibTranslator::renderFrameSort(spotLightShape5,spotLightShape3)
        >4 liqRibTranslatorNew::calaculateSamplingTime(1)
        >4 liqRibTranslatorNew::scanScene__(1,0)
          >5 tJobScriptMgr::scanScene(1,0, htable__, count, returnStatus__)
            >6 liqRibHT::insert(|spotLight3|spotLightShape3,lframe,0,3,0,matrix,,-1)
              >7 liqRibHT::hash(|spotLight3|spotLightShape3,0)
              >7 liqRibHT::find(|spotLight3|spotLightShape3,|spotLight3|spotLightShape3,3)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|spotLight3|spotLightShape3,0,3,-1)
                >8 liqRibNode::parseVectorAttributes(spotLight3,,2)
                >8 liqRibNode::parseVectorAttributes(spotLight3,,3)
                >8 liqRibNode::parseVectorAttributes(spotLight3,,4)
                >8 liqRibNode::findShadingGroup(|spotLight3|spotLightShape3,3)
                >8 liqRibNode::findShader()
                >8 liqRibNode::findDisp()
                >8 liqRibNode::findVolume()
                >8 liqRibNode::getColor(&shader,&color)
                >8 liqRibNode::getOpacity(&shader,&color)
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|spotLight3|spotLightShape3,3)
                  >9 liqRibLightData::liqRibLightData(|spotLight3|spotLightShape3)
                    >10 liqRibData::addAdditionalSurfaceParameters(spotLightShape3)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
                    >10 liqRibLightData::autoShadowName(-1)
            >6 liqRibHT::insert(|spotLight5|spotLightShape5,lframe,0,3,1,matrix,,-1)
              >7 liqRibHT::hash(|spotLight5|spotLightShape5,1)
              >7 liqRibHT::find(|spotLight5|spotLightShape5,|spotLight5|spotLightShape5,3)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|spotLight5|spotLightShape5,0,3,-1)
                >8 liqRibNode::parseVectorAttributes(spotLight5,,2)
                >8 liqRibNode::parseVectorAttributes(spotLight5,,3)
                >8 liqRibNode::parseVectorAttributes(spotLight5,,4)
                >8 liqRibNode::findShadingGroup(|spotLight5|spotLightShape5,3)
                >8 liqRibNode::findShader()
                >8 liqRibNode::findDisp()
                >8 liqRibNode::findVolume()
                >8 liqRibNode::getColor(&shader,&color)
                >8 liqRibNode::getOpacity(&shader,&color)
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|spotLight5|spotLightShape5,3)
                  >9 liqRibLightData::liqRibLightData(|spotLight5|spotLightShape5)
                    >10 liqRibData::addAdditionalSurfaceParameters(spotLightShape5)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
                    >10 liqRibLightData::autoShadowName(-1)
          >5 tLocatorMgr::scanScene(1,0,htable__,count__,returnStatus__)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibHT::insert(|pPlane5|pPlaneShape5,lframe,0,0,2,matrix,,-1)
              >7 liqRibHT::hash(|pPlane5|pPlaneShape5,2)
              >7 liqRibHT::find(|pPlane5|pPlaneShape5,|pPlane5|pPlaneShape5,0)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|pPlane5|pPlaneShape5,0,0,-1)
                >8 liqRibNode::parseVectorAttributes(pPlane5,,2)
                >8 liqRibNode::parseVectorAttributes(pPlane5,,3)
                >8 liqRibNode::parseVectorAttributes(pPlane5,,4)
                >8 liqRibNode::findShadingGroup(|pPlane5|pPlaneShape5,0)
                >8 liqRibNode::findShader()
                >8 liqRibNode::findDisp()
                >8 liqRibNode::findVolume()
                >8 liqRibNode::getColor(&shader,&color)
                >8 liqRibNode::getOpacity(&shader,&color)
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|pPlane5|pPlaneShape5,0)
                  >9 liqRibMeshData::liqRibMeshData(|pPlane5|pPlaneShape5)
                    >10 liqRibData::addAdditionalSurfaceParameters(pPlaneShape5)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibHT::insert(|pCube53|pCubeShape53,lframe,0,0,3,matrix,,-1)
              >7 liqRibHT::hash(|pCube53|pCubeShape53,3)
              >7 liqRibHT::find(|pCube53|pCubeShape53,|pCube53|pCubeShape53,0)
              >7 liqRibNode::liqRibNode(instanceOfNode,)
              >7 liqRibNode::set(|pCube53|pCubeShape53,0,0,-1)
                >8 liqRibNode::parseVectorAttributes(pCube53,,2)
                >8 liqRibNode::parseVectorAttributes(pCube53,,3)
                >8 liqRibNode::parseVectorAttributes(pCube53,,4)
                >8 liqRibNode::findShadingGroup(|pCube53|pCubeShape53,0)
                >8 liqRibNode::findShader()
                >8 liqRibNode::findDisp()
                >8 liqRibNode::findVolume()
                >8 liqRibNode::getColor(&shader,&color)
                >8 liqRibNode::getOpacity(&shader,&color)
                >8 liqRibNode::getMatteMode(&shader)
                >8 liqRibObj::liqRibObj(|pCube53|pCubeShape53,0)
                  >9 liqRibMeshData::liqRibMeshData(|pCube53|pCubeShape53)
                    >10 liqRibData::addAdditionalSurfaceParameters(pCubeShape53)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                      >11 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
          >5 liqRibTranslatorNew::dealwithParticleInstancedObjects(0,1,4)
          >5 liqRibTranslatorNew::getLightData(iter__,0)
          >5 liqRibTranslatorNew::getLightData(iter__,0)
          >5 liqRibTranslatorNew::getCameraData(iter__,0)
            >6 liqRibTranslator::getCameraInfo(|camera1|cameraShape1,)
              >7 liqRibTranslator::portFieldOfView(863,576,&horizontal,&vertical,&fnCamera)
                >8 liqRibTranslator::computeViewingFrustum(1.49826,,&left,&right,&bottom,&top,|camera1|cameraShape1)
            >6 liqRibTranslator::getCameraFilmOffset(|camera1|cameraShape1,)
            >6 liqRibTranslator::getCameraTransform(|camera1|cameraShape1,)
        >4 liqRibTranslatorNew::doTextures(size=0)
          >5 rm::Renderer::doTextures(txtList.size()=0)
        >4 liqRibTranslatorNew::doShadows(size=2)
          >5 rm::Renderer::doShadows(shadowList_.size()=2)
            >6 liqProcessLauncher::_execute(renderdl, "R:/MyDocuments/maya/projects/default/rib/deepshadow_spotLightShape3_DSH.0001..rib",R:/MyDocuments/maya/projects/default/, wait=1)
            >6 liqProcessLauncher::_execute(renderdl, "R:/MyDocuments/maya/projects/default/rib/deepshadow_spotLightShape5_DSH.0001..rib",R:/MyDocuments/maya/projects/default/, wait=1)
        >4 Renderer::setRenderScriptFormatAndCompress(0,0)
          >5 Renderer::_RiOption_format_compress(0,0)
        >4 tShadowRibWriterMgr::write(liqglo___,spotLightShape3,1,0,jobList__.size=3)
          >5 Renderer::isBaseShadowReady(spotLightShape3)
          >5 Renderer::BaseShadowBegin(spotLightShape3)
            >6 liqRibTranslator::generateFileName(2,spotLightShape3)
            >6 RiBegin_liq(R:/MyDocuments/maya/projects/default/rib/deepshadow_SHADOWBODY.0001..rib(strlen=72)
          >5 liqRibTranslatorNew::worldPrologue__(spotLightShape3)
            >6 Renderer::worldPrologue(spotLightShape3)
          >5 liqRibTranslatorNew::coordSysBlock__(spotLightShape3)
            >6 Renderer::coordSysBlock__(spotLightShape3)
          >5 liqRibTranslatorNew::objectBlock__(spotLightShape3)
            >6 liqRibTranslatorNew::objectBlock_data(spotLightShape3)
              >7 liqRibTranslatorNew::getShadowSetObject(spotLightShape3)
              >7 liqRibTranslatorNew::oneObjectBlock_data(|pPlane5|pPlaneShape5,spotLightShape3)
                >8 Renderer::exportOneObject_data(|pPlane5|pPlaneShape5,spotLightShape3)
                  >9 Renderer::_writeObject(|pPlane5|pPlaneShape5,spotLightShape3,0,0,0)
                    >10 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pPlane5_pPlaneShape5.1.rib,spotLightShape3,0)
                      >11 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pPlane5_pPlaneShape5.1.rib,job=spotLightShape3,0)
                        >12 liqRibData::getFullPathName()
                        >12 Renderer::write(|pPlane5|pPlaneShape5,R:/MyDocuments/maya/projects/default/rib/_pPlane5_pPlaneShape5.1.rib,spotLightShape3,ref=0)
              >7 liqRibTranslatorNew::oneObjectBlock_data(|pCube53|pCubeShape53,spotLightShape3)
                >8 Renderer::exportOneObject_data(|pCube53|pCubeShape53,spotLightShape3)
                  >9 Renderer::_writeObject(|pCube53|pCubeShape53,spotLightShape3,0,0,0)
                    >10 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pCube53_pCubeShape53.1.rib,spotLightShape3,0)
                      >11 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pCube53_pCubeShape53.1.rib,job=spotLightShape3,0)
                        >12 liqRibData::getFullPathName()
                        >12 Renderer::write(|pCube53|pCubeShape53,R:/MyDocuments/maya/projects/default/rib/_pCube53_pCubeShape53.1.rib,spotLightShape3,ref=0)
            >6 liqRibTranslatorNew::objectBlock_reference(spotLightShape3)
              >7 Renderer::objectBlock_reference_begin()
              >7 liqRibTranslatorNew::preGeometryMel()
                >8 Renderer::preGeometryMel()
              >7 liqRibTranslatorNew::getShadowSetObject(spotLightShape3)
              >7 liqRibTranslatorNew::oneObjectBlock_reference(|pPlane5|pPlaneShape5,spotLightShape3)
                >8 Renderer::oneObjectBlock_reference_attribute_begin(|pPlane5|pPlaneShape5,spotLightShape3)
                >8 Renderer::oneObjectBlock_reference_attribute_block0(|pPlane5|pPlaneShape5,spotLightShape3)
                >8 liqRibTranslatorNew::checkSurfaceShader(|pPlane5|pPlaneShape5,|pPlane5|pPlaneShape5,,,)
                >8 liqRibTranslatorNew::checkDisplacementShader(|pPlane5|pPlaneShape5,|pPlane5|pPlaneShape5,,,)
                >8 liqRibTranslatorNew::checkVolumeShader(|pPlane5|pPlaneShape5,|pPlane5|pPlaneShape5,,,)
                >8 Renderer::oneObjectBlock_reference_attribute_block1(|pPlane5|pPlaneShape5,spotLightShape3)
                  >9 liqRibTranslatorNew::objectShadowAttribute(|pPlane5|pPlaneShape5)
                >8 liqRibTranslatorNew::writeShader_forShadow(1,|pPlane5|pPlaneShape5,v=0,s=0,c=0,,|pPlane5|pPlaneShape5,spotLightShape3)
                  >9 Renderer::writeShader_forShadow_NullShader(|pPlane5|pPlaneShape5,path__)
                >8 Renderer::exportOneObject_reference(|pPlane5|pPlaneShape5,spotLightShape3)
                  >9 liqRibTranslatorNew::preTransformMel
                  >9 MaxtrixMotionBlur(|pPlane5|pPlaneShape5,|pPlane5|pPlaneShape5,0)
                  >9 liqRibTranslatorNew::postTransformMel(kTransform)
                  >9 liqRibTranslatorNew::preShapeMel(kTransform)
                  >9 Renderer::_writeObject(|pPlane5|pPlaneShape5,spotLightShape3,0,0,1)
                    >10 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pPlane5_pPlaneShape5.1.rib,spotLightShape3,1)
                      >11 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pPlane5_pPlaneShape5.1.rib,job=spotLightShape3,1)
                        >12 liqRibData::getFullPathName()
                        >12 Renderer::write(|pPlane5|pPlaneShape5,R:/MyDocuments/maya/projects/default/rib/_pPlane5_pPlaneShape5.1.rib,spotLightShape3,ref=1)
                          >13 liqRibData::getFullPathName()
                          >13 rm_writeMeshData.cpp::_write(|pPlane5|pPlaneShape5,spotLightShape3)
                  >9 liqRibTranslatorNew::postShapeMel(kTransform)
                >8 Renderer::oneObjectBlock_reference_attribute_end(|pPlane5|pPlaneShape5,spotLightShape3)
              >7 liqRibTranslatorNew::oneObjectBlock_reference(|pCube53|pCubeShape53,spotLightShape3)
                >8 Renderer::oneObjectBlock_reference_attribute_begin(|pCube53|pCubeShape53,spotLightShape3)
                >8 Renderer::oneObjectBlock_reference_attribute_block0(|pCube53|pCubeShape53,spotLightShape3)
                >8 liqRibTranslatorNew::checkSurfaceShader(|pCube53|pCubeShape53,|pCube53|pCubeShape53,,,)
                >8 liqRibTranslatorNew::checkDisplacementShader(|pCube53|pCubeShape53,|pCube53|pCubeShape53,,,)
                >8 liqRibTranslatorNew::checkVolumeShader(|pCube53|pCubeShape53,|pCube53|pCubeShape53,,,)
                >8 Renderer::oneObjectBlock_reference_attribute_block1(|pCube53|pCubeShape53,spotLightShape3)
                  >9 liqRibTranslatorNew::objectShadowAttribute(|pCube53|pCubeShape53)
                >8 liqRibTranslatorNew::writeShader_forShadow(1,|pCube53|pCubeShape53,v=0,s=0,c=0,,|pCube53|pCubeShape53,spotLightShape3)
                  >9 Renderer::writeShader_forShadow_NullShader(|pCube53|pCubeShape53,path__)
                >8 Renderer::exportOneObject_reference(|pCube53|pCubeShape53,spotLightShape3)
                  >9 liqRibTranslatorNew::preTransformMel
                  >9 MaxtrixMotionBlur(|pCube53|pCubeShape53,|pCube53|pCubeShape53,0)
                  >9 liqRibTranslatorNew::postTransformMel(kTransform)
                  >9 liqRibTranslatorNew::preShapeMel(kTransform)
                  >9 Renderer::_writeObject(|pCube53|pCubeShape53,spotLightShape3,0,0,1)
                    >10 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pCube53_pCubeShape53.1.rib,spotLightShape3,1)
                      >11 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pCube53_pCubeShape53.1.rib,job=spotLightShape3,1)
                        >12 liqRibData::getFullPathName()
                        >12 Renderer::write(|pCube53|pCubeShape53,R:/MyDocuments/maya/projects/default/rib/_pCube53_pCubeShape53.1.rib,spotLightShape3,ref=1)
                          >13 liqRibData::getFullPathName()
                          >13 rm_writeMeshData.cpp::_write(|pCube53|pCubeShape53,spotLightShape3)
                  >9 liqRibTranslatorNew::postShapeMel(kTransform)
                >8 Renderer::oneObjectBlock_reference_attribute_end(|pCube53|pCubeShape53,spotLightShape3)
              >7 Renderer::objectBlock_reference_end()
          >5 liqRibTranslatorNew::worldEpilogue__()
            >6 liqRibTranslator::worldEpilogue()
              >7 Renderer::worldEpilogue()
          >5 Renderer::BaseShadowEnd(spotLightShape3)
          >5 Renderer::isShadowPassReady(spotLightShape3)
          >5 Renderer::ShadowPassBegin(spotLightShape3)
          >5 liqRibTranslatorNew::ribPrologue__(spotLightShape3)
            >6 Renderer::ribPrologue_begin(spotLightShape3)
              >7 RiBegin_liq(R:/MyDocuments/maya/projects/default/rib/deepshadow_spotLightShape3_DSH.0001..rib(strlen=81)
            >6 Renderer::ribPrologue_comment(2.3.5 (buildtime=20:51:12.30),R:/MyDocuments/maya/projects/default/deepshadow,yaoyansi,time)
            >6 Renderer::ribPrologue_options(spotLightShape3)
              >7 Renderer::ribPrologue_writeSearthPath()
              >7 tShadowRibWriterMgr::ribPrologue_samples(0,0)
              >7 tShadowRibWriterMgr::ribPrologue_shadingrate(1)
              >7 tShadowRibWriterMgr::ribPrologue_filter(0,1,1)
              >7 tShadowRibWriterMgr::ribPrologue_pass(shadow)
          >5 liqRibTranslatorNew::framePrologue__(1,spotLightShape3)
            >6 Renderer::framePrologue(1,spotLightShape3)
              >7 tShadowRibWriterMgr::framePrologue_display(job=spotLightShape3)
                >8 exportJobCamera(spotLightShape3,,)
              >7 Renderer::framePrologue_camera(1,spotLightShape3)
          >5 Renderer::readBaseShadow(spotLightShape3)
            >6 liqRibTranslator::generateFileName(2,spotLightShape3)
          >5 liqRibTranslatorNew::frameEpilogue__(1)
            >6 Renderer::frameEpilogue(1)
          >5 liqRibTranslatorNew::ribEpilogue__(spotLightShape3)
            >6 Renderer::ribPrologue_end(spotLightShape3)
          >5 Renderer::ShadowPassEnd(spotLightShape3)
            >6 rm::Renderer::renderAll_local(R:/MyDocuments/maya/projects/default/rib/deepshadow_spotLightShape3_DSH.0001..rib)
              >7 liqProcessLauncher::_execute(renderdl,   "R:/MyDocuments/maya/projects/default/rib/deepshadow_spotLightShape3_DSH.0001..rib","R:/MyDocuments/maya/projects/default/", wait=0)
        >4 liqRibTranslatorNew::doTextures(size=0)
          >5 rm::Renderer::doTextures(txtList.size()=0)
        >4 liqRibTranslatorNew::doShadows(size=2)
          >5 rm::Renderer::doShadows(shadowList_.size()=2)
            >6 liqProcessLauncher::_execute(renderdl, "R:/MyDocuments/maya/projects/default/rib/deepshadow_spotLightShape3_DSH.0001..rib",R:/MyDocuments/maya/projects/default/, wait=1)
            >6 liqProcessLauncher::_execute(renderdl, "R:/MyDocuments/maya/projects/default/rib/deepshadow_spotLightShape5_DSH.0001..rib",R:/MyDocuments/maya/projects/default/, wait=1)
        >4 Renderer::setRenderScriptFormatAndCompress(0,0)
          >5 Renderer::_RiOption_format_compress(0,0)
        >4 tShadowRibWriterMgr::write(liqglo___,spotLightShape5,1,0,jobList__.size=3)
          >5 Renderer::isBaseShadowReady(spotLightShape5)
          >5 Renderer::BaseShadowBegin(spotLightShape5)
            >6 liqRibTranslator::generateFileName(2,spotLightShape5)
            >6 RiBegin_liq(R:/MyDocuments/maya/projects/default/rib/deepshadow_SHADOWBODY.0001..rib(strlen=72)
          >5 liqRibTranslatorNew::worldPrologue__(spotLightShape5)
            >6 Renderer::worldPrologue(spotLightShape5)
          >5 liqRibTranslatorNew::coordSysBlock__(spotLightShape5)
            >6 Renderer::coordSysBlock__(spotLightShape5)
          >5 liqRibTranslatorNew::objectBlock__(spotLightShape5)
            >6 liqRibTranslatorNew::objectBlock_data(spotLightShape5)
              >7 liqRibTranslatorNew::getShadowSetObject(spotLightShape5)
              >7 liqRibTranslatorNew::oneObjectBlock_data(|pPlane5|pPlaneShape5,spotLightShape5)
                >8 Renderer::exportOneObject_data(|pPlane5|pPlaneShape5,spotLightShape5)
                  >9 Renderer::_writeObject(|pPlane5|pPlaneShape5,spotLightShape5,0,0,0)
                    >10 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pPlane5_pPlaneShape5.1.rib,spotLightShape5,0)
                      >11 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pPlane5_pPlaneShape5.1.rib,job=spotLightShape5,0)
                        >12 liqRibData::getFullPathName()
                        >12 Renderer::write(|pPlane5|pPlaneShape5,R:/MyDocuments/maya/projects/default/rib/_pPlane5_pPlaneShape5.1.rib,spotLightShape5,ref=0)
              >7 liqRibTranslatorNew::oneObjectBlock_data(|pCube53|pCubeShape53,spotLightShape5)
                >8 Renderer::exportOneObject_data(|pCube53|pCubeShape53,spotLightShape5)
                  >9 Renderer::_writeObject(|pCube53|pCubeShape53,spotLightShape5,0,0,0)
                    >10 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pCube53_pCubeShape53.1.rib,spotLightShape5,0)
                      >11 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pCube53_pCubeShape53.1.rib,job=spotLightShape5,0)
                        >12 liqRibData::getFullPathName()
                        >12 Renderer::write(|pCube53|pCubeShape53,R:/MyDocuments/maya/projects/default/rib/_pCube53_pCubeShape53.1.rib,spotLightShape5,ref=0)
            >6 liqRibTranslatorNew::objectBlock_reference(spotLightShape5)
              >7 Renderer::objectBlock_reference_begin()
              >7 liqRibTranslatorNew::preGeometryMel()
                >8 Renderer::preGeometryMel()
              >7 liqRibTranslatorNew::getShadowSetObject(spotLightShape5)
              >7 liqRibTranslatorNew::oneObjectBlock_reference(|pPlane5|pPlaneShape5,spotLightShape5)
                >8 Renderer::oneObjectBlock_reference_attribute_begin(|pPlane5|pPlaneShape5,spotLightShape5)
                >8 Renderer::oneObjectBlock_reference_attribute_block0(|pPlane5|pPlaneShape5,spotLightShape5)
                >8 liqRibTranslatorNew::checkSurfaceShader(|pPlane5|pPlaneShape5,|pPlane5|pPlaneShape5,,,)
                >8 liqRibTranslatorNew::checkDisplacementShader(|pPlane5|pPlaneShape5,|pPlane5|pPlaneShape5,,,)
                >8 liqRibTranslatorNew::checkVolumeShader(|pPlane5|pPlaneShape5,|pPlane5|pPlaneShape5,,,)
                >8 Renderer::oneObjectBlock_reference_attribute_block1(|pPlane5|pPlaneShape5,spotLightShape5)
                  >9 liqRibTranslatorNew::objectShadowAttribute(|pPlane5|pPlaneShape5)
                >8 liqRibTranslatorNew::writeShader_forShadow(1,|pPlane5|pPlaneShape5,v=0,s=0,c=0,,|pPlane5|pPlaneShape5,spotLightShape5)
                  >9 Renderer::writeShader_forShadow_NullShader(|pPlane5|pPlaneShape5,path__)
                >8 Renderer::exportOneObject_reference(|pPlane5|pPlaneShape5,spotLightShape5)
                  >9 liqRibTranslatorNew::preTransformMel
                  >9 MaxtrixMotionBlur(|pPlane5|pPlaneShape5,|pPlane5|pPlaneShape5,0)
                  >9 liqRibTranslatorNew::postTransformMel(kTransform)
                  >9 liqRibTranslatorNew::preShapeMel(kTransform)
                  >9 Renderer::_writeObject(|pPlane5|pPlaneShape5,spotLightShape5,0,0,1)
                    >10 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pPlane5_pPlaneShape5.1.rib,spotLightShape5,1)
                      >11 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pPlane5_pPlaneShape5.1.rib,job=spotLightShape5,1)
                        >12 liqRibData::getFullPathName()
                        >12 Renderer::write(|pPlane5|pPlaneShape5,R:/MyDocuments/maya/projects/default/rib/_pPlane5_pPlaneShape5.1.rib,spotLightShape5,ref=1)
                          >13 liqRibData::getFullPathName()
                          >13 rm_writeMeshData.cpp::_write(|pPlane5|pPlaneShape5,spotLightShape5)
                  >9 liqRibTranslatorNew::postShapeMel(kTransform)
                >8 Renderer::oneObjectBlock_reference_attribute_end(|pPlane5|pPlaneShape5,spotLightShape5)
              >7 liqRibTranslatorNew::oneObjectBlock_reference(|pCube53|pCubeShape53,spotLightShape5)
                >8 Renderer::oneObjectBlock_reference_attribute_begin(|pCube53|pCubeShape53,spotLightShape5)
                >8 Renderer::oneObjectBlock_reference_attribute_block0(|pCube53|pCubeShape53,spotLightShape5)
                >8 liqRibTranslatorNew::checkSurfaceShader(|pCube53|pCubeShape53,|pCube53|pCubeShape53,,,)
                >8 liqRibTranslatorNew::checkDisplacementShader(|pCube53|pCubeShape53,|pCube53|pCubeShape53,,,)
                >8 liqRibTranslatorNew::checkVolumeShader(|pCube53|pCubeShape53,|pCube53|pCubeShape53,,,)
                >8 Renderer::oneObjectBlock_reference_attribute_block1(|pCube53|pCubeShape53,spotLightShape5)
                  >9 liqRibTranslatorNew::objectShadowAttribute(|pCube53|pCubeShape53)
                >8 liqRibTranslatorNew::writeShader_forShadow(1,|pCube53|pCubeShape53,v=0,s=0,c=0,,|pCube53|pCubeShape53,spotLightShape5)
                  >9 Renderer::writeShader_forShadow_NullShader(|pCube53|pCubeShape53,path__)
                >8 Renderer::exportOneObject_reference(|pCube53|pCubeShape53,spotLightShape5)
                  >9 liqRibTranslatorNew::preTransformMel
                  >9 MaxtrixMotionBlur(|pCube53|pCubeShape53,|pCube53|pCubeShape53,0)
                  >9 liqRibTranslatorNew::postTransformMel(kTransform)
                  >9 liqRibTranslatorNew::preShapeMel(kTransform)
                  >9 Renderer::_writeObject(|pCube53|pCubeShape53,spotLightShape5,0,0,1)
                    >10 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pCube53_pCubeShape53.1.rib,spotLightShape5,1)
                      >11 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pCube53_pCubeShape53.1.rib,job=spotLightShape5,1)
                        >12 liqRibData::getFullPathName()
                        >12 Renderer::write(|pCube53|pCubeShape53,R:/MyDocuments/maya/projects/default/rib/_pCube53_pCubeShape53.1.rib,spotLightShape5,ref=1)
                          >13 liqRibData::getFullPathName()
                          >13 rm_writeMeshData.cpp::_write(|pCube53|pCubeShape53,spotLightShape5)
                  >9 liqRibTranslatorNew::postShapeMel(kTransform)
                >8 Renderer::oneObjectBlock_reference_attribute_end(|pCube53|pCubeShape53,spotLightShape5)
              >7 Renderer::objectBlock_reference_end()
          >5 liqRibTranslatorNew::worldEpilogue__()
            >6 liqRibTranslator::worldEpilogue()
              >7 Renderer::worldEpilogue()
          >5 Renderer::BaseShadowEnd(spotLightShape5)
          >5 Renderer::isShadowPassReady(spotLightShape5)
          >5 Renderer::ShadowPassBegin(spotLightShape5)
          >5 liqRibTranslatorNew::ribPrologue__(spotLightShape5)
            >6 Renderer::ribPrologue_begin(spotLightShape5)
              >7 RiBegin_liq(R:/MyDocuments/maya/projects/default/rib/deepshadow_spotLightShape5_DSH.0001..rib(strlen=81)
            >6 Renderer::ribPrologue_comment(2.3.5 (buildtime=20:51:12.30),R:/MyDocuments/maya/projects/default/deepshadow,yaoyansi,time)
            >6 Renderer::ribPrologue_options(spotLightShape5)
              >7 Renderer::ribPrologue_writeSearthPath()
              >7 tShadowRibWriterMgr::ribPrologue_samples(0,0)
              >7 tShadowRibWriterMgr::ribPrologue_shadingrate(1)
              >7 tShadowRibWriterMgr::ribPrologue_filter(0,1,1)
              >7 tShadowRibWriterMgr::ribPrologue_pass(shadow)
          >5 liqRibTranslatorNew::framePrologue__(1,spotLightShape5)
            >6 Renderer::framePrologue(1,spotLightShape5)
              >7 tShadowRibWriterMgr::framePrologue_display(job=spotLightShape5)
                >8 exportJobCamera(spotLightShape5,,)
              >7 Renderer::framePrologue_camera(1,spotLightShape5)
          >5 Renderer::readBaseShadow(spotLightShape5)
            >6 liqRibTranslator::generateFileName(2,spotLightShape5)
          >5 liqRibTranslatorNew::frameEpilogue__(1)
            >6 Renderer::frameEpilogue(1)
          >5 liqRibTranslatorNew::ribEpilogue__(spotLightShape5)
            >6 Renderer::ribPrologue_end(spotLightShape5)
          >5 Renderer::ShadowPassEnd(spotLightShape5)
            >6 rm::Renderer::renderAll_local(R:/MyDocuments/maya/projects/default/rib/deepshadow_spotLightShape5_DSH.0001..rib)
              >7 liqProcessLauncher::_execute(renderdl,   "R:/MyDocuments/maya/projects/default/rib/deepshadow_spotLightShape5_DSH.0001..rib","R:/MyDocuments/maya/projects/default/", wait=0)
        >4 liqRibTranslatorNew::doTextures(size=0)
          >5 rm::Renderer::doTextures(txtList.size()=0)
        >4 liqRibTranslatorNew::doShadows(size=2)
          >5 rm::Renderer::doShadows(shadowList_.size()=2)
            >6 liqProcessLauncher::_execute(renderdl, "R:/MyDocuments/maya/projects/default/rib/deepshadow_spotLightShape3_DSH.0001..rib",R:/MyDocuments/maya/projects/default/, wait=1)
            >6 liqProcessLauncher::_execute(renderdl, "R:/MyDocuments/maya/projects/default/rib/deepshadow_spotLightShape5_DSH.0001..rib",R:/MyDocuments/maya/projects/default/, wait=1)
        >4 Renderer::setRenderScriptFormatAndCompress(0,0)
          >5 Renderer::_RiOption_format_compress(0,0)
        >4 Renderer::isHeroPassReady(cameraShape1)
        >4 Renderer::HeroPassBegin(cameraShape1)
        >4 tHeroRibWriterMgr::write(liqglo___,cameraShape1,1,0)
          >5 liqRibTranslatorNew::ribPrologue__(cameraShape1)
            >6 Renderer::ribPrologue_begin(cameraShape1)
              >7 RiBegin_liq(R:/MyDocuments/maya/projects/default/rib/deepshadow_cameraShape1.0001..rib(strlen=74)
            >6 Renderer::ribPrologue_comment(2.3.5 (buildtime=20:51:12.30),R:/MyDocuments/maya/projects/default/deepshadow,yaoyansi,time)
            >6 Renderer::ribPrologue_options(cameraShape1)
              >7 Renderer::ribPrologue_writeSearthPath()
              >7 tHeroRibWriterMgr::ribPrologue_hider(0)
              >7 tHeroRibWriterMgr::ribPrologue_samples(4,4)
              >7 tHeroRibWriterMgr::ribPrologue_shadingrate(1)
              >7 tHeroRibWriterMgr::ribPrologue_filter(0,2,2)
              >7 tHeroRibWriterMgr::ribPrologue_pass(beauty)
          >5 liqRibTranslatorNew::framePrologue__(1,cameraShape1)
            >6 Renderer::framePrologue(1,cameraShape1)
              >7 tHeroRibWriterMgr::framePrologue_display(cameraShape1)
                >8 exportJobCamera(cameraShape1,,)
              >7 Renderer::framePrologue_camera(1,cameraShape1)
          >5 ShaderMgr::exportShaderGraph()
            >6 ConvertShadingNetwork::exportShaderGraph()
              >7 ConvertShadingNetwork::beforeExport()
              >7 ConvertShadingNetwork::__export()
                >8 ConvertShadingNetwork::canShadingGroupExported(phong2SG)
                >8 Renderer::getValidShaderPlugsInShadingGroup()
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong2SG,surfaceShader)
                  >9 ConvertShadingNetwork::canShaderExported(phong2)
                  >9 ConvertShadingNetwork::exportShaderBegin(phong2)
                  >9 ConvertShadingNetwork::convertShadingNetworkToRSL(phong2,surfaceShader)
                    >10 Visitor::initShaderData(phong2,surfaceShader)
                      >11 NodePlugConnectionMgr::setNodePlugMgr(...)
                      >11 NodePlugConnectionMgr::reset()
                    >10 ConvertShadingNetwork::getUpstreamConvertibleNodes(phong2, nodes, numConnections)
                      >11 ConvertShadingNetwork::nodeIsConvertible(phong2)
                        >12 ShaderMgr::hasShaderType(phong)
                      >11 ShaderMgr::getValidConnection(phong2)
                      >11 ConvertShadingNetwork::convertibleConnection(phong2.colorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong2.colorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong2.colorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong2.colorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong2.colorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong2.colorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong2.color)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong2.color)
                      >11 ConvertShadingNetwork::convertibleConnection(phong2.transparencyR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong2.transparencyR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong2.transparencyG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong2.transparencyG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong2.transparencyB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong2.transparencyB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong2.transparency)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong2.transparency)
                      >11 ConvertShadingNetwork::convertibleConnection(phong2.ambientColorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong2.ambientColorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong2.ambientColorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong2.ambientColorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong2.ambientColorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong2.ambientColorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong2.ambientColor)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong2.ambientColor)
                      >11 ConvertShadingNetwork::convertibleConnection(phong2.incandescenceR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong2.incandescenceR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong2.incandescenceG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong2.incandescenceG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong2.incandescenceB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong2.incandescenceB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong2.incandescence)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong2.incandescence)
                      >11 ConvertShadingNetwork::convertibleConnection(phong2.normalCameraX)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong2.normalCameraX)
                      >11 ConvertShadingNetwork::convertibleConnection(phong2.normalCameraY)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong2.normalCameraY)
                      >11 ConvertShadingNetwork::convertibleConnection(phong2.normalCameraZ)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong2.normalCameraZ)
                      >11 ConvertShadingNetwork::convertibleConnection(phong2.normalCamera)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong2.normalCamera)
                      >11 ConvertShadingNetwork::convertibleConnection(phong2.diffuse)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong2.diffuse)
                      >11 ConvertShadingNetwork::convertibleConnection(phong2.translucence)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong2.translucence)
                      >11 ConvertShadingNetwork::convertibleConnection(phong2.translucenceDepth)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong2.translucenceDepth)
                      >11 ConvertShadingNetwork::convertibleConnection(phong2.translucenceFocus)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong2.translucenceFocus)
                      >11 ConvertShadingNetwork::convertibleConnection(phong2.cosinePower)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong2.cosinePower)
                      >11 ConvertShadingNetwork::convertibleConnection(phong2.specularColorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong2.specularColorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong2.specularColorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong2.specularColorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong2.specularColorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong2.specularColorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong2.specularColor)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong2.specularColor)
                      >11 ConvertShadingNetwork::convertibleConnection(phong2.reflectivity)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong2.reflectivity)
                      >11 ConvertShadingNetwork::convertibleConnection(phong2.reflectedColorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong2.reflectedColorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong2.reflectedColorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong2.reflectedColorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong2.reflectedColorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong2.reflectedColorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong2.reflectedColor)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong2.reflectedColor)
                      >11 ConvertShadingNetwork::convertibleConnection(phong2.matteOpacityMode)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong2.matteOpacityMode)
                      >11 ConvertShadingNetwork::convertibleConnection(phong2.matteOpacity)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong2.matteOpacity)
                      >11 ConvertShadingNetwork::convertibleConnection(phong2.reflectionLimit)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong2.reflectionLimit)
                      >11 ConvertShadingNetwork::convertibleConnection(phong2.outColorR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong2.outColorR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong2.outColorG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong2.outColorG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong2.outColorB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong2.outColorB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong2.outColor)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong2.outColor)
                        >12 ConvertShadingNetwork::nodeIsConvertible(phong2SG)
                          >13 ShaderMgr::hasShaderType(shadingEngine)
                      >11 ConvertShadingNetwork::convertibleConnection(phong2.outTransparencyR)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong2.outTransparencyR)
                      >11 ConvertShadingNetwork::convertibleConnection(phong2.outTransparencyG)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong2.outTransparencyG)
                      >11 ConvertShadingNetwork::convertibleConnection(phong2.outTransparencyB)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong2.outTransparencyB)
                      >11 ConvertShadingNetwork::convertibleConnection(phong2.outTransparency)
                        >12 ConvertShadingNetwork::ensurePlugExists(phong2.outTransparency)
                    >10 Visitor::preOutput(phong2)
                    >10 Visitor::outputBegin(phong2), open shader file
                      >11 getShaderFilePath_SRC(phong2)
                        >12 getShaderFilePath_NoExt(phong2)
                      >11 Visitor::getSurfaceShaderAOVOutputParametersString()
                      >11 Visitor::defineAOVVariables(phong2)
                    >10 ConvertShadingNetwork::traverseGraphAndOutputNodeFunctions( nodes, numConnections)
                      >11 Visitor::outputUpstreamShader(phong2)
                        >12 ShaderOutputVisitor::_outputUpstreamShader(phong2,phong)
                          >13 Visitor::visitPhong(phong2)
                            >14 OutputHelper::addInclude(phong.h)
                            >14 OutputHelper::beginRSL(phong2)
                            >14 ShaderMgr::convertibleConnection(phong2.ambientColor)
                              >15 ConvertShadingNetwork::convertibleConnection(phong2.ambientColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong2.ambientColor)
                            >14 NodePlugInfo::add(phong2,ambientColor,color)
                              >15 NodePlug::add(ambientColor, color)
                            >14 ShaderMgr::convertibleConnection(phong2.color)
                              >15 ConvertShadingNetwork::convertibleConnection(phong2.color)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong2.color)
                            >14 NodePlugInfo::add(phong2,color,color)
                              >15 NodePlug::add(color, color)
                            >14 ShaderMgr::convertibleConnection(phong2.cosinePower)
                              >15 ConvertShadingNetwork::convertibleConnection(phong2.cosinePower)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong2.cosinePower)
                            >14 NodePlugInfo::add(phong2,cosinePower,float)
                              >15 NodePlug::add(cosinePower, float)
                            >14 ShaderMgr::convertibleConnection(phong2.diffuse)
                              >15 ConvertShadingNetwork::convertibleConnection(phong2.diffuse)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong2.diffuse)
                            >14 NodePlugInfo::add(phong2,diffuse,float)
                              >15 NodePlug::add(diffuse, float)
                            >14 ShaderMgr::convertibleConnection(phong2.incandescence)
                              >15 ConvertShadingNetwork::convertibleConnection(phong2.incandescence)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong2.incandescence)
                            >14 NodePlugInfo::add(phong2,incandescence,color)
                              >15 NodePlug::add(incandescence, color)
                            >14 ShaderMgr::convertibleConnection(phong2.matteOpacity)
                              >15 ConvertShadingNetwork::convertibleConnection(phong2.matteOpacity)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong2.matteOpacity)
                            >14 NodePlugInfo::add(phong2,matteOpacity,float)
                              >15 NodePlug::add(matteOpacity, float)
                            >14 ShaderMgr::convertibleConnection(phong2.matteOpacityMode)
                              >15 ConvertShadingNetwork::convertibleConnection(phong2.matteOpacityMode)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong2.matteOpacityMode)
                            >14 NodePlugInfo::add(phong2,matteOpacityMode,float)
                              >15 NodePlug::add(matteOpacityMode, float)
                            >14 ShaderMgr::convertibleConnection(phong2.specularColor)
                              >15 ConvertShadingNetwork::convertibleConnection(phong2.specularColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong2.specularColor)
                            >14 NodePlugInfo::add(phong2,specularColor,color)
                              >15 NodePlug::add(specularColor, color)
                            >14 ShaderMgr::convertibleConnection(phong2.reflectivity)
                              >15 ConvertShadingNetwork::convertibleConnection(phong2.reflectivity)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong2.reflectivity)
                            >14 NodePlugInfo::add(phong2,reflectivity,float)
                              >15 NodePlug::add(reflectivity, float)
                            >14 ShaderMgr::convertibleConnection(phong2.reflectedColor)
                              >15 ConvertShadingNetwork::convertibleConnection(phong2.reflectedColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong2.reflectedColor)
                            >14 NodePlugInfo::add(phong2,reflectedColor,color)
                              >15 NodePlug::add(reflectedColor, color)
                            >14 ShaderMgr::convertibleConnection(phong2.refractions)
                              >15 ConvertShadingNetwork::convertibleConnection(phong2.refractions)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong2.refractions)
                            >14 NodePlugInfo::add(phong2,refractions,float)
                              >15 NodePlug::add(refractions, float)
                            >14 ShaderMgr::convertibleConnection(phong2.refractiveIndex)
                              >15 ConvertShadingNetwork::convertibleConnection(phong2.refractiveIndex)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong2.refractiveIndex)
                            >14 NodePlugInfo::add(phong2,refractiveIndex,float)
                              >15 NodePlug::add(refractiveIndex, float)
                            >14 ShaderMgr::convertibleConnection(phong2.refractionLimit)
                              >15 ConvertShadingNetwork::convertibleConnection(phong2.refractionLimit)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong2.refractionLimit)
                            >14 NodePlugInfo::add(phong2,refractionLimit,float)
                              >15 NodePlug::add(refractionLimit, float)
                            >14 ShaderMgr::convertibleConnection(phong2.lightAbsorbance)
                              >15 ConvertShadingNetwork::convertibleConnection(phong2.lightAbsorbance)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong2.lightAbsorbance)
                            >14 NodePlugInfo::add(phong2,lightAbsorbance,float)
                              >15 NodePlug::add(lightAbsorbance, float)
                            >14 ShaderMgr::convertibleConnection(phong2.shadowAttenuation)
                              >15 ConvertShadingNetwork::convertibleConnection(phong2.shadowAttenuation)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong2.shadowAttenuation)
                            >14 NodePlugInfo::add(phong2,shadowAttenuation,float)
                              >15 NodePlug::add(shadowAttenuation, float)
                            >14 ShaderMgr::convertibleConnection(phong2.reflectionLimit)
                              >15 ConvertShadingNetwork::convertibleConnection(phong2.reflectionLimit)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong2.reflectionLimit)
                            >14 NodePlugInfo::add(phong2,reflectionLimit,float)
                              >15 NodePlug::add(reflectionLimit, float)
                            >14 ShaderMgr::convertibleConnection(phong2.translucence)
                              >15 ConvertShadingNetwork::convertibleConnection(phong2.translucence)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong2.translucence)
                            >14 NodePlugInfo::add(phong2,translucence,float)
                              >15 NodePlug::add(translucence, float)
                            >14 ShaderMgr::convertibleConnection(phong2.translucenceDepth)
                              >15 ConvertShadingNetwork::convertibleConnection(phong2.translucenceDepth)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong2.translucenceDepth)
                            >14 NodePlugInfo::add(phong2,translucenceDepth,float)
                              >15 NodePlug::add(translucenceDepth, float)
                            >14 ShaderMgr::convertibleConnection(phong2.translucenceFocus)
                              >15 ConvertShadingNetwork::convertibleConnection(phong2.translucenceFocus)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong2.translucenceFocus)
                            >14 NodePlugInfo::add(phong2,translucenceFocus,float)
                              >15 NodePlug::add(translucenceFocus, float)
                            >14 ShaderMgr::convertibleConnection(phong2.transparency)
                              >15 ConvertShadingNetwork::convertibleConnection(phong2.transparency)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong2.transparency)
                            >14 NodePlugInfo::add(phong2,transparency,color)
                              >15 NodePlug::add(transparency, color)
                            >14 ShaderMgr::convertibleConnection(phong2.outColor)
                              >15 ConvertShadingNetwork::convertibleConnection(phong2.outColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong2.outColor)
                                >16 ConvertShadingNetwork::nodeIsConvertible(phong2SG)
                                  >17 ShaderMgr::hasShaderType(shadingEngine)
                            >14 NodePlugInfo::add(phong2,outColor,color)
                              >15 NodePlug::add(outColor, color)
                            >14 ShaderMgr::convertibleConnection(phong2.outTransparency)
                              >15 ConvertShadingNetwork::convertibleConnection(phong2.outTransparency)
                                >16 ConvertShadingNetwork::ensurePlugExists(phong2.outTransparency)
                            >14 NodePlugInfo::add(phong2,outTransparency,color)
                              >15 NodePlug::add(outTransparency, color)
                            >14 OutputHelper::endRSL()
                      >11 ShaderMgr::getValidConnection(phong2)
                      >11 ConvertShadingNetwork::decrementDownstreamConnections(phong2, nodes, numConnections, validConnections)
                      >11 ConvertShadingNetwork::getNodeVariables(phong2, validConnections,  inputSrc, inputDes, outputSrc)
                        >12 ConvertShadingNetwork::convertibleConnection(phong2.colorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong2.colorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong2.colorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong2.colorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong2.colorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong2.colorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong2.color)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong2.color)
                        >12 ConvertShadingNetwork::convertibleConnection(phong2.transparencyR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong2.transparencyR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong2.transparencyG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong2.transparencyG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong2.transparencyB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong2.transparencyB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong2.transparency)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong2.transparency)
                        >12 ConvertShadingNetwork::convertibleConnection(phong2.ambientColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong2.ambientColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong2.ambientColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong2.ambientColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong2.ambientColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong2.ambientColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong2.ambientColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong2.ambientColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong2.incandescenceR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong2.incandescenceR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong2.incandescenceG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong2.incandescenceG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong2.incandescenceB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong2.incandescenceB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong2.incandescence)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong2.incandescence)
                        >12 ConvertShadingNetwork::convertibleConnection(phong2.normalCameraX)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong2.normalCameraX)
                        >12 ConvertShadingNetwork::convertibleConnection(phong2.normalCameraY)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong2.normalCameraY)
                        >12 ConvertShadingNetwork::convertibleConnection(phong2.normalCameraZ)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong2.normalCameraZ)
                        >12 ConvertShadingNetwork::convertibleConnection(phong2.normalCamera)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong2.normalCamera)
                        >12 ConvertShadingNetwork::convertibleConnection(phong2.diffuse)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong2.diffuse)
                        >12 ConvertShadingNetwork::convertibleConnection(phong2.translucence)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong2.translucence)
                        >12 ConvertShadingNetwork::convertibleConnection(phong2.translucenceDepth)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong2.translucenceDepth)
                        >12 ConvertShadingNetwork::convertibleConnection(phong2.translucenceFocus)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong2.translucenceFocus)
                        >12 ConvertShadingNetwork::convertibleConnection(phong2.cosinePower)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong2.cosinePower)
                        >12 ConvertShadingNetwork::convertibleConnection(phong2.specularColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong2.specularColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong2.specularColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong2.specularColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong2.specularColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong2.specularColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong2.specularColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong2.specularColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong2.reflectivity)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong2.reflectivity)
                        >12 ConvertShadingNetwork::convertibleConnection(phong2.reflectedColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong2.reflectedColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong2.reflectedColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong2.reflectedColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong2.reflectedColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong2.reflectedColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong2.reflectedColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong2.reflectedColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong2.matteOpacityMode)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong2.matteOpacityMode)
                        >12 ConvertShadingNetwork::convertibleConnection(phong2.matteOpacity)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong2.matteOpacity)
                        >12 ConvertShadingNetwork::convertibleConnection(phong2.reflectionLimit)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong2.reflectionLimit)
                        >12 ConvertShadingNetwork::convertibleConnection(phong2.outColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong2.outColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong2.outColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong2.outColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong2.outColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong2.outColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong2.outColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong2.outColor)
                          >13 ConvertShadingNetwork::nodeIsConvertible(phong2SG)
                            >14 ShaderMgr::hasShaderType(shadingEngine)
                        >12 ConvertShadingNetwork::convertibleConnection(phong2.outTransparencyR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong2.outTransparencyR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong2.outTransparencyG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong2.outTransparencyG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong2.outTransparencyB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong2.outTransparencyB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong2.outTransparency)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong2.outTransparency)
                      >11 Visitor::addShaderMethodBody(phong2,,,)
                        >12 NodePlugConnectionMgr::add(phong2)
                    >10 ConvertShadingNetwork::outputShaderMethod()
                      >11 Visitor::outputShaderMethod()
                        >12 NodePlugConnectionMgr::cookRSLFunctionCallString(0)
                        >12 NodePlugConnectionMgr::log(0)
                    >10 Visitor::outputEnd(), close shader file
                    >10 Visitor::postOutput()
                      >11 getShaderFilePath_SLO(phong2)
                        >12 getShaderFilePath_NoExt(phong2)
                      >11 getShaderFilePath_SRC(phong2)
                        >12 getShaderFilePath_NoExt(phong2)
                  >9 ConvertShadingNetwork::exportShaderEnd(phong2)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong2SG,displacementShader)
                >8 ConvertShadingNetwork::exportShaderInShadingGroup(phong2SG,volumeShader)
                >8 ConvertShadingNetwork::exportShadingGroupBegin(phong2SG)
                >8 ConvertShadingNetwork::outputShadingGroup(phong2SG)
                  >9 Visitor::outputShadingGroup(phong2SG)
                    >10 Visitor::outputShadingGroup(phong2SG,0)
                >8 ConvertShadingNetwork::exportShadingGroupEnd(phong2SG)
                >8 ConvertShadingNetwork::canShadingGroupExported(phong2SG)
              >7  ConvertShadingNetwork::afterExport()
          >5 liqRibTranslatorNew::worldPrologue__(cameraShape1)
            >6 Renderer::worldPrologue(cameraShape1)
          >5 liqRibTranslatorNew::lightBlock__(cameraShape1)
            >6 Renderer::writeLight_pre(|spotLight3|spotLightShape3,cameraShape1)
            >6 liqRibObj::writeObject(,cameraShape1,0)
              >7 liqRibLightData::write(,job=cameraShape1,0)
                >8 liqRibData::getFullPathName()
                >8 Renderer::write(|spotLight3|spotLightShape3,,cameraShape1,ref=0)
                  >9 Helper::RiBeginRef()
                  >9 liqRibData::getFullPathName()
                  >9 rm_writeLightData.cpp::_write(|spotLight3|spotLightShape3,cameraShape1,...)
                    >10 Renderer::exportSpotLight(spotlight,spotLightShape3,...)
                  >9 Helper::RiEndRef()
            >6 Renderer::writeLight_post(|spotLight3|spotLightShape3,cameraShape1)
            >6 Renderer::writeLight_pre(|spotLight5|spotLightShape5,cameraShape1)
            >6 liqRibObj::writeObject(,cameraShape1,0)
              >7 liqRibLightData::write(,job=cameraShape1,0)
                >8 liqRibData::getFullPathName()
                >8 Renderer::write(|spotLight5|spotLightShape5,,cameraShape1,ref=0)
                  >9 Helper::RiBeginRef()
                  >9 liqRibData::getFullPathName()
                  >9 rm_writeLightData.cpp::_write(|spotLight5|spotLightShape5,cameraShape1,...)
                    >10 Renderer::exportSpotLight(spotlight,spotLightShape5,...)
                  >9 Helper::RiEndRef()
            >6 Renderer::writeLight_post(|spotLight5|spotLightShape5,cameraShape1)
          >5 liqRibTranslatorNew::coordSysBlock__(cameraShape1)
            >6 Renderer::coordSysBlock__(cameraShape1)
          >5 liqRibTranslatorNew::objectBlock__(cameraShape1)
            >6 liqRibTranslatorNew::objectBlock_data(cameraShape1)
              >7 liqRibTranslatorNew::getShadowSetObject(cameraShape1)
              >7 liqRibTranslatorNew::oneObjectBlock_data(|pPlane5|pPlaneShape5,cameraShape1)
                >8 Renderer::exportOneObject_data(|pPlane5|pPlaneShape5,cameraShape1)
                  >9 Renderer::_writeObject(|pPlane5|pPlaneShape5,cameraShape1,0,0,0)
                    >10 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pPlane5_pPlaneShape5.1.rib,cameraShape1,0)
                      >11 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pPlane5_pPlaneShape5.1.rib,job=cameraShape1,0)
                        >12 liqRibData::getFullPathName()
                        >12 Renderer::write(|pPlane5|pPlaneShape5,R:/MyDocuments/maya/projects/default/rib/_pPlane5_pPlaneShape5.1.rib,cameraShape1,ref=0)
              >7 liqRibTranslatorNew::oneObjectBlock_data(|pCube53|pCubeShape53,cameraShape1)
                >8 Renderer::exportOneObject_data(|pCube53|pCubeShape53,cameraShape1)
                  >9 Renderer::_writeObject(|pCube53|pCubeShape53,cameraShape1,0,0,0)
                    >10 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pCube53_pCubeShape53.1.rib,cameraShape1,0)
                      >11 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pCube53_pCubeShape53.1.rib,job=cameraShape1,0)
                        >12 liqRibData::getFullPathName()
                        >12 Renderer::write(|pCube53|pCubeShape53,R:/MyDocuments/maya/projects/default/rib/_pCube53_pCubeShape53.1.rib,cameraShape1,ref=0)
            >6 liqRibTranslatorNew::objectBlock_reference(cameraShape1)
              >7 Renderer::objectBlock_reference_begin()
              >7 liqRibTranslatorNew::preGeometryMel()
                >8 Renderer::preGeometryMel()
              >7 liqRibTranslatorNew::getShadowSetObject(cameraShape1)
              >7 liqRibTranslatorNew::oneObjectBlock_reference(|pPlane5|pPlaneShape5,cameraShape1)
                >8 Renderer::oneObjectBlock_reference_attribute_begin(|pPlane5|pPlaneShape5,cameraShape1)
                >8 Renderer::oneObjectBlock_reference_attribute_block0(|pPlane5|pPlaneShape5,cameraShape1)
                >8 liqRibTranslatorNew::tRiIlluminate(cameraShape1,|pPlane5|pPlaneShape5)
                  >9 Renderer::exportLightLinks(cameraShape1,|pPlane5|pPlaneShape5,lightedByWhichLightShapes.size=2)
                >8 liqRibTranslatorNew::checkSurfaceShader(|pPlane5|pPlaneShape5,|pPlane5|pPlaneShape5,,,)
                >8 liqRibTranslatorNew::checkDisplacementShader(|pPlane5|pPlaneShape5,|pPlane5|pPlaneShape5,,,)
                >8 liqRibTranslatorNew::checkVolumeShader(|pPlane5|pPlaneShape5,|pPlane5|pPlaneShape5,,,)
                >8 Renderer::oneObjectBlock_reference_attribute_block1(|pPlane5|pPlaneShape5,cameraShape1)
                  >9 objectNonShadowAttribute(|pPlane5|pPlaneShape5)
                    >10 liqRibNode::writeUserAttributes()
                      >11 Renderer::writeUserAttributes()
                >8 liqRibTranslatorNew::writeShader_(1,|pPlane5|pPlaneShape5,v=0,s=0,c=0,,|pPlane5|pPlaneShape5,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|pPlane5|pPlaneShape5,|pPlane5|pPlaneShape5,0)
                    >10 Renderer::F2(0,|pPlane5|pPlaneShape5)
                    >10 liqRibNode::findShader()
                >8 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|pPlane5|pPlaneShape5)
                  >9 Visitor::outputShadingGroup(phong2SG,1)
                    >10 _outputShadingGroup(phong2SG)
                      >11 getShaderFilePath_NoExt(phong2)
                >8 Renderer::exportOneObject_reference(|pPlane5|pPlaneShape5,cameraShape1)
                  >9 liqRibTranslatorNew::preTransformMel
                  >9 MaxtrixMotionBlur(|pPlane5|pPlaneShape5,|pPlane5|pPlaneShape5,0)
                  >9 liqRibTranslatorNew::postTransformMel(kTransform)
                  >9 liqRibTranslatorNew::preShapeMel(kTransform)
                  >9 Renderer::_writeObject(|pPlane5|pPlaneShape5,cameraShape1,0,0,1)
                    >10 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pPlane5_pPlaneShape5.1.rib,cameraShape1,1)
                      >11 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pPlane5_pPlaneShape5.1.rib,job=cameraShape1,1)
                        >12 liqRibData::getFullPathName()
                        >12 Renderer::write(|pPlane5|pPlaneShape5,R:/MyDocuments/maya/projects/default/rib/_pPlane5_pPlaneShape5.1.rib,cameraShape1,ref=1)
                          >13 liqRibData::getFullPathName()
                          >13 rm_writeMeshData.cpp::_write(|pPlane5|pPlaneShape5,cameraShape1)
                  >9 liqRibTranslatorNew::postShapeMel(kTransform)
                >8 Renderer::oneObjectBlock_reference_attribute_end(|pPlane5|pPlaneShape5,cameraShape1)
              >7 liqRibTranslatorNew::oneObjectBlock_reference(|pCube53|pCubeShape53,cameraShape1)
                >8 Renderer::oneObjectBlock_reference_attribute_begin(|pCube53|pCubeShape53,cameraShape1)
                >8 Renderer::oneObjectBlock_reference_attribute_block0(|pCube53|pCubeShape53,cameraShape1)
                >8 liqRibTranslatorNew::tRiIlluminate(cameraShape1,|pCube53|pCubeShape53)
                  >9 Renderer::exportLightLinks(cameraShape1,|pCube53|pCubeShape53,lightedByWhichLightShapes.size=2)
                >8 liqRibTranslatorNew::checkSurfaceShader(|pCube53|pCubeShape53,|pCube53|pCubeShape53,,,)
                >8 liqRibTranslatorNew::checkDisplacementShader(|pCube53|pCubeShape53,|pCube53|pCubeShape53,,,)
                >8 liqRibTranslatorNew::checkVolumeShader(|pCube53|pCubeShape53,|pCube53|pCubeShape53,,,)
                >8 Renderer::oneObjectBlock_reference_attribute_block1(|pCube53|pCubeShape53,cameraShape1)
                  >9 objectNonShadowAttribute(|pCube53|pCubeShape53)
                    >10 liqRibNode::writeUserAttributes()
                      >11 Renderer::writeUserAttributes()
                >8 liqRibTranslatorNew::writeShader_(1,|pCube53|pCubeShape53,v=0,s=0,c=0,,|pCube53|pCubeShape53,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|pCube53|pCubeShape53,|pCube53|pCubeShape53,0)
                    >10 Renderer::F2(0,|pCube53|pCubeShape53)
                    >10 liqRibNode::findShader()
                >8 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|pCube53|pCubeShape53)
                  >9 Visitor::outputShadingGroup(phong2SG,1)
                    >10 _outputShadingGroup(phong2SG)
                      >11 getShaderFilePath_NoExt(phong2)
                >8 Renderer::exportOneObject_reference(|pCube53|pCubeShape53,cameraShape1)
                  >9 liqRibTranslatorNew::preTransformMel
                  >9 MaxtrixMotionBlur(|pCube53|pCubeShape53,|pCube53|pCubeShape53,0)
                  >9 liqRibTranslatorNew::postTransformMel(kTransform)
                  >9 liqRibTranslatorNew::preShapeMel(kTransform)
                  >9 Renderer::_writeObject(|pCube53|pCubeShape53,cameraShape1,0,0,1)
                    >10 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pCube53_pCubeShape53.1.rib,cameraShape1,1)
                      >11 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pCube53_pCubeShape53.1.rib,job=cameraShape1,1)
                        >12 liqRibData::getFullPathName()
                        >12 Renderer::write(|pCube53|pCubeShape53,R:/MyDocuments/maya/projects/default/rib/_pCube53_pCubeShape53.1.rib,cameraShape1,ref=1)
                          >13 liqRibData::getFullPathName()
                          >13 rm_writeMeshData.cpp::_write(|pCube53|pCubeShape53,cameraShape1)
                  >9 liqRibTranslatorNew::postShapeMel(kTransform)
                >8 Renderer::oneObjectBlock_reference_attribute_end(|pCube53|pCubeShape53,cameraShape1)
              >7 Renderer::objectBlock_reference_end()
          >5 liqRibTranslatorNew::worldEpilogue__()
            >6 liqRibTranslator::worldEpilogue()
              >7 Renderer::worldEpilogue()
          >5 liqRibTranslatorNew::frameEpilogue__(1)
            >6 Renderer::frameEpilogue(1)
          >5 liqRibTranslatorNew::ribEpilogue__(cameraShape1)
            >6 Renderer::ribPrologue_end(cameraShape1)
        >4 Renderer::HeroPassEnd(cameraShape1)
          >5 rm::Renderer::renderAll_local(R:/MyDocuments/maya/projects/default/rib/deepshadow_cameraShape1.0001..rib)
            >6 liqProcessLauncher::_execute(renderdl,   "R:/MyDocuments/maya/projects/default/rib/deepshadow_cameraShape1.0001..rib","R:/MyDocuments/maya/projects/default/", wait=0)
      >3 liqRenderScript::addJob(job.title=deepshadowFrame0,0)
        >4 liqRenderScript::popNextJobID()
      >3 liqRibTranslatorNew::postActions(defaultRenderLayer)
  >1 RendererMgr::test()
  >1 Renderer::closeLog()(but do nothing now)
  >1 RendererMgr::epilogue()
  >1 RendererMgr::uninstall()
  >1 RendererMgr::unsetFactory()
