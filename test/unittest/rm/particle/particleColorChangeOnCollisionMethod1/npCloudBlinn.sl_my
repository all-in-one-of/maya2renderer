#include <liquidAOVMacroDef.h>
//surface shader name: npCloudBlinn
surface npCloudBlinn
(
#ifdef USE_AOV_aov_ambient
		output varying color aov_ambient = 0;
#endif
#ifdef USE_AOV_aov_diffuse
		output varying color aov_diffuse = 0;
#endif
#ifdef USE_AOV_aov_specular
		output varying color aov_specular = 0;
#endif
#ifdef USE_AOV_aov_reflection
		output varying color aov_reflection = 0;
#endif
#ifdef USE_AOV_aov_rt_reflection
		output varying color aov_rt_reflection = 0;
#endif
#ifdef USE_AOV_aov_rt_reflection_alpha
		output varying float aov_rt_reflection_alpha = 0;
#endif
#ifdef USE_AOV_aov_env_reflection
		output varying color aov_env_reflection = 0;
#endif
#ifdef USE_AOV_aov_refraction
		output varying color aov_refraction = 0;
#endif
#ifdef USE_AOV_aov_shadow
		output varying float aov_shadow = 0;
#endif
#ifdef USE_AOV_aov_incandescence
		output varying color aov_incandescence = 0;
#endif
#ifdef USE_AOV_aov_translucence
		output varying color aov_translucence = 0;
#endif
#ifdef USE_AOV_aov_ambient_no_shadow
		output varying color aov_ambient_no_shadow = 0;
#endif
#ifdef USE_AOV_aov_diffuse_no_shadow
		output varying color aov_diffuse_no_shadow = 0;
#endif
#ifdef USE_AOV_aov_diffuse_intensity
		output varying color aov_diffuse_intensity = 0;
#endif
#ifdef USE_AOV_aov_diffuse_intensity_no_shadow
		output varying color aov_diffuse_intensity_no_shadow = 0;
#endif
#ifdef USE_AOV_aov_key_lights_diffuse_intensity
		output varying color aov_key_lights_diffuse_intensity = 0;
#endif
#ifdef USE_AOV_aov_key_lights_diffuse_intensity_no_shadow
		output varying color aov_key_lights_diffuse_intensity_no_shadow = 0;
#endif
#ifdef USE_AOV_aov_luminance_depth
		output varying color aov_luminance_depth = 0;
#endif
#ifdef USE_AOV_aov_specular_no_shadow
		output varying color aov_specular_no_shadow = 0;
#endif
#ifdef USE_AOV_aov_specular_intensity
		output varying color aov_specular_intensity = 0;
#endif
#ifdef USE_AOV_aov_specular_intensity_no_shadow
		output varying color aov_specular_intensity_no_shadow = 0;
#endif
#ifdef USE_AOV_aov_key_lights_specular_intensity
		output varying color aov_key_lights_specular_intensity = 0;
#endif
#ifdef USE_AOV_aov_key_lights_specular_intensity_no_shadow
		output varying color aov_key_lights_specular_intensity_no_shadow = 0;
#endif
#ifdef USE_AOV_aov_color_no_shadow
		output varying color aov_color_no_shadow = 0;
#endif
#ifdef USE_AOV_aov_surface_color
		output varying color aov_surface_color = 0;
#endif
#ifdef USE_AOV_aov_camera_space_normal
		output varying normal aov_camera_space_normal = 0;
#endif
#ifdef USE_AOV_aov_facing_ratio
		output varying float aov_facing_ratio = 0;
#endif

)
{



// define some extern variables which are used in 3delight shaders -----------------------------
 color __transparency = color (1,1,1);
 uniform float __reflects = 0;
 uniform float __refracts = 0;



// define the shaders --------------------------------------------------------------------------
#include "blinn.h"
//shader name: npCloudBlinn
void npCloudBlinn (
)
{
  color i_ambientColor = color (0,0,0);
  color i_color = color (0,0,0);
  float i_diffuse = float 0.8;
  float i_eccentricity = float 0.3;
  color i_incandescence = color (0,0,0);
 uniform float i_matteOpacityMode = float 2;
  float i_matteOpacity = float 1;
  color i_specularColor = color (0.5,0.5,0.5);
  float i_specularRollOff = float 0.7;
  float i_reflectivity = float 0.5;
  color i_reflectedColor = color (0,0,0);
 uniform float i_refractions = float 0;
  float i_refractiveIndex = float 1;
 uniform float i_refractionLimit = float 6;
  float i_lightAbsorbance = float 0;
  float i_shadowAttenuation = float 0.5;
 uniform float i_reflectionLimit = float 1;
  float i_translucence = float 0;
  float i_translucenceDepth = float 0.5;
  float i_translucenceFocus = float 0.5;
  color i_transparency = color (0,0,0);
 normal i_normalCamera = N;
 uniform float i_reflectionMaxDistance   =0;
 uniform float i_reflectionSamples       =0;
 uniform float i_reflectionBlur          =0;
 uniform float i_reflectionNoiseAmplitude=0;
 uniform float i_reflectionNoiseFrequency=0;
  color o_outColor = color (0,0,0);
  color o_outTransparency = color (0,0,0);
   maya_blinn(						
	i_ambientColor,			
	i_color,					
	i_diffuse,					
	i_eccentricity,			
	i_incandescence,			
	i_matteOpacityMode,		
	i_matteOpacity,			
	i_specularColor,			
	i_specularRollOff,			
	i_reflectivity,			
	i_reflectedColor,			
	i_refractions,				
	i_refractiveIndex,			
	i_refractionLimit,			
	i_lightAbsorbance,			
	i_shadowAttenuation,		
	i_reflectionLimit,			
	i_translucence,			
	i_translucenceDepth,		
	i_translucenceFocus,		
	i_transparency,			
	i_normalCamera,			
	i_reflectionMaxDistance,	
	i_reflectionSamples,		
	i_reflectionBlur,			
	i_reflectionNoiseAmplitude,
	i_reflectionNoiseFrequency,
	o_outColor,				
	o_outTransparency			
   );
    Ci             = Os * o_outColor;
    Oi             = Os * ( 1.0 - o_outTransparency );
}




// call the shaders ----------------------------------------------------------------------------

npCloudBlinn();
//inputSrc: 
//inputDes: 
//outputSrc: 

}
