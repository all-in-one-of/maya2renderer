//------------------------------------------------
char *null_token = NULL;
eiInt defaultInt = 0;
//------------------------------------------------

ei_context();
ei_verbose(6);
ei_link("eiIMG");
ei_link("eiSHADER");
ei_link("eiSHADER_maya");
//----------------shader_for_test begin---
ei_shader("maya_surfaceShader", "liquid_shader_for_test");
ei_shader_param_vector("outColor",1,0,0);
ei_end_shader();
ei_material("liquid_material_for_test");
ei_surface_shader("liquid_shader_for_test");
ei_end_material();
//----------------shader_for_test end ---
//    Generated by Liquid v2.3.5 (buildtime=20:51:12.30)
//    Scene : R:/MyDocuments/maya/projects/default/HappyWalk_liq_simple
//    User  : yaoyansi

//############################### option #
ei_options("perspShape_option");
ei_contrast(0.05);
ei_samples(0,2);
ei_filter(4,3);
//transform motion=0, deform motion=0
ei_motion(0);
ei_trace_depth(-219519910,-219519910,-219519910,-219519910,-219519910,-219519910);
ei_displace(0);
ei_face(3);
ei_end_options();
// maya settings: focal=35.000000, aperture = 46.799999, aspect=1.333333
//Depth of Field on camera "|persp|perspShape" is turned off in Maya

//############################### camera #
ei_camera("|persp|perspShape_object");
//beauty channel
ei_output("R:/MyDocuments/maya/projects/default/rmanpix/HappyWalk_liq_simple.perspShape.19.elvishray.bmp","bmp",1);
//mode=rgb
ei_output_variable("color",11);
ei_end_output();
// AOV
// AOV end
ei_focal(35);
ei_aperture(36);
ei_aspect(1.33333);
ei_resolution(768,576);
ei_clip(0.1,10000);
ei_end_camera();
//----------------------------------
ei_instance("|persp|perspShape");
ei_element("|persp|perspShape_object");
ei_transform(0.490904,-6.93889e-018,0.871214,0,   0.114294,0.991357,-0.0644016,0,   -0.863684,0.13119,0.486661,0,   -12.1719,9.47715,-2.90317,1);
ei_end_instance();

ei_shader("maya_lambert_transparent", "Man:GroundAtt");
ei_shader_param_vector("Cs",0.967,0.967,0.967);
ei_shader_param_vector("transparency",0,0,0);
ei_shader_param_vector("ambientColor",0,0,0);
ei_shader_param_vector("incandescence",0,0,0);
ei_shader_param_scalar("diffusion",0.8);
ei_shader_param_vector("outColor",0,0,0);
ei_shader_param_vector("outTransparency",0,0,0);
ei_end_shader();

ei_material("Man:lambert4SG");
ei_surface_shader("Man:GroundAtt");
ei_end_material();
ei_shader("maya_lambert_transparent", "Man:Body");
ei_shader_param_vector("Cs",1,0.954197,0.837);
ei_shader_param_vector("transparency",0,0,0);
ei_shader_param_vector("ambientColor",0,0,0);
ei_shader_param_vector("incandescence",0,0,0);
ei_shader_param_scalar("diffusion",0.8);
ei_shader_param_vector("outColor",0,0,0);
ei_shader_param_vector("outTransparency",0,0,0);
ei_end_shader();

ei_material("Man:lambert3SG");
ei_surface_shader("Man:Body");
ei_end_material();

//worldPrologue

// Renderer::exportLight("_pointLight1_pointLightShape1");

// Renderer::exportPointLight()
ei_shader("pointlight", "|pointLight1|pointLightShape1_shader");
ei_shader_param_vector("lightcolor",1,1,1);
ei_shader_param_scalar("intensity",1);
ei_end_shader();
ei_light("|pointLight1|pointLightShape1_object");
ei_light_shader("|pointLight1|pointLightShape1_shader");
ei_origin(0,0,0);
ei_end_light();
ei_instance("|pointLight1|pointLightShape1");
ei_element("|pointLight1|pointLightShape1_object");
ei_transform(1,0,0,0,   0,1,0,0,   0,0,1,0,   0,20.3844,-24.4854,1);
ei_declare("|Man:JAP_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapMod_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapMod|Man:pCube26_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapMod|Man:pCube8_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapMod|Man:pCube6_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:ground_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:leftHandPinky3|Man:pCube11_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:pCube10_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:pCube9_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:leftHandRing3|Man:pCube12_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:pCube13_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:pCube14_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:leftHandMiddle3|Man:pCube15_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:pCube16_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:pCube17_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:leftHandIndex3|Man:pCube18_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:pCube19_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:pCube20_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:leftHandThumb3|Man:pCube21_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:pCube22_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:pCube23_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:pCube25_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:pCube24_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:pCube7_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:rightHandPinky3|Man:pCube11_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:pCube10_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:pCube9_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:rightHandRing3|Man:pCube12_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:pCube13_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:pCube14_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:rightHandMiddle3|Man:pCube15_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:pCube16_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:pCube17_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:rightHandIndex3|Man:pCube18_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:pCube19_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:pCube20_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:rightHandThumb3|Man:pCube21_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:pCube22_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:pCube23_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube25_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube24_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:pCube7_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:joint86|Man:leftFootIndex1|Man:pCube4_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:pCube3_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:pCube2_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:pCube1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:joint87|Man:rightFootIndex1|Man:pCube4_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:pCube3_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:pCube2_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:pCube1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:pCube5_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:leftHandPinky3_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:leftHandRing3_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:leftHandMiddle3_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:leftHandIndex3_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:leftHandThumb3_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:rightHandPinky3_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:rightHandRing3_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:rightHandMiddle3_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:rightHandIndex3_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:rightHandThumb3_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:joint86_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:joint86|Man:leftFootIndex1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:joint87_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:joint87|Man:rightFootIndex1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_end_instance();

// Renderer::exportLight("_pointLight2_pointLightShape2");

// Renderer::exportPointLight()
ei_shader("pointlight", "|pointLight2|pointLightShape2_shader");
ei_shader_param_vector("lightcolor",1,1,1);
ei_shader_param_scalar("intensity",1);
ei_end_shader();
ei_light("|pointLight2|pointLightShape2_object");
ei_light_shader("|pointLight2|pointLightShape2_shader");
ei_origin(0,0,0);
ei_end_light();
ei_instance("|pointLight2|pointLightShape2");
ei_element("|pointLight2|pointLightShape2_object");
ei_transform(1,0,0,0,   0,1,0,0,   0,0,1,0,   0,4.31225,0,1);
ei_declare("|Man:JAP_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapMod_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapMod|Man:pCube26_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapMod|Man:pCube8_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapMod|Man:pCube6_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:ground_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:leftHandPinky3|Man:pCube11_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:pCube10_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:pCube9_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:leftHandRing3|Man:pCube12_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:pCube13_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:pCube14_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:leftHandMiddle3|Man:pCube15_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:pCube16_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:pCube17_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:leftHandIndex3|Man:pCube18_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:pCube19_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:pCube20_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:leftHandThumb3|Man:pCube21_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:pCube22_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:pCube23_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:pCube25_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:pCube24_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:pCube7_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:rightHandPinky3|Man:pCube11_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:pCube10_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:pCube9_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:rightHandRing3|Man:pCube12_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:pCube13_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:pCube14_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:rightHandMiddle3|Man:pCube15_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:pCube16_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:pCube17_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:rightHandIndex3|Man:pCube18_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:pCube19_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:pCube20_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:rightHandThumb3|Man:pCube21_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:pCube22_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:pCube23_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube25_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube24_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:pCube7_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:joint86|Man:leftFootIndex1|Man:pCube4_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:pCube3_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:pCube2_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:pCube1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:joint87|Man:rightFootIndex1|Man:pCube4_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:pCube3_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:pCube2_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:pCube1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:pCube5_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:leftHandPinky3_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:leftHandRing3_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:leftHandMiddle3_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:leftHandIndex3_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:leftHandThumb3_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:rightHandPinky3_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:rightHandRing3_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:rightHandMiddle3_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:rightHandIndex3_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:rightHandThumb3_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:joint86_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:joint86|Man:leftFootIndex1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:joint87_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:joint87|Man:rightFootIndex1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_end_instance();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapMod|Man:pCube26|Man:pCubeShape26, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapMod|Man:pCube26|Man:pCubeShape26
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=22
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapMod|Man:pCube26|Man:pCubeShape26" );
{
eiTag tag;
//vertex positions(required), size=84
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -31.089947, -0.854541, -31.537226 );
ei_tab_add_vector( -30.113487, -3.505130, -31.552385 );
ei_tab_add_vector( -31.738239, -1.119174, -32.028572 );
ei_tab_add_vector( -31.738239, -1.119174, -32.028572 );
ei_tab_add_vector( -30.113487, -3.505130, -31.552385 );
ei_tab_add_vector( -30.677153, -3.735208, -31.979649 );
ei_tab_add_vector( -30.567123, -0.694695, -32.313145 );
ei_tab_add_vector( -29.752829, -3.394823, -32.087582 );
ei_tab_add_vector( -31.089947, -0.854541, -31.537226 );
ei_tab_add_vector( -31.089947, -0.854541, -31.537226 );
ei_tab_add_vector( -29.752829, -3.394823, -32.087582 );
ei_tab_add_vector( -30.113487, -3.505130, -31.552385 );
ei_tab_add_vector( -30.567123, -0.694695, -32.313145 );
ei_tab_add_vector( -31.215416, -0.959328, -32.804489 );
ei_tab_add_vector( -29.752829, -3.394823, -32.087582 );
ei_tab_add_vector( -29.752829, -3.394823, -32.087582 );
ei_tab_add_vector( -31.215416, -0.959328, -32.804489 );
ei_tab_add_vector( -30.316494, -3.624901, -32.514847 );
ei_tab_add_vector( -31.215416, -0.959328, -32.804489 );
ei_tab_add_vector( -31.738239, -1.119174, -32.028572 );
ei_tab_add_vector( -30.316494, -3.624901, -32.514847 );
ei_tab_add_vector( -30.316494, -3.624901, -32.514847 );
ei_tab_add_vector( -31.738239, -1.119174, -32.028572 );
ei_tab_add_vector( -30.677153, -3.735208, -31.979649 );
ei_tab_add_vector( -30.569536, -4.233626, -31.951761 );
ei_tab_add_vector( -29.920082, -3.968532, -31.459469 );
ei_tab_add_vector( -30.156563, -4.107320, -32.564590 );
ei_tab_add_vector( -30.156563, -4.107320, -32.564590 );
ei_tab_add_vector( -29.920082, -3.968532, -31.459469 );
ei_tab_add_vector( -29.507109, -3.842226, -32.072300 );
ei_tab_add_vector( -31.215416, -0.959328, -32.804489 );
ei_tab_add_vector( -30.567123, -0.694695, -32.313145 );
ei_tab_add_vector( -31.738239, -1.119174, -32.028572 );
ei_tab_add_vector( -31.738239, -1.119174, -32.028572 );
ei_tab_add_vector( -30.567123, -0.694695, -32.313145 );
ei_tab_add_vector( -31.089947, -0.854541, -31.537226 );
ei_tab_add_vector( -30.677153, -3.735208, -31.979649 );
ei_tab_add_vector( -30.716320, -3.840710, -31.969694 );
ei_tab_add_vector( -30.316494, -3.624901, -32.514847 );
ei_tab_add_vector( -30.316494, -3.624901, -32.514847 );
ei_tab_add_vector( -30.716320, -3.840710, -31.969694 );
ei_tab_add_vector( -30.303343, -3.714405, -32.582523 );
ei_tab_add_vector( -30.316494, -3.624901, -32.514847 );
ei_tab_add_vector( -30.303343, -3.714405, -32.582523 );
ei_tab_add_vector( -29.752829, -3.394823, -32.087582 );
ei_tab_add_vector( -29.752829, -3.394823, -32.087582 );
ei_tab_add_vector( -30.303343, -3.714405, -32.582523 );
ei_tab_add_vector( -29.653889, -3.449311, -32.090233 );
ei_tab_add_vector( -29.752829, -3.394823, -32.087582 );
ei_tab_add_vector( -29.653889, -3.449311, -32.090233 );
ei_tab_add_vector( -30.113487, -3.505130, -31.552385 );
ei_tab_add_vector( -30.113487, -3.505130, -31.552385 );
ei_tab_add_vector( -29.653889, -3.449311, -32.090233 );
ei_tab_add_vector( -30.066866, -3.575617, -31.477402 );
ei_tab_add_vector( -30.113487, -3.505130, -31.552385 );
ei_tab_add_vector( -30.066866, -3.575617, -31.477402 );
ei_tab_add_vector( -30.677153, -3.735208, -31.979649 );
ei_tab_add_vector( -30.677153, -3.735208, -31.979649 );
ei_tab_add_vector( -30.066866, -3.575617, -31.477402 );
ei_tab_add_vector( -30.716320, -3.840710, -31.969694 );
ei_tab_add_vector( -30.716320, -3.840710, -31.969694 );
ei_tab_add_vector( -30.569536, -4.233626, -31.951761 );
ei_tab_add_vector( -30.303343, -3.714405, -32.582523 );
ei_tab_add_vector( -30.303343, -3.714405, -32.582523 );
ei_tab_add_vector( -30.569536, -4.233626, -31.951761 );
ei_tab_add_vector( -30.156563, -4.107320, -32.564590 );
ei_tab_add_vector( -30.303343, -3.714405, -32.582523 );
ei_tab_add_vector( -30.156563, -4.107320, -32.564590 );
ei_tab_add_vector( -29.653889, -3.449311, -32.090233 );
ei_tab_add_vector( -29.653889, -3.449311, -32.090233 );
ei_tab_add_vector( -30.156563, -4.107320, -32.564590 );
ei_tab_add_vector( -29.507109, -3.842226, -32.072300 );
ei_tab_add_vector( -29.653889, -3.449311, -32.090233 );
ei_tab_add_vector( -29.507109, -3.842226, -32.072300 );
ei_tab_add_vector( -30.066866, -3.575617, -31.477402 );
ei_tab_add_vector( -30.066866, -3.575617, -31.477402 );
ei_tab_add_vector( -29.507109, -3.842226, -32.072300 );
ei_tab_add_vector( -29.920082, -3.968532, -31.459469 );
ei_tab_add_vector( -30.066866, -3.575617, -31.477402 );
ei_tab_add_vector( -29.920082, -3.968532, -31.459469 );
ei_tab_add_vector( -30.716320, -3.840710, -31.969694 );
ei_tab_add_vector( -30.716320, -3.840710, -31.969694 );
ei_tab_add_vector( -29.920082, -3.968532, -31.459469 );
ei_tab_add_vector( -30.569536, -4.233626, -31.951761 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_end_tab();
//### triangles(required) size=84
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_tab_add_index(36);
ei_tab_add_index(37);
ei_tab_add_index(38);
ei_tab_add_index(39);
ei_tab_add_index(40);
ei_tab_add_index(41);
ei_tab_add_index(42);
ei_tab_add_index(43);
ei_tab_add_index(44);
ei_tab_add_index(45);
ei_tab_add_index(46);
ei_tab_add_index(47);
ei_tab_add_index(48);
ei_tab_add_index(49);
ei_tab_add_index(50);
ei_tab_add_index(51);
ei_tab_add_index(52);
ei_tab_add_index(53);
ei_tab_add_index(54);
ei_tab_add_index(55);
ei_tab_add_index(56);
ei_tab_add_index(57);
ei_tab_add_index(58);
ei_tab_add_index(59);
ei_tab_add_index(60);
ei_tab_add_index(61);
ei_tab_add_index(62);
ei_tab_add_index(63);
ei_tab_add_index(64);
ei_tab_add_index(65);
ei_tab_add_index(66);
ei_tab_add_index(67);
ei_tab_add_index(68);
ei_tab_add_index(69);
ei_tab_add_index(70);
ei_tab_add_index(71);
ei_tab_add_index(72);
ei_tab_add_index(73);
ei_tab_add_index(74);
ei_tab_add_index(75);
ei_tab_add_index(76);
ei_tab_add_index(77);
ei_tab_add_index(78);
ei_tab_add_index(79);
ei_tab_add_index(80);
ei_tab_add_index(81);
ei_tab_add_index(82);
ei_tab_add_index(83);
ei_end_tab();
}//|Man:JAP|Man:JapMod|Man:pCube26|Man:pCubeShape26
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapMod|Man:pCube8|Man:pCubeShape8, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapMod|Man:pCube8|Man:pCubeShape8
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=22
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapMod|Man:pCube8|Man:pCubeShape8" );
{
eiTag tag;
//vertex positions(required), size=84
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( 22.826321, -5.156896, -25.414539 );
ei_tab_add_vector( 22.840914, -5.162611, -24.670923 );
ei_tab_add_vector( 24.474295, -2.864530, -25.452271 );
ei_tab_add_vector( 24.474295, -2.864530, -25.452271 );
ei_tab_add_vector( 22.840914, -5.162611, -24.670923 );
ei_tab_add_vector( 24.491106, -2.871128, -24.597046 );
ei_tab_add_vector( 22.840914, -5.162611, -24.670923 );
ei_tab_add_vector( 23.357782, -5.564295, -24.684155 );
ei_tab_add_vector( 24.491106, -2.871128, -24.597046 );
ei_tab_add_vector( 24.491106, -2.871128, -24.597046 );
ei_tab_add_vector( 23.357782, -5.564295, -24.684155 );
ei_tab_add_vector( 25.240669, -3.453130, -24.616270 );
ei_tab_add_vector( 25.240669, -3.453130, -24.616270 );
ei_tab_add_vector( 23.357782, -5.564295, -24.684155 );
ei_tab_add_vector( 25.223860, -3.446532, -25.471493 );
ei_tab_add_vector( 25.223860, -3.446532, -25.471493 );
ei_tab_add_vector( 23.357782, -5.564295, -24.684155 );
ei_tab_add_vector( 23.343191, -5.558579, -25.427769 );
ei_tab_add_vector( 25.223860, -3.446532, -25.471493 );
ei_tab_add_vector( 23.343191, -5.558579, -25.427769 );
ei_tab_add_vector( 24.474295, -2.864530, -25.452271 );
ei_tab_add_vector( 24.474295, -2.864530, -25.452271 );
ei_tab_add_vector( 23.343191, -5.558579, -25.427769 );
ei_tab_add_vector( 22.826321, -5.156896, -25.414539 );
ei_tab_add_vector( 22.477713, -5.526335, -25.467154 );
ei_tab_add_vector( 23.069557, -5.986284, -25.482302 );
ei_tab_add_vector( 22.494526, -5.532921, -24.610361 );
ei_tab_add_vector( 22.494526, -5.532921, -24.610361 );
ei_tab_add_vector( 23.069557, -5.986284, -25.482302 );
ei_tab_add_vector( 23.086370, -5.992870, -24.625511 );
ei_tab_add_vector( 25.223860, -3.446532, -25.471493 );
ei_tab_add_vector( 24.474295, -2.864530, -25.452271 );
ei_tab_add_vector( 25.240669, -3.453130, -24.616270 );
ei_tab_add_vector( 25.240669, -3.453130, -24.616270 );
ei_tab_add_vector( 24.474295, -2.864530, -25.452271 );
ei_tab_add_vector( 24.491106, -2.871128, -24.597046 );
ei_tab_add_vector( 22.826321, -5.156896, -25.414539 );
ei_tab_add_vector( 23.343191, -5.558579, -25.427769 );
ei_tab_add_vector( 22.735283, -5.194823, -25.469656 );
ei_tab_add_vector( 22.735283, -5.194823, -25.469656 );
ei_tab_add_vector( 23.343191, -5.558579, -25.427769 );
ei_tab_add_vector( 23.327126, -5.654772, -25.484804 );
ei_tab_add_vector( 23.343191, -5.558579, -25.427769 );
ei_tab_add_vector( 23.357782, -5.564295, -24.684155 );
ei_tab_add_vector( 23.327126, -5.654772, -25.484804 );
ei_tab_add_vector( 23.327126, -5.654772, -25.484804 );
ei_tab_add_vector( 23.357782, -5.564295, -24.684155 );
ei_tab_add_vector( 23.343939, -5.661358, -24.628014 );
ei_tab_add_vector( 23.357782, -5.564295, -24.684155 );
ei_tab_add_vector( 22.840914, -5.162611, -24.670923 );
ei_tab_add_vector( 23.343939, -5.661358, -24.628014 );
ei_tab_add_vector( 23.343939, -5.661358, -24.628014 );
ei_tab_add_vector( 22.840914, -5.162611, -24.670923 );
ei_tab_add_vector( 22.752096, -5.201409, -24.612864 );
ei_tab_add_vector( 22.840914, -5.162611, -24.670923 );
ei_tab_add_vector( 22.826321, -5.156896, -25.414539 );
ei_tab_add_vector( 22.752096, -5.201409, -24.612864 );
ei_tab_add_vector( 22.752096, -5.201409, -24.612864 );
ei_tab_add_vector( 22.826321, -5.156896, -25.414539 );
ei_tab_add_vector( 22.735283, -5.194823, -25.469656 );
ei_tab_add_vector( 22.735283, -5.194823, -25.469656 );
ei_tab_add_vector( 23.327126, -5.654772, -25.484804 );
ei_tab_add_vector( 22.477713, -5.526335, -25.467154 );
ei_tab_add_vector( 22.477713, -5.526335, -25.467154 );
ei_tab_add_vector( 23.327126, -5.654772, -25.484804 );
ei_tab_add_vector( 23.069557, -5.986284, -25.482302 );
ei_tab_add_vector( 23.327126, -5.654772, -25.484804 );
ei_tab_add_vector( 23.343939, -5.661358, -24.628014 );
ei_tab_add_vector( 23.069557, -5.986284, -25.482302 );
ei_tab_add_vector( 23.069557, -5.986284, -25.482302 );
ei_tab_add_vector( 23.343939, -5.661358, -24.628014 );
ei_tab_add_vector( 23.086370, -5.992870, -24.625511 );
ei_tab_add_vector( 23.343939, -5.661358, -24.628014 );
ei_tab_add_vector( 22.752096, -5.201409, -24.612864 );
ei_tab_add_vector( 23.086370, -5.992870, -24.625511 );
ei_tab_add_vector( 23.086370, -5.992870, -24.625511 );
ei_tab_add_vector( 22.752096, -5.201409, -24.612864 );
ei_tab_add_vector( 22.494526, -5.532921, -24.610361 );
ei_tab_add_vector( 22.752096, -5.201409, -24.612864 );
ei_tab_add_vector( 22.735283, -5.194823, -25.469656 );
ei_tab_add_vector( 22.494526, -5.532921, -24.610361 );
ei_tab_add_vector( 22.494526, -5.532921, -24.610361 );
ei_tab_add_vector( 22.735283, -5.194823, -25.469656 );
ei_tab_add_vector( 22.477713, -5.526335, -25.467154 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_end_tab();
//### triangles(required) size=84
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_tab_add_index(36);
ei_tab_add_index(37);
ei_tab_add_index(38);
ei_tab_add_index(39);
ei_tab_add_index(40);
ei_tab_add_index(41);
ei_tab_add_index(42);
ei_tab_add_index(43);
ei_tab_add_index(44);
ei_tab_add_index(45);
ei_tab_add_index(46);
ei_tab_add_index(47);
ei_tab_add_index(48);
ei_tab_add_index(49);
ei_tab_add_index(50);
ei_tab_add_index(51);
ei_tab_add_index(52);
ei_tab_add_index(53);
ei_tab_add_index(54);
ei_tab_add_index(55);
ei_tab_add_index(56);
ei_tab_add_index(57);
ei_tab_add_index(58);
ei_tab_add_index(59);
ei_tab_add_index(60);
ei_tab_add_index(61);
ei_tab_add_index(62);
ei_tab_add_index(63);
ei_tab_add_index(64);
ei_tab_add_index(65);
ei_tab_add_index(66);
ei_tab_add_index(67);
ei_tab_add_index(68);
ei_tab_add_index(69);
ei_tab_add_index(70);
ei_tab_add_index(71);
ei_tab_add_index(72);
ei_tab_add_index(73);
ei_tab_add_index(74);
ei_tab_add_index(75);
ei_tab_add_index(76);
ei_tab_add_index(77);
ei_tab_add_index(78);
ei_tab_add_index(79);
ei_tab_add_index(80);
ei_tab_add_index(81);
ei_tab_add_index(82);
ei_tab_add_index(83);
ei_end_tab();
}//|Man:JAP|Man:JapMod|Man:pCube8|Man:pCubeShape8
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapMod|Man:pCube6|Man:pCubeShape6, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapMod|Man:pCube6|Man:pCubeShape6
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=60
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapMod|Man:pCube6|Man:pCubeShape6" );
{
eiTag tag;
//vertex positions(required), size=252
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( 10.589833, -0.913921, -11.484386 );
ei_tab_add_vector( 10.445780, -0.045888, -11.477663 );
ei_tab_add_vector( 10.501102, -0.861272, -11.883179 );
ei_tab_add_vector( 10.501102, -0.861272, -11.883179 );
ei_tab_add_vector( 10.445780, -0.045888, -11.477663 );
ei_tab_add_vector( 10.259071, 0.024628, -11.838945 );
ei_tab_add_vector( 10.844126, 1.693265, -11.883430 );
ei_tab_add_vector( 11.025728, 1.548657, -11.406781 );
ei_tab_add_vector( 11.147307, 1.472030, -11.955420 );
ei_tab_add_vector( 11.147307, 1.472030, -11.955420 );
ei_tab_add_vector( 11.025728, 1.548657, -11.406781 );
ei_tab_add_vector( 11.330370, 1.325116, -11.474117 );
ei_tab_add_vector( 11.209115, 1.426928, -12.204644 );
ei_tab_add_vector( 11.392416, 1.279588, -11.722353 );
ei_tab_add_vector( 10.835952, 0.344962, -12.150681 );
ei_tab_add_vector( 10.835952, 0.344962, -12.150681 );
ei_tab_add_vector( 11.392416, 1.279588, -11.722353 );
ei_tab_add_vector( 11.055694, 0.214127, -11.762559 );
ei_tab_add_vector( 11.125998, -0.661856, -11.474043 );
ei_tab_add_vector( 10.791792, -0.822040, -11.558654 );
ei_tab_add_vector( 11.088445, -0.727301, -11.942184 );
ei_tab_add_vector( 11.088445, -0.727301, -11.942184 );
ei_tab_add_vector( 10.791792, -0.822040, -11.558654 );
ei_tab_add_vector( 10.723118, -0.824127, -11.987915 );
ei_tab_add_vector( 10.552382, -0.730578, -10.449533 );
ei_tab_add_vector( 10.758250, -0.648369, -10.538608 );
ei_tab_add_vector( 10.765046, -0.232176, -10.523242 );
ei_tab_add_vector( 10.765046, -0.232176, -10.523242 );
ei_tab_add_vector( 10.758250, -0.648369, -10.538608 );
ei_tab_add_vector( 10.923193, -0.293911, -10.674497 );
ei_tab_add_vector( 11.088445, -0.727301, -11.942184 );
ei_tab_add_vector( 10.723118, -0.824127, -11.987915 );
ei_tab_add_vector( 10.791963, -0.188145, -12.053346 );
ei_tab_add_vector( 10.791963, -0.188145, -12.053346 );
ei_tab_add_vector( 10.723118, -0.824127, -11.987915 );
ei_tab_add_vector( 10.427558, -0.050654, -11.993365 );
ei_tab_add_vector( 10.617551, 0.535867, -11.446759 );
ei_tab_add_vector( 11.025728, 1.548657, -11.406781 );
ei_tab_add_vector( 10.397810, 0.666702, -11.834882 );
ei_tab_add_vector( 10.397810, 0.666702, -11.834882 );
ei_tab_add_vector( 11.025728, 1.548657, -11.406781 );
ei_tab_add_vector( 10.844126, 1.693265, -11.883430 );
ei_tab_add_vector( 10.835952, 0.344962, -12.150681 );
ei_tab_add_vector( 11.055694, 0.214127, -11.762559 );
ei_tab_add_vector( 10.791963, -0.188145, -12.053346 );
ei_tab_add_vector( 10.791963, -0.188145, -12.053346 );
ei_tab_add_vector( 11.055694, 0.214127, -11.762559 );
ei_tab_add_vector( 10.969484, -0.246842, -11.689349 );
ei_tab_add_vector( 11.286933, 0.044677, -10.526423 );
ei_tab_add_vector( 11.811961, 0.785540, -10.167014 );
ei_tab_add_vector( 11.096736, 0.184345, -10.403968 );
ei_tab_add_vector( 11.096736, 0.184345, -10.403968 );
ei_tab_add_vector( 11.811961, 0.785540, -10.167014 );
ei_tab_add_vector( 11.504980, 1.011048, -10.105462 );
ei_tab_add_vector( 10.835952, 0.344962, -12.150681 );
ei_tab_add_vector( 10.588006, 0.527035, -11.957337 );
ei_tab_add_vector( 11.209115, 1.426928, -12.204644 );
ei_tab_add_vector( 11.209115, 1.426928, -12.204644 );
ei_tab_add_vector( 10.588006, 0.527035, -11.957337 );
ei_tab_add_vector( 11.147307, 1.472030, -11.955420 );
ei_tab_add_vector( 10.445780, -0.045888, -11.477663 );
ei_tab_add_vector( 10.617551, 0.535867, -11.446759 );
ei_tab_add_vector( 10.259071, 0.024628, -11.838945 );
ei_tab_add_vector( 10.259071, 0.024628, -11.838945 );
ei_tab_add_vector( 10.617551, 0.535867, -11.446759 );
ei_tab_add_vector( 10.397810, 0.666702, -11.834882 );
ei_tab_add_vector( 10.765046, -0.232176, -10.523242 );
ei_tab_add_vector( 10.923193, -0.293911, -10.674497 );
ei_tab_add_vector( 11.096736, 0.184345, -10.403968 );
ei_tab_add_vector( 11.096736, 0.184345, -10.403968 );
ei_tab_add_vector( 10.923193, -0.293911, -10.674497 );
ei_tab_add_vector( 11.286933, 0.044677, -10.526423 );
ei_tab_add_vector( 10.791963, -0.188145, -12.053346 );
ei_tab_add_vector( 10.427558, -0.050654, -11.993365 );
ei_tab_add_vector( 10.835952, 0.344962, -12.150681 );
ei_tab_add_vector( 10.835952, 0.344962, -12.150681 );
ei_tab_add_vector( 10.427558, -0.050654, -11.993365 );
ei_tab_add_vector( 10.588006, 0.527035, -11.957337 );
ei_tab_add_vector( 10.791963, -0.188145, -12.053346 );
ei_tab_add_vector( 10.969484, -0.246842, -11.689349 );
ei_tab_add_vector( 11.088445, -0.727301, -11.942184 );
ei_tab_add_vector( 11.088445, -0.727301, -11.942184 );
ei_tab_add_vector( 10.969484, -0.246842, -11.689349 );
ei_tab_add_vector( 11.125998, -0.661856, -11.474043 );
ei_tab_add_vector( 11.340136, 1.281323, -10.613013 );
ei_tab_add_vector( 11.504980, 1.011048, -10.105462 );
ei_tab_add_vector( 11.646912, 1.055980, -10.675075 );
ei_tab_add_vector( 11.646912, 1.055980, -10.675075 );
ei_tab_add_vector( 11.504980, 1.011048, -10.105462 );
ei_tab_add_vector( 11.811961, 0.785540, -10.167014 );
ei_tab_add_vector( 11.709452, 1.010041, -10.922274 );
ei_tab_add_vector( 11.874543, 0.739567, -10.414110 );
ei_tab_add_vector( 11.313620, -0.005270, -11.111717 );
ei_tab_add_vector( 11.313620, -0.005270, -11.111717 );
ei_tab_add_vector( 11.874543, 0.739567, -10.414110 );
ei_tab_add_vector( 11.534878, -0.137396, -10.719767 );
ei_tab_add_vector( 11.086272, -0.342646, -11.095246 );
ei_tab_add_vector( 11.313620, -0.005270, -11.111717 );
ei_tab_add_vector( 11.264481, -0.401908, -10.727757 );
ei_tab_add_vector( 11.264481, -0.401908, -10.727757 );
ei_tab_add_vector( 11.313620, -0.005270, -11.111717 );
ei_tab_add_vector( 11.534878, -0.137396, -10.719767 );
ei_tab_add_vector( 11.086272, -0.342646, -11.095246 );
ei_tab_add_vector( 11.264481, -0.401908, -10.727757 );
ei_tab_add_vector( 11.059576, -0.556177, -10.927998 );
ei_tab_add_vector( 11.059576, -0.556177, -10.927998 );
ei_tab_add_vector( 11.264481, -0.401908, -10.727757 );
ei_tab_add_vector( 11.102896, -0.511797, -10.480875 );
ei_tab_add_vector( 10.728857, -0.718531, -11.012601 );
ei_tab_add_vector( 10.758250, -0.648369, -10.538608 );
ei_tab_add_vector( 10.529497, -0.812068, -10.938346 );
ei_tab_add_vector( 10.529497, -0.812068, -10.938346 );
ei_tab_add_vector( 10.758250, -0.648369, -10.538608 );
ei_tab_add_vector( 10.552382, -0.730578, -10.449533 );
ei_tab_add_vector( 10.529497, -0.812068, -10.938346 );
ei_tab_add_vector( 10.552382, -0.730578, -10.449533 );
ei_tab_add_vector( 10.577561, -0.160983, -10.887991 );
ei_tab_add_vector( 10.577561, -0.160983, -10.887991 );
ei_tab_add_vector( 10.552382, -0.730578, -10.449533 );
ei_tab_add_vector( 10.765046, -0.232176, -10.523242 );
ei_tab_add_vector( 10.577561, -0.160983, -10.887991 );
ei_tab_add_vector( 10.765046, -0.232176, -10.523242 );
ei_tab_add_vector( 10.875477, 0.316470, -10.795918 );
ei_tab_add_vector( 10.875477, 0.316470, -10.795918 );
ei_tab_add_vector( 10.765046, -0.232176, -10.523242 );
ei_tab_add_vector( 11.096736, 0.184345, -10.403968 );
ei_tab_add_vector( 10.875477, 0.316470, -10.795918 );
ei_tab_add_vector( 11.096736, 0.184345, -10.403968 );
ei_tab_add_vector( 11.340136, 1.281323, -10.613013 );
ei_tab_add_vector( 11.340136, 1.281323, -10.613013 );
ei_tab_add_vector( 11.096736, 0.184345, -10.403968 );
ei_tab_add_vector( 11.504980, 1.011048, -10.105462 );
ei_tab_add_vector( 11.025728, 1.548657, -11.406781 );
ei_tab_add_vector( 11.340136, 1.281323, -10.613013 );
ei_tab_add_vector( 11.330370, 1.325116, -11.474117 );
ei_tab_add_vector( 11.330370, 1.325116, -11.474117 );
ei_tab_add_vector( 11.340136, 1.281323, -10.613013 );
ei_tab_add_vector( 11.646912, 1.055980, -10.675075 );
ei_tab_add_vector( 11.392416, 1.279588, -11.722353 );
ei_tab_add_vector( 11.709452, 1.010041, -10.922274 );
ei_tab_add_vector( 11.055694, 0.214127, -11.762559 );
ei_tab_add_vector( 11.055694, 0.214127, -11.762559 );
ei_tab_add_vector( 11.709452, 1.010041, -10.922274 );
ei_tab_add_vector( 11.313620, -0.005270, -11.111717 );
ei_tab_add_vector( 11.055694, 0.214127, -11.762559 );
ei_tab_add_vector( 11.313620, -0.005270, -11.111717 );
ei_tab_add_vector( 10.969484, -0.246842, -11.689349 );
ei_tab_add_vector( 10.969484, -0.246842, -11.689349 );
ei_tab_add_vector( 11.313620, -0.005270, -11.111717 );
ei_tab_add_vector( 11.086272, -0.342646, -11.095246 );
ei_tab_add_vector( 10.969484, -0.246842, -11.689349 );
ei_tab_add_vector( 11.086272, -0.342646, -11.095246 );
ei_tab_add_vector( 11.125998, -0.661856, -11.474043 );
ei_tab_add_vector( 11.125998, -0.661856, -11.474043 );
ei_tab_add_vector( 11.086272, -0.342646, -11.095246 );
ei_tab_add_vector( 11.059576, -0.556177, -10.927998 );
ei_tab_add_vector( 10.791792, -0.822040, -11.558654 );
ei_tab_add_vector( 10.728857, -0.718531, -11.012601 );
ei_tab_add_vector( 10.589833, -0.913921, -11.484386 );
ei_tab_add_vector( 10.589833, -0.913921, -11.484386 );
ei_tab_add_vector( 10.728857, -0.718531, -11.012601 );
ei_tab_add_vector( 10.529497, -0.812068, -10.938346 );
ei_tab_add_vector( 10.589833, -0.913921, -11.484386 );
ei_tab_add_vector( 10.529497, -0.812068, -10.938346 );
ei_tab_add_vector( 10.445780, -0.045888, -11.477663 );
ei_tab_add_vector( 10.445780, -0.045888, -11.477663 );
ei_tab_add_vector( 10.529497, -0.812068, -10.938346 );
ei_tab_add_vector( 10.577561, -0.160983, -10.887991 );
ei_tab_add_vector( 10.617551, 0.535867, -11.446759 );
ei_tab_add_vector( 10.445780, -0.045888, -11.477663 );
ei_tab_add_vector( 10.875477, 0.316470, -10.795918 );
ei_tab_add_vector( 10.875477, 0.316470, -10.795918 );
ei_tab_add_vector( 10.445780, -0.045888, -11.477663 );
ei_tab_add_vector( 10.577561, -0.160983, -10.887991 );
ei_tab_add_vector( 11.025728, 1.548657, -11.406781 );
ei_tab_add_vector( 10.617551, 0.535867, -11.446759 );
ei_tab_add_vector( 11.340136, 1.281323, -10.613013 );
ei_tab_add_vector( 11.340136, 1.281323, -10.613013 );
ei_tab_add_vector( 10.617551, 0.535867, -11.446759 );
ei_tab_add_vector( 10.875477, 0.316470, -10.795918 );
ei_tab_add_vector( 11.330370, 1.325116, -11.474117 );
ei_tab_add_vector( 11.392416, 1.279588, -11.722353 );
ei_tab_add_vector( 11.147307, 1.472030, -11.955420 );
ei_tab_add_vector( 11.147307, 1.472030, -11.955420 );
ei_tab_add_vector( 11.392416, 1.279588, -11.722353 );
ei_tab_add_vector( 11.209115, 1.426928, -12.204644 );
ei_tab_add_vector( 10.723118, -0.824127, -11.987915 );
ei_tab_add_vector( 10.791792, -0.822040, -11.558654 );
ei_tab_add_vector( 10.501102, -0.861272, -11.883179 );
ei_tab_add_vector( 10.501102, -0.861272, -11.883179 );
ei_tab_add_vector( 10.791792, -0.822040, -11.558654 );
ei_tab_add_vector( 10.589833, -0.913921, -11.484386 );
ei_tab_add_vector( 10.758250, -0.648369, -10.538608 );
ei_tab_add_vector( 11.102896, -0.511797, -10.480875 );
ei_tab_add_vector( 10.923193, -0.293911, -10.674497 );
ei_tab_add_vector( 10.923193, -0.293911, -10.674497 );
ei_tab_add_vector( 11.102896, -0.511797, -10.480875 );
ei_tab_add_vector( 11.264481, -0.401908, -10.727757 );
ei_tab_add_vector( 10.723118, -0.824127, -11.987915 );
ei_tab_add_vector( 10.501102, -0.861272, -11.883179 );
ei_tab_add_vector( 10.427558, -0.050654, -11.993365 );
ei_tab_add_vector( 10.427558, -0.050654, -11.993365 );
ei_tab_add_vector( 10.501102, -0.861272, -11.883179 );
ei_tab_add_vector( 10.259071, 0.024628, -11.838945 );
ei_tab_add_vector( 11.811961, 0.785540, -10.167014 );
ei_tab_add_vector( 11.286933, 0.044677, -10.526423 );
ei_tab_add_vector( 11.874543, 0.739567, -10.414110 );
ei_tab_add_vector( 11.874543, 0.739567, -10.414110 );
ei_tab_add_vector( 11.286933, 0.044677, -10.526423 );
ei_tab_add_vector( 11.534878, -0.137396, -10.719767 );
ei_tab_add_vector( 10.588006, 0.527035, -11.957337 );
ei_tab_add_vector( 10.397810, 0.666702, -11.834882 );
ei_tab_add_vector( 11.147307, 1.472030, -11.955420 );
ei_tab_add_vector( 11.147307, 1.472030, -11.955420 );
ei_tab_add_vector( 10.397810, 0.666702, -11.834882 );
ei_tab_add_vector( 10.844126, 1.693265, -11.883430 );
ei_tab_add_vector( 10.923193, -0.293911, -10.674497 );
ei_tab_add_vector( 11.264481, -0.401908, -10.727757 );
ei_tab_add_vector( 11.286933, 0.044677, -10.526423 );
ei_tab_add_vector( 11.286933, 0.044677, -10.526423 );
ei_tab_add_vector( 11.264481, -0.401908, -10.727757 );
ei_tab_add_vector( 11.534878, -0.137396, -10.719767 );
ei_tab_add_vector( 10.427558, -0.050654, -11.993365 );
ei_tab_add_vector( 10.259071, 0.024628, -11.838945 );
ei_tab_add_vector( 10.588006, 0.527035, -11.957337 );
ei_tab_add_vector( 10.588006, 0.527035, -11.957337 );
ei_tab_add_vector( 10.259071, 0.024628, -11.838945 );
ei_tab_add_vector( 10.397810, 0.666702, -11.834882 );
ei_tab_add_vector( 11.811961, 0.785540, -10.167014 );
ei_tab_add_vector( 11.874543, 0.739567, -10.414110 );
ei_tab_add_vector( 11.646912, 1.055980, -10.675075 );
ei_tab_add_vector( 11.646912, 1.055980, -10.675075 );
ei_tab_add_vector( 11.874543, 0.739567, -10.414110 );
ei_tab_add_vector( 11.709452, 1.010041, -10.922274 );
ei_tab_add_vector( 10.728857, -0.718531, -11.012601 );
ei_tab_add_vector( 11.059576, -0.556177, -10.927998 );
ei_tab_add_vector( 10.758250, -0.648369, -10.538608 );
ei_tab_add_vector( 10.758250, -0.648369, -10.538608 );
ei_tab_add_vector( 11.059576, -0.556177, -10.927998 );
ei_tab_add_vector( 11.102896, -0.511797, -10.480875 );
ei_tab_add_vector( 11.646912, 1.055980, -10.675075 );
ei_tab_add_vector( 11.709452, 1.010041, -10.922274 );
ei_tab_add_vector( 11.330370, 1.325116, -11.474117 );
ei_tab_add_vector( 11.330370, 1.325116, -11.474117 );
ei_tab_add_vector( 11.709452, 1.010041, -10.922274 );
ei_tab_add_vector( 11.392416, 1.279588, -11.722353 );
ei_tab_add_vector( 10.791792, -0.822040, -11.558654 );
ei_tab_add_vector( 11.125998, -0.661856, -11.474043 );
ei_tab_add_vector( 10.728857, -0.718531, -11.012601 );
ei_tab_add_vector( 10.728857, -0.718531, -11.012601 );
ei_tab_add_vector( 11.125998, -0.661856, -11.474043 );
ei_tab_add_vector( 11.059576, -0.556177, -10.927998 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.437364, 0.000000 );
ei_tab_add_vector2( 0.437364, 0.068201 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.437364, 0.068201 );
ei_tab_add_vector2( 0.375000, 0.068201 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.437364, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.457665 );
ei_tab_add_vector2( 0.375000, 0.457665 );
ei_tab_add_vector2( 0.437364, 0.250000 );
ei_tab_add_vector2( 0.437364, 0.457698 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.437364, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.604753 );
ei_tab_add_vector2( 0.375000, 0.604753 );
ei_tab_add_vector2( 0.437364, 0.500000 );
ei_tab_add_vector2( 0.437364, 0.604753 );
ei_tab_add_vector2( 0.437364, 0.750000 );
ei_tab_add_vector2( 0.437364, 0.906085 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.437364, 0.906085 );
ei_tab_add_vector2( 0.375000, 0.906085 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.718915, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.068201 );
ei_tab_add_vector2( 0.625000, 0.068201 );
ei_tab_add_vector2( 0.718915, 0.000000 );
ei_tab_add_vector2( 0.705141, 0.068201 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.281085, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.068201 );
ei_tab_add_vector2( 0.125000, 0.068201 );
ei_tab_add_vector2( 0.281085, 0.000000 );
ei_tab_add_vector2( 0.294859, 0.068201 );
ei_tab_add_vector2( 0.437364, 0.145247 );
ei_tab_add_vector2( 0.437364, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.145247 );
ei_tab_add_vector2( 0.375000, 0.145247 );
ei_tab_add_vector2( 0.437364, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.604753 );
ei_tab_add_vector2( 0.437364, 0.604753 );
ei_tab_add_vector2( 0.375000, 0.681799 );
ei_tab_add_vector2( 0.375000, 0.681799 );
ei_tab_add_vector2( 0.437364, 0.604753 );
ei_tab_add_vector2( 0.437364, 0.681799 );
ei_tab_add_vector2( 0.733525, 0.145247 );
ei_tab_add_vector2( 0.832665, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.145247 );
ei_tab_add_vector2( 0.625000, 0.145247 );
ei_tab_add_vector2( 0.832665, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.145247 );
ei_tab_add_vector2( 0.266475, 0.145247 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.266475, 0.145247 );
ei_tab_add_vector2( 0.167335, 0.250000 );
ei_tab_add_vector2( 0.437364, 0.068201 );
ei_tab_add_vector2( 0.437364, 0.145247 );
ei_tab_add_vector2( 0.375000, 0.068201 );
ei_tab_add_vector2( 0.375000, 0.068201 );
ei_tab_add_vector2( 0.437364, 0.145247 );
ei_tab_add_vector2( 0.375000, 0.145247 );
ei_tab_add_vector2( 0.625000, 0.068201 );
ei_tab_add_vector2( 0.705141, 0.068201 );
ei_tab_add_vector2( 0.625000, 0.145247 );
ei_tab_add_vector2( 0.625000, 0.145247 );
ei_tab_add_vector2( 0.705141, 0.068201 );
ei_tab_add_vector2( 0.733525, 0.145247 );
ei_tab_add_vector2( 0.125000, 0.068201 );
ei_tab_add_vector2( 0.294859, 0.068201 );
ei_tab_add_vector2( 0.125000, 0.145247 );
ei_tab_add_vector2( 0.125000, 0.145247 );
ei_tab_add_vector2( 0.294859, 0.068201 );
ei_tab_add_vector2( 0.266475, 0.145247 );
ei_tab_add_vector2( 0.375000, 0.681799 );
ei_tab_add_vector2( 0.437364, 0.681799 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.437364, 0.681799 );
ei_tab_add_vector2( 0.437364, 0.750000 );
ei_tab_add_vector2( 0.561904, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.561904, 0.457665 );
ei_tab_add_vector2( 0.561904, 0.457665 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.457665 );
ei_tab_add_vector2( 0.561904, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.561904, 0.604753 );
ei_tab_add_vector2( 0.561904, 0.604753 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.604753 );
ei_tab_add_vector2( 0.561904, 0.681799 );
ei_tab_add_vector2( 0.561904, 0.604753 );
ei_tab_add_vector2( 0.625000, 0.681799 );
ei_tab_add_vector2( 0.625000, 0.681799 );
ei_tab_add_vector2( 0.561904, 0.604753 );
ei_tab_add_vector2( 0.625000, 0.604753 );
ei_tab_add_vector2( 0.561904, 0.681799 );
ei_tab_add_vector2( 0.625000, 0.681799 );
ei_tab_add_vector2( 0.561904, 0.750000 );
ei_tab_add_vector2( 0.561904, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.681799 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.561904, 0.906085 );
ei_tab_add_vector2( 0.625000, 0.906085 );
ei_tab_add_vector2( 0.561904, 1.000000 );
ei_tab_add_vector2( 0.561904, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.906085 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.561904, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.561904, 0.068201 );
ei_tab_add_vector2( 0.561904, 0.068201 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.068201 );
ei_tab_add_vector2( 0.561904, 0.068201 );
ei_tab_add_vector2( 0.625000, 0.068201 );
ei_tab_add_vector2( 0.561904, 0.145247 );
ei_tab_add_vector2( 0.561904, 0.145247 );
ei_tab_add_vector2( 0.625000, 0.068201 );
ei_tab_add_vector2( 0.625000, 0.145247 );
ei_tab_add_vector2( 0.561904, 0.145247 );
ei_tab_add_vector2( 0.625000, 0.145247 );
ei_tab_add_vector2( 0.561904, 0.250000 );
ei_tab_add_vector2( 0.561904, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.145247 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.437364, 0.250000 );
ei_tab_add_vector2( 0.561904, 0.250000 );
ei_tab_add_vector2( 0.437364, 0.457698 );
ei_tab_add_vector2( 0.437364, 0.457698 );
ei_tab_add_vector2( 0.561904, 0.250000 );
ei_tab_add_vector2( 0.561904, 0.457665 );
ei_tab_add_vector2( 0.437364, 0.500000 );
ei_tab_add_vector2( 0.561904, 0.500000 );
ei_tab_add_vector2( 0.437364, 0.604753 );
ei_tab_add_vector2( 0.437364, 0.604753 );
ei_tab_add_vector2( 0.561904, 0.500000 );
ei_tab_add_vector2( 0.561904, 0.604753 );
ei_tab_add_vector2( 0.437364, 0.604753 );
ei_tab_add_vector2( 0.561904, 0.604753 );
ei_tab_add_vector2( 0.437364, 0.681799 );
ei_tab_add_vector2( 0.437364, 0.681799 );
ei_tab_add_vector2( 0.561904, 0.604753 );
ei_tab_add_vector2( 0.561904, 0.681799 );
ei_tab_add_vector2( 0.437364, 0.681799 );
ei_tab_add_vector2( 0.561904, 0.681799 );
ei_tab_add_vector2( 0.437364, 0.750000 );
ei_tab_add_vector2( 0.437364, 0.750000 );
ei_tab_add_vector2( 0.561904, 0.681799 );
ei_tab_add_vector2( 0.561904, 0.750000 );
ei_tab_add_vector2( 0.437364, 0.906085 );
ei_tab_add_vector2( 0.561904, 0.906085 );
ei_tab_add_vector2( 0.437364, 1.000000 );
ei_tab_add_vector2( 0.437364, 1.000000 );
ei_tab_add_vector2( 0.561904, 0.906085 );
ei_tab_add_vector2( 0.561904, 1.000000 );
ei_tab_add_vector2( 0.437364, 0.000000 );
ei_tab_add_vector2( 0.561904, 0.000000 );
ei_tab_add_vector2( 0.437364, 0.068201 );
ei_tab_add_vector2( 0.437364, 0.068201 );
ei_tab_add_vector2( 0.561904, 0.000000 );
ei_tab_add_vector2( 0.561904, 0.068201 );
ei_tab_add_vector2( 0.437364, 0.145247 );
ei_tab_add_vector2( 0.437364, 0.068201 );
ei_tab_add_vector2( 0.561904, 0.145247 );
ei_tab_add_vector2( 0.561904, 0.145247 );
ei_tab_add_vector2( 0.437364, 0.068201 );
ei_tab_add_vector2( 0.561904, 0.068201 );
ei_tab_add_vector2( 0.437364, 0.250000 );
ei_tab_add_vector2( 0.437364, 0.145247 );
ei_tab_add_vector2( 0.561904, 0.250000 );
ei_tab_add_vector2( 0.561904, 0.250000 );
ei_tab_add_vector2( 0.437364, 0.145247 );
ei_tab_add_vector2( 0.561904, 0.145247 );
ei_tab_add_vector2( 0.437364, 0.457698 );
ei_tab_add_vector2( 0.437364, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.457665 );
ei_tab_add_vector2( 0.375000, 0.457665 );
ei_tab_add_vector2( 0.437364, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.906085 );
ei_tab_add_vector2( 0.437364, 0.906085 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.437364, 0.906085 );
ei_tab_add_vector2( 0.437364, 1.000000 );
ei_tab_add_vector2( 0.718915, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.705141, 0.068201 );
ei_tab_add_vector2( 0.705141, 0.068201 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.068201 );
ei_tab_add_vector2( 0.281085, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.294859, 0.068201 );
ei_tab_add_vector2( 0.294859, 0.068201 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.068201 );
ei_tab_add_vector2( 0.832665, 0.250000 );
ei_tab_add_vector2( 0.733525, 0.145247 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.733525, 0.145247 );
ei_tab_add_vector2( 0.875000, 0.145247 );
ei_tab_add_vector2( 0.266475, 0.145247 );
ei_tab_add_vector2( 0.375000, 0.145247 );
ei_tab_add_vector2( 0.167335, 0.250000 );
ei_tab_add_vector2( 0.167335, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.145247 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.705141, 0.068201 );
ei_tab_add_vector2( 0.875000, 0.068201 );
ei_tab_add_vector2( 0.733525, 0.145247 );
ei_tab_add_vector2( 0.733525, 0.145247 );
ei_tab_add_vector2( 0.875000, 0.068201 );
ei_tab_add_vector2( 0.875000, 0.145247 );
ei_tab_add_vector2( 0.294859, 0.068201 );
ei_tab_add_vector2( 0.375000, 0.068201 );
ei_tab_add_vector2( 0.266475, 0.145247 );
ei_tab_add_vector2( 0.266475, 0.145247 );
ei_tab_add_vector2( 0.375000, 0.068201 );
ei_tab_add_vector2( 0.375000, 0.145247 );
ei_tab_add_vector2( 0.625000, 0.457665 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.561904, 0.457665 );
ei_tab_add_vector2( 0.561904, 0.457665 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.561904, 0.500000 );
ei_tab_add_vector2( 0.561904, 0.906085 );
ei_tab_add_vector2( 0.561904, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.906085 );
ei_tab_add_vector2( 0.625000, 0.906085 );
ei_tab_add_vector2( 0.561904, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.561904, 0.457665 );
ei_tab_add_vector2( 0.561904, 0.500000 );
ei_tab_add_vector2( 0.437364, 0.457698 );
ei_tab_add_vector2( 0.437364, 0.457698 );
ei_tab_add_vector2( 0.561904, 0.500000 );
ei_tab_add_vector2( 0.437364, 0.500000 );
ei_tab_add_vector2( 0.437364, 0.906085 );
ei_tab_add_vector2( 0.437364, 0.750000 );
ei_tab_add_vector2( 0.561904, 0.906085 );
ei_tab_add_vector2( 0.561904, 0.906085 );
ei_tab_add_vector2( 0.437364, 0.750000 );
ei_tab_add_vector2( 0.561904, 0.750000 );
ei_end_tab();
//### triangles(required) size=252
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_tab_add_index(36);
ei_tab_add_index(37);
ei_tab_add_index(38);
ei_tab_add_index(39);
ei_tab_add_index(40);
ei_tab_add_index(41);
ei_tab_add_index(42);
ei_tab_add_index(43);
ei_tab_add_index(44);
ei_tab_add_index(45);
ei_tab_add_index(46);
ei_tab_add_index(47);
ei_tab_add_index(48);
ei_tab_add_index(49);
ei_tab_add_index(50);
ei_tab_add_index(51);
ei_tab_add_index(52);
ei_tab_add_index(53);
ei_tab_add_index(54);
ei_tab_add_index(55);
ei_tab_add_index(56);
ei_tab_add_index(57);
ei_tab_add_index(58);
ei_tab_add_index(59);
ei_tab_add_index(60);
ei_tab_add_index(61);
ei_tab_add_index(62);
ei_tab_add_index(63);
ei_tab_add_index(64);
ei_tab_add_index(65);
ei_tab_add_index(66);
ei_tab_add_index(67);
ei_tab_add_index(68);
ei_tab_add_index(69);
ei_tab_add_index(70);
ei_tab_add_index(71);
ei_tab_add_index(72);
ei_tab_add_index(73);
ei_tab_add_index(74);
ei_tab_add_index(75);
ei_tab_add_index(76);
ei_tab_add_index(77);
ei_tab_add_index(78);
ei_tab_add_index(79);
ei_tab_add_index(80);
ei_tab_add_index(81);
ei_tab_add_index(82);
ei_tab_add_index(83);
ei_tab_add_index(84);
ei_tab_add_index(85);
ei_tab_add_index(86);
ei_tab_add_index(87);
ei_tab_add_index(88);
ei_tab_add_index(89);
ei_tab_add_index(90);
ei_tab_add_index(91);
ei_tab_add_index(92);
ei_tab_add_index(93);
ei_tab_add_index(94);
ei_tab_add_index(95);
ei_tab_add_index(96);
ei_tab_add_index(97);
ei_tab_add_index(98);
ei_tab_add_index(99);
ei_tab_add_index(100);
ei_tab_add_index(101);
ei_tab_add_index(102);
ei_tab_add_index(103);
ei_tab_add_index(104);
ei_tab_add_index(105);
ei_tab_add_index(106);
ei_tab_add_index(107);
ei_tab_add_index(108);
ei_tab_add_index(109);
ei_tab_add_index(110);
ei_tab_add_index(111);
ei_tab_add_index(112);
ei_tab_add_index(113);
ei_tab_add_index(114);
ei_tab_add_index(115);
ei_tab_add_index(116);
ei_tab_add_index(117);
ei_tab_add_index(118);
ei_tab_add_index(119);
ei_tab_add_index(120);
ei_tab_add_index(121);
ei_tab_add_index(122);
ei_tab_add_index(123);
ei_tab_add_index(124);
ei_tab_add_index(125);
ei_tab_add_index(126);
ei_tab_add_index(127);
ei_tab_add_index(128);
ei_tab_add_index(129);
ei_tab_add_index(130);
ei_tab_add_index(131);
ei_tab_add_index(132);
ei_tab_add_index(133);
ei_tab_add_index(134);
ei_tab_add_index(135);
ei_tab_add_index(136);
ei_tab_add_index(137);
ei_tab_add_index(138);
ei_tab_add_index(139);
ei_tab_add_index(140);
ei_tab_add_index(141);
ei_tab_add_index(142);
ei_tab_add_index(143);
ei_tab_add_index(144);
ei_tab_add_index(145);
ei_tab_add_index(146);
ei_tab_add_index(147);
ei_tab_add_index(148);
ei_tab_add_index(149);
ei_tab_add_index(150);
ei_tab_add_index(151);
ei_tab_add_index(152);
ei_tab_add_index(153);
ei_tab_add_index(154);
ei_tab_add_index(155);
ei_tab_add_index(156);
ei_tab_add_index(157);
ei_tab_add_index(158);
ei_tab_add_index(159);
ei_tab_add_index(160);
ei_tab_add_index(161);
ei_tab_add_index(162);
ei_tab_add_index(163);
ei_tab_add_index(164);
ei_tab_add_index(165);
ei_tab_add_index(166);
ei_tab_add_index(167);
ei_tab_add_index(168);
ei_tab_add_index(169);
ei_tab_add_index(170);
ei_tab_add_index(171);
ei_tab_add_index(172);
ei_tab_add_index(173);
ei_tab_add_index(174);
ei_tab_add_index(175);
ei_tab_add_index(176);
ei_tab_add_index(177);
ei_tab_add_index(178);
ei_tab_add_index(179);
ei_tab_add_index(180);
ei_tab_add_index(181);
ei_tab_add_index(182);
ei_tab_add_index(183);
ei_tab_add_index(184);
ei_tab_add_index(185);
ei_tab_add_index(186);
ei_tab_add_index(187);
ei_tab_add_index(188);
ei_tab_add_index(189);
ei_tab_add_index(190);
ei_tab_add_index(191);
ei_tab_add_index(192);
ei_tab_add_index(193);
ei_tab_add_index(194);
ei_tab_add_index(195);
ei_tab_add_index(196);
ei_tab_add_index(197);
ei_tab_add_index(198);
ei_tab_add_index(199);
ei_tab_add_index(200);
ei_tab_add_index(201);
ei_tab_add_index(202);
ei_tab_add_index(203);
ei_tab_add_index(204);
ei_tab_add_index(205);
ei_tab_add_index(206);
ei_tab_add_index(207);
ei_tab_add_index(208);
ei_tab_add_index(209);
ei_tab_add_index(210);
ei_tab_add_index(211);
ei_tab_add_index(212);
ei_tab_add_index(213);
ei_tab_add_index(214);
ei_tab_add_index(215);
ei_tab_add_index(216);
ei_tab_add_index(217);
ei_tab_add_index(218);
ei_tab_add_index(219);
ei_tab_add_index(220);
ei_tab_add_index(221);
ei_tab_add_index(222);
ei_tab_add_index(223);
ei_tab_add_index(224);
ei_tab_add_index(225);
ei_tab_add_index(226);
ei_tab_add_index(227);
ei_tab_add_index(228);
ei_tab_add_index(229);
ei_tab_add_index(230);
ei_tab_add_index(231);
ei_tab_add_index(232);
ei_tab_add_index(233);
ei_tab_add_index(234);
ei_tab_add_index(235);
ei_tab_add_index(236);
ei_tab_add_index(237);
ei_tab_add_index(238);
ei_tab_add_index(239);
ei_tab_add_index(240);
ei_tab_add_index(241);
ei_tab_add_index(242);
ei_tab_add_index(243);
ei_tab_add_index(244);
ei_tab_add_index(245);
ei_tab_add_index(246);
ei_tab_add_index(247);
ei_tab_add_index(248);
ei_tab_add_index(249);
ei_tab_add_index(250);
ei_tab_add_index(251);
ei_end_tab();
}//|Man:JAP|Man:JapMod|Man:pCube6|Man:pCubeShape6
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:ground|Man:groundShape, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:ground|Man:groundShape
//### UV(map1), size=28
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:ground|Man:groundShape" );
{
eiTag tag;
//vertex positions(required), size=72
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -33.988514, -4.938445, -0.782172 );
ei_tab_add_vector( -33.988514, -4.755286, -1.545085 );
ei_tab_add_vector( 33.988514, -4.938445, -0.782172 );
ei_tab_add_vector( 33.988514, -4.938445, -0.782172 );
ei_tab_add_vector( -33.988514, -4.755286, -1.545085 );
ei_tab_add_vector( 33.988514, -4.755286, -1.545085 );
ei_tab_add_vector( -33.988514, -4.755286, -1.545085 );
ei_tab_add_vector( -33.988514, -4.455036, -2.269953 );
ei_tab_add_vector( 33.988514, -4.755286, -1.545085 );
ei_tab_add_vector( 33.988514, -4.755286, -1.545085 );
ei_tab_add_vector( -33.988514, -4.455036, -2.269953 );
ei_tab_add_vector( 33.988514, -4.455036, -2.269953 );
ei_tab_add_vector( -33.988514, -4.455036, -2.269953 );
ei_tab_add_vector( -33.988514, -4.045088, -2.938927 );
ei_tab_add_vector( 33.988514, -4.455036, -2.269953 );
ei_tab_add_vector( 33.988514, -4.455036, -2.269953 );
ei_tab_add_vector( -33.988514, -4.045088, -2.938927 );
ei_tab_add_vector( 33.988514, -4.045088, -2.938927 );
ei_tab_add_vector( -33.988514, -4.045088, -2.938927 );
ei_tab_add_vector( -33.988514, -3.535537, -3.535535 );
ei_tab_add_vector( 33.988514, -4.045088, -2.938927 );
ei_tab_add_vector( 33.988514, -4.045088, -2.938927 );
ei_tab_add_vector( -33.988514, -3.535537, -3.535535 );
ei_tab_add_vector( 33.988514, -3.535537, -3.535535 );
ei_tab_add_vector( -33.988514, -3.535537, -3.535535 );
ei_tab_add_vector( -33.988514, -2.938929, -4.045087 );
ei_tab_add_vector( 33.988514, -3.535537, -3.535535 );
ei_tab_add_vector( 33.988514, -3.535537, -3.535535 );
ei_tab_add_vector( -33.988514, -2.938929, -4.045087 );
ei_tab_add_vector( 33.988514, -2.938929, -4.045087 );
ei_tab_add_vector( -33.988514, -2.938929, -4.045087 );
ei_tab_add_vector( -33.988514, -2.269955, -4.455035 );
ei_tab_add_vector( 33.988514, -2.938929, -4.045087 );
ei_tab_add_vector( 33.988514, -2.938929, -4.045087 );
ei_tab_add_vector( -33.988514, -2.269955, -4.455035 );
ei_tab_add_vector( 33.988514, -2.269955, -4.455035 );
ei_tab_add_vector( -33.988514, -2.269955, -4.455035 );
ei_tab_add_vector( -33.988514, -1.545087, -4.755285 );
ei_tab_add_vector( 33.988514, -2.269955, -4.455035 );
ei_tab_add_vector( 33.988514, -2.269955, -4.455035 );
ei_tab_add_vector( -33.988514, -1.545087, -4.755285 );
ei_tab_add_vector( 33.988514, -1.545087, -4.755285 );
ei_tab_add_vector( -33.988514, -1.545087, -4.755285 );
ei_tab_add_vector( -33.988514, -0.782174, -4.938445 );
ei_tab_add_vector( 33.988514, -1.545087, -4.755285 );
ei_tab_add_vector( 33.988514, -1.545087, -4.755285 );
ei_tab_add_vector( -33.988514, -0.782174, -4.938445 );
ei_tab_add_vector( 33.988514, -0.782174, -4.938445 );
ei_tab_add_vector( -33.988514, -0.782174, -4.938445 );
ei_tab_add_vector( -33.988514, -0.000001, -5.000003 );
ei_tab_add_vector( 33.988514, -0.782174, -4.938445 );
ei_tab_add_vector( 33.988514, -0.782174, -4.938445 );
ei_tab_add_vector( -33.988514, -0.000001, -5.000003 );
ei_tab_add_vector( 33.988514, -0.000001, -5.000003 );
ei_tab_add_vector( -33.988514, -0.000001, -5.000003 );
ei_tab_add_vector( -33.988514, 32.780155, -5.000037 );
ei_tab_add_vector( 33.988514, -0.000001, -5.000003 );
ei_tab_add_vector( 33.988514, -0.000001, -5.000003 );
ei_tab_add_vector( -33.988514, 32.780155, -5.000037 );
ei_tab_add_vector( 33.988514, 32.780155, -5.000037 );
ei_tab_add_vector( -33.988514, -5.000000, 55.349792 );
ei_tab_add_vector( -33.988514, -5.000000, 0.000000 );
ei_tab_add_vector( 33.988514, -5.000000, 55.349792 );
ei_tab_add_vector( 33.988514, -5.000000, 55.349792 );
ei_tab_add_vector( -33.988514, -5.000000, 0.000000 );
ei_tab_add_vector( 33.988514, -5.000000, 0.000000 );
ei_tab_add_vector( -33.988514, -5.000000, 0.000000 );
ei_tab_add_vector( -33.988514, -4.938445, -0.782172 );
ei_tab_add_vector( 33.988514, -5.000000, 0.000000 );
ei_tab_add_vector( 33.988514, -5.000000, 0.000000 );
ei_tab_add_vector( -33.988514, -4.938445, -0.782172 );
ei_tab_add_vector( 33.988514, -4.938445, -0.782172 );
ei_end_tab();
//### N ###(optional)
tag = eiNULL_TAG;
ei_declare("N", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_variable("N", &tag);
ei_tab_add_vector( 0.000000, -0.987689, -0.156432 );
ei_tab_add_vector( 0.000000, -0.951057, -0.309017 );
ei_tab_add_vector( 0.000000, -0.987689, -0.156432 );
ei_tab_add_vector( 0.000000, -0.987689, -0.156432 );
ei_tab_add_vector( 0.000000, -0.951057, -0.309017 );
ei_tab_add_vector( 0.000000, -0.951057, -0.309017 );
ei_tab_add_vector( 0.000000, -0.951057, -0.309017 );
ei_tab_add_vector( 0.000000, -0.891007, -0.453990 );
ei_tab_add_vector( 0.000000, -0.951057, -0.309017 );
ei_tab_add_vector( 0.000000, -0.951057, -0.309017 );
ei_tab_add_vector( 0.000000, -0.891007, -0.453990 );
ei_tab_add_vector( 0.000000, -0.891007, -0.453990 );
ei_tab_add_vector( 0.000000, -0.891007, -0.453990 );
ei_tab_add_vector( 0.000000, -0.809017, -0.587785 );
ei_tab_add_vector( 0.000000, -0.891007, -0.453990 );
ei_tab_add_vector( 0.000000, -0.891007, -0.453990 );
ei_tab_add_vector( 0.000000, -0.809017, -0.587785 );
ei_tab_add_vector( 0.000000, -0.809017, -0.587785 );
ei_tab_add_vector( 0.000000, -0.809017, -0.587785 );
ei_tab_add_vector( 0.000000, -0.707107, -0.707107 );
ei_tab_add_vector( 0.000000, -0.809017, -0.587785 );
ei_tab_add_vector( 0.000000, -0.809017, -0.587785 );
ei_tab_add_vector( 0.000000, -0.707107, -0.707107 );
ei_tab_add_vector( 0.000000, -0.707107, -0.707107 );
ei_tab_add_vector( 0.000000, -0.707107, -0.707107 );
ei_tab_add_vector( 0.000000, -0.587785, -0.809017 );
ei_tab_add_vector( 0.000000, -0.707107, -0.707107 );
ei_tab_add_vector( 0.000000, -0.707107, -0.707107 );
ei_tab_add_vector( 0.000000, -0.587785, -0.809017 );
ei_tab_add_vector( 0.000000, -0.587785, -0.809017 );
ei_tab_add_vector( 0.000000, -0.587785, -0.809017 );
ei_tab_add_vector( 0.000000, -0.453991, -0.891006 );
ei_tab_add_vector( 0.000000, -0.587785, -0.809017 );
ei_tab_add_vector( 0.000000, -0.587785, -0.809017 );
ei_tab_add_vector( 0.000000, -0.453991, -0.891006 );
ei_tab_add_vector( 0.000000, -0.453991, -0.891006 );
ei_tab_add_vector( 0.000000, -0.453991, -0.891006 );
ei_tab_add_vector( 0.000000, -0.309017, -0.951056 );
ei_tab_add_vector( 0.000000, -0.453991, -0.891006 );
ei_tab_add_vector( 0.000000, -0.453991, -0.891006 );
ei_tab_add_vector( 0.000000, -0.309017, -0.951056 );
ei_tab_add_vector( 0.000000, -0.309017, -0.951056 );
ei_tab_add_vector( 0.000000, -0.309017, -0.951056 );
ei_tab_add_vector( 0.000000, -0.156434, -0.987688 );
ei_tab_add_vector( 0.000000, -0.309017, -0.951056 );
ei_tab_add_vector( 0.000000, -0.309017, -0.951056 );
ei_tab_add_vector( 0.000000, -0.156434, -0.987688 );
ei_tab_add_vector( 0.000000, -0.156434, -0.987688 );
ei_tab_add_vector( 0.000000, -0.156434, -0.987688 );
ei_tab_add_vector( 0.000000, -0.039260, -0.999229 );
ei_tab_add_vector( 0.000000, -0.156434, -0.987688 );
ei_tab_add_vector( 0.000000, -0.156434, -0.987688 );
ei_tab_add_vector( 0.000000, -0.039260, -0.999229 );
ei_tab_add_vector( 0.000000, -0.039260, -0.999229 );
ei_tab_add_vector( 0.000000, -0.039260, -0.999229 );
ei_tab_add_vector( 0.000000, -0.000001, -1.000000 );
ei_tab_add_vector( 0.000000, -0.039260, -0.999229 );
ei_tab_add_vector( 0.000000, -0.039260, -0.999229 );
ei_tab_add_vector( 0.000000, -0.000001, -1.000000 );
ei_tab_add_vector( 0.000000, -0.000001, -1.000000 );
ei_tab_add_vector( 0.000000, -1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, -0.999229, -0.039258 );
ei_tab_add_vector( 0.000000, -1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, -1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, -0.999229, -0.039258 );
ei_tab_add_vector( 0.000000, -0.999229, -0.039258 );
ei_tab_add_vector( 0.000000, -0.999229, -0.039258 );
ei_tab_add_vector( 0.000000, -0.987689, -0.156432 );
ei_tab_add_vector( 0.000000, -0.999229, -0.039258 );
ei_tab_add_vector( 0.000000, -0.999229, -0.039258 );
ei_tab_add_vector( 0.000000, -0.987689, -0.156432 );
ei_tab_add_vector( 0.000000, -0.987689, -0.156432 );
ei_end_tab();
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.312500 );
ei_tab_add_vector2( 0.381250, 0.312500 );
ei_tab_add_vector2( 0.375000, 0.688440 );
ei_tab_add_vector2( 0.375000, 0.688440 );
ei_tab_add_vector2( 0.381250, 0.312500 );
ei_tab_add_vector2( 0.381250, 0.688440 );
ei_tab_add_vector2( 0.381250, 0.312500 );
ei_tab_add_vector2( 0.387500, 0.312500 );
ei_tab_add_vector2( 0.381250, 0.688440 );
ei_tab_add_vector2( 0.381250, 0.688440 );
ei_tab_add_vector2( 0.387500, 0.312500 );
ei_tab_add_vector2( 0.387500, 0.688440 );
ei_tab_add_vector2( 0.387500, 0.312500 );
ei_tab_add_vector2( 0.393750, 0.312500 );
ei_tab_add_vector2( 0.387500, 0.688440 );
ei_tab_add_vector2( 0.387500, 0.688440 );
ei_tab_add_vector2( 0.393750, 0.312500 );
ei_tab_add_vector2( 0.393750, 0.688440 );
ei_tab_add_vector2( 0.393750, 0.312500 );
ei_tab_add_vector2( 0.400000, 0.312500 );
ei_tab_add_vector2( 0.393750, 0.688440 );
ei_tab_add_vector2( 0.393750, 0.688440 );
ei_tab_add_vector2( 0.400000, 0.312500 );
ei_tab_add_vector2( 0.400000, 0.688440 );
ei_tab_add_vector2( 0.400000, 0.312500 );
ei_tab_add_vector2( 0.406250, 0.312500 );
ei_tab_add_vector2( 0.400000, 0.688440 );
ei_tab_add_vector2( 0.400000, 0.688440 );
ei_tab_add_vector2( 0.406250, 0.312500 );
ei_tab_add_vector2( 0.406250, 0.688440 );
ei_tab_add_vector2( 0.406250, 0.312500 );
ei_tab_add_vector2( 0.412500, 0.312500 );
ei_tab_add_vector2( 0.406250, 0.688440 );
ei_tab_add_vector2( 0.406250, 0.688440 );
ei_tab_add_vector2( 0.412500, 0.312500 );
ei_tab_add_vector2( 0.412500, 0.688440 );
ei_tab_add_vector2( 0.412500, 0.312500 );
ei_tab_add_vector2( 0.418750, 0.312500 );
ei_tab_add_vector2( 0.412500, 0.688440 );
ei_tab_add_vector2( 0.412500, 0.688440 );
ei_tab_add_vector2( 0.418750, 0.312500 );
ei_tab_add_vector2( 0.418750, 0.688440 );
ei_tab_add_vector2( 0.418750, 0.312500 );
ei_tab_add_vector2( 0.425000, 0.312500 );
ei_tab_add_vector2( 0.418750, 0.688440 );
ei_tab_add_vector2( 0.418750, 0.688440 );
ei_tab_add_vector2( 0.425000, 0.312500 );
ei_tab_add_vector2( 0.425000, 0.688440 );
ei_tab_add_vector2( 0.425000, 0.312500 );
ei_tab_add_vector2( 0.431250, 0.312500 );
ei_tab_add_vector2( 0.425000, 0.688440 );
ei_tab_add_vector2( 0.425000, 0.688440 );
ei_tab_add_vector2( 0.431250, 0.312500 );
ei_tab_add_vector2( 0.431250, 0.688440 );
ei_tab_add_vector2( 0.431250, 0.312500 );
ei_tab_add_vector2( 0.437500, 0.312500 );
ei_tab_add_vector2( 0.431250, 0.688440 );
ei_tab_add_vector2( 0.431250, 0.688440 );
ei_tab_add_vector2( 0.437500, 0.312500 );
ei_tab_add_vector2( 0.437500, 0.688440 );
ei_tab_add_vector2( 0.612500, 0.312500 );
ei_tab_add_vector2( 0.618750, 0.312500 );
ei_tab_add_vector2( 0.612500, 0.688440 );
ei_tab_add_vector2( 0.612500, 0.688440 );
ei_tab_add_vector2( 0.618750, 0.312500 );
ei_tab_add_vector2( 0.618750, 0.688440 );
ei_tab_add_vector2( 0.618750, 0.312500 );
ei_tab_add_vector2( 0.625000, 0.312500 );
ei_tab_add_vector2( 0.618750, 0.688440 );
ei_tab_add_vector2( 0.618750, 0.688440 );
ei_tab_add_vector2( 0.625000, 0.312500 );
ei_tab_add_vector2( 0.625000, 0.688440 );
ei_end_tab();
//### triangles(required) size=72
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_tab_add_index(36);
ei_tab_add_index(37);
ei_tab_add_index(38);
ei_tab_add_index(39);
ei_tab_add_index(40);
ei_tab_add_index(41);
ei_tab_add_index(42);
ei_tab_add_index(43);
ei_tab_add_index(44);
ei_tab_add_index(45);
ei_tab_add_index(46);
ei_tab_add_index(47);
ei_tab_add_index(48);
ei_tab_add_index(49);
ei_tab_add_index(50);
ei_tab_add_index(51);
ei_tab_add_index(52);
ei_tab_add_index(53);
ei_tab_add_index(54);
ei_tab_add_index(55);
ei_tab_add_index(56);
ei_tab_add_index(57);
ei_tab_add_index(58);
ei_tab_add_index(59);
ei_tab_add_index(60);
ei_tab_add_index(61);
ei_tab_add_index(62);
ei_tab_add_index(63);
ei_tab_add_index(64);
ei_tab_add_index(65);
ei_tab_add_index(66);
ei_tab_add_index(67);
ei_tab_add_index(68);
ei_tab_add_index(69);
ei_tab_add_index(70);
ei_tab_add_index(71);
ei_end_tab();
}//|Man:JAP|Man:ground|Man:groundShape
ei_end_object();



//locator |Man:JAP|Man:JapCnt|Man:HipsEff|Man:hikFloorContactMarker1
ei_object( "poly", "|Man:JAP|Man:JapCnt|Man:HipsEff|Man:hikFloorContactMarker1" );
{
eiTag tag;
//vertex positions(required), size=0
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
//### triangles(required) size=0
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_end_tab();
}//|Man:JAP|Man:JapCnt|Man:HipsEff|Man:hikFloorContactMarker1
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:leftHandPinky3|Man:pCube11|Man:pCubeShape11, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:leftHandPinky3|Man:pCube11|Man:pCubeShape11
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:leftHandPinky3|Man:pCube11|Man:pCubeShape11" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:leftHandPinky3|Man:pCube11|Man:pCubeShape11
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:pCube10|Man:pCubeShape10, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:pCube10|Man:pCubeShape10
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:pCube10|Man:pCubeShape10" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:pCube10|Man:pCubeShape10
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:pCube9|Man:pCubeShape9, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:pCube9|Man:pCubeShape9
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:pCube9|Man:pCubeShape9" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:pCube9|Man:pCubeShape9
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:leftHandRing3|Man:pCube12|Man:pCubeShape12, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:leftHandRing3|Man:pCube12|Man:pCubeShape12
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:leftHandRing3|Man:pCube12|Man:pCubeShape12" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:leftHandRing3|Man:pCube12|Man:pCubeShape12
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:pCube13|Man:pCubeShape13, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:pCube13|Man:pCubeShape13
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:pCube13|Man:pCubeShape13" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:pCube13|Man:pCubeShape13
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:pCube14|Man:pCubeShape14, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:pCube14|Man:pCubeShape14
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:pCube14|Man:pCubeShape14" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:pCube14|Man:pCubeShape14
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:leftHandMiddle3|Man:pCube15|Man:pCubeShape15, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:leftHandMiddle3|Man:pCube15|Man:pCubeShape15
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:leftHandMiddle3|Man:pCube15|Man:pCubeShape15" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:leftHandMiddle3|Man:pCube15|Man:pCubeShape15
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:pCube16|Man:pCubeShape16, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:pCube16|Man:pCubeShape16
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:pCube16|Man:pCubeShape16" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:pCube16|Man:pCubeShape16
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:pCube17|Man:pCubeShape17, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:pCube17|Man:pCubeShape17
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:pCube17|Man:pCubeShape17" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:pCube17|Man:pCubeShape17
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:leftHandIndex3|Man:pCube18|Man:pCubeShape18, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:leftHandIndex3|Man:pCube18|Man:pCubeShape18
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:leftHandIndex3|Man:pCube18|Man:pCubeShape18" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:leftHandIndex3|Man:pCube18|Man:pCubeShape18
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:pCube19|Man:pCubeShape19, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:pCube19|Man:pCubeShape19
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:pCube19|Man:pCubeShape19" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:pCube19|Man:pCubeShape19
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:pCube20|Man:pCubeShape20, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:pCube20|Man:pCubeShape20
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:pCube20|Man:pCubeShape20" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:pCube20|Man:pCubeShape20
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:leftHandThumb3|Man:pCube21|Man:pCubeShape21, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:leftHandThumb3|Man:pCube21|Man:pCubeShape21
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:leftHandThumb3|Man:pCube21|Man:pCubeShape21" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:leftHandThumb3|Man:pCube21|Man:pCubeShape21
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:pCube22|Man:pCubeShape22, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:pCube22|Man:pCubeShape22
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:pCube22|Man:pCubeShape22" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:pCube22|Man:pCubeShape22
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:pCube23|Man:pCubeShape23, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:pCube23|Man:pCubeShape23
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:pCube23|Man:pCubeShape23" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:pCube23|Man:pCubeShape23
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:pCube25|Man:pCubeShape25, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:pCube25|Man:pCubeShape25
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:pCube25|Man:pCubeShape25" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.842577, -0.103886, 0.495231 );
ei_tab_add_vector( 0.592331, -0.226678, 0.842749 );
ei_tab_add_vector( -0.874852, 1.800299, 0.490883 );
ei_tab_add_vector( -0.874852, 1.800299, 0.490883 );
ei_tab_add_vector( 0.592331, -0.226678, 0.842749 );
ei_tab_add_vector( 0.451170, 2.045688, 0.835796 );
ei_tab_add_vector( 0.451170, 2.045688, 0.835796 );
ei_tab_add_vector( 0.402481, 2.021255, -0.564898 );
ei_tab_add_vector( -0.874852, 1.800299, 0.490883 );
ei_tab_add_vector( -0.874852, 1.800299, 0.490883 );
ei_tab_add_vector( 0.402481, 2.021255, -0.564898 );
ei_tab_add_vector( -0.874852, 1.800299, -0.463370 );
ei_tab_add_vector( -0.874852, 1.800299, -0.463370 );
ei_tab_add_vector( 0.402481, 2.021255, -0.564898 );
ei_tab_add_vector( -0.842577, -0.103886, -0.459021 );
ei_tab_add_vector( -0.842577, -0.103886, -0.459021 );
ei_tab_add_vector( 0.402481, 2.021255, -0.564898 );
ei_tab_add_vector( 0.543641, -0.251111, -0.557944 );
ei_tab_add_vector( -0.842577, -0.103886, -0.459021 );
ei_tab_add_vector( 0.543641, -0.251111, -0.557944 );
ei_tab_add_vector( -0.842577, -0.103886, 0.495231 );
ei_tab_add_vector( -0.842577, -0.103886, 0.495231 );
ei_tab_add_vector( 0.543641, -0.251111, -0.557944 );
ei_tab_add_vector( 0.592331, -0.226678, 0.842749 );
ei_tab_add_vector( 0.543641, -0.251111, -0.557944 );
ei_tab_add_vector( 0.402481, 2.021255, -0.564898 );
ei_tab_add_vector( 0.592331, -0.226678, 0.842749 );
ei_tab_add_vector( 0.592331, -0.226678, 0.842749 );
ei_tab_add_vector( 0.402481, 2.021255, -0.564898 );
ei_tab_add_vector( 0.451170, 2.045688, 0.835796 );
ei_tab_add_vector( -0.842577, -0.103886, 0.495231 );
ei_tab_add_vector( -0.874852, 1.800299, 0.490883 );
ei_tab_add_vector( -0.842577, -0.103886, -0.459021 );
ei_tab_add_vector( -0.842577, -0.103886, -0.459021 );
ei_tab_add_vector( -0.874852, 1.800299, 0.490883 );
ei_tab_add_vector( -0.874852, 1.800299, -0.463370 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:pCube25|Man:pCubeShape25
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:pCube24|Man:pCubeShape24, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:pCube24|Man:pCubeShape24
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:pCube24|Man:pCubeShape24" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.363216, -0.409017, 1.125326 );
ei_tab_add_vector( 0.552514, -0.408728, 1.278148 );
ei_tab_add_vector( -0.363216, 0.483861, 1.125326 );
ei_tab_add_vector( -0.363216, 0.483861, 1.125326 );
ei_tab_add_vector( 0.552514, -0.408728, 1.278148 );
ei_tab_add_vector( 0.552514, 0.520245, 1.278148 );
ei_tab_add_vector( -0.363216, 0.483861, 1.125326 );
ei_tab_add_vector( 0.552514, 0.520245, 1.278148 );
ei_tab_add_vector( -0.474810, 0.447864, -0.486425 );
ei_tab_add_vector( -0.474810, 0.447864, -0.486425 );
ei_tab_add_vector( 0.552514, 0.520245, 1.278148 );
ei_tab_add_vector( 0.448163, 0.480184, -1.243307 );
ei_tab_add_vector( 0.448163, 0.480184, -1.243307 );
ei_tab_add_vector( 0.448163, -0.448789, -1.243307 );
ei_tab_add_vector( -0.474810, 0.447864, -0.486425 );
ei_tab_add_vector( -0.474810, 0.447864, -0.486425 );
ei_tab_add_vector( 0.448163, -0.448789, -1.243307 );
ei_tab_add_vector( -0.474810, -0.445014, -0.486425 );
ei_tab_add_vector( 0.448163, -0.448789, -1.243307 );
ei_tab_add_vector( 0.552514, -0.408728, 1.278148 );
ei_tab_add_vector( -0.474810, -0.445014, -0.486425 );
ei_tab_add_vector( -0.474810, -0.445014, -0.486425 );
ei_tab_add_vector( 0.552514, -0.408728, 1.278148 );
ei_tab_add_vector( -0.363216, -0.409017, 1.125326 );
ei_tab_add_vector( 0.448163, -0.448789, -1.243307 );
ei_tab_add_vector( 0.448163, 0.480184, -1.243307 );
ei_tab_add_vector( 0.552514, -0.408728, 1.278148 );
ei_tab_add_vector( 0.552514, -0.408728, 1.278148 );
ei_tab_add_vector( 0.448163, 0.480184, -1.243307 );
ei_tab_add_vector( 0.552514, 0.520245, 1.278148 );
ei_tab_add_vector( -0.474810, -0.445014, -0.486425 );
ei_tab_add_vector( -0.363216, -0.409017, 1.125326 );
ei_tab_add_vector( -0.474810, 0.447864, -0.486425 );
ei_tab_add_vector( -0.474810, 0.447864, -0.486425 );
ei_tab_add_vector( -0.363216, -0.409017, 1.125326 );
ei_tab_add_vector( -0.363216, 0.483861, 1.125326 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:pCube24|Man:pCubeShape24
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:pCube7|Man:pCubeShape7, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:pCube7|Man:pCubeShape7
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:pCube7|Man:pCubeShape7" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 2.765728, -0.424468, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 2.765728, -0.424468, 0.500000 );
ei_tab_add_vector( 2.765728, 0.424468, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 2.765728, 0.424468, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 2.765728, 0.424468, 0.500000 );
ei_tab_add_vector( 2.765728, 0.424468, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 2.765728, 0.424468, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 2.765728, 0.424468, -0.500000 );
ei_tab_add_vector( 2.765728, -0.424468, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 2.765728, -0.424468, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 2.765728, -0.424468, -0.500000 );
ei_tab_add_vector( 2.765728, -0.424468, 0.500000 );
ei_tab_add_vector( 2.765728, -0.424468, 0.500000 );
ei_tab_add_vector( 2.765728, -0.424468, -0.500000 );
ei_tab_add_vector( 2.765728, 0.424468, 0.500000 );
ei_tab_add_vector( 2.765728, 0.424468, 0.500000 );
ei_tab_add_vector( 2.765728, -0.424468, -0.500000 );
ei_tab_add_vector( 2.765728, 0.424468, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:pCube7|Man:pCubeShape7
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:rightHandPinky3|Man:pCube11|Man:pCubeShape11, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:rightHandPinky3|Man:pCube11|Man:pCubeShape11
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:rightHandPinky3|Man:pCube11|Man:pCubeShape11" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:rightHandPinky3|Man:pCube11|Man:pCubeShape11
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:pCube10|Man:pCubeShape10, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:pCube10|Man:pCubeShape10
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:pCube10|Man:pCubeShape10" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:pCube10|Man:pCubeShape10
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:pCube9|Man:pCubeShape9, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:pCube9|Man:pCubeShape9
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:pCube9|Man:pCubeShape9" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:pCube9|Man:pCubeShape9
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:rightHandRing3|Man:pCube12|Man:pCubeShape12, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:rightHandRing3|Man:pCube12|Man:pCubeShape12
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:rightHandRing3|Man:pCube12|Man:pCubeShape12" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:rightHandRing3|Man:pCube12|Man:pCubeShape12
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:pCube13|Man:pCubeShape13, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:pCube13|Man:pCubeShape13
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:pCube13|Man:pCubeShape13" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:pCube13|Man:pCubeShape13
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:pCube14|Man:pCubeShape14, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:pCube14|Man:pCubeShape14
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:pCube14|Man:pCubeShape14" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:pCube14|Man:pCubeShape14
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:rightHandMiddle3|Man:pCube15|Man:pCubeShape15, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:rightHandMiddle3|Man:pCube15|Man:pCubeShape15
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:rightHandMiddle3|Man:pCube15|Man:pCubeShape15" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:rightHandMiddle3|Man:pCube15|Man:pCubeShape15
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:pCube16|Man:pCubeShape16, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:pCube16|Man:pCubeShape16
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:pCube16|Man:pCubeShape16" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:pCube16|Man:pCubeShape16
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:pCube17|Man:pCubeShape17, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:pCube17|Man:pCubeShape17
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:pCube17|Man:pCubeShape17" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:pCube17|Man:pCubeShape17
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:rightHandIndex3|Man:pCube18|Man:pCubeShape18, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:rightHandIndex3|Man:pCube18|Man:pCubeShape18
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:rightHandIndex3|Man:pCube18|Man:pCubeShape18" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:rightHandIndex3|Man:pCube18|Man:pCubeShape18
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:pCube19|Man:pCubeShape19, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:pCube19|Man:pCubeShape19
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:pCube19|Man:pCubeShape19" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:pCube19|Man:pCubeShape19
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:pCube20|Man:pCubeShape20, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:pCube20|Man:pCubeShape20
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:pCube20|Man:pCubeShape20" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:pCube20|Man:pCubeShape20
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:rightHandThumb3|Man:pCube21|Man:pCubeShape21, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:rightHandThumb3|Man:pCube21|Man:pCubeShape21
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:rightHandThumb3|Man:pCube21|Man:pCubeShape21" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:rightHandThumb3|Man:pCube21|Man:pCubeShape21
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:pCube22|Man:pCubeShape22, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:pCube22|Man:pCubeShape22
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:pCube22|Man:pCubeShape22" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:pCube22|Man:pCubeShape22
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:pCube23|Man:pCubeShape23, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:pCube23|Man:pCubeShape23
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:pCube23|Man:pCubeShape23" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:pCube23|Man:pCubeShape23
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube25|Man:pCubeShape25, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube25|Man:pCubeShape25
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube25|Man:pCubeShape25" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.842577, -0.103886, 0.495231 );
ei_tab_add_vector( -0.874852, 1.800299, 0.490883 );
ei_tab_add_vector( 0.592331, -0.226678, 0.842749 );
ei_tab_add_vector( 0.592331, -0.226678, 0.842749 );
ei_tab_add_vector( -0.874852, 1.800299, 0.490883 );
ei_tab_add_vector( 0.451170, 2.045688, 0.835796 );
ei_tab_add_vector( -0.874852, 1.800299, -0.463370 );
ei_tab_add_vector( 0.402481, 2.021255, -0.564898 );
ei_tab_add_vector( -0.874852, 1.800299, 0.490883 );
ei_tab_add_vector( -0.874852, 1.800299, 0.490883 );
ei_tab_add_vector( 0.402481, 2.021255, -0.564898 );
ei_tab_add_vector( 0.451170, 2.045688, 0.835796 );
ei_tab_add_vector( -0.874852, 1.800299, -0.463370 );
ei_tab_add_vector( -0.842577, -0.103886, -0.459021 );
ei_tab_add_vector( 0.402481, 2.021255, -0.564898 );
ei_tab_add_vector( 0.402481, 2.021255, -0.564898 );
ei_tab_add_vector( -0.842577, -0.103886, -0.459021 );
ei_tab_add_vector( 0.543641, -0.251111, -0.557944 );
ei_tab_add_vector( -0.842577, -0.103886, -0.459021 );
ei_tab_add_vector( -0.842577, -0.103886, 0.495231 );
ei_tab_add_vector( 0.543641, -0.251111, -0.557944 );
ei_tab_add_vector( 0.543641, -0.251111, -0.557944 );
ei_tab_add_vector( -0.842577, -0.103886, 0.495231 );
ei_tab_add_vector( 0.592331, -0.226678, 0.842749 );
ei_tab_add_vector( 0.451170, 2.045688, 0.835796 );
ei_tab_add_vector( 0.402481, 2.021255, -0.564898 );
ei_tab_add_vector( 0.592331, -0.226678, 0.842749 );
ei_tab_add_vector( 0.592331, -0.226678, 0.842749 );
ei_tab_add_vector( 0.402481, 2.021255, -0.564898 );
ei_tab_add_vector( 0.543641, -0.251111, -0.557944 );
ei_tab_add_vector( -0.874852, 1.800299, -0.463370 );
ei_tab_add_vector( -0.874852, 1.800299, 0.490883 );
ei_tab_add_vector( -0.842577, -0.103886, -0.459021 );
ei_tab_add_vector( -0.842577, -0.103886, -0.459021 );
ei_tab_add_vector( -0.874852, 1.800299, 0.490883 );
ei_tab_add_vector( -0.842577, -0.103886, 0.495231 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube25|Man:pCubeShape25
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube24|Man:pCubeShape24, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube24|Man:pCubeShape24
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube24|Man:pCubeShape24" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.363216, -0.409017, 1.125326 );
ei_tab_add_vector( -0.363216, 0.483861, 1.125326 );
ei_tab_add_vector( 0.552514, -0.408728, 1.278148 );
ei_tab_add_vector( 0.552514, -0.408728, 1.278148 );
ei_tab_add_vector( -0.363216, 0.483861, 1.125326 );
ei_tab_add_vector( 0.552514, 0.520245, 1.278148 );
ei_tab_add_vector( -0.363216, 0.483861, 1.125326 );
ei_tab_add_vector( -0.474810, 0.447864, -0.486425 );
ei_tab_add_vector( 0.552514, 0.520245, 1.278148 );
ei_tab_add_vector( 0.552514, 0.520245, 1.278148 );
ei_tab_add_vector( -0.474810, 0.447864, -0.486425 );
ei_tab_add_vector( 0.448163, 0.480184, -1.243307 );
ei_tab_add_vector( -0.474810, -0.445014, -0.486425 );
ei_tab_add_vector( 0.448163, -0.448789, -1.243307 );
ei_tab_add_vector( -0.474810, 0.447864, -0.486425 );
ei_tab_add_vector( -0.474810, 0.447864, -0.486425 );
ei_tab_add_vector( 0.448163, -0.448789, -1.243307 );
ei_tab_add_vector( 0.448163, 0.480184, -1.243307 );
ei_tab_add_vector( -0.363216, -0.409017, 1.125326 );
ei_tab_add_vector( 0.552514, -0.408728, 1.278148 );
ei_tab_add_vector( -0.474810, -0.445014, -0.486425 );
ei_tab_add_vector( -0.474810, -0.445014, -0.486425 );
ei_tab_add_vector( 0.552514, -0.408728, 1.278148 );
ei_tab_add_vector( 0.448163, -0.448789, -1.243307 );
ei_tab_add_vector( 0.552514, 0.520245, 1.278148 );
ei_tab_add_vector( 0.448163, 0.480184, -1.243307 );
ei_tab_add_vector( 0.552514, -0.408728, 1.278148 );
ei_tab_add_vector( 0.552514, -0.408728, 1.278148 );
ei_tab_add_vector( 0.448163, 0.480184, -1.243307 );
ei_tab_add_vector( 0.448163, -0.448789, -1.243307 );
ei_tab_add_vector( -0.474810, -0.445014, -0.486425 );
ei_tab_add_vector( -0.474810, 0.447864, -0.486425 );
ei_tab_add_vector( -0.363216, -0.409017, 1.125326 );
ei_tab_add_vector( -0.363216, -0.409017, 1.125326 );
ei_tab_add_vector( -0.474810, 0.447864, -0.486425 );
ei_tab_add_vector( -0.363216, 0.483861, 1.125326 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube24|Man:pCubeShape24
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:pCube7|Man:pCubeShape7, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:pCube7|Man:pCubeShape7
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:pCube7|Man:pCubeShape7" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 2.765728, -0.424468, 0.500000 );
ei_tab_add_vector( 2.765728, -0.424468, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 2.765728, 0.424468, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 2.765728, 0.424468, 0.500000 );
ei_tab_add_vector( 2.765728, 0.424468, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 2.765728, 0.424468, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 2.765728, 0.424468, -0.500000 );
ei_tab_add_vector( 2.765728, 0.424468, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 2.765728, -0.424468, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 2.765728, -0.424468, -0.500000 );
ei_tab_add_vector( 2.765728, -0.424468, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 2.765728, -0.424468, 0.500000 );
ei_tab_add_vector( 2.765728, -0.424468, 0.500000 );
ei_tab_add_vector( 2.765728, 0.424468, 0.500000 );
ei_tab_add_vector( 2.765728, -0.424468, -0.500000 );
ei_tab_add_vector( 2.765728, -0.424468, -0.500000 );
ei_tab_add_vector( 2.765728, 0.424468, 0.500000 );
ei_tab_add_vector( 2.765728, 0.424468, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:pCube7|Man:pCubeShape7
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:joint86|Man:leftFootIndex1|Man:pCube4|Man:pCubeShape4, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:joint86|Man:leftFootIndex1|Man:pCube4|Man:pCubeShape4
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:joint86|Man:leftFootIndex1|Man:pCube4|Man:pCubeShape4" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.386265, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.030812, 0.429225 );
ei_tab_add_vector( -0.500000, -0.030812, 0.429225 );
ei_tab_add_vector( 0.386265, -0.500000, 0.500000 );
ei_tab_add_vector( 0.386265, -0.030812, 0.429225 );
ei_tab_add_vector( -0.500000, -0.030812, 0.429225 );
ei_tab_add_vector( 0.386265, -0.030812, 0.429225 );
ei_tab_add_vector( -0.500000, 0.013423, -0.544234 );
ei_tab_add_vector( -0.500000, 0.013423, -0.544234 );
ei_tab_add_vector( 0.386265, -0.030812, 0.429225 );
ei_tab_add_vector( 0.386265, 0.013423, -0.544234 );
ei_tab_add_vector( -0.500000, 0.013423, -0.544234 );
ei_tab_add_vector( 0.386265, 0.013423, -0.544234 );
ei_tab_add_vector( -0.500000, -0.500000, -0.553081 );
ei_tab_add_vector( -0.500000, -0.500000, -0.553081 );
ei_tab_add_vector( 0.386265, 0.013423, -0.544234 );
ei_tab_add_vector( 0.386265, -0.500000, -0.553081 );
ei_tab_add_vector( -0.500000, -0.500000, -0.553081 );
ei_tab_add_vector( 0.386265, -0.500000, -0.553081 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.386265, -0.500000, -0.553081 );
ei_tab_add_vector( 0.386265, -0.500000, 0.500000 );
ei_tab_add_vector( 0.386265, -0.500000, 0.500000 );
ei_tab_add_vector( 0.386265, -0.500000, -0.553081 );
ei_tab_add_vector( 0.386265, -0.030812, 0.429225 );
ei_tab_add_vector( 0.386265, -0.030812, 0.429225 );
ei_tab_add_vector( 0.386265, -0.500000, -0.553081 );
ei_tab_add_vector( 0.386265, 0.013423, -0.544234 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.030812, 0.429225 );
ei_tab_add_vector( -0.500000, -0.500000, -0.553081 );
ei_tab_add_vector( -0.500000, -0.500000, -0.553081 );
ei_tab_add_vector( -0.500000, -0.030812, 0.429225 );
ei_tab_add_vector( -0.500000, 0.013423, -0.544234 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:joint86|Man:leftFootIndex1|Man:pCube4|Man:pCubeShape4
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:pCube3|Man:pCubeShape3, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:pCube3|Man:pCubeShape3
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:pCube3|Man:pCubeShape3" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.386265, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.048810, 0.517694 );
ei_tab_add_vector( -0.500000, 0.048810, 0.517694 );
ei_tab_add_vector( 0.386265, -0.500000, 0.500000 );
ei_tab_add_vector( 0.386265, 0.048810, 0.517694 );
ei_tab_add_vector( -0.500000, 0.048810, 0.517694 );
ei_tab_add_vector( 0.386265, 0.048810, 0.517694 );
ei_tab_add_vector( -0.500000, 0.517694, -0.376144 );
ei_tab_add_vector( -0.500000, 0.517694, -0.376144 );
ei_tab_add_vector( 0.386265, 0.048810, 0.517694 );
ei_tab_add_vector( 0.386265, 0.517694, -0.376144 );
ei_tab_add_vector( -0.500000, 0.517694, -0.376144 );
ei_tab_add_vector( 0.386265, 0.517694, -0.376144 );
ei_tab_add_vector( -0.500000, -0.500000, -0.898109 );
ei_tab_add_vector( -0.500000, -0.500000, -0.898109 );
ei_tab_add_vector( 0.386265, 0.517694, -0.376144 );
ei_tab_add_vector( 0.386265, -0.500000, -0.898109 );
ei_tab_add_vector( -0.500000, -0.500000, -0.898109 );
ei_tab_add_vector( 0.386265, -0.500000, -0.898109 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.386265, -0.500000, -0.898109 );
ei_tab_add_vector( 0.386265, -0.500000, 0.500000 );
ei_tab_add_vector( 0.386265, -0.500000, -0.898109 );
ei_tab_add_vector( 0.386265, 0.517694, -0.376144 );
ei_tab_add_vector( 0.386265, -0.500000, 0.500000 );
ei_tab_add_vector( 0.386265, -0.500000, 0.500000 );
ei_tab_add_vector( 0.386265, 0.517694, -0.376144 );
ei_tab_add_vector( 0.386265, 0.048810, 0.517694 );
ei_tab_add_vector( -0.500000, -0.500000, -0.898109 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.517694, -0.376144 );
ei_tab_add_vector( -0.500000, 0.517694, -0.376144 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.048810, 0.517694 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:pCube3|Man:pCubeShape3
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:pCube2|Man:pCubeShape2, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:pCube2|Man:pCubeShape2
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:pCube2|Man:pCubeShape2" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -2.607306, 0.596936 );
ei_tab_add_vector( 0.500000, -2.607306, 0.596936 );
ei_tab_add_vector( -0.465926, 0.535387, 0.553081 );
ei_tab_add_vector( -0.465926, 0.535387, 0.553081 );
ei_tab_add_vector( 0.500000, -2.607306, 0.596936 );
ei_tab_add_vector( 0.500000, 0.535387, 0.553081 );
ei_tab_add_vector( -0.465926, 0.535387, 0.553081 );
ei_tab_add_vector( 0.500000, 0.535387, 0.553081 );
ei_tab_add_vector( -0.465926, 0.500000, -0.324443 );
ei_tab_add_vector( -0.465926, 0.500000, -0.324443 );
ei_tab_add_vector( 0.500000, 0.535387, 0.553081 );
ei_tab_add_vector( 0.500000, 0.500000, -0.324443 );
ei_tab_add_vector( 0.500000, 0.500000, -0.324443 );
ei_tab_add_vector( 0.500000, -3.111374, -0.635710 );
ei_tab_add_vector( -0.465926, 0.500000, -0.324443 );
ei_tab_add_vector( -0.465926, 0.500000, -0.324443 );
ei_tab_add_vector( 0.500000, -3.111374, -0.635710 );
ei_tab_add_vector( -0.500000, -3.111374, -0.635710 );
ei_tab_add_vector( -0.500000, -3.111374, -0.635710 );
ei_tab_add_vector( 0.500000, -3.111374, -0.635710 );
ei_tab_add_vector( -0.500000, -2.607306, 0.596936 );
ei_tab_add_vector( -0.500000, -2.607306, 0.596936 );
ei_tab_add_vector( 0.500000, -3.111374, -0.635710 );
ei_tab_add_vector( 0.500000, -2.607306, 0.596936 );
ei_tab_add_vector( 0.500000, -3.111374, -0.635710 );
ei_tab_add_vector( 0.500000, 0.500000, -0.324443 );
ei_tab_add_vector( 0.500000, -2.607306, 0.596936 );
ei_tab_add_vector( 0.500000, -2.607306, 0.596936 );
ei_tab_add_vector( 0.500000, 0.500000, -0.324443 );
ei_tab_add_vector( 0.500000, 0.535387, 0.553081 );
ei_tab_add_vector( -0.500000, -3.111374, -0.635710 );
ei_tab_add_vector( -0.500000, -2.607306, 0.596936 );
ei_tab_add_vector( -0.465926, 0.500000, -0.324443 );
ei_tab_add_vector( -0.465926, 0.500000, -0.324443 );
ei_tab_add_vector( -0.500000, -2.607306, 0.596936 );
ei_tab_add_vector( -0.465926, 0.535387, 0.553081 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:pCube2|Man:pCubeShape2
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:pCube1|Man:pCubeShape1, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:pCube1|Man:pCubeShape1
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:pCube1|Man:pCubeShape1" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -3.072600, 0.364290 );
ei_tab_add_vector( 0.500000, -3.072600, 0.364290 );
ei_tab_add_vector( -0.738519, 0.089472, 0.547888 );
ei_tab_add_vector( -0.738519, 0.089472, 0.547888 );
ei_tab_add_vector( 0.500000, -3.072600, 0.364290 );
ei_tab_add_vector( 0.500000, 0.471238, 0.547888 );
ei_tab_add_vector( -0.738519, 0.089472, 0.547888 );
ei_tab_add_vector( 0.500000, 0.471238, 0.547888 );
ei_tab_add_vector( -0.738519, 0.089472, -0.835213 );
ei_tab_add_vector( -0.738519, 0.089472, -0.835213 );
ei_tab_add_vector( 0.500000, 0.471238, 0.547888 );
ei_tab_add_vector( 0.500000, 0.471238, -0.835213 );
ei_tab_add_vector( 0.500000, 0.471238, -0.835213 );
ei_tab_add_vector( 0.500000, -3.072600, -0.473657 );
ei_tab_add_vector( -0.738519, 0.089472, -0.835213 );
ei_tab_add_vector( -0.738519, 0.089472, -0.835213 );
ei_tab_add_vector( 0.500000, -3.072600, -0.473657 );
ei_tab_add_vector( -0.500000, -3.072600, -0.473657 );
ei_tab_add_vector( -0.500000, -3.072600, -0.473657 );
ei_tab_add_vector( 0.500000, -3.072600, -0.473657 );
ei_tab_add_vector( -0.500000, -3.072600, 0.364290 );
ei_tab_add_vector( -0.500000, -3.072600, 0.364290 );
ei_tab_add_vector( 0.500000, -3.072600, -0.473657 );
ei_tab_add_vector( 0.500000, -3.072600, 0.364290 );
ei_tab_add_vector( 0.500000, -3.072600, 0.364290 );
ei_tab_add_vector( 0.500000, -3.072600, -0.473657 );
ei_tab_add_vector( 0.500000, 0.471238, 0.547888 );
ei_tab_add_vector( 0.500000, 0.471238, 0.547888 );
ei_tab_add_vector( 0.500000, -3.072600, -0.473657 );
ei_tab_add_vector( 0.500000, 0.471238, -0.835213 );
ei_tab_add_vector( -0.500000, -3.072600, 0.364290 );
ei_tab_add_vector( -0.738519, 0.089472, 0.547888 );
ei_tab_add_vector( -0.500000, -3.072600, -0.473657 );
ei_tab_add_vector( -0.500000, -3.072600, -0.473657 );
ei_tab_add_vector( -0.738519, 0.089472, 0.547888 );
ei_tab_add_vector( -0.738519, 0.089472, -0.835213 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:pCube1|Man:pCubeShape1
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:joint87|Man:rightFootIndex1|Man:pCube4|Man:pCubeShape4, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:joint87|Man:rightFootIndex1|Man:pCube4|Man:pCubeShape4
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:joint87|Man:rightFootIndex1|Man:pCube4|Man:pCubeShape4" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.030812, 0.429225 );
ei_tab_add_vector( 0.386265, -0.500000, 0.500000 );
ei_tab_add_vector( 0.386265, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.030812, 0.429225 );
ei_tab_add_vector( 0.386265, -0.030812, 0.429225 );
ei_tab_add_vector( -0.500000, -0.030812, 0.429225 );
ei_tab_add_vector( -0.500000, 0.013423, -0.544234 );
ei_tab_add_vector( 0.386265, -0.030812, 0.429225 );
ei_tab_add_vector( 0.386265, -0.030812, 0.429225 );
ei_tab_add_vector( -0.500000, 0.013423, -0.544234 );
ei_tab_add_vector( 0.386265, 0.013423, -0.544234 );
ei_tab_add_vector( -0.500000, 0.013423, -0.544234 );
ei_tab_add_vector( -0.500000, -0.500000, -0.553081 );
ei_tab_add_vector( 0.386265, 0.013423, -0.544234 );
ei_tab_add_vector( 0.386265, 0.013423, -0.544234 );
ei_tab_add_vector( -0.500000, -0.500000, -0.553081 );
ei_tab_add_vector( 0.386265, -0.500000, -0.553081 );
ei_tab_add_vector( -0.500000, -0.500000, -0.553081 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.386265, -0.500000, -0.553081 );
ei_tab_add_vector( 0.386265, -0.500000, -0.553081 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.386265, -0.500000, 0.500000 );
ei_tab_add_vector( 0.386265, -0.500000, 0.500000 );
ei_tab_add_vector( 0.386265, -0.030812, 0.429225 );
ei_tab_add_vector( 0.386265, -0.500000, -0.553081 );
ei_tab_add_vector( 0.386265, -0.500000, -0.553081 );
ei_tab_add_vector( 0.386265, -0.030812, 0.429225 );
ei_tab_add_vector( 0.386265, 0.013423, -0.544234 );
ei_tab_add_vector( -0.500000, 0.013423, -0.544234 );
ei_tab_add_vector( -0.500000, -0.030812, 0.429225 );
ei_tab_add_vector( -0.500000, -0.500000, -0.553081 );
ei_tab_add_vector( -0.500000, -0.500000, -0.553081 );
ei_tab_add_vector( -0.500000, -0.030812, 0.429225 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:joint87|Man:rightFootIndex1|Man:pCube4|Man:pCubeShape4
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:pCube3|Man:pCubeShape3, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:pCube3|Man:pCubeShape3
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:pCube3|Man:pCubeShape3" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.048810, 0.517694 );
ei_tab_add_vector( 0.386265, -0.500000, 0.500000 );
ei_tab_add_vector( 0.386265, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.048810, 0.517694 );
ei_tab_add_vector( 0.386265, 0.048810, 0.517694 );
ei_tab_add_vector( -0.500000, 0.048810, 0.517694 );
ei_tab_add_vector( -0.500000, 0.517694, -0.376144 );
ei_tab_add_vector( 0.386265, 0.048810, 0.517694 );
ei_tab_add_vector( 0.386265, 0.048810, 0.517694 );
ei_tab_add_vector( -0.500000, 0.517694, -0.376144 );
ei_tab_add_vector( 0.386265, 0.517694, -0.376144 );
ei_tab_add_vector( -0.500000, 0.517694, -0.376144 );
ei_tab_add_vector( -0.500000, -0.500000, -0.898109 );
ei_tab_add_vector( 0.386265, 0.517694, -0.376144 );
ei_tab_add_vector( 0.386265, 0.517694, -0.376144 );
ei_tab_add_vector( -0.500000, -0.500000, -0.898109 );
ei_tab_add_vector( 0.386265, -0.500000, -0.898109 );
ei_tab_add_vector( -0.500000, -0.500000, -0.898109 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.386265, -0.500000, -0.898109 );
ei_tab_add_vector( 0.386265, -0.500000, -0.898109 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.386265, -0.500000, 0.500000 );
ei_tab_add_vector( 0.386265, 0.048810, 0.517694 );
ei_tab_add_vector( 0.386265, 0.517694, -0.376144 );
ei_tab_add_vector( 0.386265, -0.500000, 0.500000 );
ei_tab_add_vector( 0.386265, -0.500000, 0.500000 );
ei_tab_add_vector( 0.386265, 0.517694, -0.376144 );
ei_tab_add_vector( 0.386265, -0.500000, -0.898109 );
ei_tab_add_vector( -0.500000, -0.500000, -0.898109 );
ei_tab_add_vector( -0.500000, 0.517694, -0.376144 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.517694, -0.376144 );
ei_tab_add_vector( -0.500000, 0.048810, 0.517694 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:pCube3|Man:pCubeShape3
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:pCube2|Man:pCubeShape2, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:pCube2|Man:pCubeShape2
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:pCube2|Man:pCubeShape2" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -2.607306, 0.596936 );
ei_tab_add_vector( -0.465926, 0.535387, 0.553081 );
ei_tab_add_vector( 0.500000, -2.607306, 0.596936 );
ei_tab_add_vector( 0.500000, -2.607306, 0.596936 );
ei_tab_add_vector( -0.465926, 0.535387, 0.553081 );
ei_tab_add_vector( 0.500000, 0.535387, 0.553081 );
ei_tab_add_vector( -0.465926, 0.535387, 0.553081 );
ei_tab_add_vector( -0.465926, 0.500000, -0.324443 );
ei_tab_add_vector( 0.500000, 0.535387, 0.553081 );
ei_tab_add_vector( 0.500000, 0.535387, 0.553081 );
ei_tab_add_vector( -0.465926, 0.500000, -0.324443 );
ei_tab_add_vector( 0.500000, 0.500000, -0.324443 );
ei_tab_add_vector( -0.500000, -3.111374, -0.635710 );
ei_tab_add_vector( 0.500000, -3.111374, -0.635710 );
ei_tab_add_vector( -0.465926, 0.500000, -0.324443 );
ei_tab_add_vector( -0.465926, 0.500000, -0.324443 );
ei_tab_add_vector( 0.500000, -3.111374, -0.635710 );
ei_tab_add_vector( 0.500000, 0.500000, -0.324443 );
ei_tab_add_vector( -0.500000, -3.111374, -0.635710 );
ei_tab_add_vector( -0.500000, -2.607306, 0.596936 );
ei_tab_add_vector( 0.500000, -3.111374, -0.635710 );
ei_tab_add_vector( 0.500000, -3.111374, -0.635710 );
ei_tab_add_vector( -0.500000, -2.607306, 0.596936 );
ei_tab_add_vector( 0.500000, -2.607306, 0.596936 );
ei_tab_add_vector( 0.500000, 0.535387, 0.553081 );
ei_tab_add_vector( 0.500000, 0.500000, -0.324443 );
ei_tab_add_vector( 0.500000, -2.607306, 0.596936 );
ei_tab_add_vector( 0.500000, -2.607306, 0.596936 );
ei_tab_add_vector( 0.500000, 0.500000, -0.324443 );
ei_tab_add_vector( 0.500000, -3.111374, -0.635710 );
ei_tab_add_vector( -0.500000, -3.111374, -0.635710 );
ei_tab_add_vector( -0.465926, 0.500000, -0.324443 );
ei_tab_add_vector( -0.500000, -2.607306, 0.596936 );
ei_tab_add_vector( -0.500000, -2.607306, 0.596936 );
ei_tab_add_vector( -0.465926, 0.500000, -0.324443 );
ei_tab_add_vector( -0.465926, 0.535387, 0.553081 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:pCube2|Man:pCubeShape2
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:pCube1|Man:pCubeShape1, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:pCube1|Man:pCubeShape1
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:pCube1|Man:pCubeShape1" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -3.072600, 0.364290 );
ei_tab_add_vector( -0.738519, 0.089472, 0.547888 );
ei_tab_add_vector( 0.500000, -3.072600, 0.364290 );
ei_tab_add_vector( 0.500000, -3.072600, 0.364290 );
ei_tab_add_vector( -0.738519, 0.089472, 0.547888 );
ei_tab_add_vector( 0.500000, 0.471238, 0.547888 );
ei_tab_add_vector( -0.738519, 0.089472, 0.547888 );
ei_tab_add_vector( -0.738519, 0.089472, -0.835213 );
ei_tab_add_vector( 0.500000, 0.471238, 0.547888 );
ei_tab_add_vector( 0.500000, 0.471238, 0.547888 );
ei_tab_add_vector( -0.738519, 0.089472, -0.835213 );
ei_tab_add_vector( 0.500000, 0.471238, -0.835213 );
ei_tab_add_vector( -0.500000, -3.072600, -0.473657 );
ei_tab_add_vector( 0.500000, -3.072600, -0.473657 );
ei_tab_add_vector( -0.738519, 0.089472, -0.835213 );
ei_tab_add_vector( -0.738519, 0.089472, -0.835213 );
ei_tab_add_vector( 0.500000, -3.072600, -0.473657 );
ei_tab_add_vector( 0.500000, 0.471238, -0.835213 );
ei_tab_add_vector( -0.500000, -3.072600, -0.473657 );
ei_tab_add_vector( -0.500000, -3.072600, 0.364290 );
ei_tab_add_vector( 0.500000, -3.072600, -0.473657 );
ei_tab_add_vector( 0.500000, -3.072600, -0.473657 );
ei_tab_add_vector( -0.500000, -3.072600, 0.364290 );
ei_tab_add_vector( 0.500000, -3.072600, 0.364290 );
ei_tab_add_vector( 0.500000, -3.072600, 0.364290 );
ei_tab_add_vector( 0.500000, 0.471238, 0.547888 );
ei_tab_add_vector( 0.500000, -3.072600, -0.473657 );
ei_tab_add_vector( 0.500000, -3.072600, -0.473657 );
ei_tab_add_vector( 0.500000, 0.471238, 0.547888 );
ei_tab_add_vector( 0.500000, 0.471238, -0.835213 );
ei_tab_add_vector( -0.738519, 0.089472, -0.835213 );
ei_tab_add_vector( -0.738519, 0.089472, 0.547888 );
ei_tab_add_vector( -0.500000, -3.072600, -0.473657 );
ei_tab_add_vector( -0.500000, -3.072600, -0.473657 );
ei_tab_add_vector( -0.738519, 0.089472, 0.547888 );
ei_tab_add_vector( -0.500000, -3.072600, 0.364290 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:pCube1|Man:pCubeShape1
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:pCube5|Man:pCubeShape5, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:pCube5|Man:pCubeShape5
//numNormals != numPoints, ER doesn't support this case now
//### UV(map1), size=19
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:pCube5|Man:pCubeShape5" );
{
eiTag tag;
//vertex positions(required), size=60
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( 0.000001, -0.591495, 0.305625 );
ei_tab_add_vector( 0.000000, 0.511225, 0.197223 );
ei_tab_add_vector( -0.816592, -0.338333, 0.305625 );
ei_tab_add_vector( -0.816592, -0.338333, 0.305625 );
ei_tab_add_vector( 0.000000, 0.511225, 0.197223 );
ei_tab_add_vector( -0.734637, 0.511225, 0.197223 );
ei_tab_add_vector( -0.734637, 0.511225, 0.197223 );
ei_tab_add_vector( 0.000000, 0.511225, 0.197223 );
ei_tab_add_vector( -0.734637, 0.511225, -0.403272 );
ei_tab_add_vector( -0.734637, 0.511225, -0.403272 );
ei_tab_add_vector( 0.000000, 0.511225, 0.197223 );
ei_tab_add_vector( -0.000000, 0.511225, -0.403272 );
ei_tab_add_vector( -0.734637, 0.511225, -0.403272 );
ei_tab_add_vector( -0.000000, 0.511225, -0.403272 );
ei_tab_add_vector( -0.816592, -0.338332, -0.472984 );
ei_tab_add_vector( -0.816592, -0.338332, -0.472984 );
ei_tab_add_vector( -0.000000, 0.511225, -0.403272 );
ei_tab_add_vector( 0.000000, -0.591495, -0.472984 );
ei_tab_add_vector( -0.816592, -0.338332, -0.472984 );
ei_tab_add_vector( 0.000000, -0.591495, -0.472984 );
ei_tab_add_vector( -0.816592, -0.338333, 0.305625 );
ei_tab_add_vector( -0.816592, -0.338333, 0.305625 );
ei_tab_add_vector( 0.000000, -0.591495, -0.472984 );
ei_tab_add_vector( 0.000001, -0.591495, 0.305625 );
ei_tab_add_vector( 0.816592, -0.338332, 0.305625 );
ei_tab_add_vector( 0.816592, -0.338332, -0.472984 );
ei_tab_add_vector( 0.734637, 0.511225, 0.197223 );
ei_tab_add_vector( 0.734637, 0.511225, 0.197223 );
ei_tab_add_vector( 0.816592, -0.338332, -0.472984 );
ei_tab_add_vector( 0.734637, 0.511226, -0.403272 );
ei_tab_add_vector( -0.816592, -0.338333, 0.305625 );
ei_tab_add_vector( -0.734637, 0.511225, 0.197223 );
ei_tab_add_vector( -0.816592, -0.338332, -0.472984 );
ei_tab_add_vector( -0.816592, -0.338332, -0.472984 );
ei_tab_add_vector( -0.734637, 0.511225, 0.197223 );
ei_tab_add_vector( -0.734637, 0.511225, -0.403272 );
ei_tab_add_vector( 0.000001, -0.591495, 0.305625 );
ei_tab_add_vector( 0.816592, -0.338332, 0.305625 );
ei_tab_add_vector( 0.000000, 0.511225, 0.197223 );
ei_tab_add_vector( 0.000000, 0.511225, 0.197223 );
ei_tab_add_vector( 0.816592, -0.338332, 0.305625 );
ei_tab_add_vector( 0.734637, 0.511225, 0.197223 );
ei_tab_add_vector( -0.000000, 0.511225, -0.403272 );
ei_tab_add_vector( 0.000000, 0.511225, 0.197223 );
ei_tab_add_vector( 0.734637, 0.511226, -0.403272 );
ei_tab_add_vector( 0.734637, 0.511226, -0.403272 );
ei_tab_add_vector( 0.000000, 0.511225, 0.197223 );
ei_tab_add_vector( 0.734637, 0.511225, 0.197223 );
ei_tab_add_vector( 0.000000, -0.591495, -0.472984 );
ei_tab_add_vector( -0.000000, 0.511225, -0.403272 );
ei_tab_add_vector( 0.816592, -0.338332, -0.472984 );
ei_tab_add_vector( 0.816592, -0.338332, -0.472984 );
ei_tab_add_vector( -0.000000, 0.511225, -0.403272 );
ei_tab_add_vector( 0.734637, 0.511226, -0.403272 );
ei_tab_add_vector( 0.000001, -0.591495, 0.305625 );
ei_tab_add_vector( 0.000000, -0.591495, -0.472984 );
ei_tab_add_vector( 0.816592, -0.338332, 0.305625 );
ei_tab_add_vector( 0.816592, -0.338332, 0.305625 );
ei_tab_add_vector( 0.000000, -0.591495, -0.472984 );
ei_tab_add_vector( 0.816592, -0.338332, -0.472984 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.497950, 0.000000 );
ei_tab_add_vector2( 0.497722, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.497722, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.497722, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.497722, 0.250000 );
ei_tab_add_vector2( 0.497722, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.497722, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.497722, 0.500000 );
ei_tab_add_vector2( 0.497950, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.497950, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.497950, 0.750000 );
ei_tab_add_vector2( 0.497950, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.497950, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.497722, 0.250000 );
ei_tab_add_vector2( 0.497722, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.497722, 0.500000 );
ei_tab_add_vector2( 0.497722, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.497722, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.497950, 0.750000 );
ei_tab_add_vector2( 0.497722, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.497722, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.497950, 1.000000 );
ei_tab_add_vector2( 0.497950, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.497950, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_end_tab();
//### triangles(required) size=60
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_tab_add_index(36);
ei_tab_add_index(37);
ei_tab_add_index(38);
ei_tab_add_index(39);
ei_tab_add_index(40);
ei_tab_add_index(41);
ei_tab_add_index(42);
ei_tab_add_index(43);
ei_tab_add_index(44);
ei_tab_add_index(45);
ei_tab_add_index(46);
ei_tab_add_index(47);
ei_tab_add_index(48);
ei_tab_add_index(49);
ei_tab_add_index(50);
ei_tab_add_index(51);
ei_tab_add_index(52);
ei_tab_add_index(53);
ei_tab_add_index(54);
ei_tab_add_index(55);
ei_tab_add_index(56);
ei_tab_add_index(57);
ei_tab_add_index(58);
ei_tab_add_index(59);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:pCube5|Man:pCubeShape5
ei_end_object();
//--------------------------
//ribNode->name=|Man:JAP|Man:JapMod|Man:pCube26|Man:pCubeShape26
//ribNode's transform node=|Man:JAP|Man:JapMod|Man:pCube26
//childCount=2
//child(0):|Man:JAP|Man:JapMod|Man:pCube26|Man:pCubeShape26
//child(1):|Man:JAP|Man:JapMod|Man:pCube26|Man:pCubeShape26Orig
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapMod|Man:pCube26|Man:pCubeShape26
ei_instance("|Man:JAP|Man:JapMod|Man:pCube26");
//|Man:JAP|Man:JapMod|Man:pCube26|Man:pCubeShape26 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapMod|Man:pCube26|Man:pCubeShape26
//shape full path name=|Man:JAP|Man:JapMod|Man:pCube26|Man:pCubeShape26
ei_element("|Man:JAP|Man:JapMod|Man:pCube26|Man:pCubeShape26");
ei_transform(-0.727936,0,-8.91464e-017,0,   0,0.727936,0,0,   -8.91464e-017,0,0.727936,0,   -5.10097,13.0119,0.525526,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapMod|Man:pCube26_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapMod|Man:pCube8|Man:pCubeShape8
//ribNode's transform node=|Man:JAP|Man:JapMod|Man:pCube8
//childCount=2
//child(0):|Man:JAP|Man:JapMod|Man:pCube8|Man:pCubeShape8
//child(1):|Man:JAP|Man:JapMod|Man:pCube8|Man:pCubeShape8Orig
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapMod|Man:pCube8|Man:pCubeShape8
ei_instance("|Man:JAP|Man:JapMod|Man:pCube8");
//|Man:JAP|Man:JapMod|Man:pCube8|Man:pCubeShape8 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapMod|Man:pCube8|Man:pCubeShape8
//shape full path name=|Man:JAP|Man:JapMod|Man:pCube8|Man:pCubeShape8
ei_element("|Man:JAP|Man:JapMod|Man:pCube8|Man:pCubeShape8");
ei_transform(0.727936,0,0,0,   0,0.727936,0,0,   0,0,0.727936,0,   5.10097,13.0119,0.525526,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapMod|Man:pCube8_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapMod|Man:pCube6|Man:pCubeShape6
//ribNode's transform node=|Man:JAP|Man:JapMod|Man:pCube6
//childCount=2
//child(0):|Man:JAP|Man:JapMod|Man:pCube6|Man:pCubeShape6
//child(1):|Man:JAP|Man:JapMod|Man:pCube6|Man:pCubeShape6Orig
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapMod|Man:pCube6|Man:pCubeShape6
ei_instance("|Man:JAP|Man:JapMod|Man:pCube6");
//|Man:JAP|Man:JapMod|Man:pCube6|Man:pCubeShape6 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapMod|Man:pCube6|Man:pCubeShape6
//shape full path name=|Man:JAP|Man:JapMod|Man:pCube6|Man:pCubeShape6
ei_element("|Man:JAP|Man:JapMod|Man:pCube6|Man:pCubeShape6");
ei_transform(1.82572,0,0,0,   0,1.82572,0,0,   0,0,1.82572,0,   0,10.7756,0,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapMod|Man:pCube6_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:ground|Man:groundShape
//ribNode's transform node=|Man:JAP|Man:ground
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:ground|Man:groundShape
ei_instance("|Man:JAP|Man:ground");
//|Man:JAP|Man:ground|Man:groundShape has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert4SG,
ei_mtl("Man:lambert4SG");
//shape name=|Man:JAP|Man:ground|Man:groundShape
//shape full path name=|Man:JAP|Man:ground|Man:groundShape
ei_element("|Man:JAP|Man:ground|Man:groundShape");
ei_transform(1,0,0,0,   0,1,0,0,   0,0,1,0,   0,5,-37.408,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:ground_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//|Man:JAP|Man:JapCnt|Man:HipsEff|Man:hikFloorContactMarker1 is not lighted.
//--------------------------
//ribNode->name=|Man:JAP|Man:JapCnt|Man:HipsEff|Man:hikFloorContactMarker1
//ribNode's transform node=|Man:JAP|Man:JapCnt|Man:HipsEff
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapCnt|Man:HipsEff|Man:hikFloorContactMarker1
ei_instance("|Man:JAP|Man:JapCnt|Man:HipsEff");
//|Man:JAP|Man:JapCnt|Man:HipsEff|Man:hikFloorContactMarker1's shading group is empty, use "liquid_material_for_test" to avoid crash
ei_mtl("liquid_material_for_test");
//shape name=|Man:JAP|Man:JapCnt|Man:HipsEff|Man:hikFloorContactMarker1
//shape full path name=|Man:JAP|Man:JapCnt|Man:HipsEff|Man:hikFloorContactMarker1
ei_element("|Man:JAP|Man:JapCnt|Man:HipsEff|Man:hikFloorContactMarker1");
ei_transform(0.11431,0.0940709,0.988981,0,   -0.298792,0.952669,-0.0560816,0,   -0.947447,-0.289089,0.137007,0,   20.342,7.71906,-20.3047,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapCnt|Man:HipsEff_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:leftHandPinky3|Man:pCube11|Man:pCubeShape11
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:leftHandPinky3|Man:pCube11
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:leftHandPinky3|Man:pCube11|Man:pCubeShape11
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:leftHandPinky3|Man:pCube11");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:leftHandPinky3|Man:pCube11|Man:pCubeShape11 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:leftHandPinky3|Man:pCube11|Man:pCubeShape11
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:leftHandPinky3|Man:pCube11|Man:pCubeShape11
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:leftHandPinky3|Man:pCube11|Man:pCubeShape11");
ei_transform(0.106248,0.0152882,0.0685304,0,   0.0600035,-0.00652073,-0.0915731,0,   -0.00748412,0.108686,-0.0126433,0,   20.7236,8.29073,-17.9438,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:leftHandPinky3|Man:pCube11_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:pCube10|Man:pCubeShape10
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:pCube10
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:pCube10|Man:pCubeShape10
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:pCube10");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:pCube10|Man:pCubeShape10 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:pCube10|Man:pCubeShape10
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:pCube10|Man:pCubeShape10
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:pCube10|Man:pCubeShape10");
ei_transform(0.114972,-0.000411315,-0.0746099,0,   -0.0638603,-0.0135926,-0.0983325,0,   -0.00710417,0.117249,-0.0115938,0,   20.5284,8.27399,-17.8906,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:pCube10_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:pCube9|Man:pCubeShape9
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:pCube9
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:pCube9|Man:pCubeShape9
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:pCube9");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:pCube9|Man:pCubeShape9 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:pCube9|Man:pCubeShape9
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:pCube9|Man:pCubeShape9
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:pCube9|Man:pCubeShape9");
ei_transform(-0.122251,-0.0678845,-0.256145,0,   -0.120822,-0.00631708,0.059339,0,   -0.019348,0.130906,-0.025459,0,   20.5533,8.32075,-17.6494,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:pCube9_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:leftHandRing3|Man:pCube12|Man:pCubeShape12
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:leftHandRing3|Man:pCube12
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:leftHandRing3|Man:pCube12|Man:pCubeShape12
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:leftHandRing3|Man:pCube12");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:leftHandRing3|Man:pCube12|Man:pCubeShape12 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:leftHandRing3|Man:pCube12|Man:pCubeShape12
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:leftHandRing3|Man:pCube12|Man:pCubeShape12
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:leftHandRing3|Man:pCube12|Man:pCubeShape12");
ei_transform(0.109395,0.0170863,0.0726055,0,   0.063696,-0.00704923,-0.0943118,0,   -0.00830514,0.112851,-0.014044,0,   20.5453,8.43248,-18.0213,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:leftHandRing3|Man:pCube12_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:pCube13|Man:pCubeShape13
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:pCube13
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:pCube13|Man:pCubeShape13
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:pCube13");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:pCube13|Man:pCubeShape13 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:pCube13|Man:pCubeShape13
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:pCube13|Man:pCubeShape13
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:pCube13|Man:pCubeShape13");
ei_transform(0.0990256,-0.0104099,-0.0999007,0,   -0.0862429,-0.0181066,-0.0836007,0,   -0.00665433,0.119777,-0.0190771,0,   20.3805,8.43848,-17.9289,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:pCube13_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:pCube14|Man:pCubeShape14
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:pCube14
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:pCube14|Man:pCubeShape14
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:pCube14");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:pCube14|Man:pCubeShape14 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:pCube14|Man:pCubeShape14
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:pCube14|Man:pCubeShape14
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:pCube14|Man:pCubeShape14");
ei_transform(-0.164794,-0.0895788,-0.337902,0,   -0.121419,0.00322287,0.0583613,0,   -0.0107095,0.131046,-0.0295175,0,   20.4839,8.49641,-17.6867,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:pCube14_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:leftHandMiddle3|Man:pCube15|Man:pCubeShape15
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:leftHandMiddle3|Man:pCube15
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:leftHandMiddle3|Man:pCube15|Man:pCubeShape15
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:leftHandMiddle3|Man:pCube15");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:leftHandMiddle3|Man:pCube15|Man:pCubeShape15 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:leftHandMiddle3|Man:pCube15|Man:pCubeShape15
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:leftHandMiddle3|Man:pCube15|Man:pCubeShape15
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:leftHandMiddle3|Man:pCube15|Man:pCubeShape15");
ei_transform(0.167095,0.0134865,0.0110463,0,   0.0083795,-0.013217,-0.110618,0,   -0.00801093,0.110572,-0.0138183,0,   20.3528,8.63218,-18.1166,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:leftHandMiddle3|Man:pCube15_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:pCube16|Man:pCubeShape16
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:pCube16
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:pCube16|Man:pCubeShape16
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:pCube16");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:pCube16|Man:pCubeShape16 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:pCube16|Man:pCubeShape16
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:pCube16|Man:pCubeShape16
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:pCube16|Man:pCubeShape16");
ei_transform(0.0695172,-0.0055155,-0.117418,0,   -0.100925,-0.0119293,-0.0591919,0,   -0.00786619,0.116906,-0.0101486,0,   20.2426,8.62884,-17.9676,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:pCube16_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:pCube17|Man:pCubeShape17
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:pCube17
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:pCube17|Man:pCubeShape17
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:pCube17");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:pCube17|Man:pCubeShape17 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:pCube17|Man:pCubeShape17
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:pCube17|Man:pCubeShape17
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:pCube17|Man:pCubeShape17");
ei_transform(-0.23687,-0.0535208,-0.305179,0,   -0.10592,-0.00528099,0.083138,0,   -0.0155414,0.133376,-0.011328,0,   20.4226,8.67595,-17.7079,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:pCube17_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:leftHandIndex3|Man:pCube18|Man:pCubeShape18
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:leftHandIndex3|Man:pCube18
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:leftHandIndex3|Man:pCube18|Man:pCubeShape18
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:leftHandIndex3|Man:pCube18");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:leftHandIndex3|Man:pCube18|Man:pCubeShape18 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:leftHandIndex3|Man:pCube18|Man:pCubeShape18
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:leftHandIndex3|Man:pCube18|Man:pCubeShape18
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:leftHandIndex3|Man:pCube18|Man:pCubeShape18");
ei_transform(0.0989405,-0.0011738,-0.0941875,0,   -0.0806506,-0.0136865,-0.0845499,0,   -0.00870991,0.116843,-0.0106056,0,   20.1469,8.87335,-17.9654,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:leftHandIndex3|Man:pCube18_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:pCube19|Man:pCubeShape19
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:pCube19
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:pCube19|Man:pCubeShape19
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:pCube19");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:pCube19|Man:pCubeShape19 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:pCube19|Man:pCubeShape19
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:pCube19|Man:pCubeShape19
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:pCube19|Man:pCubeShape19");
ei_transform(0.0215462,-0.00178544,-0.137634,0,   -0.117414,-0.0167316,-0.0181637,0,   -0.0162961,0.1188,-0.00409224,0,   20.0986,8.87972,-17.7577,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:pCube19_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:pCube20|Man:pCubeShape20
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:pCube20
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:pCube20|Man:pCubeShape20
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:pCube20");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:pCube20|Man:pCubeShape20 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:pCube20|Man:pCubeShape20
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:pCube20|Man:pCubeShape20
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:pCube20|Man:pCubeShape20");
ei_transform(-0.369911,-0.0144692,-0.123511,0,   -0.0428388,0.00563844,0.12764,0,   -0.00294793,0.134544,-0.00693283,0,   20.3553,8.88989,-17.6423,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:pCube20_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:leftHandThumb3|Man:pCube21|Man:pCubeShape21
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:leftHandThumb3|Man:pCube21
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:leftHandThumb3|Man:pCube21|Man:pCubeShape21
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:leftHandThumb3|Man:pCube21");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:leftHandThumb3|Man:pCube21|Man:pCubeShape21 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:leftHandThumb3|Man:pCube21|Man:pCubeShape21
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:leftHandThumb3|Man:pCube21|Man:pCubeShape21
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:leftHandThumb3|Man:pCube21|Man:pCubeShape21");
ei_transform(-0.270235,-0.0211348,0.0383458,0,   0.0153826,0.0140749,0.116164,0,   -0.0109396,0.116823,-0.0127062,0,   20.315,9.03455,-17.7394,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:leftHandThumb3|Man:pCube21_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:pCube22|Man:pCubeShape22
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:pCube22
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:pCube22|Man:pCubeShape22
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:pCube22");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:pCube22|Man:pCubeShape22 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:pCube22|Man:pCubeShape22
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:pCube22|Man:pCubeShape22
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:pCube22|Man:pCubeShape22");
ei_transform(-0.269873,0.00102278,0.0445895,0,   0.0218923,0.0145361,0.132168,0,   -0.00187537,0.133968,-0.0144234,0,   20.6325,9.0492,-17.7872,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:pCube22_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:pCube23|Man:pCubeShape23
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:pCube23
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:pCube23|Man:pCubeShape23
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:pCube23");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:pCube23|Man:pCubeShape23 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:pCube23|Man:pCubeShape23
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:pCube23|Man:pCubeShape23
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:pCube23|Man:pCubeShape23");
ei_transform(-0.37148,0.057142,-0.00638117,0,   0.000307544,0.0169285,0.133687,0,   0.0206095,0.132109,-0.016776,0,   21.0298,9.0116,-17.8149,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:pCube23_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:pCube25|Man:pCubeShape25
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:pCube25
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:pCube25|Man:pCubeShape25
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:pCube25");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:pCube25|Man:pCubeShape25 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:pCube25|Man:pCubeShape25
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:pCube25|Man:pCubeShape25
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:pCube25|Man:pCubeShape25");
ei_transform(-0.204612,-0.0149856,0.00231748,0,   0.000272328,0.0169555,0.133684,0,   -0.0271735,0.363896,-0.0460985,0,   21.4162,8.70694,-17.8189,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:pCube25_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:pCube24|Man:pCubeShape24
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:pCube24
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:pCube24|Man:pCubeShape24
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:pCube24");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:pCube24|Man:pCubeShape24 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:pCube24|Man:pCubeShape24
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:pCube24|Man:pCubeShape24
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:pCube24|Man:pCubeShape24");
ei_transform(-0.669595,0.00517656,0.0629078,0,   0.0226055,0.0302941,0.238121,0,   -0.00100078,0.239185,-0.0303344,0,   20.9809,8.62113,-17.6128,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:pCube24_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:pCube7|Man:pCubeShape7
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:pCube7
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:pCube7|Man:pCubeShape7
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:pCube7");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:pCube7|Man:pCubeShape7 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:pCube7|Man:pCubeShape7
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:pCube7|Man:pCubeShape7
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:pCube7|Man:pCubeShape7");
ei_transform(0.596338,-0.379775,0.173326,0,   -0.157923,0.074545,0.706678,0,   -0.386434,-0.616526,-0.021322,0,   21.3964,11.8718,-18.2241,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:pCube7_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:rightHandPinky3|Man:pCube11|Man:pCubeShape11
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:rightHandPinky3|Man:pCube11
//childCount=2
//child(0):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:rightHandPinky3|Man:pCube11|Man:pCubeShape11
//child(1):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:rightHandPinky3|Man:pCube11|polySurfaceShape5
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:rightHandPinky3|Man:pCube11|Man:pCubeShape11
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:rightHandPinky3|Man:pCube11");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:rightHandPinky3|Man:pCube11|Man:pCubeShape11 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:rightHandPinky3|Man:pCube11|Man:pCubeShape11
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:rightHandPinky3|Man:pCube11|Man:pCubeShape11
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:rightHandPinky3|Man:pCube11|Man:pCubeShape11");
ei_transform(0.0477324,0.117758,0.00856681,0,   0.0797219,-0.0272052,-0.0702344,0,   0.0631129,-0.0316869,0.0839123,0,   16.3285,9.0458,-23.2447,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:rightHandPinky3|Man:pCube11_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:pCube10|Man:pCubeShape10
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:pCube10
//childCount=2
//child(0):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:pCube10|Man:pCubeShape10
//child(1):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:pCube10|polySurfaceShape6
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:pCube10|Man:pCubeShape10
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:pCube10");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:pCube10|Man:pCubeShape10 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:pCube10|Man:pCubeShape10
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:pCube10|Man:pCubeShape10
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:pCube10|Man:pCubeShape10");
ei_transform(0.111709,0.0395385,-0.0688715,0,   0.00985142,-0.108197,-0.046136,0,   0.0676772,-0.0326523,0.0910264,0,   16.168,8.93707,-23.1773,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:pCube10_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:pCube9|Man:pCubeShape9
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:pCube9
//childCount=2
//child(0):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:pCube9|Man:pCubeShape9
//child(1):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:pCube9|polySurfaceShape7
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:pCube9|Man:pCubeShape9
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:pCube9");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:pCube9|Man:pCubeShape9 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:pCube9|Man:pCubeShape9
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:pCube9|Man:pCubeShape9
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:pCube9|Man:pCubeShape9");
ei_transform(0.0727235,-0.222181,-0.174673,0,   -0.104715,-0.0708872,0.0465702,0,   0.0778852,-0.0510714,0.0973886,0,   16.0446,9.08069,-23.0095,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:pCube9_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:rightHandRing3|Man:pCube12|Man:pCubeShape12
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:rightHandRing3|Man:pCube12
//childCount=2
//child(0):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:rightHandRing3|Man:pCube12|Man:pCubeShape12
//child(1):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:rightHandRing3|Man:pCube12|polySurfaceShape8
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:rightHandRing3|Man:pCube12|Man:pCubeShape12
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:rightHandRing3|Man:pCube12");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:rightHandRing3|Man:pCube12|Man:pCubeShape12 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:rightHandRing3|Man:pCube12|Man:pCubeShape12
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:rightHandRing3|Man:pCube12|Man:pCubeShape12
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:rightHandRing3|Man:pCube12|Man:pCubeShape12");
ei_transform(0.0497247,0.122366,0.00920132,0,   0.082752,-0.0281204,-0.0732321,0,   0.0657263,-0.0332534,0.0870394,0,   16.3635,8.82396,-23.1468,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:rightHandRing3|Man:pCube12_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:pCube13|Man:pCubeShape13
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:pCube13
//childCount=2
//child(0):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:pCube13|Man:pCubeShape13
//child(1):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:pCube13|polySurfaceShape9
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:pCube13|Man:pCubeShape13
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:pCube13");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:pCube13|Man:pCubeShape13 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:pCube13|Man:pCubeShape13
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:pCube13|Man:pCubeShape13
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:pCube13|Man:pCubeShape13");
ei_transform(0.111306,0.0123326,-0.0857518,0,   -0.0142642,-0.115405,-0.0351124,0,   0.0732321,-0.0363806,0.0898236,0,   16.2111,8.75975,-23.0482,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:pCube13_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:pCube14|Man:pCubeShape14
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:pCube14
//childCount=2
//child(0):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:pCube14|Man:pCubeShape14
//child(1):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:pCube14|polySurfaceShape10
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:pCube14|Man:pCubeShape14
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:pCube14");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:pCube14|Man:pCubeShape14 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:pCube14|Man:pCubeShape14
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:pCube14|Man:pCubeShape14
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:pCube14|Man:pCubeShape14");
ei_transform(0.0926519,-0.294428,-0.232567,0,   -0.10016,-0.0731438,0.052697,0,   0.0841624,-0.0476397,0.0938406,0,   16.1334,8.96664,-22.8813,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:pCube14_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:rightHandMiddle3|Man:pCube15|Man:pCubeShape15
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:rightHandMiddle3|Man:pCube15
//childCount=2
//child(0):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:rightHandMiddle3|Man:pCube15|Man:pCubeShape15
//child(1):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:rightHandMiddle3|Man:pCube15|polySurfaceShape11
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:rightHandMiddle3|Man:pCube15|Man:pCubeShape15
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:rightHandMiddle3|Man:pCube15");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:rightHandMiddle3|Man:pCube15|Man:pCubeShape15 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:rightHandMiddle3|Man:pCube15|Man:pCubeShape15
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:rightHandMiddle3|Man:pCube15|Man:pCubeShape15
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:rightHandMiddle3|Man:pCube15|Man:pCubeShape15");
ei_transform(0.101439,0.131289,-0.026419,0,   0.0614284,-0.0615719,-0.0701196,0,   0.0644791,-0.032678,0.0851816,0,   16.458,8.61351,-23.0031,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:rightHandMiddle3|Man:pCube15_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:pCube16|Man:pCubeShape16
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:pCube16
//childCount=2
//child(0):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:pCube16|Man:pCubeShape16
//child(1):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:pCube16|polySurfaceShape12
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:pCube16|Man:pCubeShape16
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:pCube16");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:pCube16|Man:pCubeShape16 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:pCube16|Man:pCubeShape16
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:pCube16|Man:pCubeShape16
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:pCube16|Man:pCubeShape16");
ei_transform(0.10903,-0.00866934,-0.0817775,0,   -0.0246032,-0.113108,-0.0208114,0,   0.0664096,-0.0313479,0.0918635,0,   16.3002,8.60884,-22.9018,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:pCube16_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:pCube17|Man:pCubeShape17
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:pCube17
//childCount=2
//child(0):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:pCube17|Man:pCubeShape17
//child(1):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:pCube17|polySurfaceShape13
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:pCube17|Man:pCubeShape17
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:pCube17");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:pCube17|Man:pCubeShape17 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:pCube17|Man:pCubeShape17
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:pCube17|Man:pCubeShape17
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:pCube17|Man:pCubeShape17");
ei_transform(0.077944,-0.335026,-0.183818,0,   -0.110283,-0.0553636,0.0541422,0,   0.0726032,-0.0411581,0.1058,0,   16.2251,8.87894,-22.7402,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:pCube17_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:rightHandIndex3|Man:pCube18|Man:pCubeShape18
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:rightHandIndex3|Man:pCube18
//childCount=2
//child(0):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:rightHandIndex3|Man:pCube18|Man:pCubeShape18
//child(1):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:rightHandIndex3|Man:pCube18|polySurfaceShape14
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:rightHandIndex3|Man:pCube18|Man:pCubeShape18
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:rightHandIndex3|Man:pCube18");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:rightHandIndex3|Man:pCube18|Man:pCubeShape18 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:rightHandIndex3|Man:pCube18|Man:pCubeShape18
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:rightHandIndex3|Man:pCube18|Man:pCubeShape18
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:rightHandIndex3|Man:pCube18|Man:pCubeShape18");
ei_transform(0.108105,0.069863,-0.0457632,0,   0.0340147,-0.0936301,-0.0625854,0,   0.0633724,-0.0381323,0.0914899,0,   16.336,8.47607,-22.6908,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:rightHandIndex3|Man:pCube18_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:pCube19|Man:pCubeShape19
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:pCube19
//childCount=2
//child(0):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:pCube19|Man:pCubeShape19
//child(1):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:pCube19|polySurfaceShape15
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:pCube19|Man:pCubeShape19
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:pCube19");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:pCube19|Man:pCubeShape19 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:pCube19|Man:pCubeShape19
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:pCube19|Man:pCubeShape19
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:pCube19|Man:pCubeShape19");
ei_transform(0.0944171,-0.0599611,-0.0830707,0,   -0.0659718,-0.100182,-0.00267053,0,   0.0585841,-0.0411454,0.0962851,0,   16.1859,8.54227,-22.5648,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:pCube19_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:pCube20|Man:pCubeShape20
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:pCube20
//childCount=2
//child(0):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:pCube20|Man:pCubeShape20
//child(1):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:pCube20|polySurfaceShape16
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:pCube20|Man:pCubeShape20
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:pCube20");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:pCube20|Man:pCubeShape20 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:pCube20|Man:pCubeShape20
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:pCube20|Man:pCubeShape20
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:pCube20|Man:pCubeShape20");
ei_transform(-0.118216,-0.369925,-0.0384553,0,   -0.103661,0.0245476,0.0825271,0,   0.0758092,-0.0352138,0.105697,0,   16.2491,8.81579,-22.5205,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:pCube20_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:rightHandThumb3|Man:pCube21|Man:pCubeShape21
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:rightHandThumb3|Man:pCube21
//childCount=2
//child(0):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:rightHandThumb3|Man:pCube21|Man:pCubeShape21
//child(1):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:rightHandThumb3|Man:pCube21|polySurfaceShape17
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:rightHandThumb3|Man:pCube21|Man:pCubeShape21
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:rightHandThumb3|Man:pCube21");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:rightHandThumb3|Man:pCube21|Man:pCubeShape21 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:rightHandThumb3|Man:pCube21|Man:pCubeShape21
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:rightHandThumb3|Man:pCube21|Man:pCubeShape21
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:rightHandThumb3|Man:pCube21|Man:pCubeShape21");
ei_transform(-0.148186,-0.229629,0.0159908,0,   -0.0737086,0.0528261,0.0755328,0,   0.0664425,-0.0365804,0.0904214,0,   16.4064,8.71347,-22.4644,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:rightHandThumb3|Man:pCube21_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:pCube22|Man:pCubeShape22
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:pCube22
//childCount=2
//child(0):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:pCube22|Man:pCubeShape22
//child(1):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:pCube22|polySurfaceShape18
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:pCube22|Man:pCubeShape22
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:pCube22");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:pCube22|Man:pCubeShape22 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:pCube22|Man:pCubeShape22
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:pCube22|Man:pCubeShape22
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:pCube22|Man:pCubeShape22");
ei_transform(-0.140614,-0.231444,0.0385009,0,   -0.082878,0.0644105,0.0845071,0,   0.0805695,-0.0317768,0.103236,0,   16.5769,8.98432,-22.4936,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:pCube22_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:pCube23|Man:pCubeShape23
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:pCube23
//childCount=2
//child(0):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:pCube23|Man:pCubeShape23
//child(1):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:pCube23|polySurfaceShape19
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:pCube23|Man:pCubeShape23
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:pCube23");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:pCube23|Man:pCubeShape23 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:pCube23|Man:pCubeShape23
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:pCube23|Man:pCubeShape23
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:pCube23|Man:pCubeShape23");
ei_transform(-0.114135,-0.352964,0.0607684,0,   -0.0914076,0.0447629,0.0883168,0,   0.0901637,-0.0120386,0.0994208,0,   16.7369,9.34517,-22.5585,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:pCube23_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube25|Man:pCubeShape25
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube25
//childCount=2
//child(0):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube25|Man:pCubeShape25
//child(1):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube25|polySurfaceShape20
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube25|Man:pCubeShape25
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube25");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube25|Man:pCubeShape25 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube25|Man:pCubeShape25
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube25|Man:pCubeShape25
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube25|Man:pCubeShape25");
ei_transform(-0.0906026,-0.184074,-0.001984,0,   -0.0915953,0.0441306,0.0884404,0,   0.215406,-0.109015,0.277488,0,   16.7336,9.75472,-22.831,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube25_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube24|Man:pCubeShape24
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube24
//childCount=2
//child(0):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube24|Man:pCubeShape24
//child(1):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube24|polySurfaceShape21
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube24|Man:pCubeShape24
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube24");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube24|Man:pCubeShape24 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube24|Man:pCubeShape24
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube24|Man:pCubeShape24
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube24|Man:pCubeShape24");
ei_transform(-0.309614,-0.593027,0.0692743,0,   -0.154349,0.0988799,0.156619,0,   0.148282,-0.0562015,0.181616,0,   16.3611,9.444,-22.768,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube24_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:pCube7|Man:pCubeShape7
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:pCube7
//childCount=2
//child(0):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:pCube7|Man:pCubeShape7
//child(1):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:pCube7|polySurfaceShape4
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:pCube7|Man:pCubeShape7
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:pCube7");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:pCube7|Man:pCubeShape7 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:pCube7|Man:pCubeShape7
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:pCube7|Man:pCubeShape7
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:pCube7|Man:pCubeShape7");
ei_transform(-0.605771,-0.340816,-0.216277,0,   -0.364488,0.294273,0.557173,0,   0.173434,-0.57196,0.415539,0,   19.4028,13.3798,-22.2445,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:pCube7_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:joint86|Man:leftFootIndex1|Man:pCube4|Man:pCubeShape4
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:joint86|Man:leftFootIndex1|Man:pCube4
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:joint86|Man:leftFootIndex1|Man:pCube4|Man:pCubeShape4
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:joint86|Man:leftFootIndex1|Man:pCube4");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:joint86|Man:leftFootIndex1|Man:pCube4|Man:pCubeShape4 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:joint86|Man:leftFootIndex1|Man:pCube4|Man:pCubeShape4
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:joint86|Man:leftFootIndex1|Man:pCube4|Man:pCubeShape4
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:joint86|Man:leftFootIndex1|Man:pCube4|Man:pCubeShape4");
ei_transform(0.0793371,0.0862303,0.993111,0,   -0.87864,-0.464516,0.110526,0,   0.470847,-0.881356,0.038912,0,   22.0725,1.81392,-18.6202,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:joint86|Man:leftFootIndex1|Man:pCube4_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:pCube3|Man:pCubeShape3
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:pCube3
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:pCube3|Man:pCubeShape3
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:pCube3");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:pCube3|Man:pCubeShape3 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:pCube3|Man:pCubeShape3
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:pCube3|Man:pCubeShape3
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:pCube3|Man:pCubeShape3");
ei_transform(0.0246689,0.000877742,0.999695,0,   -0.997486,-0.0664228,0.0246727,0,   0.0664242,-0.997791,-0.000763043,0,   21.7316,3.01485,-18.6659,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:pCube3_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:pCube2|Man:pCubeShape2
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:pCube2
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:pCube2|Man:pCubeShape2
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:pCube2");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:pCube2|Man:pCubeShape2 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:pCube2|Man:pCubeShape2
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:pCube2|Man:pCubeShape2
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:pCube2|Man:pCubeShape2");
ei_transform(0.0918249,-0.00898582,0.995735,0,   -0.881249,0.464862,0.0854623,0,   -0.463648,-0.885337,0.0347672,0,   18.863,4.65116,-18.4568,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:pCube2_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:pCube1|Man:pCubeShape1
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:pCube1
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:pCube1|Man:pCubeShape1
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:pCube1");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:pCube1|Man:pCubeShape1 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:pCube1|Man:pCubeShape1
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:pCube1|Man:pCubeShape1
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:pCube1|Man:pCubeShape1");
ei_transform(0.183875,0.138897,0.973087,0,   0.595134,0.772161,-0.222674,0,   -0.782308,0.620061,0.0593189,0,   20.1465,7.49668,-19.1244,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:pCube1_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:joint87|Man:rightFootIndex1|Man:pCube4|Man:pCubeShape4
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:joint87|Man:rightFootIndex1|Man:pCube4
//childCount=2
//child(0):|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:joint87|Man:rightFootIndex1|Man:pCube4|Man:pCubeShape4
//child(1):|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:joint87|Man:rightFootIndex1|Man:pCube4|polySurfaceShape3
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:joint87|Man:rightFootIndex1|Man:pCube4|Man:pCubeShape4
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:joint87|Man:rightFootIndex1|Man:pCube4");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:joint87|Man:rightFootIndex1|Man:pCube4|Man:pCubeShape4 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:joint87|Man:rightFootIndex1|Man:pCube4|Man:pCubeShape4
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:joint87|Man:rightFootIndex1|Man:pCube4|Man:pCubeShape4
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:joint87|Man:rightFootIndex1|Man:pCube4|Man:pCubeShape4");
ei_transform(0.401938,3.23981e-005,-0.915667,0,   -0.00023126,1,-6.61312e-005,0,   -0.915667,-0.000238338,-0.401938,0,   20.4372,0.506429,-20.5611,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:joint87|Man:rightFootIndex1|Man:pCube4_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:pCube3|Man:pCubeShape3
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:pCube3
//childCount=2
//child(0):|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:pCube3|Man:pCubeShape3
//child(1):|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:pCube3|polySurfaceShape22
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:pCube3|Man:pCubeShape3
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:pCube3");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:pCube3|Man:pCubeShape3 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:pCube3|Man:pCubeShape3
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:pCube3|Man:pCubeShape3
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:pCube3|Man:pCubeShape3");
ei_transform(0.375274,-0.000146257,-0.926914,0,   0.000203733,1,-7.53048e-005,0,   -0.926914,0.000160583,-0.375274,0,   21.5044,0.505994,-20.1114,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:pCube3_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:pCube2|Man:pCubeShape2
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:pCube2
//childCount=2
//child(0):|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:pCube2|Man:pCubeShape2
//child(1):|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:pCube2|polySurfaceShape1
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:pCube2|Man:pCubeShape2
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:pCube2");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:pCube2|Man:pCubeShape2 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:pCube2|Man:pCubeShape2
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:pCube2|Man:pCubeShape2
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:pCube2|Man:pCubeShape2");
ei_transform(0.475014,-0.0263722,-0.879583,0,   -0.290152,0.938959,-0.184847,0,   -0.830767,-0.343018,-0.438367,0,   20.9676,3.44491,-20.4915,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:pCube2_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:pCube1|Man:pCubeShape1
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:pCube1
//childCount=2
//child(0):|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:pCube1|Man:pCubeShape1
//child(1):|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:pCube1|polySurfaceShape2
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:pCube1|Man:pCubeShape1
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:pCube1");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:pCube1|Man:pCubeShape1 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:pCube1|Man:pCubeShape1
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:pCube1|Man:pCubeShape1
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:pCube1|Man:pCubeShape1");
ei_transform(0.13268,-0.166066,-0.977148,0,   -0.124478,0.975267,-0.182648,0,   -0.983311,-0.145867,-0.108727,0,   20.2132,7.16623,-21.24,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:pCube1_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:pCube5|Man:pCubeShape5
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:pCube5
//childCount=2
//child(0):|Man:JAP|Man:JapSkeleton|Man:hips|Man:pCube5|Man:pCubeShape5
//child(1):|Man:JAP|Man:JapSkeleton|Man:hips|Man:pCube5|Man:polySurfaceShape5
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:pCube5|Man:pCubeShape5
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:pCube5");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:pCube5|Man:pCubeShape5 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:pCube5|Man:pCubeShape5
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:pCube5|Man:pCubeShape5
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:pCube5|Man:pCubeShape5");
ei_transform(0.208698,0.171747,1.8056,0,   -0.545511,1.73931,-0.102389,0,   -1.72977,-0.527796,0.250136,0,   20.0773,8.39461,-20.3077,1);
//ribNode->doDef=205, ribNode->doMotion=205
ei_motion(1);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:pCube5_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//Renderer::worldEpilogue()
ei_instgroup("perspShape");
//camera
ei_add_instance("|persp|perspShape");
//light(s)
ei_add_instance("|pointLight1|pointLightShape1");
ei_add_instance("|pointLight2|pointLightShape2");
//mesh(s)
ei_add_instance("|Man:JAP|Man:JapCnt|Man:HipsEff");
ei_add_instance("|Man:JAP|Man:JapMod|Man:pCube26");
ei_add_instance("|Man:JAP|Man:JapMod|Man:pCube6");
ei_add_instance("|Man:JAP|Man:JapMod|Man:pCube8");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:joint86|Man:leftFootIndex1|Man:pCube4");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:pCube3");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:pCube2");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:pCube1");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:pCube5");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:pCube1");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:pCube2");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:joint87|Man:rightFootIndex1|Man:pCube4");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:pCube3");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:leftHandPinky3|Man:pCube11");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:pCube10");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:pCube9");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:leftHandRing3|Man:pCube12");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:pCube13");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:pCube14");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:leftHandMiddle3|Man:pCube15");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:pCube16");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:pCube17");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:leftHandIndex3|Man:pCube18");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:pCube19");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:pCube20");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:leftHandThumb3|Man:pCube21");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:pCube22");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:pCube23");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:pCube24");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:pCube25");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:pCube7");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:pCube7");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:pCube9");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:pCube10");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:rightHandPinky3|Man:pCube11");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:pCube14");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:pCube13");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:rightHandRing3|Man:pCube12");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:pCube17");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:pCube16");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:rightHandMiddle3|Man:pCube15");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:pCube20");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:pCube19");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:rightHandIndex3|Man:pCube18");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube24");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube25");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:pCube23");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:pCube22");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:rightHandThumb3|Man:pCube21");
ei_add_instance("|Man:JAP|Man:ground");
ei_end_instgroup();
// in batch render mode
//ei_render( "perspShape", "|persp|perspShape", "perspShape_option" );
ei_render( "perspShape", "|persp|perspShape", "perspShape_option" );
ei_end_context();
//------------------------------------------------

