//------------------------------------------------
char *null_token = NULL;
eiInt defaultInt = 0;
//------------------------------------------------

ei_context();
ei_verbose(6);
ei_link("eiIMG");
ei_link("eiSHADER");
ei_link("eiSHADER_maya");
//----------------shader_for_test begin---
ei_shader("maya_surfaceShader", "liquid_shader_for_test");
ei_shader_param_vector("o_outColor",1,0,0);
ei_end_shader();
ei_material("liquid_material_for_test");
ei_surface_shader("liquid_shader_for_test");
ei_end_material();
//----------------shader_for_test end ---
//    Generated by Liquid v2.3.5
//    Scene : R:/MyDocuments/maya/projects/default/HappyWalk_liq_simple
//    User  : yaoyansi

//############################### option #
ei_options("perspShape_option");
ei_contrast(0.05);
ei_samples(0,16);
ei_filter(4,3);
ei_progressive(1);
//transform motion=0, deform motion=0
ei_motion(0);
ei_trace_depth(4,4,4,4,4,4);
ei_displace(0);
ei_face(3);
ei_end_options();

ei_shader("maya_lambert", "Man:GroundAtt");
ei_shader_param_vector("i_ambientColor",0,0,0);
ei_shader_param_vector("i_color",0.967,0.967,0.967);
ei_shader_param_scalar("i_diffuse",0.8);
ei_shader_param_vector("i_incandescence",0,0,0);
ei_shader_param_index("i_matteOpacityMode",2);
ei_shader_param_scalar("i_matteOpacity",1);
ei_shader_param_bool("i_refractions",0);
ei_shader_param_scalar("i_refractiveIndex",1);
ei_shader_param_index("i_refractionLimit",6);
ei_shader_param_scalar("i_lightAbsorbance",0);
ei_shader_param_scalar("i_shadowAttenuation",0.5);
ei_shader_param_int("liq_UserDefinedNormal",0);
ei_shader_param_vector("i_normalCamera",1,1,1);
ei_shader_param_vector("i_transparency",0,0,0);
ei_shader_param_scalar("i_translucence",0);
ei_shader_param_scalar("i_translucenceDepth",0.5);
ei_shader_param_scalar("i_translucenceFocus",0.5);
ei_shader_param_vector("o_outColor",0,0,0);
ei_shader_param_vector("o_outTransparency",0,0,0);
ei_end_shader();

ei_material("Man:lambert4SG");
ei_surface_shader("Man:GroundAtt");
ei_end_material();

ei_shader("maya_lambert", "Man:Body");
ei_shader_param_vector("i_ambientColor",0,0,0);
ei_shader_param_vector("i_color",1,0.954197,0.837);
ei_shader_param_scalar("i_diffuse",0.8);
ei_shader_param_vector("i_incandescence",0,0,0);
ei_shader_param_index("i_matteOpacityMode",2);
ei_shader_param_scalar("i_matteOpacity",1);
ei_shader_param_bool("i_refractions",0);
ei_shader_param_scalar("i_refractiveIndex",1);
ei_shader_param_index("i_refractionLimit",6);
ei_shader_param_scalar("i_lightAbsorbance",0);
ei_shader_param_scalar("i_shadowAttenuation",0.5);
ei_shader_param_int("liq_UserDefinedNormal",0);
ei_shader_param_vector("i_normalCamera",1,1,1);
ei_shader_param_vector("i_transparency",0,0,0);
ei_shader_param_scalar("i_translucence",0);
ei_shader_param_scalar("i_translucenceDepth",0.5);
ei_shader_param_scalar("i_translucenceFocus",0.5);
ei_shader_param_vector("o_outColor",0,0,0);
ei_shader_param_vector("o_outTransparency",0,0,0);
ei_end_shader();

ei_material("Man:lambert3SG");
ei_surface_shader("Man:Body");
ei_end_material();


//worldPrologue

// Renderer::exportLight("_pointLight1_pointLightShape1");

// Renderer::exportPointLight()
ei_shader("pointlight", "|pointLight1|pointLightShape1_shader");
ei_shader_param_vector("lightcolor",1,1,1);
ei_shader_param_scalar("intensity",1);
ei_end_shader();
ei_light("|pointLight1|pointLightShape1_object");
ei_light_shader("|pointLight1|pointLightShape1_shader");
ei_origin(0,0,0);
ei_end_light();
ei_instance("|pointLight1|pointLightShape1");
ei_element("|pointLight1|pointLightShape1_object");
ei_transform(1,0,0,0,   0,1,0,0,   0,0,1,0,   0,20.3844,-24.4854,1);
ei_declare("|Man:JAP_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapMod_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapMod|Man:pCube26_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapMod|Man:pCube8_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapMod|Man:pCube6_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:ground_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:leftHandPinky3|Man:pCube11_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:pCube10_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:pCube9_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:leftHandRing3|Man:pCube12_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:pCube13_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:pCube14_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:leftHandMiddle3|Man:pCube15_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:pCube16_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:pCube17_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:leftHandIndex3|Man:pCube18_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:pCube19_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:pCube20_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:leftHandThumb3|Man:pCube21_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:pCube22_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:pCube23_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:pCube25_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:pCube24_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:pCube7_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:rightHandPinky3|Man:pCube11_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:pCube10_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:pCube9_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:rightHandRing3|Man:pCube12_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:pCube13_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:pCube14_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:rightHandMiddle3|Man:pCube15_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:pCube16_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:pCube17_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:rightHandIndex3|Man:pCube18_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:pCube19_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:pCube20_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:rightHandThumb3|Man:pCube21_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:pCube22_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:pCube23_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube25_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube24_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:pCube7_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:joint86|Man:leftFootIndex1|Man:pCube4_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:pCube3_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:pCube2_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:pCube1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:joint87|Man:rightFootIndex1|Man:pCube4_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:pCube3_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:pCube2_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:pCube1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:pCube5_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:joint87_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:joint87|Man:rightFootIndex1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:rightHandThumb3_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:joint86_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:joint86|Man:leftFootIndex1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:rightHandMiddle3_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:rightHandIndex3_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:rightHandPinky3_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:rightHandRing3_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:leftHandIndex3_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:leftHandThumb3_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:leftHandRing3_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:leftHandMiddle3_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:leftHandPinky3_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_end_instance();

// Renderer::exportLight("_pointLight2_pointLightShape2");

// Renderer::exportPointLight()
ei_shader("pointlight", "|pointLight2|pointLightShape2_shader");
ei_shader_param_vector("lightcolor",1,1,1);
ei_shader_param_scalar("intensity",1);
ei_end_shader();
ei_light("|pointLight2|pointLightShape2_object");
ei_light_shader("|pointLight2|pointLightShape2_shader");
ei_origin(0,0,0);
ei_end_light();
ei_instance("|pointLight2|pointLightShape2");
ei_element("|pointLight2|pointLightShape2_object");
ei_transform(1,0,0,0,   0,1,0,0,   0,0,1,0,   0,4.31225,0,1);
ei_declare("|Man:JAP_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapMod_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapMod|Man:pCube26_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapMod|Man:pCube8_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapMod|Man:pCube6_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:ground_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:leftHandPinky3|Man:pCube11_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:pCube10_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:pCube9_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:leftHandRing3|Man:pCube12_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:pCube13_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:pCube14_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:leftHandMiddle3|Man:pCube15_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:pCube16_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:pCube17_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:leftHandIndex3|Man:pCube18_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:pCube19_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:pCube20_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:leftHandThumb3|Man:pCube21_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:pCube22_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:pCube23_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:pCube25_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:pCube24_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:pCube7_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:rightHandPinky3|Man:pCube11_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:pCube10_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:pCube9_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:rightHandRing3|Man:pCube12_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:pCube13_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:pCube14_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:rightHandMiddle3|Man:pCube15_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:pCube16_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:pCube17_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:rightHandIndex3|Man:pCube18_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:pCube19_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:pCube20_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:rightHandThumb3|Man:pCube21_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:pCube22_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:pCube23_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube25_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube24_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:pCube7_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:joint86|Man:leftFootIndex1|Man:pCube4_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:pCube3_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:pCube2_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:pCube1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:joint87|Man:rightFootIndex1|Man:pCube4_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:pCube3_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:pCube2_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:pCube1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:pCube5_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:joint87_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:joint87|Man:rightFootIndex1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:rightHandThumb3_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:joint86_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:joint86|Man:leftFootIndex1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:rightHandMiddle3_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:rightHandIndex3_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:rightHandPinky3_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:rightHandRing3_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:leftHandIndex3_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:leftHandThumb3_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:leftHandRing3_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:leftHandMiddle3_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:leftHandPinky3_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_end_instance();

// maya settings: focal=35.000000, aperture = 46.799999, aspect=1.333333
//Depth of Field on camera "|persp|perspShape" is turned off in Maya

//############################### camera #
ei_camera("|persp|perspShape");
//beauty channel
ei_output("R:/MyDocuments/maya/projects/default/rmanpix/HappyWalk_liq_simple.perspShape.19.ElvishRender.bmp","bmp",1);
//mode=rgb
ei_output_variable("color",11);
ei_end_output();
// AOV
// AOV end
ei_focal(35);
ei_aperture(36);
ei_aspect(1.33333);
ei_resolution(200,150);
ei_clip(1,100000);
ei_end_camera();

// maya settings: focal=11.000000, aperture = 7.179748, aspect=1.333333
//Depth of Field on camera "|persp|perspShape" is turned off in Maya

//############################### camera #
ei_camera("|renderCam|renderCamShape");
//beauty channel
ei_output("R:/MyDocuments/maya/projects/default/rmanpix/HappyWalk_liq_simple.perspShape.19.ElvishRender.bmp","bmp",1);
//mode=rgb
ei_output_variable("color",11);
ei_end_output();
// AOV
// AOV end
ei_focal(11);
ei_aperture(7.17975);
ei_aspect(1.33333);
ei_resolution(200,150);
ei_clip(1,100000);
ei_end_camera();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapMod|Man:pCube26|Man:pCubeShape26, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapMod|Man:pCube26|Man:pCubeShape26
//### UV(map1), size=22
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapMod|Man:pCube26|Man:pCubeShape26" );
{
eiTag tag;
//vertex positions(required), size=84
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -30.928814, -0.935411, -31.374895 );
ei_tab_add_vector( -29.952358, -3.585632, -31.390060 );
ei_tab_add_vector( -31.577076, -1.200039, -31.866283 );
ei_tab_add_vector( -31.577076, -1.200039, -31.866283 );
ei_tab_add_vector( -29.952358, -3.585632, -31.390060 );
ei_tab_add_vector( -30.515993, -3.815710, -31.817364 );
ei_tab_add_vector( -30.405954, -0.775525, -32.150780 );
ei_tab_add_vector( -29.591673, -3.475295, -31.925234 );
ei_tab_add_vector( -30.928814, -0.935411, -31.374895 );
ei_tab_add_vector( -30.928814, -0.935411, -31.374895 );
ei_tab_add_vector( -29.591673, -3.475295, -31.925234 );
ei_tab_add_vector( -29.952358, -3.585632, -31.390060 );
ei_tab_add_vector( -30.405954, -0.775525, -32.150780 );
ei_tab_add_vector( -31.054216, -1.040152, -32.642166 );
ei_tab_add_vector( -29.591673, -3.475295, -31.925234 );
ei_tab_add_vector( -29.591673, -3.475295, -31.925234 );
ei_tab_add_vector( -31.054216, -1.040152, -32.642166 );
ei_tab_add_vector( -30.155308, -3.705372, -32.352539 );
ei_tab_add_vector( -31.054216, -1.040152, -32.642166 );
ei_tab_add_vector( -31.577076, -1.200039, -31.866283 );
ei_tab_add_vector( -30.155308, -3.705372, -32.352539 );
ei_tab_add_vector( -30.155308, -3.705372, -32.352539 );
ei_tab_add_vector( -31.577076, -1.200039, -31.866283 );
ei_tab_add_vector( -30.515993, -3.815710, -31.817364 );
ei_tab_add_vector( -30.408363, -4.314126, -31.789492 );
ei_tab_add_vector( -29.758944, -4.049032, -31.297153 );
ei_tab_add_vector( -29.995361, -4.187785, -32.402294 );
ei_tab_add_vector( -29.995361, -4.187785, -32.402294 );
ei_tab_add_vector( -29.758944, -4.049032, -31.297153 );
ei_tab_add_vector( -29.345942, -3.922691, -31.909956 );
ei_tab_add_vector( -31.054216, -1.040152, -32.642166 );
ei_tab_add_vector( -30.405954, -0.775525, -32.150780 );
ei_tab_add_vector( -31.577076, -1.200039, -31.866283 );
ei_tab_add_vector( -31.577076, -1.200039, -31.866283 );
ei_tab_add_vector( -30.405954, -0.775525, -32.150780 );
ei_tab_add_vector( -30.928814, -0.935411, -31.374895 );
ei_tab_add_vector( -30.515993, -3.815710, -31.817364 );
ei_tab_add_vector( -30.555159, -3.921214, -31.807417 );
ei_tab_add_vector( -30.155308, -3.705372, -32.352539 );
ei_tab_add_vector( -30.155308, -3.705372, -32.352539 );
ei_tab_add_vector( -30.555159, -3.921214, -31.807417 );
ei_tab_add_vector( -30.142153, -3.794873, -32.420219 );
ei_tab_add_vector( -30.155308, -3.705372, -32.352539 );
ei_tab_add_vector( -30.142153, -3.794873, -32.420219 );
ei_tab_add_vector( -29.591673, -3.475295, -31.925234 );
ei_tab_add_vector( -29.591673, -3.475295, -31.925234 );
ei_tab_add_vector( -30.142153, -3.794873, -32.420219 );
ei_tab_add_vector( -29.492733, -3.529779, -31.927881 );
ei_tab_add_vector( -29.591673, -3.475295, -31.925234 );
ei_tab_add_vector( -29.492733, -3.529779, -31.927881 );
ei_tab_add_vector( -29.952358, -3.585632, -31.390060 );
ei_tab_add_vector( -29.952358, -3.585632, -31.390060 );
ei_tab_add_vector( -29.492733, -3.529779, -31.927881 );
ei_tab_add_vector( -29.905739, -3.656121, -31.315079 );
ei_tab_add_vector( -29.952358, -3.585632, -31.390060 );
ei_tab_add_vector( -29.905739, -3.656121, -31.315079 );
ei_tab_add_vector( -30.515993, -3.815710, -31.817364 );
ei_tab_add_vector( -30.515993, -3.815710, -31.817364 );
ei_tab_add_vector( -29.905739, -3.656121, -31.315079 );
ei_tab_add_vector( -30.555159, -3.921214, -31.807417 );
ei_tab_add_vector( -30.555159, -3.921214, -31.807417 );
ei_tab_add_vector( -30.408363, -4.314126, -31.789492 );
ei_tab_add_vector( -30.142153, -3.794873, -32.420219 );
ei_tab_add_vector( -30.142153, -3.794873, -32.420219 );
ei_tab_add_vector( -30.408363, -4.314126, -31.789492 );
ei_tab_add_vector( -29.995361, -4.187785, -32.402294 );
ei_tab_add_vector( -30.142153, -3.794873, -32.420219 );
ei_tab_add_vector( -29.995361, -4.187785, -32.402294 );
ei_tab_add_vector( -29.492733, -3.529779, -31.927881 );
ei_tab_add_vector( -29.492733, -3.529779, -31.927881 );
ei_tab_add_vector( -29.995361, -4.187785, -32.402294 );
ei_tab_add_vector( -29.345942, -3.922691, -31.909956 );
ei_tab_add_vector( -29.492733, -3.529779, -31.927881 );
ei_tab_add_vector( -29.345942, -3.922691, -31.909956 );
ei_tab_add_vector( -29.905739, -3.656121, -31.315079 );
ei_tab_add_vector( -29.905739, -3.656121, -31.315079 );
ei_tab_add_vector( -29.345942, -3.922691, -31.909956 );
ei_tab_add_vector( -29.758944, -4.049032, -31.297153 );
ei_tab_add_vector( -29.905739, -3.656121, -31.315079 );
ei_tab_add_vector( -29.758944, -4.049032, -31.297153 );
ei_tab_add_vector( -30.555159, -3.921214, -31.807417 );
ei_tab_add_vector( -30.555159, -3.921214, -31.807417 );
ei_tab_add_vector( -29.758944, -4.049032, -31.297153 );
ei_tab_add_vector( -30.408363, -4.314126, -31.789492 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_end_tab();
//### triangles(required) size=84
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_tab_add_index(36);
ei_tab_add_index(37);
ei_tab_add_index(38);
ei_tab_add_index(39);
ei_tab_add_index(40);
ei_tab_add_index(41);
ei_tab_add_index(42);
ei_tab_add_index(43);
ei_tab_add_index(44);
ei_tab_add_index(45);
ei_tab_add_index(46);
ei_tab_add_index(47);
ei_tab_add_index(48);
ei_tab_add_index(49);
ei_tab_add_index(50);
ei_tab_add_index(51);
ei_tab_add_index(52);
ei_tab_add_index(53);
ei_tab_add_index(54);
ei_tab_add_index(55);
ei_tab_add_index(56);
ei_tab_add_index(57);
ei_tab_add_index(58);
ei_tab_add_index(59);
ei_tab_add_index(60);
ei_tab_add_index(61);
ei_tab_add_index(62);
ei_tab_add_index(63);
ei_tab_add_index(64);
ei_tab_add_index(65);
ei_tab_add_index(66);
ei_tab_add_index(67);
ei_tab_add_index(68);
ei_tab_add_index(69);
ei_tab_add_index(70);
ei_tab_add_index(71);
ei_tab_add_index(72);
ei_tab_add_index(73);
ei_tab_add_index(74);
ei_tab_add_index(75);
ei_tab_add_index(76);
ei_tab_add_index(77);
ei_tab_add_index(78);
ei_tab_add_index(79);
ei_tab_add_index(80);
ei_tab_add_index(81);
ei_tab_add_index(82);
ei_tab_add_index(83);
ei_end_tab();
}//|Man:JAP|Man:JapMod|Man:pCube26|Man:pCubeShape26
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapMod|Man:pCube8|Man:pCubeShape8, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapMod|Man:pCube8|Man:pCubeShape8
//### UV(map1), size=22
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapMod|Man:pCube8|Man:pCubeShape8" );
{
eiTag tag;
//vertex positions(required), size=84
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( 22.662687, -5.237044, -25.252466 );
ei_tab_add_vector( 22.677273, -5.242764, -24.508850 );
ei_tab_add_vector( 24.310680, -2.944726, -25.290215 );
ei_tab_add_vector( 24.310680, -2.944726, -25.290215 );
ei_tab_add_vector( 22.677273, -5.242764, -24.508850 );
ei_tab_add_vector( 24.327477, -2.951326, -24.434990 );
ei_tab_add_vector( 22.677273, -5.242764, -24.508850 );
ei_tab_add_vector( 23.194132, -5.644460, -24.522078 );
ei_tab_add_vector( 24.327477, -2.951326, -24.434990 );
ei_tab_add_vector( 24.327477, -2.951326, -24.434990 );
ei_tab_add_vector( 23.194132, -5.644460, -24.522078 );
ei_tab_add_vector( 25.077028, -3.533345, -24.454203 );
ei_tab_add_vector( 25.077028, -3.533345, -24.454203 );
ei_tab_add_vector( 23.194132, -5.644460, -24.522078 );
ei_tab_add_vector( 25.060232, -3.526745, -25.309427 );
ei_tab_add_vector( 25.060232, -3.526745, -25.309427 );
ei_tab_add_vector( 23.194132, -5.644460, -24.522078 );
ei_tab_add_vector( 23.179548, -5.638741, -25.265694 );
ei_tab_add_vector( 25.060232, -3.526745, -25.309427 );
ei_tab_add_vector( 23.179548, -5.638741, -25.265694 );
ei_tab_add_vector( 24.310680, -2.944726, -25.290215 );
ei_tab_add_vector( 24.310680, -2.944726, -25.290215 );
ei_tab_add_vector( 23.179548, -5.638741, -25.265694 );
ei_tab_add_vector( 22.662687, -5.237044, -25.252466 );
ei_tab_add_vector( 22.314072, -5.606476, -25.305086 );
ei_tab_add_vector( 22.905905, -6.066439, -25.320230 );
ei_tab_add_vector( 22.330877, -5.613066, -24.448294 );
ei_tab_add_vector( 22.330877, -5.613066, -24.448294 );
ei_tab_add_vector( 22.905905, -6.066439, -25.320230 );
ei_tab_add_vector( 22.922709, -6.073029, -24.463440 );
ei_tab_add_vector( 25.060232, -3.526745, -25.309427 );
ei_tab_add_vector( 24.310680, -2.944726, -25.290215 );
ei_tab_add_vector( 25.077028, -3.533345, -24.454203 );
ei_tab_add_vector( 25.077028, -3.533345, -24.454203 );
ei_tab_add_vector( 24.310680, -2.944726, -25.290215 );
ei_tab_add_vector( 24.327477, -2.951326, -24.434990 );
ei_tab_add_vector( 22.662687, -5.237044, -25.252466 );
ei_tab_add_vector( 23.179548, -5.638741, -25.265694 );
ei_tab_add_vector( 22.571650, -5.274970, -25.307585 );
ei_tab_add_vector( 22.571650, -5.274970, -25.307585 );
ei_tab_add_vector( 23.179548, -5.638741, -25.265694 );
ei_tab_add_vector( 23.163481, -5.734932, -25.322729 );
ei_tab_add_vector( 23.179548, -5.638741, -25.265694 );
ei_tab_add_vector( 23.194132, -5.644460, -24.522078 );
ei_tab_add_vector( 23.163481, -5.734932, -25.322729 );
ei_tab_add_vector( 23.163481, -5.734932, -25.322729 );
ei_tab_add_vector( 23.194132, -5.644460, -24.522078 );
ei_tab_add_vector( 23.180286, -5.741522, -24.465939 );
ei_tab_add_vector( 23.194132, -5.644460, -24.522078 );
ei_tab_add_vector( 22.677273, -5.242764, -24.508850 );
ei_tab_add_vector( 23.180286, -5.741522, -24.465939 );
ei_tab_add_vector( 23.180286, -5.741522, -24.465939 );
ei_tab_add_vector( 22.677273, -5.242764, -24.508850 );
ei_tab_add_vector( 22.588453, -5.281559, -24.450792 );
ei_tab_add_vector( 22.677273, -5.242764, -24.508850 );
ei_tab_add_vector( 22.662687, -5.237044, -25.252466 );
ei_tab_add_vector( 22.588453, -5.281559, -24.450792 );
ei_tab_add_vector( 22.588453, -5.281559, -24.450792 );
ei_tab_add_vector( 22.662687, -5.237044, -25.252466 );
ei_tab_add_vector( 22.571650, -5.274970, -25.307585 );
ei_tab_add_vector( 22.571650, -5.274970, -25.307585 );
ei_tab_add_vector( 23.163481, -5.734932, -25.322729 );
ei_tab_add_vector( 22.314072, -5.606476, -25.305086 );
ei_tab_add_vector( 22.314072, -5.606476, -25.305086 );
ei_tab_add_vector( 23.163481, -5.734932, -25.322729 );
ei_tab_add_vector( 22.905905, -6.066439, -25.320230 );
ei_tab_add_vector( 23.163481, -5.734932, -25.322729 );
ei_tab_add_vector( 23.180286, -5.741522, -24.465939 );
ei_tab_add_vector( 22.905905, -6.066439, -25.320230 );
ei_tab_add_vector( 22.905905, -6.066439, -25.320230 );
ei_tab_add_vector( 23.180286, -5.741522, -24.465939 );
ei_tab_add_vector( 22.922709, -6.073029, -24.463440 );
ei_tab_add_vector( 23.180286, -5.741522, -24.465939 );
ei_tab_add_vector( 22.588453, -5.281559, -24.450792 );
ei_tab_add_vector( 22.922709, -6.073029, -24.463440 );
ei_tab_add_vector( 22.922709, -6.073029, -24.463440 );
ei_tab_add_vector( 22.588453, -5.281559, -24.450792 );
ei_tab_add_vector( 22.330877, -5.613066, -24.448294 );
ei_tab_add_vector( 22.588453, -5.281559, -24.450792 );
ei_tab_add_vector( 22.571650, -5.274970, -25.307585 );
ei_tab_add_vector( 22.330877, -5.613066, -24.448294 );
ei_tab_add_vector( 22.330877, -5.613066, -24.448294 );
ei_tab_add_vector( 22.571650, -5.274970, -25.307585 );
ei_tab_add_vector( 22.314072, -5.606476, -25.305086 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_end_tab();
//### triangles(required) size=84
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_tab_add_index(36);
ei_tab_add_index(37);
ei_tab_add_index(38);
ei_tab_add_index(39);
ei_tab_add_index(40);
ei_tab_add_index(41);
ei_tab_add_index(42);
ei_tab_add_index(43);
ei_tab_add_index(44);
ei_tab_add_index(45);
ei_tab_add_index(46);
ei_tab_add_index(47);
ei_tab_add_index(48);
ei_tab_add_index(49);
ei_tab_add_index(50);
ei_tab_add_index(51);
ei_tab_add_index(52);
ei_tab_add_index(53);
ei_tab_add_index(54);
ei_tab_add_index(55);
ei_tab_add_index(56);
ei_tab_add_index(57);
ei_tab_add_index(58);
ei_tab_add_index(59);
ei_tab_add_index(60);
ei_tab_add_index(61);
ei_tab_add_index(62);
ei_tab_add_index(63);
ei_tab_add_index(64);
ei_tab_add_index(65);
ei_tab_add_index(66);
ei_tab_add_index(67);
ei_tab_add_index(68);
ei_tab_add_index(69);
ei_tab_add_index(70);
ei_tab_add_index(71);
ei_tab_add_index(72);
ei_tab_add_index(73);
ei_tab_add_index(74);
ei_tab_add_index(75);
ei_tab_add_index(76);
ei_tab_add_index(77);
ei_tab_add_index(78);
ei_tab_add_index(79);
ei_tab_add_index(80);
ei_tab_add_index(81);
ei_tab_add_index(82);
ei_tab_add_index(83);
ei_end_tab();
}//|Man:JAP|Man:JapMod|Man:pCube8|Man:pCubeShape8
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapMod|Man:pCube6|Man:pCubeShape6, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapMod|Man:pCube6|Man:pCubeShape6
//### UV(map1), size=60
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapMod|Man:pCube6|Man:pCubeShape6" );
{
eiTag tag;
//vertex positions(required), size=252
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( 10.525124, -0.946291, -11.419692 );
ei_tab_add_vector( 10.381073, -0.078267, -11.412995 );
ei_tab_add_vector( 10.436366, -0.893559, -11.818480 );
ei_tab_add_vector( 10.436366, -0.893559, -11.818480 );
ei_tab_add_vector( 10.381073, -0.078267, -11.412995 );
ei_tab_add_vector( 10.194363, -0.007769, -11.774280 );
ei_tab_add_vector( 10.779404, 1.660834, -11.818799 );
ei_tab_add_vector( 10.961019, 1.516245, -11.342170 );
ei_tab_add_vector( 11.082579, 1.439601, -11.890802 );
ei_tab_add_vector( 11.082579, 1.439601, -11.890802 );
ei_tab_add_vector( 10.961019, 1.516245, -11.342170 );
ei_tab_add_vector( 11.265656, 1.292701, -11.409509 );
ei_tab_add_vector( 11.144384, 1.394500, -12.140029 );
ei_tab_add_vector( 11.327702, 1.247172, -11.657745 );
ei_tab_add_vector( 10.771241, 0.312550, -12.086031 );
ei_tab_add_vector( 10.771241, 0.312550, -12.086031 );
ei_tab_add_vector( 11.327702, 1.247172, -11.657745 );
ei_tab_add_vector( 10.990987, 0.181733, -11.697904 );
ei_tab_add_vector( 11.061289, -0.694225, -11.409364 );
ei_tab_add_vector( 10.727083, -0.854410, -11.493964 );
ei_tab_add_vector( 11.023714, -0.759630, -11.877511 );
ei_tab_add_vector( 11.023714, -0.759630, -11.877511 );
ei_tab_add_vector( 10.727083, -0.854410, -11.493964 );
ei_tab_add_vector( 10.658383, -0.856432, -11.923226 );
ei_tab_add_vector( 10.487683, -0.762855, -10.384851 );
ei_tab_add_vector( 10.693546, -0.680646, -10.473931 );
ei_tab_add_vector( 10.700348, -0.264511, -10.458568 );
ei_tab_add_vector( 10.700348, -0.264511, -10.458568 );
ei_tab_add_vector( 10.693546, -0.680646, -10.473931 );
ei_tab_add_vector( 10.858494, -0.326248, -10.609821 );
ei_tab_add_vector( 11.023714, -0.759630, -11.877511 );
ei_tab_add_vector( 10.658383, -0.856432, -11.923226 );
ei_tab_add_vector( 10.727252, -0.220549, -11.988675 );
ei_tab_add_vector( 10.727252, -0.220549, -11.988675 );
ei_tab_add_vector( 10.658383, -0.856432, -11.923226 );
ei_tab_add_vector( 10.362848, -0.083053, -11.928698 );
ei_tab_add_vector( 10.552846, 0.503485, -11.382115 );
ei_tab_add_vector( 10.961019, 1.516245, -11.342170 );
ei_tab_add_vector( 10.333101, 0.634302, -11.770243 );
ei_tab_add_vector( 10.333101, 0.634302, -11.770243 );
ei_tab_add_vector( 10.961019, 1.516245, -11.342170 );
ei_tab_add_vector( 10.779404, 1.660834, -11.818799 );
ei_tab_add_vector( 10.771241, 0.312550, -12.086031 );
ei_tab_add_vector( 10.990987, 0.181733, -11.697904 );
ei_tab_add_vector( 10.727252, -0.220549, -11.988675 );
ei_tab_add_vector( 10.727252, -0.220549, -11.988675 );
ei_tab_add_vector( 10.990987, 0.181733, -11.697904 );
ei_tab_add_vector( 10.904777, -0.279229, -11.624677 );
ei_tab_add_vector( 11.222237, 0.012340, -10.461761 );
ei_tab_add_vector( 11.747262, 0.753182, -10.102404 );
ei_tab_add_vector( 11.032041, 0.152012, -10.339311 );
ei_tab_add_vector( 11.032041, 0.152012, -10.339311 );
ei_tab_add_vector( 11.747262, 0.753182, -10.102404 );
ei_tab_add_vector( 11.440280, 0.978700, -10.040863 );
ei_tab_add_vector( 10.771241, 0.312550, -12.086031 );
ei_tab_add_vector( 10.523297, 0.494630, -11.892694 );
ei_tab_add_vector( 11.144384, 1.394500, -12.140029 );
ei_tab_add_vector( 11.144384, 1.394500, -12.140029 );
ei_tab_add_vector( 10.523297, 0.494630, -11.892694 );
ei_tab_add_vector( 11.082579, 1.439601, -11.890802 );
ei_tab_add_vector( 10.381073, -0.078267, -11.412995 );
ei_tab_add_vector( 10.552846, 0.503485, -11.382115 );
ei_tab_add_vector( 10.194363, -0.007769, -11.774280 );
ei_tab_add_vector( 10.194363, -0.007769, -11.774280 );
ei_tab_add_vector( 10.552846, 0.503485, -11.382115 );
ei_tab_add_vector( 10.333101, 0.634302, -11.770243 );
ei_tab_add_vector( 10.700348, -0.264511, -10.458568 );
ei_tab_add_vector( 10.858494, -0.326248, -10.609821 );
ei_tab_add_vector( 11.032041, 0.152012, -10.339311 );
ei_tab_add_vector( 11.032041, 0.152012, -10.339311 );
ei_tab_add_vector( 10.858494, -0.326248, -10.609821 );
ei_tab_add_vector( 11.222237, 0.012340, -10.461761 );
ei_tab_add_vector( 10.727252, -0.220549, -11.988675 );
ei_tab_add_vector( 10.362848, -0.083053, -11.928698 );
ei_tab_add_vector( 10.771241, 0.312550, -12.086031 );
ei_tab_add_vector( 10.771241, 0.312550, -12.086031 );
ei_tab_add_vector( 10.362848, -0.083053, -11.928698 );
ei_tab_add_vector( 10.523297, 0.494630, -11.892694 );
ei_tab_add_vector( 10.727252, -0.220549, -11.988675 );
ei_tab_add_vector( 10.904777, -0.279229, -11.624677 );
ei_tab_add_vector( 11.023714, -0.759630, -11.877511 );
ei_tab_add_vector( 11.023714, -0.759630, -11.877511 );
ei_tab_add_vector( 10.904777, -0.279229, -11.624677 );
ei_tab_add_vector( 11.061289, -0.694225, -11.409364 );
ei_tab_add_vector( 11.275426, 1.248955, -10.548414 );
ei_tab_add_vector( 11.440280, 0.978700, -10.040863 );
ei_tab_add_vector( 11.582202, 1.023602, -10.610466 );
ei_tab_add_vector( 11.582202, 1.023602, -10.610466 );
ei_tab_add_vector( 11.440280, 0.978700, -10.040863 );
ei_tab_add_vector( 11.747262, 0.753182, -10.102404 );
ei_tab_add_vector( 11.644742, 0.977662, -10.857664 );
ei_tab_add_vector( 11.809844, 0.707208, -10.349498 );
ei_tab_add_vector( 11.248919, -0.037633, -11.047054 );
ei_tab_add_vector( 11.248919, -0.037633, -11.047054 );
ei_tab_add_vector( 11.809844, 0.707208, -10.349498 );
ei_tab_add_vector( 11.470181, -0.169740, -10.655099 );
ei_tab_add_vector( 11.021569, -0.375005, -11.030571 );
ei_tab_add_vector( 11.248919, -0.037633, -11.047054 );
ei_tab_add_vector( 11.199781, -0.434249, -10.663078 );
ei_tab_add_vector( 11.199781, -0.434249, -10.663078 );
ei_tab_add_vector( 11.248919, -0.037633, -11.047054 );
ei_tab_add_vector( 11.470181, -0.169740, -10.655099 );
ei_tab_add_vector( 11.021569, -0.375005, -11.030571 );
ei_tab_add_vector( 11.199781, -0.434249, -10.663078 );
ei_tab_add_vector( 10.994871, -0.588521, -10.863322 );
ei_tab_add_vector( 10.994871, -0.588521, -10.863322 );
ei_tab_add_vector( 11.199781, -0.434249, -10.663078 );
ei_tab_add_vector( 11.038191, -0.544074, -10.416205 );
ei_tab_add_vector( 10.664152, -0.750876, -10.947916 );
ei_tab_add_vector( 10.693546, -0.680646, -10.473931 );
ei_tab_add_vector( 10.464791, -0.844414, -10.873655 );
ei_tab_add_vector( 10.464791, -0.844414, -10.873655 );
ei_tab_add_vector( 10.693546, -0.680646, -10.473931 );
ei_tab_add_vector( 10.487683, -0.762855, -10.384851 );
ei_tab_add_vector( 10.464791, -0.844414, -10.873655 );
ei_tab_add_vector( 10.487683, -0.762855, -10.384851 );
ei_tab_add_vector( 10.512861, -0.193334, -10.823319 );
ei_tab_add_vector( 10.512861, -0.193334, -10.823319 );
ei_tab_add_vector( 10.487683, -0.762855, -10.384851 );
ei_tab_add_vector( 10.700348, -0.264511, -10.458568 );
ei_tab_add_vector( 10.512861, -0.193334, -10.823319 );
ei_tab_add_vector( 10.700348, -0.264511, -10.458568 );
ei_tab_add_vector( 10.810778, 0.284119, -10.731266 );
ei_tab_add_vector( 10.810778, 0.284119, -10.731266 );
ei_tab_add_vector( 10.700348, -0.264511, -10.458568 );
ei_tab_add_vector( 11.032041, 0.152012, -10.339311 );
ei_tab_add_vector( 10.810778, 0.284119, -10.731266 );
ei_tab_add_vector( 11.032041, 0.152012, -10.339311 );
ei_tab_add_vector( 11.275426, 1.248955, -10.548414 );
ei_tab_add_vector( 11.275426, 1.248955, -10.548414 );
ei_tab_add_vector( 11.032041, 0.152012, -10.339311 );
ei_tab_add_vector( 11.440280, 0.978700, -10.040863 );
ei_tab_add_vector( 10.961019, 1.516245, -11.342170 );
ei_tab_add_vector( 11.275426, 1.248955, -10.548414 );
ei_tab_add_vector( 11.265656, 1.292701, -11.409509 );
ei_tab_add_vector( 11.265656, 1.292701, -11.409509 );
ei_tab_add_vector( 11.275426, 1.248955, -10.548414 );
ei_tab_add_vector( 11.582202, 1.023602, -10.610466 );
ei_tab_add_vector( 11.327702, 1.247172, -11.657745 );
ei_tab_add_vector( 11.644742, 0.977662, -10.857664 );
ei_tab_add_vector( 10.990987, 0.181733, -11.697904 );
ei_tab_add_vector( 10.990987, 0.181733, -11.697904 );
ei_tab_add_vector( 11.644742, 0.977662, -10.857664 );
ei_tab_add_vector( 11.248919, -0.037633, -11.047054 );
ei_tab_add_vector( 10.990987, 0.181733, -11.697904 );
ei_tab_add_vector( 11.248919, -0.037633, -11.047054 );
ei_tab_add_vector( 10.904777, -0.279229, -11.624677 );
ei_tab_add_vector( 10.904777, -0.279229, -11.624677 );
ei_tab_add_vector( 11.248919, -0.037633, -11.047054 );
ei_tab_add_vector( 11.021569, -0.375005, -11.030571 );
ei_tab_add_vector( 10.904777, -0.279229, -11.624677 );
ei_tab_add_vector( 11.021569, -0.375005, -11.030571 );
ei_tab_add_vector( 11.061289, -0.694225, -11.409364 );
ei_tab_add_vector( 11.061289, -0.694225, -11.409364 );
ei_tab_add_vector( 11.021569, -0.375005, -11.030571 );
ei_tab_add_vector( 10.994871, -0.588521, -10.863322 );
ei_tab_add_vector( 10.727083, -0.854410, -11.493964 );
ei_tab_add_vector( 10.664152, -0.750876, -10.947916 );
ei_tab_add_vector( 10.525124, -0.946291, -11.419692 );
ei_tab_add_vector( 10.525124, -0.946291, -11.419692 );
ei_tab_add_vector( 10.664152, -0.750876, -10.947916 );
ei_tab_add_vector( 10.464791, -0.844414, -10.873655 );
ei_tab_add_vector( 10.525124, -0.946291, -11.419692 );
ei_tab_add_vector( 10.464791, -0.844414, -10.873655 );
ei_tab_add_vector( 10.381073, -0.078267, -11.412995 );
ei_tab_add_vector( 10.381073, -0.078267, -11.412995 );
ei_tab_add_vector( 10.464791, -0.844414, -10.873655 );
ei_tab_add_vector( 10.512861, -0.193334, -10.823319 );
ei_tab_add_vector( 10.552846, 0.503485, -11.382115 );
ei_tab_add_vector( 10.381073, -0.078267, -11.412995 );
ei_tab_add_vector( 10.810778, 0.284119, -10.731266 );
ei_tab_add_vector( 10.810778, 0.284119, -10.731266 );
ei_tab_add_vector( 10.381073, -0.078267, -11.412995 );
ei_tab_add_vector( 10.512861, -0.193334, -10.823319 );
ei_tab_add_vector( 10.961019, 1.516245, -11.342170 );
ei_tab_add_vector( 10.552846, 0.503485, -11.382115 );
ei_tab_add_vector( 11.275426, 1.248955, -10.548414 );
ei_tab_add_vector( 11.275426, 1.248955, -10.548414 );
ei_tab_add_vector( 10.552846, 0.503485, -11.382115 );
ei_tab_add_vector( 10.810778, 0.284119, -10.731266 );
ei_tab_add_vector( 11.265656, 1.292701, -11.409509 );
ei_tab_add_vector( 11.327702, 1.247172, -11.657745 );
ei_tab_add_vector( 11.082579, 1.439601, -11.890802 );
ei_tab_add_vector( 11.082579, 1.439601, -11.890802 );
ei_tab_add_vector( 11.327702, 1.247172, -11.657745 );
ei_tab_add_vector( 11.144384, 1.394500, -12.140029 );
ei_tab_add_vector( 10.658383, -0.856432, -11.923226 );
ei_tab_add_vector( 10.727083, -0.854410, -11.493964 );
ei_tab_add_vector( 10.436366, -0.893559, -11.818480 );
ei_tab_add_vector( 10.436366, -0.893559, -11.818480 );
ei_tab_add_vector( 10.727083, -0.854410, -11.493964 );
ei_tab_add_vector( 10.525124, -0.946291, -11.419692 );
ei_tab_add_vector( 10.693546, -0.680646, -10.473931 );
ei_tab_add_vector( 11.038191, -0.544074, -10.416205 );
ei_tab_add_vector( 10.858494, -0.326248, -10.609821 );
ei_tab_add_vector( 10.858494, -0.326248, -10.609821 );
ei_tab_add_vector( 11.038191, -0.544074, -10.416205 );
ei_tab_add_vector( 11.199781, -0.434249, -10.663078 );
ei_tab_add_vector( 10.658383, -0.856432, -11.923226 );
ei_tab_add_vector( 10.436366, -0.893559, -11.818480 );
ei_tab_add_vector( 10.362848, -0.083053, -11.928698 );
ei_tab_add_vector( 10.362848, -0.083053, -11.928698 );
ei_tab_add_vector( 10.436366, -0.893559, -11.818480 );
ei_tab_add_vector( 10.194363, -0.007769, -11.774280 );
ei_tab_add_vector( 11.747262, 0.753182, -10.102404 );
ei_tab_add_vector( 11.222237, 0.012340, -10.461761 );
ei_tab_add_vector( 11.809844, 0.707208, -10.349498 );
ei_tab_add_vector( 11.809844, 0.707208, -10.349498 );
ei_tab_add_vector( 11.222237, 0.012340, -10.461761 );
ei_tab_add_vector( 11.470181, -0.169740, -10.655099 );
ei_tab_add_vector( 10.523297, 0.494630, -11.892694 );
ei_tab_add_vector( 10.333101, 0.634302, -11.770243 );
ei_tab_add_vector( 11.082579, 1.439601, -11.890802 );
ei_tab_add_vector( 11.082579, 1.439601, -11.890802 );
ei_tab_add_vector( 10.333101, 0.634302, -11.770243 );
ei_tab_add_vector( 10.779404, 1.660834, -11.818799 );
ei_tab_add_vector( 10.858494, -0.326248, -10.609821 );
ei_tab_add_vector( 11.199781, -0.434249, -10.663078 );
ei_tab_add_vector( 11.222237, 0.012340, -10.461761 );
ei_tab_add_vector( 11.222237, 0.012340, -10.461761 );
ei_tab_add_vector( 11.199781, -0.434249, -10.663078 );
ei_tab_add_vector( 11.470181, -0.169740, -10.655099 );
ei_tab_add_vector( 10.362848, -0.083053, -11.928698 );
ei_tab_add_vector( 10.194363, -0.007769, -11.774280 );
ei_tab_add_vector( 10.523297, 0.494630, -11.892694 );
ei_tab_add_vector( 10.523297, 0.494630, -11.892694 );
ei_tab_add_vector( 10.194363, -0.007769, -11.774280 );
ei_tab_add_vector( 10.333101, 0.634302, -11.770243 );
ei_tab_add_vector( 11.747262, 0.753182, -10.102404 );
ei_tab_add_vector( 11.809844, 0.707208, -10.349498 );
ei_tab_add_vector( 11.582202, 1.023602, -10.610466 );
ei_tab_add_vector( 11.582202, 1.023602, -10.610466 );
ei_tab_add_vector( 11.809844, 0.707208, -10.349498 );
ei_tab_add_vector( 11.644742, 0.977662, -10.857664 );
ei_tab_add_vector( 10.664152, -0.750876, -10.947916 );
ei_tab_add_vector( 10.994871, -0.588521, -10.863322 );
ei_tab_add_vector( 10.693546, -0.680646, -10.473931 );
ei_tab_add_vector( 10.693546, -0.680646, -10.473931 );
ei_tab_add_vector( 10.994871, -0.588521, -10.863322 );
ei_tab_add_vector( 11.038191, -0.544074, -10.416205 );
ei_tab_add_vector( 11.582202, 1.023602, -10.610466 );
ei_tab_add_vector( 11.644742, 0.977662, -10.857664 );
ei_tab_add_vector( 11.265656, 1.292701, -11.409509 );
ei_tab_add_vector( 11.265656, 1.292701, -11.409509 );
ei_tab_add_vector( 11.644742, 0.977662, -10.857664 );
ei_tab_add_vector( 11.327702, 1.247172, -11.657745 );
ei_tab_add_vector( 10.727083, -0.854410, -11.493964 );
ei_tab_add_vector( 11.061289, -0.694225, -11.409364 );
ei_tab_add_vector( 10.664152, -0.750876, -10.947916 );
ei_tab_add_vector( 10.664152, -0.750876, -10.947916 );
ei_tab_add_vector( 11.061289, -0.694225, -11.409364 );
ei_tab_add_vector( 10.994871, -0.588521, -10.863322 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.437364, 0.000000 );
ei_tab_add_vector2( 0.437364, 0.068201 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.437364, 0.068201 );
ei_tab_add_vector2( 0.375000, 0.068201 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.437364, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.457665 );
ei_tab_add_vector2( 0.375000, 0.457665 );
ei_tab_add_vector2( 0.437364, 0.250000 );
ei_tab_add_vector2( 0.437364, 0.457698 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.437364, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.604753 );
ei_tab_add_vector2( 0.375000, 0.604753 );
ei_tab_add_vector2( 0.437364, 0.500000 );
ei_tab_add_vector2( 0.437364, 0.604753 );
ei_tab_add_vector2( 0.437364, 0.750000 );
ei_tab_add_vector2( 0.437364, 0.906085 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.437364, 0.906085 );
ei_tab_add_vector2( 0.375000, 0.906085 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.718915, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.068201 );
ei_tab_add_vector2( 0.625000, 0.068201 );
ei_tab_add_vector2( 0.718915, 0.000000 );
ei_tab_add_vector2( 0.705141, 0.068201 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.281085, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.068201 );
ei_tab_add_vector2( 0.125000, 0.068201 );
ei_tab_add_vector2( 0.281085, 0.000000 );
ei_tab_add_vector2( 0.294859, 0.068201 );
ei_tab_add_vector2( 0.437364, 0.145247 );
ei_tab_add_vector2( 0.437364, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.145247 );
ei_tab_add_vector2( 0.375000, 0.145247 );
ei_tab_add_vector2( 0.437364, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.604753 );
ei_tab_add_vector2( 0.437364, 0.604753 );
ei_tab_add_vector2( 0.375000, 0.681799 );
ei_tab_add_vector2( 0.375000, 0.681799 );
ei_tab_add_vector2( 0.437364, 0.604753 );
ei_tab_add_vector2( 0.437364, 0.681799 );
ei_tab_add_vector2( 0.733525, 0.145247 );
ei_tab_add_vector2( 0.832665, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.145247 );
ei_tab_add_vector2( 0.625000, 0.145247 );
ei_tab_add_vector2( 0.832665, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.145247 );
ei_tab_add_vector2( 0.266475, 0.145247 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.266475, 0.145247 );
ei_tab_add_vector2( 0.167335, 0.250000 );
ei_tab_add_vector2( 0.437364, 0.068201 );
ei_tab_add_vector2( 0.437364, 0.145247 );
ei_tab_add_vector2( 0.375000, 0.068201 );
ei_tab_add_vector2( 0.375000, 0.068201 );
ei_tab_add_vector2( 0.437364, 0.145247 );
ei_tab_add_vector2( 0.375000, 0.145247 );
ei_tab_add_vector2( 0.625000, 0.068201 );
ei_tab_add_vector2( 0.705141, 0.068201 );
ei_tab_add_vector2( 0.625000, 0.145247 );
ei_tab_add_vector2( 0.625000, 0.145247 );
ei_tab_add_vector2( 0.705141, 0.068201 );
ei_tab_add_vector2( 0.733525, 0.145247 );
ei_tab_add_vector2( 0.125000, 0.068201 );
ei_tab_add_vector2( 0.294859, 0.068201 );
ei_tab_add_vector2( 0.125000, 0.145247 );
ei_tab_add_vector2( 0.125000, 0.145247 );
ei_tab_add_vector2( 0.294859, 0.068201 );
ei_tab_add_vector2( 0.266475, 0.145247 );
ei_tab_add_vector2( 0.375000, 0.681799 );
ei_tab_add_vector2( 0.437364, 0.681799 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.437364, 0.681799 );
ei_tab_add_vector2( 0.437364, 0.750000 );
ei_tab_add_vector2( 0.561904, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.561904, 0.457665 );
ei_tab_add_vector2( 0.561904, 0.457665 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.457665 );
ei_tab_add_vector2( 0.561904, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.561904, 0.604753 );
ei_tab_add_vector2( 0.561904, 0.604753 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.604753 );
ei_tab_add_vector2( 0.561904, 0.681799 );
ei_tab_add_vector2( 0.561904, 0.604753 );
ei_tab_add_vector2( 0.625000, 0.681799 );
ei_tab_add_vector2( 0.625000, 0.681799 );
ei_tab_add_vector2( 0.561904, 0.604753 );
ei_tab_add_vector2( 0.625000, 0.604753 );
ei_tab_add_vector2( 0.561904, 0.681799 );
ei_tab_add_vector2( 0.625000, 0.681799 );
ei_tab_add_vector2( 0.561904, 0.750000 );
ei_tab_add_vector2( 0.561904, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.681799 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.561904, 0.906085 );
ei_tab_add_vector2( 0.625000, 0.906085 );
ei_tab_add_vector2( 0.561904, 1.000000 );
ei_tab_add_vector2( 0.561904, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.906085 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.561904, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.561904, 0.068201 );
ei_tab_add_vector2( 0.561904, 0.068201 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.068201 );
ei_tab_add_vector2( 0.561904, 0.068201 );
ei_tab_add_vector2( 0.625000, 0.068201 );
ei_tab_add_vector2( 0.561904, 0.145247 );
ei_tab_add_vector2( 0.561904, 0.145247 );
ei_tab_add_vector2( 0.625000, 0.068201 );
ei_tab_add_vector2( 0.625000, 0.145247 );
ei_tab_add_vector2( 0.561904, 0.145247 );
ei_tab_add_vector2( 0.625000, 0.145247 );
ei_tab_add_vector2( 0.561904, 0.250000 );
ei_tab_add_vector2( 0.561904, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.145247 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.437364, 0.250000 );
ei_tab_add_vector2( 0.561904, 0.250000 );
ei_tab_add_vector2( 0.437364, 0.457698 );
ei_tab_add_vector2( 0.437364, 0.457698 );
ei_tab_add_vector2( 0.561904, 0.250000 );
ei_tab_add_vector2( 0.561904, 0.457665 );
ei_tab_add_vector2( 0.437364, 0.500000 );
ei_tab_add_vector2( 0.561904, 0.500000 );
ei_tab_add_vector2( 0.437364, 0.604753 );
ei_tab_add_vector2( 0.437364, 0.604753 );
ei_tab_add_vector2( 0.561904, 0.500000 );
ei_tab_add_vector2( 0.561904, 0.604753 );
ei_tab_add_vector2( 0.437364, 0.604753 );
ei_tab_add_vector2( 0.561904, 0.604753 );
ei_tab_add_vector2( 0.437364, 0.681799 );
ei_tab_add_vector2( 0.437364, 0.681799 );
ei_tab_add_vector2( 0.561904, 0.604753 );
ei_tab_add_vector2( 0.561904, 0.681799 );
ei_tab_add_vector2( 0.437364, 0.681799 );
ei_tab_add_vector2( 0.561904, 0.681799 );
ei_tab_add_vector2( 0.437364, 0.750000 );
ei_tab_add_vector2( 0.437364, 0.750000 );
ei_tab_add_vector2( 0.561904, 0.681799 );
ei_tab_add_vector2( 0.561904, 0.750000 );
ei_tab_add_vector2( 0.437364, 0.906085 );
ei_tab_add_vector2( 0.561904, 0.906085 );
ei_tab_add_vector2( 0.437364, 1.000000 );
ei_tab_add_vector2( 0.437364, 1.000000 );
ei_tab_add_vector2( 0.561904, 0.906085 );
ei_tab_add_vector2( 0.561904, 1.000000 );
ei_tab_add_vector2( 0.437364, 0.000000 );
ei_tab_add_vector2( 0.561904, 0.000000 );
ei_tab_add_vector2( 0.437364, 0.068201 );
ei_tab_add_vector2( 0.437364, 0.068201 );
ei_tab_add_vector2( 0.561904, 0.000000 );
ei_tab_add_vector2( 0.561904, 0.068201 );
ei_tab_add_vector2( 0.437364, 0.145247 );
ei_tab_add_vector2( 0.437364, 0.068201 );
ei_tab_add_vector2( 0.561904, 0.145247 );
ei_tab_add_vector2( 0.561904, 0.145247 );
ei_tab_add_vector2( 0.437364, 0.068201 );
ei_tab_add_vector2( 0.561904, 0.068201 );
ei_tab_add_vector2( 0.437364, 0.250000 );
ei_tab_add_vector2( 0.437364, 0.145247 );
ei_tab_add_vector2( 0.561904, 0.250000 );
ei_tab_add_vector2( 0.561904, 0.250000 );
ei_tab_add_vector2( 0.437364, 0.145247 );
ei_tab_add_vector2( 0.561904, 0.145247 );
ei_tab_add_vector2( 0.437364, 0.457698 );
ei_tab_add_vector2( 0.437364, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.457665 );
ei_tab_add_vector2( 0.375000, 0.457665 );
ei_tab_add_vector2( 0.437364, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.906085 );
ei_tab_add_vector2( 0.437364, 0.906085 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.437364, 0.906085 );
ei_tab_add_vector2( 0.437364, 1.000000 );
ei_tab_add_vector2( 0.718915, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.705141, 0.068201 );
ei_tab_add_vector2( 0.705141, 0.068201 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.068201 );
ei_tab_add_vector2( 0.281085, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.294859, 0.068201 );
ei_tab_add_vector2( 0.294859, 0.068201 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.068201 );
ei_tab_add_vector2( 0.832665, 0.250000 );
ei_tab_add_vector2( 0.733525, 0.145247 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.733525, 0.145247 );
ei_tab_add_vector2( 0.875000, 0.145247 );
ei_tab_add_vector2( 0.266475, 0.145247 );
ei_tab_add_vector2( 0.375000, 0.145247 );
ei_tab_add_vector2( 0.167335, 0.250000 );
ei_tab_add_vector2( 0.167335, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.145247 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.705141, 0.068201 );
ei_tab_add_vector2( 0.875000, 0.068201 );
ei_tab_add_vector2( 0.733525, 0.145247 );
ei_tab_add_vector2( 0.733525, 0.145247 );
ei_tab_add_vector2( 0.875000, 0.068201 );
ei_tab_add_vector2( 0.875000, 0.145247 );
ei_tab_add_vector2( 0.294859, 0.068201 );
ei_tab_add_vector2( 0.375000, 0.068201 );
ei_tab_add_vector2( 0.266475, 0.145247 );
ei_tab_add_vector2( 0.266475, 0.145247 );
ei_tab_add_vector2( 0.375000, 0.068201 );
ei_tab_add_vector2( 0.375000, 0.145247 );
ei_tab_add_vector2( 0.625000, 0.457665 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.561904, 0.457665 );
ei_tab_add_vector2( 0.561904, 0.457665 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.561904, 0.500000 );
ei_tab_add_vector2( 0.561904, 0.906085 );
ei_tab_add_vector2( 0.561904, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.906085 );
ei_tab_add_vector2( 0.625000, 0.906085 );
ei_tab_add_vector2( 0.561904, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.561904, 0.457665 );
ei_tab_add_vector2( 0.561904, 0.500000 );
ei_tab_add_vector2( 0.437364, 0.457698 );
ei_tab_add_vector2( 0.437364, 0.457698 );
ei_tab_add_vector2( 0.561904, 0.500000 );
ei_tab_add_vector2( 0.437364, 0.500000 );
ei_tab_add_vector2( 0.437364, 0.906085 );
ei_tab_add_vector2( 0.437364, 0.750000 );
ei_tab_add_vector2( 0.561904, 0.906085 );
ei_tab_add_vector2( 0.561904, 0.906085 );
ei_tab_add_vector2( 0.437364, 0.750000 );
ei_tab_add_vector2( 0.561904, 0.750000 );
ei_end_tab();
//### triangles(required) size=252
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_tab_add_index(36);
ei_tab_add_index(37);
ei_tab_add_index(38);
ei_tab_add_index(39);
ei_tab_add_index(40);
ei_tab_add_index(41);
ei_tab_add_index(42);
ei_tab_add_index(43);
ei_tab_add_index(44);
ei_tab_add_index(45);
ei_tab_add_index(46);
ei_tab_add_index(47);
ei_tab_add_index(48);
ei_tab_add_index(49);
ei_tab_add_index(50);
ei_tab_add_index(51);
ei_tab_add_index(52);
ei_tab_add_index(53);
ei_tab_add_index(54);
ei_tab_add_index(55);
ei_tab_add_index(56);
ei_tab_add_index(57);
ei_tab_add_index(58);
ei_tab_add_index(59);
ei_tab_add_index(60);
ei_tab_add_index(61);
ei_tab_add_index(62);
ei_tab_add_index(63);
ei_tab_add_index(64);
ei_tab_add_index(65);
ei_tab_add_index(66);
ei_tab_add_index(67);
ei_tab_add_index(68);
ei_tab_add_index(69);
ei_tab_add_index(70);
ei_tab_add_index(71);
ei_tab_add_index(72);
ei_tab_add_index(73);
ei_tab_add_index(74);
ei_tab_add_index(75);
ei_tab_add_index(76);
ei_tab_add_index(77);
ei_tab_add_index(78);
ei_tab_add_index(79);
ei_tab_add_index(80);
ei_tab_add_index(81);
ei_tab_add_index(82);
ei_tab_add_index(83);
ei_tab_add_index(84);
ei_tab_add_index(85);
ei_tab_add_index(86);
ei_tab_add_index(87);
ei_tab_add_index(88);
ei_tab_add_index(89);
ei_tab_add_index(90);
ei_tab_add_index(91);
ei_tab_add_index(92);
ei_tab_add_index(93);
ei_tab_add_index(94);
ei_tab_add_index(95);
ei_tab_add_index(96);
ei_tab_add_index(97);
ei_tab_add_index(98);
ei_tab_add_index(99);
ei_tab_add_index(100);
ei_tab_add_index(101);
ei_tab_add_index(102);
ei_tab_add_index(103);
ei_tab_add_index(104);
ei_tab_add_index(105);
ei_tab_add_index(106);
ei_tab_add_index(107);
ei_tab_add_index(108);
ei_tab_add_index(109);
ei_tab_add_index(110);
ei_tab_add_index(111);
ei_tab_add_index(112);
ei_tab_add_index(113);
ei_tab_add_index(114);
ei_tab_add_index(115);
ei_tab_add_index(116);
ei_tab_add_index(117);
ei_tab_add_index(118);
ei_tab_add_index(119);
ei_tab_add_index(120);
ei_tab_add_index(121);
ei_tab_add_index(122);
ei_tab_add_index(123);
ei_tab_add_index(124);
ei_tab_add_index(125);
ei_tab_add_index(126);
ei_tab_add_index(127);
ei_tab_add_index(128);
ei_tab_add_index(129);
ei_tab_add_index(130);
ei_tab_add_index(131);
ei_tab_add_index(132);
ei_tab_add_index(133);
ei_tab_add_index(134);
ei_tab_add_index(135);
ei_tab_add_index(136);
ei_tab_add_index(137);
ei_tab_add_index(138);
ei_tab_add_index(139);
ei_tab_add_index(140);
ei_tab_add_index(141);
ei_tab_add_index(142);
ei_tab_add_index(143);
ei_tab_add_index(144);
ei_tab_add_index(145);
ei_tab_add_index(146);
ei_tab_add_index(147);
ei_tab_add_index(148);
ei_tab_add_index(149);
ei_tab_add_index(150);
ei_tab_add_index(151);
ei_tab_add_index(152);
ei_tab_add_index(153);
ei_tab_add_index(154);
ei_tab_add_index(155);
ei_tab_add_index(156);
ei_tab_add_index(157);
ei_tab_add_index(158);
ei_tab_add_index(159);
ei_tab_add_index(160);
ei_tab_add_index(161);
ei_tab_add_index(162);
ei_tab_add_index(163);
ei_tab_add_index(164);
ei_tab_add_index(165);
ei_tab_add_index(166);
ei_tab_add_index(167);
ei_tab_add_index(168);
ei_tab_add_index(169);
ei_tab_add_index(170);
ei_tab_add_index(171);
ei_tab_add_index(172);
ei_tab_add_index(173);
ei_tab_add_index(174);
ei_tab_add_index(175);
ei_tab_add_index(176);
ei_tab_add_index(177);
ei_tab_add_index(178);
ei_tab_add_index(179);
ei_tab_add_index(180);
ei_tab_add_index(181);
ei_tab_add_index(182);
ei_tab_add_index(183);
ei_tab_add_index(184);
ei_tab_add_index(185);
ei_tab_add_index(186);
ei_tab_add_index(187);
ei_tab_add_index(188);
ei_tab_add_index(189);
ei_tab_add_index(190);
ei_tab_add_index(191);
ei_tab_add_index(192);
ei_tab_add_index(193);
ei_tab_add_index(194);
ei_tab_add_index(195);
ei_tab_add_index(196);
ei_tab_add_index(197);
ei_tab_add_index(198);
ei_tab_add_index(199);
ei_tab_add_index(200);
ei_tab_add_index(201);
ei_tab_add_index(202);
ei_tab_add_index(203);
ei_tab_add_index(204);
ei_tab_add_index(205);
ei_tab_add_index(206);
ei_tab_add_index(207);
ei_tab_add_index(208);
ei_tab_add_index(209);
ei_tab_add_index(210);
ei_tab_add_index(211);
ei_tab_add_index(212);
ei_tab_add_index(213);
ei_tab_add_index(214);
ei_tab_add_index(215);
ei_tab_add_index(216);
ei_tab_add_index(217);
ei_tab_add_index(218);
ei_tab_add_index(219);
ei_tab_add_index(220);
ei_tab_add_index(221);
ei_tab_add_index(222);
ei_tab_add_index(223);
ei_tab_add_index(224);
ei_tab_add_index(225);
ei_tab_add_index(226);
ei_tab_add_index(227);
ei_tab_add_index(228);
ei_tab_add_index(229);
ei_tab_add_index(230);
ei_tab_add_index(231);
ei_tab_add_index(232);
ei_tab_add_index(233);
ei_tab_add_index(234);
ei_tab_add_index(235);
ei_tab_add_index(236);
ei_tab_add_index(237);
ei_tab_add_index(238);
ei_tab_add_index(239);
ei_tab_add_index(240);
ei_tab_add_index(241);
ei_tab_add_index(242);
ei_tab_add_index(243);
ei_tab_add_index(244);
ei_tab_add_index(245);
ei_tab_add_index(246);
ei_tab_add_index(247);
ei_tab_add_index(248);
ei_tab_add_index(249);
ei_tab_add_index(250);
ei_tab_add_index(251);
ei_end_tab();
}//|Man:JAP|Man:JapMod|Man:pCube6|Man:pCubeShape6
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:ground|Man:groundShape, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:ground|Man:groundShape
//### UV(map1), size=28
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:ground|Man:groundShape" );
{
eiTag tag;
//vertex positions(required), size=72
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -33.988514, -4.938445, -0.782172 );
ei_tab_add_vector( -33.988514, -4.755286, -1.545085 );
ei_tab_add_vector( 33.988514, -4.938445, -0.782172 );
ei_tab_add_vector( 33.988514, -4.938445, -0.782172 );
ei_tab_add_vector( -33.988514, -4.755286, -1.545085 );
ei_tab_add_vector( 33.988514, -4.755286, -1.545085 );
ei_tab_add_vector( -33.988514, -4.755286, -1.545085 );
ei_tab_add_vector( -33.988514, -4.455036, -2.269953 );
ei_tab_add_vector( 33.988514, -4.755286, -1.545085 );
ei_tab_add_vector( 33.988514, -4.755286, -1.545085 );
ei_tab_add_vector( -33.988514, -4.455036, -2.269953 );
ei_tab_add_vector( 33.988514, -4.455036, -2.269953 );
ei_tab_add_vector( -33.988514, -4.455036, -2.269953 );
ei_tab_add_vector( -33.988514, -4.045088, -2.938927 );
ei_tab_add_vector( 33.988514, -4.455036, -2.269953 );
ei_tab_add_vector( 33.988514, -4.455036, -2.269953 );
ei_tab_add_vector( -33.988514, -4.045088, -2.938927 );
ei_tab_add_vector( 33.988514, -4.045088, -2.938927 );
ei_tab_add_vector( -33.988514, -4.045088, -2.938927 );
ei_tab_add_vector( -33.988514, -3.535537, -3.535535 );
ei_tab_add_vector( 33.988514, -4.045088, -2.938927 );
ei_tab_add_vector( 33.988514, -4.045088, -2.938927 );
ei_tab_add_vector( -33.988514, -3.535537, -3.535535 );
ei_tab_add_vector( 33.988514, -3.535537, -3.535535 );
ei_tab_add_vector( -33.988514, -3.535537, -3.535535 );
ei_tab_add_vector( -33.988514, -2.938929, -4.045087 );
ei_tab_add_vector( 33.988514, -3.535537, -3.535535 );
ei_tab_add_vector( 33.988514, -3.535537, -3.535535 );
ei_tab_add_vector( -33.988514, -2.938929, -4.045087 );
ei_tab_add_vector( 33.988514, -2.938929, -4.045087 );
ei_tab_add_vector( -33.988514, -2.938929, -4.045087 );
ei_tab_add_vector( -33.988514, -2.269955, -4.455035 );
ei_tab_add_vector( 33.988514, -2.938929, -4.045087 );
ei_tab_add_vector( 33.988514, -2.938929, -4.045087 );
ei_tab_add_vector( -33.988514, -2.269955, -4.455035 );
ei_tab_add_vector( 33.988514, -2.269955, -4.455035 );
ei_tab_add_vector( -33.988514, -2.269955, -4.455035 );
ei_tab_add_vector( -33.988514, -1.545087, -4.755285 );
ei_tab_add_vector( 33.988514, -2.269955, -4.455035 );
ei_tab_add_vector( 33.988514, -2.269955, -4.455035 );
ei_tab_add_vector( -33.988514, -1.545087, -4.755285 );
ei_tab_add_vector( 33.988514, -1.545087, -4.755285 );
ei_tab_add_vector( -33.988514, -1.545087, -4.755285 );
ei_tab_add_vector( -33.988514, -0.782174, -4.938445 );
ei_tab_add_vector( 33.988514, -1.545087, -4.755285 );
ei_tab_add_vector( 33.988514, -1.545087, -4.755285 );
ei_tab_add_vector( -33.988514, -0.782174, -4.938445 );
ei_tab_add_vector( 33.988514, -0.782174, -4.938445 );
ei_tab_add_vector( -33.988514, -0.782174, -4.938445 );
ei_tab_add_vector( -33.988514, -0.000001, -5.000003 );
ei_tab_add_vector( 33.988514, -0.782174, -4.938445 );
ei_tab_add_vector( 33.988514, -0.782174, -4.938445 );
ei_tab_add_vector( -33.988514, -0.000001, -5.000003 );
ei_tab_add_vector( 33.988514, -0.000001, -5.000003 );
ei_tab_add_vector( -33.988514, -0.000001, -5.000003 );
ei_tab_add_vector( -33.988514, 32.780155, -5.000037 );
ei_tab_add_vector( 33.988514, -0.000001, -5.000003 );
ei_tab_add_vector( 33.988514, -0.000001, -5.000003 );
ei_tab_add_vector( -33.988514, 32.780155, -5.000037 );
ei_tab_add_vector( 33.988514, 32.780155, -5.000037 );
ei_tab_add_vector( -33.988514, -5.000000, 55.349792 );
ei_tab_add_vector( -33.988514, -5.000000, 0.000000 );
ei_tab_add_vector( 33.988514, -5.000000, 55.349792 );
ei_tab_add_vector( 33.988514, -5.000000, 55.349792 );
ei_tab_add_vector( -33.988514, -5.000000, 0.000000 );
ei_tab_add_vector( 33.988514, -5.000000, 0.000000 );
ei_tab_add_vector( -33.988514, -5.000000, 0.000000 );
ei_tab_add_vector( -33.988514, -4.938445, -0.782172 );
ei_tab_add_vector( 33.988514, -5.000000, 0.000000 );
ei_tab_add_vector( 33.988514, -5.000000, 0.000000 );
ei_tab_add_vector( -33.988514, -4.938445, -0.782172 );
ei_tab_add_vector( 33.988514, -4.938445, -0.782172 );
ei_end_tab();
//### N ###(optional)
tag = eiNULL_TAG;
ei_declare("N", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_variable("N", &tag);
ei_tab_add_vector( 0.000000, -0.987689, -0.156432 );
ei_tab_add_vector( 0.000000, -0.951057, -0.309017 );
ei_tab_add_vector( 0.000000, -0.987689, -0.156432 );
ei_tab_add_vector( 0.000000, -0.987689, -0.156432 );
ei_tab_add_vector( 0.000000, -0.951057, -0.309017 );
ei_tab_add_vector( 0.000000, -0.951057, -0.309017 );
ei_tab_add_vector( 0.000000, -0.951057, -0.309017 );
ei_tab_add_vector( 0.000000, -0.891007, -0.453990 );
ei_tab_add_vector( 0.000000, -0.951057, -0.309017 );
ei_tab_add_vector( 0.000000, -0.951057, -0.309017 );
ei_tab_add_vector( 0.000000, -0.891007, -0.453990 );
ei_tab_add_vector( 0.000000, -0.891007, -0.453990 );
ei_tab_add_vector( 0.000000, -0.891007, -0.453990 );
ei_tab_add_vector( 0.000000, -0.809017, -0.587785 );
ei_tab_add_vector( 0.000000, -0.891007, -0.453990 );
ei_tab_add_vector( 0.000000, -0.891007, -0.453990 );
ei_tab_add_vector( 0.000000, -0.809017, -0.587785 );
ei_tab_add_vector( 0.000000, -0.809017, -0.587785 );
ei_tab_add_vector( 0.000000, -0.809017, -0.587785 );
ei_tab_add_vector( 0.000000, -0.707107, -0.707107 );
ei_tab_add_vector( 0.000000, -0.809017, -0.587785 );
ei_tab_add_vector( 0.000000, -0.809017, -0.587785 );
ei_tab_add_vector( 0.000000, -0.707107, -0.707107 );
ei_tab_add_vector( 0.000000, -0.707107, -0.707107 );
ei_tab_add_vector( 0.000000, -0.707107, -0.707107 );
ei_tab_add_vector( 0.000000, -0.587785, -0.809017 );
ei_tab_add_vector( 0.000000, -0.707107, -0.707107 );
ei_tab_add_vector( 0.000000, -0.707107, -0.707107 );
ei_tab_add_vector( 0.000000, -0.587785, -0.809017 );
ei_tab_add_vector( 0.000000, -0.587785, -0.809017 );
ei_tab_add_vector( 0.000000, -0.587785, -0.809017 );
ei_tab_add_vector( 0.000000, -0.453991, -0.891006 );
ei_tab_add_vector( 0.000000, -0.587785, -0.809017 );
ei_tab_add_vector( 0.000000, -0.587785, -0.809017 );
ei_tab_add_vector( 0.000000, -0.453991, -0.891006 );
ei_tab_add_vector( 0.000000, -0.453991, -0.891006 );
ei_tab_add_vector( 0.000000, -0.453991, -0.891006 );
ei_tab_add_vector( 0.000000, -0.309017, -0.951056 );
ei_tab_add_vector( 0.000000, -0.453991, -0.891006 );
ei_tab_add_vector( 0.000000, -0.453991, -0.891006 );
ei_tab_add_vector( 0.000000, -0.309017, -0.951056 );
ei_tab_add_vector( 0.000000, -0.309017, -0.951056 );
ei_tab_add_vector( 0.000000, -0.309017, -0.951056 );
ei_tab_add_vector( 0.000000, -0.156434, -0.987688 );
ei_tab_add_vector( 0.000000, -0.309017, -0.951056 );
ei_tab_add_vector( 0.000000, -0.309017, -0.951056 );
ei_tab_add_vector( 0.000000, -0.156434, -0.987688 );
ei_tab_add_vector( 0.000000, -0.156434, -0.987688 );
ei_tab_add_vector( 0.000000, -0.156434, -0.987688 );
ei_tab_add_vector( 0.000000, -0.039260, -0.999229 );
ei_tab_add_vector( 0.000000, -0.156434, -0.987688 );
ei_tab_add_vector( 0.000000, -0.156434, -0.987688 );
ei_tab_add_vector( 0.000000, -0.039260, -0.999229 );
ei_tab_add_vector( 0.000000, -0.039260, -0.999229 );
ei_tab_add_vector( 0.000000, -0.039260, -0.999229 );
ei_tab_add_vector( 0.000000, -0.000001, -1.000000 );
ei_tab_add_vector( 0.000000, -0.039260, -0.999229 );
ei_tab_add_vector( 0.000000, -0.039260, -0.999229 );
ei_tab_add_vector( 0.000000, -0.000001, -1.000000 );
ei_tab_add_vector( 0.000000, -0.000001, -1.000000 );
ei_tab_add_vector( 0.000000, -1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, -0.999229, -0.039258 );
ei_tab_add_vector( 0.000000, -1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, -1.000000, 0.000000 );
ei_tab_add_vector( 0.000000, -0.999229, -0.039258 );
ei_tab_add_vector( 0.000000, -0.999229, -0.039258 );
ei_tab_add_vector( 0.000000, -0.999229, -0.039258 );
ei_tab_add_vector( 0.000000, -0.987689, -0.156432 );
ei_tab_add_vector( 0.000000, -0.999229, -0.039258 );
ei_tab_add_vector( 0.000000, -0.999229, -0.039258 );
ei_tab_add_vector( 0.000000, -0.987689, -0.156432 );
ei_tab_add_vector( 0.000000, -0.987689, -0.156432 );
ei_end_tab();
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.312500 );
ei_tab_add_vector2( 0.381250, 0.312500 );
ei_tab_add_vector2( 0.375000, 0.688440 );
ei_tab_add_vector2( 0.375000, 0.688440 );
ei_tab_add_vector2( 0.381250, 0.312500 );
ei_tab_add_vector2( 0.381250, 0.688440 );
ei_tab_add_vector2( 0.381250, 0.312500 );
ei_tab_add_vector2( 0.387500, 0.312500 );
ei_tab_add_vector2( 0.381250, 0.688440 );
ei_tab_add_vector2( 0.381250, 0.688440 );
ei_tab_add_vector2( 0.387500, 0.312500 );
ei_tab_add_vector2( 0.387500, 0.688440 );
ei_tab_add_vector2( 0.387500, 0.312500 );
ei_tab_add_vector2( 0.393750, 0.312500 );
ei_tab_add_vector2( 0.387500, 0.688440 );
ei_tab_add_vector2( 0.387500, 0.688440 );
ei_tab_add_vector2( 0.393750, 0.312500 );
ei_tab_add_vector2( 0.393750, 0.688440 );
ei_tab_add_vector2( 0.393750, 0.312500 );
ei_tab_add_vector2( 0.400000, 0.312500 );
ei_tab_add_vector2( 0.393750, 0.688440 );
ei_tab_add_vector2( 0.393750, 0.688440 );
ei_tab_add_vector2( 0.400000, 0.312500 );
ei_tab_add_vector2( 0.400000, 0.688440 );
ei_tab_add_vector2( 0.400000, 0.312500 );
ei_tab_add_vector2( 0.406250, 0.312500 );
ei_tab_add_vector2( 0.400000, 0.688440 );
ei_tab_add_vector2( 0.400000, 0.688440 );
ei_tab_add_vector2( 0.406250, 0.312500 );
ei_tab_add_vector2( 0.406250, 0.688440 );
ei_tab_add_vector2( 0.406250, 0.312500 );
ei_tab_add_vector2( 0.412500, 0.312500 );
ei_tab_add_vector2( 0.406250, 0.688440 );
ei_tab_add_vector2( 0.406250, 0.688440 );
ei_tab_add_vector2( 0.412500, 0.312500 );
ei_tab_add_vector2( 0.412500, 0.688440 );
ei_tab_add_vector2( 0.412500, 0.312500 );
ei_tab_add_vector2( 0.418750, 0.312500 );
ei_tab_add_vector2( 0.412500, 0.688440 );
ei_tab_add_vector2( 0.412500, 0.688440 );
ei_tab_add_vector2( 0.418750, 0.312500 );
ei_tab_add_vector2( 0.418750, 0.688440 );
ei_tab_add_vector2( 0.418750, 0.312500 );
ei_tab_add_vector2( 0.425000, 0.312500 );
ei_tab_add_vector2( 0.418750, 0.688440 );
ei_tab_add_vector2( 0.418750, 0.688440 );
ei_tab_add_vector2( 0.425000, 0.312500 );
ei_tab_add_vector2( 0.425000, 0.688440 );
ei_tab_add_vector2( 0.425000, 0.312500 );
ei_tab_add_vector2( 0.431250, 0.312500 );
ei_tab_add_vector2( 0.425000, 0.688440 );
ei_tab_add_vector2( 0.425000, 0.688440 );
ei_tab_add_vector2( 0.431250, 0.312500 );
ei_tab_add_vector2( 0.431250, 0.688440 );
ei_tab_add_vector2( 0.431250, 0.312500 );
ei_tab_add_vector2( 0.437500, 0.312500 );
ei_tab_add_vector2( 0.431250, 0.688440 );
ei_tab_add_vector2( 0.431250, 0.688440 );
ei_tab_add_vector2( 0.437500, 0.312500 );
ei_tab_add_vector2( 0.437500, 0.688440 );
ei_tab_add_vector2( 0.612500, 0.312500 );
ei_tab_add_vector2( 0.618750, 0.312500 );
ei_tab_add_vector2( 0.612500, 0.688440 );
ei_tab_add_vector2( 0.612500, 0.688440 );
ei_tab_add_vector2( 0.618750, 0.312500 );
ei_tab_add_vector2( 0.618750, 0.688440 );
ei_tab_add_vector2( 0.618750, 0.312500 );
ei_tab_add_vector2( 0.625000, 0.312500 );
ei_tab_add_vector2( 0.618750, 0.688440 );
ei_tab_add_vector2( 0.618750, 0.688440 );
ei_tab_add_vector2( 0.625000, 0.312500 );
ei_tab_add_vector2( 0.625000, 0.688440 );
ei_end_tab();
//### triangles(required) size=72
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_tab_add_index(36);
ei_tab_add_index(37);
ei_tab_add_index(38);
ei_tab_add_index(39);
ei_tab_add_index(40);
ei_tab_add_index(41);
ei_tab_add_index(42);
ei_tab_add_index(43);
ei_tab_add_index(44);
ei_tab_add_index(45);
ei_tab_add_index(46);
ei_tab_add_index(47);
ei_tab_add_index(48);
ei_tab_add_index(49);
ei_tab_add_index(50);
ei_tab_add_index(51);
ei_tab_add_index(52);
ei_tab_add_index(53);
ei_tab_add_index(54);
ei_tab_add_index(55);
ei_tab_add_index(56);
ei_tab_add_index(57);
ei_tab_add_index(58);
ei_tab_add_index(59);
ei_tab_add_index(60);
ei_tab_add_index(61);
ei_tab_add_index(62);
ei_tab_add_index(63);
ei_tab_add_index(64);
ei_tab_add_index(65);
ei_tab_add_index(66);
ei_tab_add_index(67);
ei_tab_add_index(68);
ei_tab_add_index(69);
ei_tab_add_index(70);
ei_tab_add_index(71);
ei_end_tab();
}//|Man:JAP|Man:ground|Man:groundShape
ei_end_object();



//locator |Man:JAP|Man:JapCnt|Man:HipsEff|Man:hikFloorContactMarker1
ei_object( "poly", "|Man:JAP|Man:JapCnt|Man:HipsEff|Man:hikFloorContactMarker1" );
{
eiTag tag;
//vertex positions(required), size=0
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
//### triangles(required) size=0
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_end_tab();
}//|Man:JAP|Man:JapCnt|Man:HipsEff|Man:hikFloorContactMarker1
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:leftHandPinky3|Man:pCube11|Man:pCubeShape11, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:leftHandPinky3|Man:pCube11|Man:pCubeShape11
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:leftHandPinky3|Man:pCube11|Man:pCubeShape11" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:leftHandPinky3|Man:pCube11|Man:pCubeShape11
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:pCube10|Man:pCubeShape10, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:pCube10|Man:pCubeShape10
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:pCube10|Man:pCubeShape10" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:pCube10|Man:pCubeShape10
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:pCube9|Man:pCubeShape9, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:pCube9|Man:pCubeShape9
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:pCube9|Man:pCubeShape9" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:pCube9|Man:pCubeShape9
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:leftHandRing3|Man:pCube12|Man:pCubeShape12, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:leftHandRing3|Man:pCube12|Man:pCubeShape12
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:leftHandRing3|Man:pCube12|Man:pCubeShape12" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:leftHandRing3|Man:pCube12|Man:pCubeShape12
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:pCube13|Man:pCubeShape13, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:pCube13|Man:pCubeShape13
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:pCube13|Man:pCubeShape13" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:pCube13|Man:pCubeShape13
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:pCube14|Man:pCubeShape14, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:pCube14|Man:pCubeShape14
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:pCube14|Man:pCubeShape14" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:pCube14|Man:pCubeShape14
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:leftHandMiddle3|Man:pCube15|Man:pCubeShape15, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:leftHandMiddle3|Man:pCube15|Man:pCubeShape15
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:leftHandMiddle3|Man:pCube15|Man:pCubeShape15" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:leftHandMiddle3|Man:pCube15|Man:pCubeShape15
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:pCube16|Man:pCubeShape16, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:pCube16|Man:pCubeShape16
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:pCube16|Man:pCubeShape16" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:pCube16|Man:pCubeShape16
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:pCube17|Man:pCubeShape17, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:pCube17|Man:pCubeShape17
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:pCube17|Man:pCubeShape17" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:pCube17|Man:pCubeShape17
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:leftHandIndex3|Man:pCube18|Man:pCubeShape18, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:leftHandIndex3|Man:pCube18|Man:pCubeShape18
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:leftHandIndex3|Man:pCube18|Man:pCubeShape18" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:leftHandIndex3|Man:pCube18|Man:pCubeShape18
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:pCube19|Man:pCubeShape19, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:pCube19|Man:pCubeShape19
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:pCube19|Man:pCubeShape19" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:pCube19|Man:pCubeShape19
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:pCube20|Man:pCubeShape20, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:pCube20|Man:pCubeShape20
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:pCube20|Man:pCubeShape20" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:pCube20|Man:pCubeShape20
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:leftHandThumb3|Man:pCube21|Man:pCubeShape21, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:leftHandThumb3|Man:pCube21|Man:pCubeShape21
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:leftHandThumb3|Man:pCube21|Man:pCubeShape21" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:leftHandThumb3|Man:pCube21|Man:pCubeShape21
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:pCube22|Man:pCubeShape22, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:pCube22|Man:pCubeShape22
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:pCube22|Man:pCubeShape22" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:pCube22|Man:pCubeShape22
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:pCube23|Man:pCubeShape23, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:pCube23|Man:pCubeShape23
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:pCube23|Man:pCubeShape23" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:pCube23|Man:pCubeShape23
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:pCube25|Man:pCubeShape25, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:pCube25|Man:pCubeShape25
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:pCube25|Man:pCubeShape25" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.842577, -0.103886, 0.495231 );
ei_tab_add_vector( 0.592331, -0.226678, 0.842749 );
ei_tab_add_vector( -0.874852, 1.800299, 0.490883 );
ei_tab_add_vector( -0.874852, 1.800299, 0.490883 );
ei_tab_add_vector( 0.592331, -0.226678, 0.842749 );
ei_tab_add_vector( 0.451170, 2.045688, 0.835796 );
ei_tab_add_vector( 0.451170, 2.045688, 0.835796 );
ei_tab_add_vector( 0.402481, 2.021255, -0.564898 );
ei_tab_add_vector( -0.874852, 1.800299, 0.490883 );
ei_tab_add_vector( -0.874852, 1.800299, 0.490883 );
ei_tab_add_vector( 0.402481, 2.021255, -0.564898 );
ei_tab_add_vector( -0.874852, 1.800299, -0.463370 );
ei_tab_add_vector( -0.874852, 1.800299, -0.463370 );
ei_tab_add_vector( 0.402481, 2.021255, -0.564898 );
ei_tab_add_vector( -0.842577, -0.103886, -0.459021 );
ei_tab_add_vector( -0.842577, -0.103886, -0.459021 );
ei_tab_add_vector( 0.402481, 2.021255, -0.564898 );
ei_tab_add_vector( 0.543641, -0.251111, -0.557944 );
ei_tab_add_vector( -0.842577, -0.103886, -0.459021 );
ei_tab_add_vector( 0.543641, -0.251111, -0.557944 );
ei_tab_add_vector( -0.842577, -0.103886, 0.495231 );
ei_tab_add_vector( -0.842577, -0.103886, 0.495231 );
ei_tab_add_vector( 0.543641, -0.251111, -0.557944 );
ei_tab_add_vector( 0.592331, -0.226678, 0.842749 );
ei_tab_add_vector( 0.543641, -0.251111, -0.557944 );
ei_tab_add_vector( 0.402481, 2.021255, -0.564898 );
ei_tab_add_vector( 0.592331, -0.226678, 0.842749 );
ei_tab_add_vector( 0.592331, -0.226678, 0.842749 );
ei_tab_add_vector( 0.402481, 2.021255, -0.564898 );
ei_tab_add_vector( 0.451170, 2.045688, 0.835796 );
ei_tab_add_vector( -0.842577, -0.103886, 0.495231 );
ei_tab_add_vector( -0.874852, 1.800299, 0.490883 );
ei_tab_add_vector( -0.842577, -0.103886, -0.459021 );
ei_tab_add_vector( -0.842577, -0.103886, -0.459021 );
ei_tab_add_vector( -0.874852, 1.800299, 0.490883 );
ei_tab_add_vector( -0.874852, 1.800299, -0.463370 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:pCube25|Man:pCubeShape25
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:pCube24|Man:pCubeShape24, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:pCube24|Man:pCubeShape24
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:pCube24|Man:pCubeShape24" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.363216, -0.409017, 1.125326 );
ei_tab_add_vector( 0.552514, -0.408728, 1.278148 );
ei_tab_add_vector( -0.363216, 0.483861, 1.125326 );
ei_tab_add_vector( -0.363216, 0.483861, 1.125326 );
ei_tab_add_vector( 0.552514, -0.408728, 1.278148 );
ei_tab_add_vector( 0.552514, 0.520245, 1.278148 );
ei_tab_add_vector( -0.363216, 0.483861, 1.125326 );
ei_tab_add_vector( 0.552514, 0.520245, 1.278148 );
ei_tab_add_vector( -0.474810, 0.447864, -0.486425 );
ei_tab_add_vector( -0.474810, 0.447864, -0.486425 );
ei_tab_add_vector( 0.552514, 0.520245, 1.278148 );
ei_tab_add_vector( 0.448163, 0.480184, -1.243307 );
ei_tab_add_vector( 0.448163, 0.480184, -1.243307 );
ei_tab_add_vector( 0.448163, -0.448789, -1.243307 );
ei_tab_add_vector( -0.474810, 0.447864, -0.486425 );
ei_tab_add_vector( -0.474810, 0.447864, -0.486425 );
ei_tab_add_vector( 0.448163, -0.448789, -1.243307 );
ei_tab_add_vector( -0.474810, -0.445014, -0.486425 );
ei_tab_add_vector( 0.448163, -0.448789, -1.243307 );
ei_tab_add_vector( 0.552514, -0.408728, 1.278148 );
ei_tab_add_vector( -0.474810, -0.445014, -0.486425 );
ei_tab_add_vector( -0.474810, -0.445014, -0.486425 );
ei_tab_add_vector( 0.552514, -0.408728, 1.278148 );
ei_tab_add_vector( -0.363216, -0.409017, 1.125326 );
ei_tab_add_vector( 0.448163, -0.448789, -1.243307 );
ei_tab_add_vector( 0.448163, 0.480184, -1.243307 );
ei_tab_add_vector( 0.552514, -0.408728, 1.278148 );
ei_tab_add_vector( 0.552514, -0.408728, 1.278148 );
ei_tab_add_vector( 0.448163, 0.480184, -1.243307 );
ei_tab_add_vector( 0.552514, 0.520245, 1.278148 );
ei_tab_add_vector( -0.474810, -0.445014, -0.486425 );
ei_tab_add_vector( -0.363216, -0.409017, 1.125326 );
ei_tab_add_vector( -0.474810, 0.447864, -0.486425 );
ei_tab_add_vector( -0.474810, 0.447864, -0.486425 );
ei_tab_add_vector( -0.363216, -0.409017, 1.125326 );
ei_tab_add_vector( -0.363216, 0.483861, 1.125326 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:pCube24|Man:pCubeShape24
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:pCube7|Man:pCubeShape7, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:pCube7|Man:pCubeShape7
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:pCube7|Man:pCubeShape7" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 2.765728, -0.424468, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 2.765728, -0.424468, 0.500000 );
ei_tab_add_vector( 2.765728, 0.424468, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 2.765728, 0.424468, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 2.765728, 0.424468, 0.500000 );
ei_tab_add_vector( 2.765728, 0.424468, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 2.765728, 0.424468, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 2.765728, 0.424468, -0.500000 );
ei_tab_add_vector( 2.765728, -0.424468, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 2.765728, -0.424468, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 2.765728, -0.424468, -0.500000 );
ei_tab_add_vector( 2.765728, -0.424468, 0.500000 );
ei_tab_add_vector( 2.765728, -0.424468, 0.500000 );
ei_tab_add_vector( 2.765728, -0.424468, -0.500000 );
ei_tab_add_vector( 2.765728, 0.424468, 0.500000 );
ei_tab_add_vector( 2.765728, 0.424468, 0.500000 );
ei_tab_add_vector( 2.765728, -0.424468, -0.500000 );
ei_tab_add_vector( 2.765728, 0.424468, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:pCube7|Man:pCubeShape7
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:rightHandPinky3|Man:pCube11|Man:pCubeShape11, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:rightHandPinky3|Man:pCube11|Man:pCubeShape11
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:rightHandPinky3|Man:pCube11|Man:pCubeShape11" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:rightHandPinky3|Man:pCube11|Man:pCubeShape11
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:pCube10|Man:pCubeShape10, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:pCube10|Man:pCubeShape10
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:pCube10|Man:pCubeShape10" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:pCube10|Man:pCubeShape10
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:pCube9|Man:pCubeShape9, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:pCube9|Man:pCubeShape9
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:pCube9|Man:pCubeShape9" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:pCube9|Man:pCubeShape9
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:rightHandRing3|Man:pCube12|Man:pCubeShape12, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:rightHandRing3|Man:pCube12|Man:pCubeShape12
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:rightHandRing3|Man:pCube12|Man:pCubeShape12" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:rightHandRing3|Man:pCube12|Man:pCubeShape12
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:pCube13|Man:pCubeShape13, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:pCube13|Man:pCubeShape13
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:pCube13|Man:pCubeShape13" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:pCube13|Man:pCubeShape13
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:pCube14|Man:pCubeShape14, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:pCube14|Man:pCubeShape14
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:pCube14|Man:pCubeShape14" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:pCube14|Man:pCubeShape14
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:rightHandMiddle3|Man:pCube15|Man:pCubeShape15, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:rightHandMiddle3|Man:pCube15|Man:pCubeShape15
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:rightHandMiddle3|Man:pCube15|Man:pCubeShape15" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:rightHandMiddle3|Man:pCube15|Man:pCubeShape15
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:pCube16|Man:pCubeShape16, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:pCube16|Man:pCubeShape16
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:pCube16|Man:pCubeShape16" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:pCube16|Man:pCubeShape16
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:pCube17|Man:pCubeShape17, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:pCube17|Man:pCubeShape17
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:pCube17|Man:pCubeShape17" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:pCube17|Man:pCubeShape17
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:rightHandIndex3|Man:pCube18|Man:pCubeShape18, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:rightHandIndex3|Man:pCube18|Man:pCubeShape18
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:rightHandIndex3|Man:pCube18|Man:pCubeShape18" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:rightHandIndex3|Man:pCube18|Man:pCubeShape18
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:pCube19|Man:pCubeShape19, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:pCube19|Man:pCubeShape19
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:pCube19|Man:pCubeShape19" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:pCube19|Man:pCubeShape19
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:pCube20|Man:pCubeShape20, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:pCube20|Man:pCubeShape20
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:pCube20|Man:pCubeShape20" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:pCube20|Man:pCubeShape20
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:rightHandThumb3|Man:pCube21|Man:pCubeShape21, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:rightHandThumb3|Man:pCube21|Man:pCubeShape21
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:rightHandThumb3|Man:pCube21|Man:pCubeShape21" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:rightHandThumb3|Man:pCube21|Man:pCubeShape21
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:pCube22|Man:pCubeShape22, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:pCube22|Man:pCubeShape22
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:pCube22|Man:pCubeShape22" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:pCube22|Man:pCubeShape22
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:pCube23|Man:pCubeShape23, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:pCube23|Man:pCubeShape23
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:pCube23|Man:pCubeShape23" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:pCube23|Man:pCubeShape23
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube25|Man:pCubeShape25, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube25|Man:pCubeShape25
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube25|Man:pCubeShape25" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.842577, -0.103886, 0.495231 );
ei_tab_add_vector( -0.874852, 1.800299, 0.490883 );
ei_tab_add_vector( 0.592331, -0.226678, 0.842749 );
ei_tab_add_vector( 0.592331, -0.226678, 0.842749 );
ei_tab_add_vector( -0.874852, 1.800299, 0.490883 );
ei_tab_add_vector( 0.451170, 2.045688, 0.835796 );
ei_tab_add_vector( -0.874852, 1.800299, -0.463370 );
ei_tab_add_vector( 0.402481, 2.021255, -0.564898 );
ei_tab_add_vector( -0.874852, 1.800299, 0.490883 );
ei_tab_add_vector( -0.874852, 1.800299, 0.490883 );
ei_tab_add_vector( 0.402481, 2.021255, -0.564898 );
ei_tab_add_vector( 0.451170, 2.045688, 0.835796 );
ei_tab_add_vector( -0.874852, 1.800299, -0.463370 );
ei_tab_add_vector( -0.842577, -0.103886, -0.459021 );
ei_tab_add_vector( 0.402481, 2.021255, -0.564898 );
ei_tab_add_vector( 0.402481, 2.021255, -0.564898 );
ei_tab_add_vector( -0.842577, -0.103886, -0.459021 );
ei_tab_add_vector( 0.543641, -0.251111, -0.557944 );
ei_tab_add_vector( -0.842577, -0.103886, -0.459021 );
ei_tab_add_vector( -0.842577, -0.103886, 0.495231 );
ei_tab_add_vector( 0.543641, -0.251111, -0.557944 );
ei_tab_add_vector( 0.543641, -0.251111, -0.557944 );
ei_tab_add_vector( -0.842577, -0.103886, 0.495231 );
ei_tab_add_vector( 0.592331, -0.226678, 0.842749 );
ei_tab_add_vector( 0.451170, 2.045688, 0.835796 );
ei_tab_add_vector( 0.402481, 2.021255, -0.564898 );
ei_tab_add_vector( 0.592331, -0.226678, 0.842749 );
ei_tab_add_vector( 0.592331, -0.226678, 0.842749 );
ei_tab_add_vector( 0.402481, 2.021255, -0.564898 );
ei_tab_add_vector( 0.543641, -0.251111, -0.557944 );
ei_tab_add_vector( -0.874852, 1.800299, -0.463370 );
ei_tab_add_vector( -0.874852, 1.800299, 0.490883 );
ei_tab_add_vector( -0.842577, -0.103886, -0.459021 );
ei_tab_add_vector( -0.842577, -0.103886, -0.459021 );
ei_tab_add_vector( -0.874852, 1.800299, 0.490883 );
ei_tab_add_vector( -0.842577, -0.103886, 0.495231 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube25|Man:pCubeShape25
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube24|Man:pCubeShape24, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube24|Man:pCubeShape24
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube24|Man:pCubeShape24" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.363216, -0.409017, 1.125326 );
ei_tab_add_vector( -0.363216, 0.483861, 1.125326 );
ei_tab_add_vector( 0.552514, -0.408728, 1.278148 );
ei_tab_add_vector( 0.552514, -0.408728, 1.278148 );
ei_tab_add_vector( -0.363216, 0.483861, 1.125326 );
ei_tab_add_vector( 0.552514, 0.520245, 1.278148 );
ei_tab_add_vector( -0.363216, 0.483861, 1.125326 );
ei_tab_add_vector( -0.474810, 0.447864, -0.486425 );
ei_tab_add_vector( 0.552514, 0.520245, 1.278148 );
ei_tab_add_vector( 0.552514, 0.520245, 1.278148 );
ei_tab_add_vector( -0.474810, 0.447864, -0.486425 );
ei_tab_add_vector( 0.448163, 0.480184, -1.243307 );
ei_tab_add_vector( -0.474810, -0.445014, -0.486425 );
ei_tab_add_vector( 0.448163, -0.448789, -1.243307 );
ei_tab_add_vector( -0.474810, 0.447864, -0.486425 );
ei_tab_add_vector( -0.474810, 0.447864, -0.486425 );
ei_tab_add_vector( 0.448163, -0.448789, -1.243307 );
ei_tab_add_vector( 0.448163, 0.480184, -1.243307 );
ei_tab_add_vector( -0.363216, -0.409017, 1.125326 );
ei_tab_add_vector( 0.552514, -0.408728, 1.278148 );
ei_tab_add_vector( -0.474810, -0.445014, -0.486425 );
ei_tab_add_vector( -0.474810, -0.445014, -0.486425 );
ei_tab_add_vector( 0.552514, -0.408728, 1.278148 );
ei_tab_add_vector( 0.448163, -0.448789, -1.243307 );
ei_tab_add_vector( 0.552514, 0.520245, 1.278148 );
ei_tab_add_vector( 0.448163, 0.480184, -1.243307 );
ei_tab_add_vector( 0.552514, -0.408728, 1.278148 );
ei_tab_add_vector( 0.552514, -0.408728, 1.278148 );
ei_tab_add_vector( 0.448163, 0.480184, -1.243307 );
ei_tab_add_vector( 0.448163, -0.448789, -1.243307 );
ei_tab_add_vector( -0.474810, -0.445014, -0.486425 );
ei_tab_add_vector( -0.474810, 0.447864, -0.486425 );
ei_tab_add_vector( -0.363216, -0.409017, 1.125326 );
ei_tab_add_vector( -0.363216, -0.409017, 1.125326 );
ei_tab_add_vector( -0.474810, 0.447864, -0.486425 );
ei_tab_add_vector( -0.363216, 0.483861, 1.125326 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube24|Man:pCubeShape24
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:pCube7|Man:pCubeShape7, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:pCube7|Man:pCubeShape7
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:pCube7|Man:pCubeShape7" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 2.765728, -0.424468, 0.500000 );
ei_tab_add_vector( 2.765728, -0.424468, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( 2.765728, 0.424468, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 2.765728, 0.424468, 0.500000 );
ei_tab_add_vector( 2.765728, 0.424468, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( 2.765728, 0.424468, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 2.765728, 0.424468, -0.500000 );
ei_tab_add_vector( 2.765728, 0.424468, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( 2.765728, -0.424468, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 2.765728, -0.424468, -0.500000 );
ei_tab_add_vector( 2.765728, -0.424468, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 2.765728, -0.424468, 0.500000 );
ei_tab_add_vector( 2.765728, -0.424468, 0.500000 );
ei_tab_add_vector( 2.765728, 0.424468, 0.500000 );
ei_tab_add_vector( 2.765728, -0.424468, -0.500000 );
ei_tab_add_vector( 2.765728, -0.424468, -0.500000 );
ei_tab_add_vector( 2.765728, 0.424468, 0.500000 );
ei_tab_add_vector( 2.765728, 0.424468, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, -0.500000 );
ei_tab_add_vector( -0.500000, 0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:pCube7|Man:pCubeShape7
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:joint86|Man:leftFootIndex1|Man:pCube4|Man:pCubeShape4, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:joint86|Man:leftFootIndex1|Man:pCube4|Man:pCubeShape4
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:joint86|Man:leftFootIndex1|Man:pCube4|Man:pCubeShape4" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.386265, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.030812, 0.429225 );
ei_tab_add_vector( -0.500000, -0.030812, 0.429225 );
ei_tab_add_vector( 0.386265, -0.500000, 0.500000 );
ei_tab_add_vector( 0.386265, -0.030812, 0.429225 );
ei_tab_add_vector( -0.500000, -0.030812, 0.429225 );
ei_tab_add_vector( 0.386265, -0.030812, 0.429225 );
ei_tab_add_vector( -0.500000, 0.013423, -0.544234 );
ei_tab_add_vector( -0.500000, 0.013423, -0.544234 );
ei_tab_add_vector( 0.386265, -0.030812, 0.429225 );
ei_tab_add_vector( 0.386265, 0.013423, -0.544234 );
ei_tab_add_vector( -0.500000, 0.013423, -0.544234 );
ei_tab_add_vector( 0.386265, 0.013423, -0.544234 );
ei_tab_add_vector( -0.500000, -0.500000, -0.553081 );
ei_tab_add_vector( -0.500000, -0.500000, -0.553081 );
ei_tab_add_vector( 0.386265, 0.013423, -0.544234 );
ei_tab_add_vector( 0.386265, -0.500000, -0.553081 );
ei_tab_add_vector( -0.500000, -0.500000, -0.553081 );
ei_tab_add_vector( 0.386265, -0.500000, -0.553081 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.386265, -0.500000, -0.553081 );
ei_tab_add_vector( 0.386265, -0.500000, 0.500000 );
ei_tab_add_vector( 0.386265, -0.500000, 0.500000 );
ei_tab_add_vector( 0.386265, -0.500000, -0.553081 );
ei_tab_add_vector( 0.386265, -0.030812, 0.429225 );
ei_tab_add_vector( 0.386265, -0.030812, 0.429225 );
ei_tab_add_vector( 0.386265, -0.500000, -0.553081 );
ei_tab_add_vector( 0.386265, 0.013423, -0.544234 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.030812, 0.429225 );
ei_tab_add_vector( -0.500000, -0.500000, -0.553081 );
ei_tab_add_vector( -0.500000, -0.500000, -0.553081 );
ei_tab_add_vector( -0.500000, -0.030812, 0.429225 );
ei_tab_add_vector( -0.500000, 0.013423, -0.544234 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:joint86|Man:leftFootIndex1|Man:pCube4|Man:pCubeShape4
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:pCube3|Man:pCubeShape3, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:pCube3|Man:pCubeShape3
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:pCube3|Man:pCubeShape3" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.386265, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.048810, 0.517694 );
ei_tab_add_vector( -0.500000, 0.048810, 0.517694 );
ei_tab_add_vector( 0.386265, -0.500000, 0.500000 );
ei_tab_add_vector( 0.386265, 0.048810, 0.517694 );
ei_tab_add_vector( -0.500000, 0.048810, 0.517694 );
ei_tab_add_vector( 0.386265, 0.048810, 0.517694 );
ei_tab_add_vector( -0.500000, 0.517694, -0.376144 );
ei_tab_add_vector( -0.500000, 0.517694, -0.376144 );
ei_tab_add_vector( 0.386265, 0.048810, 0.517694 );
ei_tab_add_vector( 0.386265, 0.517694, -0.376144 );
ei_tab_add_vector( -0.500000, 0.517694, -0.376144 );
ei_tab_add_vector( 0.386265, 0.517694, -0.376144 );
ei_tab_add_vector( -0.500000, -0.500000, -0.898109 );
ei_tab_add_vector( -0.500000, -0.500000, -0.898109 );
ei_tab_add_vector( 0.386265, 0.517694, -0.376144 );
ei_tab_add_vector( 0.386265, -0.500000, -0.898109 );
ei_tab_add_vector( -0.500000, -0.500000, -0.898109 );
ei_tab_add_vector( 0.386265, -0.500000, -0.898109 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.386265, -0.500000, -0.898109 );
ei_tab_add_vector( 0.386265, -0.500000, 0.500000 );
ei_tab_add_vector( 0.386265, -0.500000, -0.898109 );
ei_tab_add_vector( 0.386265, 0.517694, -0.376144 );
ei_tab_add_vector( 0.386265, -0.500000, 0.500000 );
ei_tab_add_vector( 0.386265, -0.500000, 0.500000 );
ei_tab_add_vector( 0.386265, 0.517694, -0.376144 );
ei_tab_add_vector( 0.386265, 0.048810, 0.517694 );
ei_tab_add_vector( -0.500000, -0.500000, -0.898109 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.517694, -0.376144 );
ei_tab_add_vector( -0.500000, 0.517694, -0.376144 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.048810, 0.517694 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:pCube3|Man:pCubeShape3
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:pCube2|Man:pCubeShape2, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:pCube2|Man:pCubeShape2
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:pCube2|Man:pCubeShape2" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -2.607306, 0.596936 );
ei_tab_add_vector( 0.500000, -2.607306, 0.596936 );
ei_tab_add_vector( -0.465926, 0.535387, 0.553081 );
ei_tab_add_vector( -0.465926, 0.535387, 0.553081 );
ei_tab_add_vector( 0.500000, -2.607306, 0.596936 );
ei_tab_add_vector( 0.500000, 0.535387, 0.553081 );
ei_tab_add_vector( -0.465926, 0.535387, 0.553081 );
ei_tab_add_vector( 0.500000, 0.535387, 0.553081 );
ei_tab_add_vector( -0.465926, 0.500000, -0.324443 );
ei_tab_add_vector( -0.465926, 0.500000, -0.324443 );
ei_tab_add_vector( 0.500000, 0.535387, 0.553081 );
ei_tab_add_vector( 0.500000, 0.500000, -0.324443 );
ei_tab_add_vector( 0.500000, 0.500000, -0.324443 );
ei_tab_add_vector( 0.500000, -3.111374, -0.635710 );
ei_tab_add_vector( -0.465926, 0.500000, -0.324443 );
ei_tab_add_vector( -0.465926, 0.500000, -0.324443 );
ei_tab_add_vector( 0.500000, -3.111374, -0.635710 );
ei_tab_add_vector( -0.500000, -3.111374, -0.635710 );
ei_tab_add_vector( -0.500000, -3.111374, -0.635710 );
ei_tab_add_vector( 0.500000, -3.111374, -0.635710 );
ei_tab_add_vector( -0.500000, -2.607306, 0.596936 );
ei_tab_add_vector( -0.500000, -2.607306, 0.596936 );
ei_tab_add_vector( 0.500000, -3.111374, -0.635710 );
ei_tab_add_vector( 0.500000, -2.607306, 0.596936 );
ei_tab_add_vector( 0.500000, -3.111374, -0.635710 );
ei_tab_add_vector( 0.500000, 0.500000, -0.324443 );
ei_tab_add_vector( 0.500000, -2.607306, 0.596936 );
ei_tab_add_vector( 0.500000, -2.607306, 0.596936 );
ei_tab_add_vector( 0.500000, 0.500000, -0.324443 );
ei_tab_add_vector( 0.500000, 0.535387, 0.553081 );
ei_tab_add_vector( -0.500000, -3.111374, -0.635710 );
ei_tab_add_vector( -0.500000, -2.607306, 0.596936 );
ei_tab_add_vector( -0.465926, 0.500000, -0.324443 );
ei_tab_add_vector( -0.465926, 0.500000, -0.324443 );
ei_tab_add_vector( -0.500000, -2.607306, 0.596936 );
ei_tab_add_vector( -0.465926, 0.535387, 0.553081 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:pCube2|Man:pCubeShape2
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:pCube1|Man:pCubeShape1, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:pCube1|Man:pCubeShape1
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:pCube1|Man:pCubeShape1" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -3.072600, 0.364290 );
ei_tab_add_vector( 0.500000, -3.072600, 0.364290 );
ei_tab_add_vector( -0.738519, 0.089472, 0.547888 );
ei_tab_add_vector( -0.738519, 0.089472, 0.547888 );
ei_tab_add_vector( 0.500000, -3.072600, 0.364290 );
ei_tab_add_vector( 0.500000, 0.471238, 0.547888 );
ei_tab_add_vector( -0.738519, 0.089472, 0.547888 );
ei_tab_add_vector( 0.500000, 0.471238, 0.547888 );
ei_tab_add_vector( -0.738519, 0.089472, -0.835213 );
ei_tab_add_vector( -0.738519, 0.089472, -0.835213 );
ei_tab_add_vector( 0.500000, 0.471238, 0.547888 );
ei_tab_add_vector( 0.500000, 0.471238, -0.835213 );
ei_tab_add_vector( 0.500000, 0.471238, -0.835213 );
ei_tab_add_vector( 0.500000, -3.072600, -0.473657 );
ei_tab_add_vector( -0.738519, 0.089472, -0.835213 );
ei_tab_add_vector( -0.738519, 0.089472, -0.835213 );
ei_tab_add_vector( 0.500000, -3.072600, -0.473657 );
ei_tab_add_vector( -0.500000, -3.072600, -0.473657 );
ei_tab_add_vector( -0.500000, -3.072600, -0.473657 );
ei_tab_add_vector( 0.500000, -3.072600, -0.473657 );
ei_tab_add_vector( -0.500000, -3.072600, 0.364290 );
ei_tab_add_vector( -0.500000, -3.072600, 0.364290 );
ei_tab_add_vector( 0.500000, -3.072600, -0.473657 );
ei_tab_add_vector( 0.500000, -3.072600, 0.364290 );
ei_tab_add_vector( 0.500000, -3.072600, 0.364290 );
ei_tab_add_vector( 0.500000, -3.072600, -0.473657 );
ei_tab_add_vector( 0.500000, 0.471238, 0.547888 );
ei_tab_add_vector( 0.500000, 0.471238, 0.547888 );
ei_tab_add_vector( 0.500000, -3.072600, -0.473657 );
ei_tab_add_vector( 0.500000, 0.471238, -0.835213 );
ei_tab_add_vector( -0.500000, -3.072600, 0.364290 );
ei_tab_add_vector( -0.738519, 0.089472, 0.547888 );
ei_tab_add_vector( -0.500000, -3.072600, -0.473657 );
ei_tab_add_vector( -0.500000, -3.072600, -0.473657 );
ei_tab_add_vector( -0.738519, 0.089472, 0.547888 );
ei_tab_add_vector( -0.738519, 0.089472, -0.835213 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:pCube1|Man:pCubeShape1
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:joint87|Man:rightFootIndex1|Man:pCube4|Man:pCubeShape4, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:joint87|Man:rightFootIndex1|Man:pCube4|Man:pCubeShape4
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:joint87|Man:rightFootIndex1|Man:pCube4|Man:pCubeShape4" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.030812, 0.429225 );
ei_tab_add_vector( 0.386265, -0.500000, 0.500000 );
ei_tab_add_vector( 0.386265, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.030812, 0.429225 );
ei_tab_add_vector( 0.386265, -0.030812, 0.429225 );
ei_tab_add_vector( -0.500000, -0.030812, 0.429225 );
ei_tab_add_vector( -0.500000, 0.013423, -0.544234 );
ei_tab_add_vector( 0.386265, -0.030812, 0.429225 );
ei_tab_add_vector( 0.386265, -0.030812, 0.429225 );
ei_tab_add_vector( -0.500000, 0.013423, -0.544234 );
ei_tab_add_vector( 0.386265, 0.013423, -0.544234 );
ei_tab_add_vector( -0.500000, 0.013423, -0.544234 );
ei_tab_add_vector( -0.500000, -0.500000, -0.553081 );
ei_tab_add_vector( 0.386265, 0.013423, -0.544234 );
ei_tab_add_vector( 0.386265, 0.013423, -0.544234 );
ei_tab_add_vector( -0.500000, -0.500000, -0.553081 );
ei_tab_add_vector( 0.386265, -0.500000, -0.553081 );
ei_tab_add_vector( -0.500000, -0.500000, -0.553081 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.386265, -0.500000, -0.553081 );
ei_tab_add_vector( 0.386265, -0.500000, -0.553081 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.386265, -0.500000, 0.500000 );
ei_tab_add_vector( 0.386265, -0.500000, 0.500000 );
ei_tab_add_vector( 0.386265, -0.030812, 0.429225 );
ei_tab_add_vector( 0.386265, -0.500000, -0.553081 );
ei_tab_add_vector( 0.386265, -0.500000, -0.553081 );
ei_tab_add_vector( 0.386265, -0.030812, 0.429225 );
ei_tab_add_vector( 0.386265, 0.013423, -0.544234 );
ei_tab_add_vector( -0.500000, 0.013423, -0.544234 );
ei_tab_add_vector( -0.500000, -0.030812, 0.429225 );
ei_tab_add_vector( -0.500000, -0.500000, -0.553081 );
ei_tab_add_vector( -0.500000, -0.500000, -0.553081 );
ei_tab_add_vector( -0.500000, -0.030812, 0.429225 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:joint87|Man:rightFootIndex1|Man:pCube4|Man:pCubeShape4
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:pCube3|Man:pCubeShape3, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:pCube3|Man:pCubeShape3
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:pCube3|Man:pCubeShape3" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.048810, 0.517694 );
ei_tab_add_vector( 0.386265, -0.500000, 0.500000 );
ei_tab_add_vector( 0.386265, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.048810, 0.517694 );
ei_tab_add_vector( 0.386265, 0.048810, 0.517694 );
ei_tab_add_vector( -0.500000, 0.048810, 0.517694 );
ei_tab_add_vector( -0.500000, 0.517694, -0.376144 );
ei_tab_add_vector( 0.386265, 0.048810, 0.517694 );
ei_tab_add_vector( 0.386265, 0.048810, 0.517694 );
ei_tab_add_vector( -0.500000, 0.517694, -0.376144 );
ei_tab_add_vector( 0.386265, 0.517694, -0.376144 );
ei_tab_add_vector( -0.500000, 0.517694, -0.376144 );
ei_tab_add_vector( -0.500000, -0.500000, -0.898109 );
ei_tab_add_vector( 0.386265, 0.517694, -0.376144 );
ei_tab_add_vector( 0.386265, 0.517694, -0.376144 );
ei_tab_add_vector( -0.500000, -0.500000, -0.898109 );
ei_tab_add_vector( 0.386265, -0.500000, -0.898109 );
ei_tab_add_vector( -0.500000, -0.500000, -0.898109 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.386265, -0.500000, -0.898109 );
ei_tab_add_vector( 0.386265, -0.500000, -0.898109 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( 0.386265, -0.500000, 0.500000 );
ei_tab_add_vector( 0.386265, 0.048810, 0.517694 );
ei_tab_add_vector( 0.386265, 0.517694, -0.376144 );
ei_tab_add_vector( 0.386265, -0.500000, 0.500000 );
ei_tab_add_vector( 0.386265, -0.500000, 0.500000 );
ei_tab_add_vector( 0.386265, 0.517694, -0.376144 );
ei_tab_add_vector( 0.386265, -0.500000, -0.898109 );
ei_tab_add_vector( -0.500000, -0.500000, -0.898109 );
ei_tab_add_vector( -0.500000, 0.517694, -0.376144 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, -0.500000, 0.500000 );
ei_tab_add_vector( -0.500000, 0.517694, -0.376144 );
ei_tab_add_vector( -0.500000, 0.048810, 0.517694 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:pCube3|Man:pCubeShape3
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:pCube2|Man:pCubeShape2, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:pCube2|Man:pCubeShape2
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:pCube2|Man:pCubeShape2" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -2.607306, 0.596936 );
ei_tab_add_vector( -0.465926, 0.535387, 0.553081 );
ei_tab_add_vector( 0.500000, -2.607306, 0.596936 );
ei_tab_add_vector( 0.500000, -2.607306, 0.596936 );
ei_tab_add_vector( -0.465926, 0.535387, 0.553081 );
ei_tab_add_vector( 0.500000, 0.535387, 0.553081 );
ei_tab_add_vector( -0.465926, 0.535387, 0.553081 );
ei_tab_add_vector( -0.465926, 0.500000, -0.324443 );
ei_tab_add_vector( 0.500000, 0.535387, 0.553081 );
ei_tab_add_vector( 0.500000, 0.535387, 0.553081 );
ei_tab_add_vector( -0.465926, 0.500000, -0.324443 );
ei_tab_add_vector( 0.500000, 0.500000, -0.324443 );
ei_tab_add_vector( -0.500000, -3.111374, -0.635710 );
ei_tab_add_vector( 0.500000, -3.111374, -0.635710 );
ei_tab_add_vector( -0.465926, 0.500000, -0.324443 );
ei_tab_add_vector( -0.465926, 0.500000, -0.324443 );
ei_tab_add_vector( 0.500000, -3.111374, -0.635710 );
ei_tab_add_vector( 0.500000, 0.500000, -0.324443 );
ei_tab_add_vector( -0.500000, -3.111374, -0.635710 );
ei_tab_add_vector( -0.500000, -2.607306, 0.596936 );
ei_tab_add_vector( 0.500000, -3.111374, -0.635710 );
ei_tab_add_vector( 0.500000, -3.111374, -0.635710 );
ei_tab_add_vector( -0.500000, -2.607306, 0.596936 );
ei_tab_add_vector( 0.500000, -2.607306, 0.596936 );
ei_tab_add_vector( 0.500000, 0.535387, 0.553081 );
ei_tab_add_vector( 0.500000, 0.500000, -0.324443 );
ei_tab_add_vector( 0.500000, -2.607306, 0.596936 );
ei_tab_add_vector( 0.500000, -2.607306, 0.596936 );
ei_tab_add_vector( 0.500000, 0.500000, -0.324443 );
ei_tab_add_vector( 0.500000, -3.111374, -0.635710 );
ei_tab_add_vector( -0.500000, -3.111374, -0.635710 );
ei_tab_add_vector( -0.465926, 0.500000, -0.324443 );
ei_tab_add_vector( -0.500000, -2.607306, 0.596936 );
ei_tab_add_vector( -0.500000, -2.607306, 0.596936 );
ei_tab_add_vector( -0.465926, 0.500000, -0.324443 );
ei_tab_add_vector( -0.465926, 0.535387, 0.553081 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:pCube2|Man:pCubeShape2
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:pCube1|Man:pCubeShape1, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:pCube1|Man:pCubeShape1
//### UV(map1), size=14
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:pCube1|Man:pCubeShape1" );
{
eiTag tag;
//vertex positions(required), size=36
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( -0.500000, -3.072600, 0.364290 );
ei_tab_add_vector( -0.738519, 0.089472, 0.547888 );
ei_tab_add_vector( 0.500000, -3.072600, 0.364290 );
ei_tab_add_vector( 0.500000, -3.072600, 0.364290 );
ei_tab_add_vector( -0.738519, 0.089472, 0.547888 );
ei_tab_add_vector( 0.500000, 0.471238, 0.547888 );
ei_tab_add_vector( -0.738519, 0.089472, 0.547888 );
ei_tab_add_vector( -0.738519, 0.089472, -0.835213 );
ei_tab_add_vector( 0.500000, 0.471238, 0.547888 );
ei_tab_add_vector( 0.500000, 0.471238, 0.547888 );
ei_tab_add_vector( -0.738519, 0.089472, -0.835213 );
ei_tab_add_vector( 0.500000, 0.471238, -0.835213 );
ei_tab_add_vector( -0.500000, -3.072600, -0.473657 );
ei_tab_add_vector( 0.500000, -3.072600, -0.473657 );
ei_tab_add_vector( -0.738519, 0.089472, -0.835213 );
ei_tab_add_vector( -0.738519, 0.089472, -0.835213 );
ei_tab_add_vector( 0.500000, -3.072600, -0.473657 );
ei_tab_add_vector( 0.500000, 0.471238, -0.835213 );
ei_tab_add_vector( -0.500000, -3.072600, -0.473657 );
ei_tab_add_vector( -0.500000, -3.072600, 0.364290 );
ei_tab_add_vector( 0.500000, -3.072600, -0.473657 );
ei_tab_add_vector( 0.500000, -3.072600, -0.473657 );
ei_tab_add_vector( -0.500000, -3.072600, 0.364290 );
ei_tab_add_vector( 0.500000, -3.072600, 0.364290 );
ei_tab_add_vector( 0.500000, -3.072600, 0.364290 );
ei_tab_add_vector( 0.500000, 0.471238, 0.547888 );
ei_tab_add_vector( 0.500000, -3.072600, -0.473657 );
ei_tab_add_vector( 0.500000, -3.072600, -0.473657 );
ei_tab_add_vector( 0.500000, 0.471238, 0.547888 );
ei_tab_add_vector( 0.500000, 0.471238, -0.835213 );
ei_tab_add_vector( -0.738519, 0.089472, -0.835213 );
ei_tab_add_vector( -0.738519, 0.089472, 0.547888 );
ei_tab_add_vector( -0.500000, -3.072600, -0.473657 );
ei_tab_add_vector( -0.500000, -3.072600, -0.473657 );
ei_tab_add_vector( -0.738519, 0.089472, 0.547888 );
ei_tab_add_vector( -0.500000, -3.072600, 0.364290 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_end_tab();
//### triangles(required) size=36
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:pCube1|Man:pCubeShape1
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|Man:JAP|Man:JapSkeleton|Man:hips|Man:pCube5|Man:pCubeShape5, 0, 0

//############################### mesh #
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:pCube5|Man:pCubeShape5
//### UV(map1), size=19
//# numUVSets=1
//# uvsetNames[0]=map1
//# uvsetFamilyNames[0]=map1
ei_object( "poly", "|Man:JAP|Man:JapSkeleton|Man:hips|Man:pCube5|Man:pCubeShape5" );
{
eiTag tag;
//vertex positions(required), size=60
tag = ei_tab(EI_TYPE_VECTOR, 1, 1024);
ei_pos_list( tag );
ei_tab_add_vector( 0.000001, -0.591495, 0.305625 );
ei_tab_add_vector( 0.000000, 0.511225, 0.197223 );
ei_tab_add_vector( -0.816592, -0.338333, 0.305625 );
ei_tab_add_vector( -0.816592, -0.338333, 0.305625 );
ei_tab_add_vector( 0.000000, 0.511225, 0.197223 );
ei_tab_add_vector( -0.734637, 0.511225, 0.197223 );
ei_tab_add_vector( -0.734637, 0.511225, 0.197223 );
ei_tab_add_vector( 0.000000, 0.511225, 0.197223 );
ei_tab_add_vector( -0.734637, 0.511225, -0.403272 );
ei_tab_add_vector( -0.734637, 0.511225, -0.403272 );
ei_tab_add_vector( 0.000000, 0.511225, 0.197223 );
ei_tab_add_vector( -0.000000, 0.511225, -0.403272 );
ei_tab_add_vector( -0.734637, 0.511225, -0.403272 );
ei_tab_add_vector( -0.000000, 0.511225, -0.403272 );
ei_tab_add_vector( -0.816592, -0.338333, -0.472984 );
ei_tab_add_vector( -0.816592, -0.338333, -0.472984 );
ei_tab_add_vector( -0.000000, 0.511225, -0.403272 );
ei_tab_add_vector( 0.000000, -0.591494, -0.472984 );
ei_tab_add_vector( -0.816592, -0.338333, -0.472984 );
ei_tab_add_vector( 0.000000, -0.591494, -0.472984 );
ei_tab_add_vector( -0.816592, -0.338333, 0.305625 );
ei_tab_add_vector( -0.816592, -0.338333, 0.305625 );
ei_tab_add_vector( 0.000000, -0.591494, -0.472984 );
ei_tab_add_vector( 0.000001, -0.591495, 0.305625 );
ei_tab_add_vector( 0.816592, -0.338332, 0.305625 );
ei_tab_add_vector( 0.816592, -0.338332, -0.472984 );
ei_tab_add_vector( 0.734637, 0.511225, 0.197223 );
ei_tab_add_vector( 0.734637, 0.511225, 0.197223 );
ei_tab_add_vector( 0.816592, -0.338332, -0.472984 );
ei_tab_add_vector( 0.734637, 0.511225, -0.403272 );
ei_tab_add_vector( -0.816592, -0.338333, 0.305625 );
ei_tab_add_vector( -0.734637, 0.511225, 0.197223 );
ei_tab_add_vector( -0.816592, -0.338333, -0.472984 );
ei_tab_add_vector( -0.816592, -0.338333, -0.472984 );
ei_tab_add_vector( -0.734637, 0.511225, 0.197223 );
ei_tab_add_vector( -0.734637, 0.511225, -0.403272 );
ei_tab_add_vector( 0.000001, -0.591495, 0.305625 );
ei_tab_add_vector( 0.816592, -0.338332, 0.305625 );
ei_tab_add_vector( 0.000000, 0.511225, 0.197223 );
ei_tab_add_vector( 0.000000, 0.511225, 0.197223 );
ei_tab_add_vector( 0.816592, -0.338332, 0.305625 );
ei_tab_add_vector( 0.734637, 0.511225, 0.197223 );
ei_tab_add_vector( -0.000000, 0.511225, -0.403272 );
ei_tab_add_vector( 0.000000, 0.511225, 0.197223 );
ei_tab_add_vector( 0.734637, 0.511225, -0.403272 );
ei_tab_add_vector( 0.734637, 0.511225, -0.403272 );
ei_tab_add_vector( 0.000000, 0.511225, 0.197223 );
ei_tab_add_vector( 0.734637, 0.511225, 0.197223 );
ei_tab_add_vector( 0.000000, -0.591494, -0.472984 );
ei_tab_add_vector( -0.000000, 0.511225, -0.403272 );
ei_tab_add_vector( 0.816592, -0.338332, -0.472984 );
ei_tab_add_vector( 0.816592, -0.338332, -0.472984 );
ei_tab_add_vector( -0.000000, 0.511225, -0.403272 );
ei_tab_add_vector( 0.734637, 0.511225, -0.403272 );
ei_tab_add_vector( 0.000001, -0.591495, 0.305625 );
ei_tab_add_vector( 0.000000, -0.591494, -0.472984 );
ei_tab_add_vector( 0.816592, -0.338332, 0.305625 );
ei_tab_add_vector( 0.816592, -0.338332, 0.305625 );
ei_tab_add_vector( 0.000000, -0.591494, -0.472984 );
ei_tab_add_vector( 0.816592, -0.338332, -0.472984 );
ei_end_tab();
//### N ###(optional)
//### N ### end
//### UV (optional)
tag = eiNULL_TAG;
ei_declare("uv", EI_VARYING, EI_TYPE_TAG, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2( 0.497950, 0.000000 );
ei_tab_add_vector2( 0.497722, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.497722, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.497722, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.497722, 0.250000 );
ei_tab_add_vector2( 0.497722, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.500000 );
ei_tab_add_vector2( 0.497722, 0.500000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.497722, 0.500000 );
ei_tab_add_vector2( 0.497950, 0.750000 );
ei_tab_add_vector2( 0.375000, 0.750000 );
ei_tab_add_vector2( 0.497950, 0.750000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.375000, 1.000000 );
ei_tab_add_vector2( 0.497950, 0.750000 );
ei_tab_add_vector2( 0.497950, 1.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.875000, 0.000000 );
ei_tab_add_vector2( 0.875000, 0.250000 );
ei_tab_add_vector2( 0.375000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.125000, 0.000000 );
ei_tab_add_vector2( 0.375000, 0.250000 );
ei_tab_add_vector2( 0.125000, 0.250000 );
ei_tab_add_vector2( 0.497950, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.497722, 0.250000 );
ei_tab_add_vector2( 0.497722, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.000000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.497722, 0.500000 );
ei_tab_add_vector2( 0.497722, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.497722, 0.250000 );
ei_tab_add_vector2( 0.625000, 0.250000 );
ei_tab_add_vector2( 0.497950, 0.750000 );
ei_tab_add_vector2( 0.497722, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_tab_add_vector2( 0.497722, 0.500000 );
ei_tab_add_vector2( 0.625000, 0.500000 );
ei_tab_add_vector2( 0.497950, 1.000000 );
ei_tab_add_vector2( 0.497950, 0.750000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.625000, 1.000000 );
ei_tab_add_vector2( 0.497950, 0.750000 );
ei_tab_add_vector2( 0.625000, 0.750000 );
ei_end_tab();
//### triangles(required) size=60
tag = ei_tab(EI_TYPE_INDEX, 1, 1024);
ei_triangle_list( tag );
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_tab_add_index(36);
ei_tab_add_index(37);
ei_tab_add_index(38);
ei_tab_add_index(39);
ei_tab_add_index(40);
ei_tab_add_index(41);
ei_tab_add_index(42);
ei_tab_add_index(43);
ei_tab_add_index(44);
ei_tab_add_index(45);
ei_tab_add_index(46);
ei_tab_add_index(47);
ei_tab_add_index(48);
ei_tab_add_index(49);
ei_tab_add_index(50);
ei_tab_add_index(51);
ei_tab_add_index(52);
ei_tab_add_index(53);
ei_tab_add_index(54);
ei_tab_add_index(55);
ei_tab_add_index(56);
ei_tab_add_index(57);
ei_tab_add_index(58);
ei_tab_add_index(59);
ei_end_tab();
}//|Man:JAP|Man:JapSkeleton|Man:hips|Man:pCube5|Man:pCubeShape5
ei_end_object();
//|persp|perspShape is not lighted.
//--------------------------
//ribNode->name=|persp|perspShape
//ribNode's transform node=|persp
//ribNode->object(0)->getDataPtr()->getFullPathName()=|persp|perspShape
ei_instance("|persp");
//|persp|perspShape's shading group is empty, use "liquid_material_for_test" to avoid crash
ei_mtl("liquid_material_for_test");
//shape name=|persp|perspShape
//shape full path name=|persp|perspShape
ei_element("|persp|perspShape");
ei_transform(0.490904,-6.93889e-018,0.871214,0,   0.114294,0.991357,-0.0644016,0,   -0.863684,0.13119,0.486661,0,   -12.1719,9.47715,-2.90317,1);
//bMotionBlur=0, bGeometryMotion=0
ei_motion(0);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|persp_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//|renderCam|renderCamShape is not lighted.
//--------------------------
//ribNode->name=|renderCam|renderCamShape
//ribNode's transform node=|renderCam
//ribNode->object(0)->getDataPtr()->getFullPathName()=|renderCam|renderCamShape
ei_instance("|renderCam");
//|renderCam|renderCamShape's shading group is empty, use "liquid_material_for_test" to avoid crash
ei_mtl("liquid_material_for_test");
//shape name=|renderCam|renderCamShape
//shape full path name=|renderCam|renderCamShape
ei_element("|renderCam|renderCamShape");
ei_transform(1,0,0,0,   0,0.999812,0.0193968,0,   0,-0.0193968,0.999812,0,   0,8.63642,48.5771,1);
//bMotionBlur=0, bGeometryMotion=0
ei_motion(0);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|renderCam_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapMod|Man:pCube26|Man:pCubeShape26
//ribNode's transform node=|Man:JAP|Man:JapMod|Man:pCube26
//childCount=2
//child(0):|Man:JAP|Man:JapMod|Man:pCube26|Man:pCubeShape26
//child(1):|Man:JAP|Man:JapMod|Man:pCube26|Man:pCubeShape26Orig
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapMod|Man:pCube26|Man:pCubeShape26
ei_instance("|Man:JAP|Man:JapMod|Man:pCube26");
//|Man:JAP|Man:JapMod|Man:pCube26|Man:pCubeShape26 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapMod|Man:pCube26|Man:pCubeShape26
//shape full path name=|Man:JAP|Man:JapMod|Man:pCube26|Man:pCubeShape26
ei_element("|Man:JAP|Man:JapMod|Man:pCube26|Man:pCubeShape26");
ei_transform(-0.727936,0,-8.91464e-017,0,   0,0.727936,0,0,   -8.91464e-017,0,0.727936,0,   -5.10097,13.0119,0.525526,1);
//bMotionBlur=0, bGeometryMotion=0
ei_motion(0);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapMod|Man:pCube26_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapMod|Man:pCube8|Man:pCubeShape8
//ribNode's transform node=|Man:JAP|Man:JapMod|Man:pCube8
//childCount=2
//child(0):|Man:JAP|Man:JapMod|Man:pCube8|Man:pCubeShape8
//child(1):|Man:JAP|Man:JapMod|Man:pCube8|Man:pCubeShape8Orig
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapMod|Man:pCube8|Man:pCubeShape8
ei_instance("|Man:JAP|Man:JapMod|Man:pCube8");
//|Man:JAP|Man:JapMod|Man:pCube8|Man:pCubeShape8 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapMod|Man:pCube8|Man:pCubeShape8
//shape full path name=|Man:JAP|Man:JapMod|Man:pCube8|Man:pCubeShape8
ei_element("|Man:JAP|Man:JapMod|Man:pCube8|Man:pCubeShape8");
ei_transform(0.727936,0,0,0,   0,0.727936,0,0,   0,0,0.727936,0,   5.10097,13.0119,0.525526,1);
//bMotionBlur=0, bGeometryMotion=0
ei_motion(0);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapMod|Man:pCube8_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapMod|Man:pCube6|Man:pCubeShape6
//ribNode's transform node=|Man:JAP|Man:JapMod|Man:pCube6
//childCount=2
//child(0):|Man:JAP|Man:JapMod|Man:pCube6|Man:pCubeShape6
//child(1):|Man:JAP|Man:JapMod|Man:pCube6|Man:pCubeShape6Orig
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapMod|Man:pCube6|Man:pCubeShape6
ei_instance("|Man:JAP|Man:JapMod|Man:pCube6");
//|Man:JAP|Man:JapMod|Man:pCube6|Man:pCubeShape6 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapMod|Man:pCube6|Man:pCubeShape6
//shape full path name=|Man:JAP|Man:JapMod|Man:pCube6|Man:pCubeShape6
ei_element("|Man:JAP|Man:JapMod|Man:pCube6|Man:pCubeShape6");
ei_transform(1.82572,0,0,0,   0,1.82572,0,0,   0,0,1.82572,0,   0,10.7756,0,1);
//bMotionBlur=0, bGeometryMotion=0
ei_motion(0);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapMod|Man:pCube6_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:ground|Man:groundShape
//ribNode's transform node=|Man:JAP|Man:ground
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:ground|Man:groundShape
ei_instance("|Man:JAP|Man:ground");
//|Man:JAP|Man:ground|Man:groundShape has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert4SG,
ei_mtl("Man:lambert4SG");
//shape name=|Man:JAP|Man:ground|Man:groundShape
//shape full path name=|Man:JAP|Man:ground|Man:groundShape
ei_element("|Man:JAP|Man:ground|Man:groundShape");
ei_transform(1,0,0,0,   0,1,0,0,   0,0,1,0,   0,5,-37.408,1);
//bMotionBlur=0, bGeometryMotion=0
ei_motion(0);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:ground_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//|Man:JAP|Man:JapCnt|Man:HipsEff|Man:hikFloorContactMarker1 is not lighted.
//--------------------------
//ribNode->name=|Man:JAP|Man:JapCnt|Man:HipsEff|Man:hikFloorContactMarker1
//ribNode's transform node=|Man:JAP|Man:JapCnt|Man:HipsEff
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapCnt|Man:HipsEff|Man:hikFloorContactMarker1
ei_instance("|Man:JAP|Man:JapCnt|Man:HipsEff");
//|Man:JAP|Man:JapCnt|Man:HipsEff|Man:hikFloorContactMarker1's shading group is empty, use "liquid_material_for_test" to avoid crash
ei_mtl("liquid_material_for_test");
//shape name=|Man:JAP|Man:JapCnt|Man:HipsEff|Man:hikFloorContactMarker1
//shape full path name=|Man:JAP|Man:JapCnt|Man:HipsEff|Man:hikFloorContactMarker1
ei_element("|Man:JAP|Man:JapCnt|Man:HipsEff|Man:hikFloorContactMarker1");
ei_transform(0.114313,0.0941001,0.988978,0,   -0.298795,0.952667,-0.0561084,0,   -0.947446,-0.289087,0.137019,0,   20.2239,7.66037,-20.1866,1);
//bMotionBlur=0, bGeometryMotion=0
ei_motion(0);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapCnt|Man:HipsEff_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:leftHandPinky3|Man:pCube11|Man:pCubeShape11
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:leftHandPinky3|Man:pCube11
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:leftHandPinky3|Man:pCube11|Man:pCubeShape11
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:leftHandPinky3|Man:pCube11");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:leftHandPinky3|Man:pCube11|Man:pCubeShape11 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:leftHandPinky3|Man:pCube11|Man:pCubeShape11
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:leftHandPinky3|Man:pCube11|Man:pCubeShape11
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:leftHandPinky3|Man:pCube11|Man:pCubeShape11");
ei_transform(0.106156,0.0153073,0.0686681,0,   0.0601227,-0.00650068,-0.0914963,0,   -0.00749237,0.108685,-0.0126452,0,   20.5973,8.22876,-17.8187,1);
//bMotionBlur=0, bGeometryMotion=0
ei_motion(0);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:leftHandPinky3|Man:pCube11_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:pCube10|Man:pCubeShape10
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:pCube10
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:pCube10|Man:pCubeShape10
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:pCube10");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:pCube10|Man:pCubeShape10 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:pCube10|Man:pCubeShape10
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:pCube10|Man:pCubeShape10
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:pCube10|Man:pCubeShape10");
ei_transform(0.114942,-0.000400784,-0.074656,0,   -0.0638972,-0.0136203,-0.0983047,0,   -0.00713145,0.117246,-0.0116092,0,   20.4022,8.21199,-17.7654,1);
//bMotionBlur=0, bGeometryMotion=0
ei_motion(0);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:pCube10_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:pCube9|Man:pCubeShape9
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:pCube9
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:pCube9|Man:pCubeShape9
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:pCube9");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:pCube9|Man:pCubeShape9 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:pCube9|Man:pCubeShape9
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:pCube9|Man:pCubeShape9
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:pCube9|Man:pCubeShape9");
ei_transform(-0.122127,-0.0679318,-0.256191,0,   -0.120845,-0.00634259,0.059289,0,   -0.0193694,0.1309,-0.025476,0,   20.427,8.25877,-17.5242,1);
//bMotionBlur=0, bGeometryMotion=0
ei_motion(0);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:pCube9_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:leftHandRing3|Man:pCube12|Man:pCubeShape12
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:leftHandRing3|Man:pCube12
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:leftHandRing3|Man:pCube12|Man:pCubeShape12
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:leftHandRing3|Man:pCube12");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:leftHandRing3|Man:pCube12|Man:pCubeShape12 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:leftHandRing3|Man:pCube12|Man:pCubeShape12
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:leftHandRing3|Man:pCube12|Man:pCubeShape12
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:leftHandRing3|Man:pCube12|Man:pCubeShape12");
ei_transform(0.109163,0.0171436,0.0729404,0,   0.0639852,-0.00697306,-0.0941215,0,   -0.00834539,0.112849,-0.0140339,0,   20.4191,8.37045,-17.8964,1);
//bMotionBlur=0, bGeometryMotion=0
ei_motion(0);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:leftHandRing3|Man:pCube12_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:pCube13|Man:pCubeShape13
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:pCube13
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:pCube13|Man:pCubeShape13
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:pCube13");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:pCube13|Man:pCubeShape13 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:pCube13|Man:pCubeShape13
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:pCube13|Man:pCubeShape13
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:pCube13|Man:pCubeShape13");
ei_transform(0.0988942,-0.0104087,-0.100031,0,   -0.0863517,-0.0181248,-0.0834844,0,   -0.00669327,0.119774,-0.0190803,0,   20.2545,8.37643,-17.8039,1);
//bMotionBlur=0, bGeometryMotion=0
ei_motion(0);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:pCube13_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:pCube14|Man:pCubeShape14
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:pCube14
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:pCube14|Man:pCubeShape14
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:pCube14");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:pCube14|Man:pCubeShape14 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:pCube14|Man:pCubeShape14
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:pCube14|Man:pCubeShape14
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:pCube14|Man:pCubeShape14");
ei_transform(-0.164416,-0.089655,-0.338066,0,   -0.121478,0.00316393,0.058241,0,   -0.0107433,0.131041,-0.029527,0,   20.3577,8.43443,-17.5615,1);
//bMotionBlur=0, bGeometryMotion=0
ei_motion(0);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:pCube14_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:leftHandMiddle3|Man:pCube15|Man:pCubeShape15
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:leftHandMiddle3|Man:pCube15
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:leftHandMiddle3|Man:pCube15|Man:pCubeShape15
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:leftHandMiddle3|Man:pCube15");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:leftHandMiddle3|Man:pCube15|Man:pCubeShape15 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:leftHandMiddle3|Man:pCube15|Man:pCubeShape15
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:leftHandMiddle3|Man:pCube15|Man:pCubeShape15
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:leftHandMiddle3|Man:pCube15|Man:pCubeShape15");
ei_transform(0.167097,0.0134828,0.0110125,0,   0.00835692,-0.0132179,-0.11062,0,   -0.00801126,0.110572,-0.0138174,0,   20.2264,8.57023,-17.9914,1);
//bMotionBlur=0, bGeometryMotion=0
ei_motion(0);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:leftHandMiddle3|Man:pCube15_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:pCube16|Man:pCubeShape16
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:pCube16
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:pCube16|Man:pCubeShape16
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:pCube16");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:pCube16|Man:pCubeShape16 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:pCube16|Man:pCubeShape16
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:pCube16|Man:pCubeShape16
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:pCube16|Man:pCubeShape16");
ei_transform(0.0695257,-0.00551689,-0.117413,0,   -0.100921,-0.0119292,-0.0591992,0,   -0.00786476,0.116906,-0.0101501,0,   20.1162,8.56689,-17.8423,1);
//bMotionBlur=0, bGeometryMotion=0
ei_motion(0);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:pCube16_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:pCube17|Man:pCubeShape17
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:pCube17
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:pCube17|Man:pCubeShape17
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:pCube17");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:pCube17|Man:pCubeShape17 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:pCube17|Man:pCubeShape17
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:pCube17|Man:pCubeShape17
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:pCube17|Man:pCubeShape17");
ei_transform(-0.236887,-0.0535238,-0.305165,0,   -0.105916,-0.0052772,0.0831437,0,   -0.0155396,0.133376,-0.0113303,0,   20.2962,8.61401,-17.5827,1);
//bMotionBlur=0, bGeometryMotion=0
ei_motion(0);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:pCube17_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:leftHandIndex3|Man:pCube18|Man:pCubeShape18
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:leftHandIndex3|Man:pCube18
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:leftHandIndex3|Man:pCube18|Man:pCubeShape18
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:leftHandIndex3|Man:pCube18");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:leftHandIndex3|Man:pCube18|Man:pCubeShape18 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:leftHandIndex3|Man:pCube18|Man:pCubeShape18
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:leftHandIndex3|Man:pCube18|Man:pCubeShape18
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:leftHandIndex3|Man:pCube18|Man:pCubeShape18");
ei_transform(0.0987504,-0.00119061,-0.0943865,0,   -0.0808218,-0.0136895,-0.0843858,0,   -0.00872297,0.116842,-0.0106001,0,   20.0207,8.81141,-17.8399,1);
//bMotionBlur=0, bGeometryMotion=0
ei_motion(0);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:leftHandIndex3|Man:pCube18_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:pCube19|Man:pCubeShape19
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:pCube19
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:pCube19|Man:pCubeShape19
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:pCube19");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:pCube19|Man:pCubeShape19 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:pCube19|Man:pCubeShape19
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:pCube19|Man:pCubeShape19
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:pCube19|Man:pCubeShape19");
ei_transform(0.0217204,-0.00173937,-0.137608,0,   -0.117388,-0.0167479,-0.0183171,0,   -0.0163131,0.118799,-0.00407653,0,   19.9722,8.81774,-17.6323,1);
//bMotionBlur=0, bGeometryMotion=0
ei_motion(0);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:pCube19_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:pCube20|Man:pCubeShape20
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:pCube20
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:pCube20|Man:pCubeShape20
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:pCube20");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:pCube20|Man:pCubeShape20 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:pCube20|Man:pCubeShape20
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:pCube20|Man:pCubeShape20
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:pCube20|Man:pCubeShape20");
ei_transform(-0.369957,-0.0144902,-0.123371,0,   -0.0427905,0.00562505,0.127657,0,   -0.00296166,0.134545,-0.0069213,0,   20.2289,8.82793,-17.517,1);
//bMotionBlur=0, bGeometryMotion=0
ei_motion(0);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:pCube20_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:leftHandThumb3|Man:pCube21|Man:pCubeShape21
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:leftHandThumb3|Man:pCube21
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:leftHandThumb3|Man:pCube21|Man:pCubeShape21
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:leftHandThumb3|Man:pCube21");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:leftHandThumb3|Man:pCube21|Man:pCubeShape21 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:leftHandThumb3|Man:pCube21|Man:pCubeShape21
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:leftHandThumb3|Man:pCube21|Man:pCubeShape21
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:leftHandThumb3|Man:pCube21|Man:pCubeShape21");
ei_transform(-0.270279,-0.0206566,0.0382935,0,   0.0153864,0.0140328,0.116168,0,   -0.0107284,0.116844,-0.0126935,0,   20.1887,8.9723,-17.6142,1);
//bMotionBlur=0, bGeometryMotion=0
ei_motion(0);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:leftHandThumb3|Man:pCube21_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:pCube22|Man:pCubeShape22
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:pCube22
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:pCube22|Man:pCubeShape22
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:pCube22");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:pCube22|Man:pCubeShape22 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:pCube22|Man:pCubeShape22
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:pCube22|Man:pCubeShape22
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:pCube22|Man:pCubeShape22");
ei_transform(-0.269863,0.000382508,0.0446648,0,   0.0218963,0.0144916,0.132172,0,   -0.00218148,0.133973,-0.0143277,0,   20.5062,8.98716,-17.6619,1);
//bMotionBlur=0, bGeometryMotion=0
ei_motion(0);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:pCube22_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:pCube23|Man:pCubeShape23
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:pCube23
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:pCube23|Man:pCubeShape23
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:pCube23");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:pCube23|Man:pCubeShape23 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:pCube23|Man:pCubeShape23
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:pCube23|Man:pCubeShape23
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:pCube23|Man:pCubeShape23");
ei_transform(-0.371443,0.057381,-0.00640304,0,   0.000306045,0.0168994,0.133691,0,   0.0206956,0.132099,-0.0167456,0,   20.9035,8.94976,-17.6896,1);
//bMotionBlur=0, bGeometryMotion=0
ei_motion(0);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:pCube23_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:pCube25|Man:pCubeShape25
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:pCube25
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:pCube25|Man:pCubeShape25
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:pCube25");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:pCube25|Man:pCubeShape25 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:pCube25|Man:pCubeShape25
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:pCube25|Man:pCubeShape25
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:pCube25|Man:pCubeShape25");
ei_transform(-0.204612,-0.0149819,0.00231661,0,   0.000272147,0.0169545,0.133684,0,   -0.0271667,0.363897,-0.0460959,0,   21.2898,8.64499,-17.6936,1);
//bMotionBlur=0, bGeometryMotion=0
ei_motion(0);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:pCube25_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:pCube24|Man:pCubeShape24
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:pCube24
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:pCube24|Man:pCubeShape24
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:pCube24");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:pCube24|Man:pCubeShape24 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:pCube24|Man:pCubeShape24
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:pCube24|Man:pCubeShape24
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:pCube24|Man:pCubeShape24");
ei_transform(-0.669595,0.00518834,0.0629054,0,   0.0226052,0.0302919,0.238122,0,   -0.000996289,0.239185,-0.0303326,0,   20.8546,8.55918,-17.4876,1);
//bMotionBlur=0, bGeometryMotion=0
ei_motion(0);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:pCube24_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:pCube7|Man:pCubeShape7
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:pCube7
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:pCube7|Man:pCubeShape7
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:pCube7");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:pCube7|Man:pCubeShape7 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:pCube7|Man:pCubeShape7
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:pCube7|Man:pCubeShape7
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:pCube7|Man:pCubeShape7");
ei_transform(0.596329,-0.379789,0.173328,0,   -0.157935,0.0745312,0.706677,0,   -0.386444,-0.616519,-0.0213435,0,   21.2783,11.8127,-18.1062,1);
//bMotionBlur=0, bGeometryMotion=0
ei_motion(0);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:pCube7_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:rightHandPinky3|Man:pCube11|Man:pCubeShape11
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:rightHandPinky3|Man:pCube11
//childCount=2
//child(0):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:rightHandPinky3|Man:pCube11|Man:pCubeShape11
//child(1):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:rightHandPinky3|Man:pCube11|polySurfaceShape5
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:rightHandPinky3|Man:pCube11|Man:pCubeShape11
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:rightHandPinky3|Man:pCube11");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:rightHandPinky3|Man:pCube11|Man:pCubeShape11 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:rightHandPinky3|Man:pCube11|Man:pCubeShape11
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:rightHandPinky3|Man:pCube11|Man:pCubeShape11
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:rightHandPinky3|Man:pCube11|Man:pCubeShape11");
ei_transform(0.047634,0.117791,0.00866041,0,   0.0797634,-0.0270922,-0.0702309,0,   0.0631155,-0.0316928,0.0839081,0,   16.204,8.98397,-23.1193,1);
//bMotionBlur=0, bGeometryMotion=0
ei_motion(0);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:rightHandPinky3|Man:pCube11_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:pCube10|Man:pCubeShape10
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:pCube10
//childCount=2
//child(0):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:pCube10|Man:pCubeShape10
//child(1):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:pCube10|polySurfaceShape6
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:pCube10|Man:pCubeShape10
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:pCube10");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:pCube10|Man:pCubeShape10 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:pCube10|Man:pCubeShape10
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:pCube10|Man:pCubeShape10
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:pCube10|Man:pCubeShape10");
ei_transform(0.111715,0.039487,-0.0688905,0,   0.00980405,-0.108207,-0.0461237,0,   0.0676761,-0.0326669,0.091022,0,   16.0435,8.87529,-23.0519,1);
//bMotionBlur=0, bGeometryMotion=0
ei_motion(0);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:pCube10_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:pCube9|Man:pCubeShape9
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:pCube9
//childCount=2
//child(0):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:pCube9|Man:pCubeShape9
//child(1):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:pCube9|polySurfaceShape7
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:pCube9|Man:pCubeShape9
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:pCube9");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:pCube9|Man:pCubeShape9 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:pCube9|Man:pCubeShape9
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:pCube9|Man:pCubeShape9
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:pCube9|Man:pCubeShape9");
ei_transform(0.0727583,-0.222133,-0.174719,0,   -0.104707,-0.0709108,0.0465511,0,   0.0778883,-0.0510825,0.0973802,0,   15.9231,9.01891,-22.8841,1);
//bMotionBlur=0, bGeometryMotion=0
ei_motion(0);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:pCube9_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:rightHandRing3|Man:pCube12|Man:pCubeShape12
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:rightHandRing3|Man:pCube12
//childCount=2
//child(0):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:rightHandRing3|Man:pCube12|Man:pCubeShape12
//child(1):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:rightHandRing3|Man:pCube12|polySurfaceShape8
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:rightHandRing3|Man:pCube12|Man:pCubeShape12
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:rightHandRing3|Man:pCube12");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:rightHandRing3|Man:pCube12|Man:pCubeShape12 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:rightHandRing3|Man:pCube12|Man:pCubeShape12
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:rightHandRing3|Man:pCube12|Man:pCubeShape12
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:rightHandRing3|Man:pCube12|Man:pCubeShape12");
ei_transform(0.0496602,0.122388,0.00926217,0,   0.0827868,-0.0280505,-0.0732196,0,   0.0657186,-0.0332535,0.0870451,0,   16.239,8.76211,-23.0215,1);
//bMotionBlur=0, bGeometryMotion=0
ei_motion(0);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:rightHandRing3|Man:pCube12_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:pCube13|Man:pCubeShape13
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:pCube13
//childCount=2
//child(0):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:pCube13|Man:pCubeShape13
//child(1):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:pCube13|polySurfaceShape9
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:pCube13|Man:pCubeShape13
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:pCube13");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:pCube13|Man:pCubeShape13 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:pCube13|Man:pCubeShape13
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:pCube13|Man:pCubeShape13
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:pCube13|Man:pCubeShape13");
ei_transform(0.111304,0.0122768,-0.0857625,0,   -0.0143027,-0.11541,-0.0350831,0,   0.0732269,-0.0363814,0.0898275,0,   16.0866,8.69796,-22.9228,1);
//bMotionBlur=0, bGeometryMotion=0
ei_motion(0);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:pCube13_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:pCube14|Man:pCubeShape14
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:pCube14
//childCount=2
//child(0):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:pCube14|Man:pCubeShape14
//child(1):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:pCube14|polySurfaceShape10
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:pCube14|Man:pCubeShape14
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:pCube14");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:pCube14|Man:pCubeShape14 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:pCube14|Man:pCubeShape14
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:pCube14|Man:pCubeShape14
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:pCube14|Man:pCubeShape14");
ei_transform(0.0926985,-0.294394,-0.232591,0,   -0.100158,-0.0731581,0.0526795,0,   0.0841577,-0.047643,0.0938432,0,   16.0098,8.90485,-22.7558,1);
//bMotionBlur=0, bGeometryMotion=0
ei_motion(0);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:pCube14_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:rightHandMiddle3|Man:pCube15|Man:pCubeShape15
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:rightHandMiddle3|Man:pCube15
//childCount=2
//child(0):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:rightHandMiddle3|Man:pCube15|Man:pCubeShape15
//child(1):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:rightHandMiddle3|Man:pCube15|polySurfaceShape11
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:rightHandMiddle3|Man:pCube15|Man:pCubeShape15
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:rightHandMiddle3|Man:pCube15");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:rightHandMiddle3|Man:pCube15|Man:pCubeShape15 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:rightHandMiddle3|Man:pCube15|Man:pCubeShape15
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:rightHandMiddle3|Man:pCube15|Man:pCubeShape15
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:rightHandMiddle3|Man:pCube15|Man:pCubeShape15");
ei_transform(0.10134,0.131386,-0.0263185,0,   0.0614953,-0.0614821,-0.0701397,0,   0.0644843,-0.032675,0.0851788,0,   16.3336,8.5516,-22.8777,1);
//bMotionBlur=0, bGeometryMotion=0
ei_motion(0);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:rightHandMiddle3|Man:pCube15_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:pCube16|Man:pCubeShape16
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:pCube16
//childCount=2
//child(0):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:pCube16|Man:pCubeShape16
//child(1):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:pCube16|polySurfaceShape12
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:pCube16|Man:pCubeShape16
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:pCube16");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:pCube16|Man:pCubeShape16 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:pCube16|Man:pCubeShape16
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:pCube16|Man:pCubeShape16
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:pCube16|Man:pCubeShape16");
ei_transform(0.109011,-0.00877132,-0.0817917,0,   -0.0246785,-0.113101,-0.0207623,0,   0.0664045,-0.0313535,0.0918653,0,   16.1758,8.54709,-22.7765,1);
//bMotionBlur=0, bGeometryMotion=0
ei_motion(0);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:pCube16_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:pCube17|Man:pCubeShape17
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:pCube17
//childCount=2
//child(0):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:pCube17|Man:pCubeShape17
//child(1):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:pCube17|polySurfaceShape13
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:pCube17|Man:pCubeShape17
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:pCube17");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:pCube17|Man:pCubeShape17 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:pCube17|Man:pCubeShape17
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:pCube17|Man:pCubeShape17
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:pCube17|Man:pCubeShape17");
ei_transform(0.0780818,-0.334959,-0.183881,0,   -0.110271,-0.0554133,0.0541168,0,   0.0726044,-0.0411559,0.1058,0,   16.1006,8.81717,-22.6148,1);
//bMotionBlur=0, bGeometryMotion=0
ei_motion(0);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:pCube17_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:rightHandIndex3|Man:pCube18|Man:pCubeShape18
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:rightHandIndex3|Man:pCube18
//childCount=2
//child(0):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:rightHandIndex3|Man:pCube18|Man:pCubeShape18
//child(1):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:rightHandIndex3|Man:pCube18|polySurfaceShape14
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:rightHandIndex3|Man:pCube18|Man:pCubeShape18
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:rightHandIndex3|Man:pCube18");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:rightHandIndex3|Man:pCube18|Man:pCubeShape18 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:rightHandIndex3|Man:pCube18|Man:pCubeShape18
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:rightHandIndex3|Man:pCube18|Man:pCubeShape18
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:rightHandIndex3|Man:pCube18|Man:pCubeShape18");
ei_transform(0.108107,0.0698565,-0.0457701,0,   0.0340097,-0.0936349,-0.062581,0,   0.0633735,-0.0381293,0.0914903,0,   16.2115,8.41426,-22.5653,1);
//bMotionBlur=0, bGeometryMotion=0
ei_motion(0);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:rightHandIndex3|Man:pCube18_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:pCube19|Man:pCubeShape19
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:pCube19
//childCount=2
//child(0):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:pCube19|Man:pCubeShape19
//child(1):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:pCube19|polySurfaceShape15
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:pCube19|Man:pCubeShape19
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:pCube19");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:pCube19|Man:pCubeShape19 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:pCube19|Man:pCubeShape19
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:pCube19|Man:pCubeShape19
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:pCube19|Man:pCubeShape19");
ei_transform(0.0944196,-0.0599578,-0.0830703,0,   -0.0659669,-0.100185,-0.00266844,0,   0.0585868,-0.0411409,0.0962854,0,   16.0614,8.48047,-22.4394,1);
//bMotionBlur=0, bGeometryMotion=0
ei_motion(0);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:pCube19_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:pCube20|Man:pCubeShape20
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:pCube20
//childCount=2
//child(0):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:pCube20|Man:pCubeShape20
//child(1):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:pCube20|polySurfaceShape16
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:pCube20|Man:pCubeShape20
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:pCube20");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:pCube20|Man:pCubeShape20 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:pCube20|Man:pCubeShape20
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:pCube20|Man:pCubeShape20
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:pCube20|Man:pCubeShape20");
ei_transform(-0.118221,-0.369925,-0.0384431,0,   -0.103656,0.0245494,0.0825333,0,   0.0758156,-0.0352129,0.105693,0,   16.1245,8.75399,-22.395,1);
//bMotionBlur=0, bGeometryMotion=0
ei_motion(0);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:pCube20_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:rightHandThumb3|Man:pCube21|Man:pCubeShape21
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:rightHandThumb3|Man:pCube21
//childCount=2
//child(0):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:rightHandThumb3|Man:pCube21|Man:pCubeShape21
//child(1):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:rightHandThumb3|Man:pCube21|polySurfaceShape17
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:rightHandThumb3|Man:pCube21|Man:pCubeShape21
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:rightHandThumb3|Man:pCube21");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:rightHandThumb3|Man:pCube21|Man:pCubeShape21 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:rightHandThumb3|Man:pCube21|Man:pCubeShape21
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:rightHandThumb3|Man:pCube21|Man:pCubeShape21
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:rightHandThumb3|Man:pCube21|Man:pCubeShape21");
ei_transform(-0.14807,-0.229692,0.0161491,0,   -0.0737148,0.0528298,0.0755243,0,   0.0664836,-0.0365009,0.0904233,0,   16.2818,8.65158,-22.3391,1);
//bMotionBlur=0, bGeometryMotion=0
ei_motion(0);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:rightHandThumb3|Man:pCube21_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:pCube22|Man:pCubeShape22
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:pCube22
//childCount=2
//child(0):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:pCube22|Man:pCubeShape22
//child(1):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:pCube22|polySurfaceShape18
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:pCube22|Man:pCubeShape22
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:pCube22");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:pCube22|Man:pCubeShape22 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:pCube22|Man:pCubeShape22
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:pCube22|Man:pCubeShape22
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:pCube22|Man:pCubeShape22");
ei_transform(-0.140672,-0.231421,0.0384273,0,   -0.0828854,0.0644138,0.0844973,0,   0.0805373,-0.0318109,0.103251,0,   16.4523,8.92245,-22.3683,1);
//bMotionBlur=0, bGeometryMotion=0
ei_motion(0);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:pCube22_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:pCube23|Man:pCubeShape23
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:pCube23
//childCount=2
//child(0):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:pCube23|Man:pCubeShape23
//child(1):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:pCube23|polySurfaceShape19
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:pCube23|Man:pCubeShape23
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:pCube23");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:pCube23|Man:pCubeShape23 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:pCube23|Man:pCubeShape23
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:pCube23|Man:pCubeShape23
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:pCube23|Man:pCubeShape23");
ei_transform(-0.114178,-0.35296,0.0607121,0,   -0.0914201,0.0447622,0.0883042,0,   0.0901441,-0.0120565,0.0994365,0,   16.6124,9.28326,-22.4331,1);
//bMotionBlur=0, bGeometryMotion=0
ei_motion(0);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:pCube23_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube25|Man:pCubeShape25
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube25
//childCount=2
//child(0):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube25|Man:pCubeShape25
//child(1):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube25|polySurfaceShape20
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube25|Man:pCubeShape25
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube25");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube25|Man:pCubeShape25 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube25|Man:pCubeShape25
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube25|Man:pCubeShape25
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube25|Man:pCubeShape25");
ei_transform(-0.0906009,-0.184075,-0.0019812,0,   -0.0915936,0.0441301,0.0884425,0,   0.215414,-0.109012,0.277483,0,   16.609,9.69282,-22.7056,1);
//bMotionBlur=0, bGeometryMotion=0
ei_motion(0);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube25_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube24|Man:pCubeShape24
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube24
//childCount=2
//child(0):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube24|Man:pCubeShape24
//child(1):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube24|polySurfaceShape21
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube24|Man:pCubeShape24
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube24");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube24|Man:pCubeShape24 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube24|Man:pCubeShape24
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube24|Man:pCubeShape24
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube24|Man:pCubeShape24");
ei_transform(-0.309607,-0.59303,0.0692838,0,   -0.154347,0.0988789,0.156622,0,   0.148287,-0.0561995,0.181612,0,   16.2365,9.38209,-22.6426,1);
//bMotionBlur=0, bGeometryMotion=0
ei_motion(0);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube24_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:pCube7|Man:pCubeShape7
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:pCube7
//childCount=2
//child(0):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:pCube7|Man:pCubeShape7
//child(1):|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:pCube7|polySurfaceShape4
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:pCube7|Man:pCubeShape7
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:pCube7");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:pCube7|Man:pCubeShape7 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:pCube7|Man:pCubeShape7
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:pCube7|Man:pCubeShape7
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:pCube7|Man:pCubeShape7");
ei_transform(-0.605773,-0.340815,-0.216274,0,   -0.364478,0.294251,0.557191,0,   0.17345,-0.571972,0.415516,0,   19.2847,13.3206,-22.1265,1);
//bMotionBlur=0, bGeometryMotion=0
ei_motion(0);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:pCube7_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:joint86|Man:leftFootIndex1|Man:pCube4|Man:pCubeShape4
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:joint86|Man:leftFootIndex1|Man:pCube4
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:joint86|Man:leftFootIndex1|Man:pCube4|Man:pCubeShape4
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:joint86|Man:leftFootIndex1|Man:pCube4");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:joint86|Man:leftFootIndex1|Man:pCube4|Man:pCubeShape4 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:joint86|Man:leftFootIndex1|Man:pCube4|Man:pCubeShape4
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:joint86|Man:leftFootIndex1|Man:pCube4|Man:pCubeShape4
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:joint86|Man:leftFootIndex1|Man:pCube4|Man:pCubeShape4");
ei_transform(0.0793811,0.0861972,0.993111,0,   -0.878675,-0.464446,0.110546,0,   0.470775,-0.881397,0.0388711,0,   22.0534,1.85464,-18.6155,1);
//bMotionBlur=0, bGeometryMotion=0
ei_motion(0);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:joint86|Man:leftFootIndex1|Man:pCube4_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:pCube3|Man:pCubeShape3
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:pCube3
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:pCube3|Man:pCubeShape3
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:pCube3");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:pCube3|Man:pCubeShape3 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:pCube3|Man:pCubeShape3
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:pCube3|Man:pCubeShape3
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:pCube3|Man:pCubeShape3");
ei_transform(0.0246459,0.000889704,0.999696,0,   -0.997495,-0.0663046,0.0246506,0,   0.0663064,-0.997799,-0.000746662,0,   21.7124,3.05515,-18.6612,1);
//bMotionBlur=0, bGeometryMotion=0
ei_motion(0);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:pCube3_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:pCube2|Man:pCubeShape2
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:pCube2
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:pCube2|Man:pCubeShape2
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:pCube2");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:pCube2|Man:pCubeShape2 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:pCube2|Man:pCubeShape2
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:pCube2|Man:pCubeShape2
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:pCube2|Man:pCubeShape2");
ei_transform(0.111803,-0.0106329,0.993674,0,   -0.899882,0.423111,0.105778,0,   -0.421559,-0.906015,0.0377368,0,   18.8035,4.57068,-18.4009,1);
//bMotionBlur=0, bGeometryMotion=0
ei_motion(0);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:pCube2_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:pCube1|Man:pCubeShape1
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:pCube1
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:pCube1|Man:pCubeShape1
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:pCube1");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:pCube1|Man:pCubeShape1 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:pCube1|Man:pCubeShape1
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:pCube1|Man:pCubeShape1
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:pCube1|Man:pCubeShape1");
ei_transform(0.188403,0.120594,0.97466,0,   0.582163,0.785557,-0.20973,0,   -0.790943,0.606924,0.0777961,0,   20.0339,7.43111,-19.0113,1);
//bMotionBlur=0, bGeometryMotion=0
ei_motion(0);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:pCube1_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:joint87|Man:rightFootIndex1|Man:pCube4|Man:pCubeShape4
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:joint87|Man:rightFootIndex1|Man:pCube4
//childCount=2
//child(0):|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:joint87|Man:rightFootIndex1|Man:pCube4|Man:pCubeShape4
//child(1):|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:joint87|Man:rightFootIndex1|Man:pCube4|polySurfaceShape3
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:joint87|Man:rightFootIndex1|Man:pCube4|Man:pCubeShape4
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:joint87|Man:rightFootIndex1|Man:pCube4");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:joint87|Man:rightFootIndex1|Man:pCube4|Man:pCubeShape4 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:joint87|Man:rightFootIndex1|Man:pCube4|Man:pCubeShape4
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:joint87|Man:rightFootIndex1|Man:pCube4|Man:pCubeShape4
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:joint87|Man:rightFootIndex1|Man:pCube4|Man:pCubeShape4");
ei_transform(0.402207,6.82966e-005,-0.915549,0,   -0.00100845,0.999999,-0.000368421,0,   -0.915548,-0.00107146,-0.402207,0,   20.4261,0.503074,-20.5474,1);
//bMotionBlur=0, bGeometryMotion=0
ei_motion(0);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:joint87|Man:rightFootIndex1|Man:pCube4_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:pCube3|Man:pCubeShape3
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:pCube3
//childCount=2
//child(0):|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:pCube3|Man:pCubeShape3
//child(1):|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:pCube3|polySurfaceShape22
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:pCube3|Man:pCubeShape3
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:pCube3");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:pCube3|Man:pCubeShape3 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:pCube3|Man:pCubeShape3
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:pCube3|Man:pCubeShape3
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:pCube3|Man:pCubeShape3");
ei_transform(0.375171,-0.000212043,-0.926955,0,   0.000377096,1,-7.6128e-005,0,   -0.926955,0.00032099,-0.375171,0,   21.4935,0.502343,-20.0977,1);
//bMotionBlur=0, bGeometryMotion=0
ei_motion(0);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:pCube3_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:pCube2|Man:pCubeShape2
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:pCube2
//childCount=2
//child(0):|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:pCube2|Man:pCubeShape2
//child(1):|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:pCube2|polySurfaceShape1
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:pCube2|Man:pCubeShape2
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:pCube2");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:pCube2|Man:pCubeShape2 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:pCube2|Man:pCubeShape2
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:pCube2|Man:pCubeShape2
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:pCube2|Man:pCubeShape2");
ei_transform(0.466429,0.0142812,-0.884444,0,   -0.357409,0.917659,-0.173669,0,   -0.809138,-0.397112,-0.433127,0,   20.7743,3.37462,-20.4527,1);
//bMotionBlur=0, bGeometryMotion=0
ei_motion(0);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:pCube2_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:pCube1|Man:pCubeShape1
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:pCube1
//childCount=2
//child(0):|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:pCube1|Man:pCubeShape1
//child(1):|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:pCube1|polySurfaceShape2
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:pCube1|Man:pCubeShape1
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:pCube1");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:pCube1|Man:pCubeShape1 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:pCube1|Man:pCubeShape1
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:pCube1|Man:pCubeShape1
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:pCube1|Man:pCubeShape1");
ei_transform(0.129302,-0.150535,-0.980112,0,   -0.0935523,0.982149,-0.163189,0,   -0.987182,-0.112792,-0.112911,0,   20.0807,7.10515,-21.131,1);
//bMotionBlur=0, bGeometryMotion=0
ei_motion(0);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:pCube1_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//--------------------------
//ribNode->name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:pCube5|Man:pCubeShape5
//ribNode's transform node=|Man:JAP|Man:JapSkeleton|Man:hips|Man:pCube5
//childCount=2
//child(0):|Man:JAP|Man:JapSkeleton|Man:hips|Man:pCube5|Man:pCubeShape5
//child(1):|Man:JAP|Man:JapSkeleton|Man:hips|Man:pCube5|Man:polySurfaceShape5
//ribNode->object(0)->getDataPtr()->getFullPathName()=|Man:JAP|Man:JapSkeleton|Man:hips|Man:pCube5|Man:pCubeShape5
ei_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:pCube5");
//|Man:JAP|Man:JapSkeleton|Man:hips|Man:pCube5|Man:pCubeShape5 has many shading groups. liquid only support one martial per mesh, so I use the 1st material
//materials are: Man:lambert3SG,
ei_mtl("Man:lambert3SG");
//shape name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:pCube5|Man:pCubeShape5
//shape full path name=|Man:JAP|Man:JapSkeleton|Man:hips|Man:pCube5|Man:pCubeShape5
ei_element("|Man:JAP|Man:JapSkeleton|Man:hips|Man:pCube5|Man:pCubeShape5");
ei_transform(0.208704,0.171801,1.8056,0,   -0.545515,1.7393,-0.102438,0,   -1.72977,-0.527793,0.250158,0,   19.9591,8.33573,-20.1895,1);
//bMotionBlur=0, bGeometryMotion=0
ei_motion(0);
{//light group(light-link group)
const char *null_token = NULL;
ei_declare("lightgroup", EI_CONSTANT, EI_TYPE_TOKEN, &null_token);
const char *lightgroup_token = ei_token("|Man:JAP|Man:JapSkeleton|Man:hips|Man:pCube5_lightgroup");
ei_variable("lightgroup", &lightgroup_token );
}
ei_end_instance();

//Renderer::worldEpilogue()
ei_instgroup("perspShape");
//camera
ei_add_instance("|persp");
ei_add_instance("|renderCam");
//light(s)
ei_add_instance("|pointLight1|pointLightShape1");
ei_add_instance("|pointLight2|pointLightShape2");
//mesh(s)
ei_add_instance("|Man:JAP|Man:JapCnt|Man:HipsEff");
ei_add_instance("|Man:JAP|Man:JapMod|Man:pCube26");
ei_add_instance("|Man:JAP|Man:JapMod|Man:pCube6");
ei_add_instance("|Man:JAP|Man:JapMod|Man:pCube8");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:joint86|Man:leftFootIndex1|Man:pCube4");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:leftFoot|Man:pCube3");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:leftLeg|Man:pCube2");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:leftUpLeg|Man:pCube1");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:pCube5");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:pCube1");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:pCube2");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:joint87|Man:rightFootIndex1|Man:pCube4");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:rightUpLeg|Man:rightLeg|Man:rightFoot|Man:pCube3");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:leftHandPinky3|Man:pCube11");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:leftHandPinky2|Man:pCube10");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint13|Man:leftHandPinky1|Man:pCube9");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:leftHandRing3|Man:pCube12");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:leftHandRing2|Man:pCube13");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint18|Man:leftHandRing1|Man:pCube14");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:leftHandMiddle3|Man:pCube15");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:leftHandMiddle2|Man:pCube16");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint23|Man:leftHandMiddle1|Man:pCube17");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:leftHandIndex3|Man:pCube18");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:leftHandIndex2|Man:pCube19");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:joint28|Man:leftHandIndex1|Man:pCube20");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:leftHandThumb3|Man:pCube21");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:leftHandThumb2|Man:pCube22");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:leftHandThumb1|Man:pCube23");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:pCube24");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:leftForearm|Man:leftForeArmRoll|Man:leftHand|Man:pCube25");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:leftShoulder|Man:leftArm|Man:pCube7");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:pCube7");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:pCube9");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:pCube10");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint13|Man:rightHandPinky1|Man:rightHandPinky2|Man:rightHandPinky3|Man:pCube11");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:pCube14");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:pCube13");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint18|Man:rightHandRing1|Man:rightHandRing2|Man:rightHandRing3|Man:pCube12");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:pCube17");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:pCube16");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint23|Man:rightHandMiddle1|Man:rightHandMiddle2|Man:rightHandMiddle3|Man:pCube15");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:pCube20");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:pCube19");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:joint28|Man:rightHandIndex1|Man:rightHandIndex2|Man:rightHandIndex3|Man:pCube18");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube24");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:pCube25");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:pCube23");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:pCube22");
ei_add_instance("|Man:JAP|Man:JapSkeleton|Man:hips|Man:spine|Man:spine1|Man:xxy|Man:xxx|Man:rightShoulder|Man:rightArm|Man:rightForearm|Man:rightForeArmRoll|Man:rightHand|Man:rightHandThumb1|Man:rightHandThumb2|Man:rightHandThumb3|Man:pCube21");
ei_add_instance("|Man:JAP|Man:ground");
ei_end_instgroup();
//ei_connection(con);
//ei_render( "perspShape", "|persp", "perspShape_option" );
ei_render( "perspShape", "|persp", "perspShape_option" );
ei_end_context();
//------------------------------------------------

