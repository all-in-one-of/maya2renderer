//------------------------------------------------
char *null_token = NULL;
eiInt defaultInt = 0;
//------------------------------------------------

ei_context();
ei_verbose(6);
ei_link("eiIMG");
ei_link("eiSHADER");
ei_link("eiSHADER_maya");
//----------------shader_for_test begin---
ei_shader("maya_surfaceShader", "liquid_shader_for_test");
ei_shader_param_vector("outColor",1,0,0);
ei_end_shader();
ei_material("liquid_material_for_test");
ei_surface_shader("liquid_shader_for_test");
ei_end_material();
//----------------shader_for_test end ---
//    Generated by Liquid v2.3.5 (buildtime=20:51:12.30)
//    Scene : R:/MyDocuments/maya/projects/default/texture_anim2
//    User  : yaoyansi

//############################### option #
ei_options("perspShape_option");
ei_contrast(0.05);
ei_samples(0,16);
ei_filter(4,3);
//transform motion=0, deform motion=0
ei_motion(0);
ei_trace_depth(4,4,4,4,4,4);
ei_displace(0);
ei_face(3);
ei_end_options();
// maya settings: focal=35.000000, aperture = 36.000000, aspect=1.333333
//Depth of Field on camera "|persp|perspShape" is turned off in Maya

//############################### camera #
ei_camera("|persp|perspShape_object");
//beauty channel
ei_output("R:/MyDocuments/maya/projects/default/rmanpix/texture_anim2.perspShape.629.elvishray.bmp","bmp",1);
//mode=rgb
ei_output_variable("color",11);
ei_end_output();
// AOV
// AOV end
ei_focal(35);
ei_aperture(36);
ei_aspect(1.33333);
ei_resolution(200,150);
ei_clip(0.01,10000);
ei_end_camera();
//----------------------------------
ei_instance("|persp|perspShape");
ei_element("|persp|perspShape_object");
ei_transform(0.999391,-3.46945e-018,0.0348995,0,   0.0347292,0.0986537,-0.994516,0,   -0.00344296,0.995122,0.0985936,0,   1.19645,17.8212,2.39937,1);
ei_end_instance();

ei_shader("maya_place2dTexture", "place2dTexture1");
ei_shader_param_scalar("coverageU",1);
ei_shader_param_scalar("coverageV",1);
ei_shader_param_bool("mirrorU",0);
ei_shader_param_bool("mirrorV",0);
ei_shader_param_scalar("noiseU",0);
ei_shader_param_scalar("noiseV",0);
ei_shader_param_scalar("offsetU",0);
ei_shader_param_scalar("offsetV",0);
ei_shader_param_scalar("repeatU",1);
ei_shader_param_scalar("repeatV",1);
ei_shader_param_scalar("rotateFrame",0);
ei_shader_param_scalar("rotateUV",0);
ei_shader_param_bool("stagger",0);
ei_shader_param_scalar("translateFrameU",0);
ei_shader_param_scalar("translateFrameV",0);
ei_shader_param_scalar("wrapU",1);
ei_shader_param_scalar("wrapV",1);
ei_shader_param_vector("outUV",0,0,0);
ei_end_shader();

ei_texture("E:/dev/Autodesk/maya/myplugin/project/liquid_/test/animation_test/MoxMotionMeetsFBIK/MoxMotionMeetsFBIK/sourceimages/FBIK.0001.tif");
ei_file_texture("E:/dev/Autodesk/maya/myplugin/project/liquid_/test/animation_test/MoxMotionMeetsFBIK/MoxMotionMeetsFBIK/sourceimages/FBIK.0001.tif.tex", 0);
ei_end_texture();
ei_shader("maya_file", "file1");
ei_shader_param_scalar("alphaGain",1);
ei_shader_param_bool("alphaIsLuminance",0);
ei_shader_param_scalar("alphaOffset",0);
ei_shader_param_vector("colorGain",1,1,1);
ei_shader_param_vector("colorOffset",0,0,0);
ei_shader_param_vector("defaultColor",0.5,0.5,0.5);
ei_shader_link_param("uvCoord","place2dTexture1","outUV");
ei_shader_param_texture("fileTextureName","E:/dev/Autodesk/maya/myplugin/project/liquid_/test/animation_test/MoxMotionMeetsFBIK/MoxMotionMeetsFBIK/sourceimages/FBIK.0001.tif");
ei_shader_param_index("filterType",3);
ei_shader_param_scalar("filter",1);
ei_shader_param_scalar("filterOffset",0);
ei_shader_param_bool("invert",0);
ei_shader_param_bool("fileHasAlpha",0);
ei_shader_param_scalar("outAlpha",1);
ei_shader_param_vector("outColor",0,0,0);
ei_shader_param_vector("outTransparency",0,0,0);
ei_end_shader();

ei_shader("maya_lambert_transparent", "lambert4");
ei_shader_link_param("Cs","file1","outColor");
ei_shader_param_vector("transparency",0,0,0);
ei_shader_param_vector("ambientColor",0,0,0);
ei_shader_param_vector("incandescence",0,0,0);
ei_shader_param_scalar("diffusion",1);
ei_shader_param_vector("outColor",0,0,0);
ei_shader_param_vector("outTransparency",0,0,0);
ei_end_shader();

ei_material("lambert4SG");
ei_surface_shader("lambert4");
ei_end_material();

//worldPrologue

// Renderer::exportLight("_pointLight1_pointLightShape1");

// Renderer::exportPointLight()
ei_shader("pointlight", "|pointLight1|pointLightShape1_shader");
ei_shader_param_vector("lightcolor",1,1,1);
ei_shader_param_scalar("intensity",1);
ei_end_shader();
ei_light("|pointLight1|pointLightShape1_object");
ei_light_shader("|pointLight1|pointLightShape1_shader");
ei_origin(0,0,0);
ei_end_light();
ei_instance("|pointLight1|pointLightShape1");
ei_element("|pointLight1|pointLightShape1_object");
ei_transform(1,0,0,0,   0,1,0,0,   0,0,1,0,   0,13.7224,-0.0628901,1);
ei_declare("|locator1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_declare("|locator1|pPlane1_lightgroup", EI_CONSTANT, EI_TYPE_INT, &defaultInt);
ei_end_instance();
//Renderer::worldEpilogue()
ei_instgroup("perspShape");
//camera
ei_add_instance("|persp|perspShape");
//light(s)
//mesh(s)
ei_end_instgroup();
//ei_connection(con);
ei_render( "perspShape", "|persp|perspShape", "perspShape_option" );
ei_end_context();
//------------------------------------------------

