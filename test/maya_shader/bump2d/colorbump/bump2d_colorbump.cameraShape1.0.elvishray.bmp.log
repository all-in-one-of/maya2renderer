  >1 liqRibTranslator::doIt()-->if(checkSettings()==true)
    >2 RendererMgr::setFactory(elvishray)
    >2 RendererMgr::install()
      >3 Renderer::Renderer()
    >2 RendererMgr::prologue()
    >2 Renderer::openLog(R:/MyDocuments/maya/projects/default/rib/bump2d_colorbump.cameraShape1.1.elvishray.bmp)
      >3 OutputMgr::setOutputImagePath(R:/MyDocuments/maya/projects/default/rib/bump2d_colorbump.cameraShape1.1.elvishray.bmp)
      >3 OutputMgr::add(0)
      >3 OutputMgr::add(1)
      >3 OutputMgr::add(2)
      >3 OutputMgr::init()
        >4 OutputMgr::createOutput(0)
          >5 OutputBase::OutputBase()
          >5 OutputCall::OutputCall()
        >4 OutputMgr::createOutput(1)
          >5 OutputBase::OutputBase()
          >5 OutputESS::OutputESS(R:/MyDocuments/maya/projects/default/rib/bump2d_colorbump.cameraShape1.1.elvishray.bmp)
        >4 OutputMgr::createOutput(2)
          >5 OutputBase::OutputBase()
          >5 OutputESA::OutputESA(R:/MyDocuments/maya/projects/default/rib/bump2d_colorbump.cameraShape1.1.elvishray.bmp)
        >4 OutputCall::init()
        >4 OutputESS::init()
        >4 OutputESA::init()
    >2 Renderer::canExport()
    >2 liqRibTranslatorNew::_doItNew(args,defaultRenderLayer)
      >3 liqRibTranslatorNew::_doItNewWithoutRenderScript(arg,defaultRenderLayer)
        >4 liqRibTranslator::verifyOutputDirectories()
          >5 liqRibTranslator::verifyResourceDir(RIB, rib, 0)
          >5 liqRibTranslator::verifyResourceDir(Texture, rmantex, 0)
          >5 liqRibTranslator::verifyResourceDir(Picture, rmanpix/, 0)
          >5 liqRibTranslator::verifyResourceDir(Temp Files, rmantmp/, 0)
        >4 liqRibTranslator::generateRenderScriptName()
        >4 liqRibTranslator::generateTempMayaSceneName()
        >4 tFrameScriptJobMgr::setCommonParameters(bump2d_colorbumpFrame0)
        >4 liqRibTranslatorNew::processOneFrame(0, liqglo__)
          >5 liqRibTranslatorNew::buildJobs__()
            >6 liqRibTranslatorNew::buildShadowJobs__()
              >7 tLightMgr::buildShadowJob(thisJob___, 0)
              >7 tLightMgr::buildShadowCameraJob(thisJob___, 0)
            >6 tRibCameraMgr::gatherDataForJob(liqglo___, ,jobList__,0,1)
            >6 liqRibTranslator::generateFileName(4,cameraShape1)
            >6 liqRibTranslator::generateFileName(5,cameraShape1)
              >7 liqRibTranslator::generateImageName(, job(cameraShape1)), 
          >5 liqRibTranslatorNew::calaculateSamplingTime(1)
          >5 liqRibTranslatorNew::scanScene__(1,0)
            >6 tLightMgr::scanScene(1,0, htable__, count, returnStatus__)
              >7 liqRibHT::insert(|pointLight3|pointLightShape3,lframe,0,3,0,matrix,,-1)
                >8 liqRibHT::hash(|pointLight3|pointLightShape3,0)
                >8 liqRibHT::find(|pointLight3|pointLightShape3,|pointLight3|pointLightShape3,3)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pointLight3|pointLightShape3,0,3,-1)
                  >9 liqRibNode::parseVectorAttributes(pointLight3,,2)
                  >9 liqRibNode::parseVectorAttributes(pointLight3,,3)
                  >9 liqRibNode::parseVectorAttributes(pointLight3,,4)
                  >9 liqRibNode::findShadingGroup(|pointLight3|pointLightShape3,3)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pointLight3|pointLightShape3,3)
                    >10 liqRibLightData::liqRibLightData(|pointLight3|pointLightShape3)
                      >11 liqRibData::addAdditionalSurfaceParameters(pointLightShape3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 tLocatorMgr::scanScene(1,0,htable__,count__,returnStatus__)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
              >7 liqRibHT::insert(|persp|perspShape,lframe,0,0,1,matrix,,-1)
                >8 liqRibHT::hash(|persp|perspShape,1)
                >8 liqRibHT::find(|persp|perspShape,|persp|perspShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|persp|perspShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(persp,,2)
                  >9 liqRibNode::parseVectorAttributes(persp,,3)
                  >9 liqRibNode::parseVectorAttributes(persp,,4)
                  >9 liqRibNode::findShadingGroup(|persp|perspShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|persp|perspShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
              >7 liqRibHT::insert(|top|topShape,lframe,0,0,2,matrix,,-1)
                >8 liqRibHT::hash(|top|topShape,2)
                >8 liqRibHT::find(|top|topShape,|top|topShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|top|topShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(top,,2)
                  >9 liqRibNode::parseVectorAttributes(top,,3)
                  >9 liqRibNode::parseVectorAttributes(top,,4)
                  >9 liqRibNode::findShadingGroup(|top|topShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|top|topShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
              >7 liqRibHT::insert(|front|frontShape,lframe,0,0,3,matrix,,-1)
                >8 liqRibHT::hash(|front|frontShape,3)
                >8 liqRibHT::find(|front|frontShape,|front|frontShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|front|frontShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(front,,2)
                  >9 liqRibNode::parseVectorAttributes(front,,3)
                  >9 liqRibNode::parseVectorAttributes(front,,4)
                  >9 liqRibNode::findShadingGroup(|front|frontShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|front|frontShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
              >7 liqRibHT::insert(|side|sideShape,lframe,0,0,4,matrix,,-1)
                >8 liqRibHT::hash(|side|sideShape,4)
                >8 liqRibHT::find(|side|sideShape,|side|sideShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|side|sideShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(side,,2)
                  >9 liqRibNode::parseVectorAttributes(side,,3)
                  >9 liqRibNode::parseVectorAttributes(side,,4)
                  >9 liqRibNode::findShadingGroup(|side|sideShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|side|sideShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
              >7 liqRibHT::insert(|camera1|cameraShape1,lframe,0,0,5,matrix,,-1)
                >8 liqRibHT::hash(|camera1|cameraShape1,5)
                >8 liqRibHT::find(|camera1|cameraShape1,|camera1|cameraShape1,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|camera1|cameraShape1,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(camera1,,2)
                  >9 liqRibNode::parseVectorAttributes(camera1,,3)
                  >9 liqRibNode::parseVectorAttributes(camera1,,4)
                  >9 liqRibNode::findShadingGroup(|camera1|cameraShape1,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|camera1|cameraShape1,0)
                    >10 liqRibCameraData::liqRibCameraData(|camera1|cameraShape1)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
              >7 liqRibHT::insert(|pPlane5|pPlaneShape5,lframe,0,0,6,matrix,,-1)
                >8 liqRibHT::hash(|pPlane5|pPlaneShape5,6)
                >8 liqRibHT::find(|pPlane5|pPlaneShape5,|pPlane5|pPlaneShape5,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pPlane5|pPlaneShape5,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(pPlane5,,2)
                  >9 liqRibNode::parseVectorAttributes(pPlane5,,3)
                  >9 liqRibNode::parseVectorAttributes(pPlane5,,4)
                  >9 liqRibNode::findShadingGroup(|pPlane5|pPlaneShape5,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getColor(&shader,&color)
                  >9 liqRibNode::getOpacity(&shader,&color)
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pPlane5|pPlaneShape5,0)
                    >10 liqRibMeshData::liqRibMeshData(|pPlane5|pPlaneShape5)
                      >11 liqRibData::addAdditionalSurfaceParameters(pPlaneShape5)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 liqRibTranslatorNew::dealwithParticleInstancedObjects(0,1,7)
            >6 tCameraMgr::getCameraData(cameraShape1,0)
              >7 tCameraMgr::getCameraInfo(|camera1|cameraShape1,)
                >8 tCameraMgr::portFieldOfView(224,150,&horizontal,&vertical,&fnCamera)
                  >9 tCameraMgr::computeViewingFrustum(1.49333,,&left,&right,&bottom,&top,|camera1|cameraShape1)
              >7 tCameraMgr::getCameraFilmOffset(|camera1|cameraShape1,)
              >7 tCameraMgr::getCameraTransform(|camera1|cameraShape1,)
          >5 liqRibTranslatorNew::doTextures(size=0)
            >6 Renderer::frameEpilogue(txtList_.size=0)
          >5 liqRibTranslatorNew::doShadows(size=0)
            >6 Renderer::doShadows(shadowList_.size=0)
          >5 Renderer::setRenderScriptFormatAndCompress(0,0)
          >5 Renderer::isHeroPassReady(cameraShape1)
          >5 Renderer::HeroPassBegin(cameraShape1)
          >5 tHeroRibWriterMgr::write(liqglo___,cameraShape1,1,0)
            >6 liqRibTranslatorNew::ribPrologue__(cameraShape1)
              >7 Renderer::ribPrologue_begin(cameraShape1)
                >8 Renderer::dummyPhongShader()
              >7 Renderer::ribPrologue_comment(2.3.5,R:/MyDocuments/maya/projects/default/bump2d_colorbump,yaoyansi,time)
              >7 Renderer::ribPrologue_options(cameraShape1)
            >6 liqRibTranslatorNew::framePrologue__(1,cameraShape1)
              >7 Renderer::framePrologue(1,cameraShape1)
            >6 ShaderMgr::exportShaderGraph()
              >7 ConvertShadingNetwork::exportShaderGraph()
                >8 ConvertShadingNetwork::beforeExport()
                >8 ConvertShadingNetwork::__export()
                  >9 ConvertShadingNetwork::canShadingGroupExported(phong6SG)
                  >9 Renderer::getValidShaderPlugsInShadingGroup()
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong6SG,surfaceShader)
                    >10 ConvertShadingNetwork::canShaderExported(phong6)
                    >10 ConvertShadingNetwork::exportShaderBegin(phong6)
                    >10 ConvertShadingNetwork::convertShadingNetworkToRSL(phong6,surfaceShader)
                      >11 Visitor::initShaderData(phong6,surfaceShader)
                      >11 ConvertShadingNetwork::getUpstreamConvertibleNodes(phong6, nodes, numConnections)
                        >12 ConvertShadingNetwork::nodeIsConvertible(phong6)
                          >13 ShaderMgr::hasShaderType(phong)
                        >12 ShaderMgr::getValidConnection(phong6)
                        >12 ConvertShadingNetwork::convertibleConnection(phong6.colorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong6.colorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong6.colorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong6.colorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong6.colorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong6.colorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong6.color)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong6.color)
                        >12 ConvertShadingNetwork::convertibleConnection(phong6.transparencyR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong6.transparencyR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong6.transparencyG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong6.transparencyG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong6.transparencyB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong6.transparencyB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong6.transparency)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong6.transparency)
                        >12 ConvertShadingNetwork::convertibleConnection(phong6.ambientColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong6.ambientColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong6.ambientColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong6.ambientColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong6.ambientColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong6.ambientColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong6.ambientColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong6.ambientColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong6.incandescenceR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong6.incandescenceR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong6.incandescenceG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong6.incandescenceG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong6.incandescenceB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong6.incandescenceB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong6.incandescence)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong6.incandescence)
                        >12 ConvertShadingNetwork::convertibleConnection(phong6.normalCameraX)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong6.normalCameraX)
                        >12 ConvertShadingNetwork::convertibleConnection(phong6.normalCameraY)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong6.normalCameraY)
                        >12 ConvertShadingNetwork::convertibleConnection(phong6.normalCameraZ)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong6.normalCameraZ)
                        >12 ConvertShadingNetwork::convertibleConnection(phong6.normalCamera)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong6.normalCamera)
                          >13 ConvertShadingNetwork::nodeIsConvertible(file2)
                            >14 ShaderMgr::hasShaderType(file)
                        >12 ConvertShadingNetwork::convertibleConnection(phong6.diffuse)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong6.diffuse)
                        >12 ConvertShadingNetwork::convertibleConnection(phong6.translucence)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong6.translucence)
                        >12 ConvertShadingNetwork::convertibleConnection(phong6.translucenceDepth)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong6.translucenceDepth)
                        >12 ConvertShadingNetwork::convertibleConnection(phong6.translucenceFocus)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong6.translucenceFocus)
                        >12 ConvertShadingNetwork::convertibleConnection(phong6.cosinePower)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong6.cosinePower)
                        >12 ConvertShadingNetwork::convertibleConnection(phong6.specularColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong6.specularColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong6.specularColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong6.specularColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong6.specularColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong6.specularColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong6.specularColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong6.specularColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong6.reflectivity)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong6.reflectivity)
                        >12 ConvertShadingNetwork::convertibleConnection(phong6.reflectedColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong6.reflectedColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong6.reflectedColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong6.reflectedColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong6.reflectedColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong6.reflectedColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong6.reflectedColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong6.reflectedColor)
                        >12 ConvertShadingNetwork::convertibleConnection(phong6.matteOpacityMode)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong6.matteOpacityMode)
                        >12 ConvertShadingNetwork::convertibleConnection(phong6.matteOpacity)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong6.matteOpacity)
                        >12 ConvertShadingNetwork::convertibleConnection(phong6.reflectionLimit)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong6.reflectionLimit)
                        >12 ConvertShadingNetwork::convertibleConnection(phong6.outColorR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong6.outColorR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong6.outColorG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong6.outColorG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong6.outColorB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong6.outColorB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong6.outColor)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong6.outColor)
                          >13 ConvertShadingNetwork::nodeIsConvertible(phong6SG)
                            >14 ShaderMgr::hasShaderType(shadingEngine)
                        >12 ConvertShadingNetwork::convertibleConnection(phong6.outTransparencyR)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong6.outTransparencyR)
                        >12 ConvertShadingNetwork::convertibleConnection(phong6.outTransparencyG)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong6.outTransparencyG)
                        >12 ConvertShadingNetwork::convertibleConnection(phong6.outTransparencyB)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong6.outTransparencyB)
                        >12 ConvertShadingNetwork::convertibleConnection(phong6.outTransparency)
                          >13 ConvertShadingNetwork::ensurePlugExists(phong6.outTransparency)
                        >12 ConvertShadingNetwork::getUpstreamConvertibleNodes(file2, nodes, numConnections)
                          >13 ConvertShadingNetwork::nodeIsConvertible(file2)
                            >14 ShaderMgr::hasShaderType(file)
                          >13 ShaderMgr::getValidConnection(file2)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.alphaGain)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.alphaGain)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.alphaIsLuminance)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.alphaIsLuminance)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.alphaOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.alphaOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.colorGainR)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.colorGainR)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.colorGainG)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.colorGainG)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.colorGainB)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.colorGainB)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.colorGain)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.colorGain)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.colorOffsetR)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.colorOffsetR)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.colorOffsetG)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.colorOffsetG)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.colorOffsetB)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.colorOffsetB)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.colorOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.colorOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.defaultColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.defaultColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.defaultColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.defaultColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.defaultColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.defaultColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.defaultColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.defaultColor)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.fileTextureName)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.fileTextureName)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.filterType)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.filterType)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.filter)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.filter)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.filterOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.filterOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.invert)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.invert)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.uCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.uCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.vCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.vCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.uvCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.uvCoord)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture3)
                              >15 ShaderMgr::hasShaderType(place2dTexture)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.fileHasAlpha)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.fileHasAlpha)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.outAlpha)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.outAlpha)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.outColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.outColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.outColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.outColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.outColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.outColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.outColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.outColor)
                            >14 ConvertShadingNetwork::nodeIsConvertible(phong6)
                              >15 ShaderMgr::hasShaderType(phong)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.outTransparencyR)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.outTransparencyR)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.outTransparencyG)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.outTransparencyG)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.outTransparencyB)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.outTransparencyB)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.outTransparency)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.outTransparency)
                          >13 ConvertShadingNetwork::getUpstreamConvertibleNodes(place2dTexture3, nodes, numConnections)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture3)
                              >15 ShaderMgr::hasShaderType(place2dTexture)
                            >14 ShaderMgr::getValidConnection(place2dTexture3)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture3.uCoord)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.uCoord)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture3.vCoord)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.vCoord)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture3.uvCoord)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.uvCoord)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture3.coverageU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.coverageU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture3.coverageV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.coverageV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture3.coverage)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.coverage)
                              >15 ConvertShadingNetwork::nodeIsConvertible(file2)
                                >16 ShaderMgr::hasShaderType(file)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture3.mirrorU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.mirrorU)
                              >15 ConvertShadingNetwork::nodeIsConvertible(file2)
                                >16 ShaderMgr::hasShaderType(file)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture3.mirrorV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.mirrorV)
                              >15 ConvertShadingNetwork::nodeIsConvertible(file2)
                                >16 ShaderMgr::hasShaderType(file)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture3.noiseU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.noiseU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture3.noiseV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.noiseV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture3.noiseUV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.noiseUV)
                              >15 ConvertShadingNetwork::nodeIsConvertible(file2)
                                >16 ShaderMgr::hasShaderType(file)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture3.offsetU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.offsetU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture3.offsetV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.offsetV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture3.offset)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.offset)
                              >15 ConvertShadingNetwork::nodeIsConvertible(file2)
                                >16 ShaderMgr::hasShaderType(file)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture3.repeatU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.repeatU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture3.repeatV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.repeatV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture3.repeatUV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.repeatUV)
                              >15 ConvertShadingNetwork::nodeIsConvertible(file2)
                                >16 ShaderMgr::hasShaderType(file)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture3.rotateFrame)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.rotateFrame)
                              >15 ConvertShadingNetwork::nodeIsConvertible(file2)
                                >16 ShaderMgr::hasShaderType(file)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture3.rotateUV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.rotateUV)
                              >15 ConvertShadingNetwork::nodeIsConvertible(file2)
                                >16 ShaderMgr::hasShaderType(file)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture3.stagger)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.stagger)
                              >15 ConvertShadingNetwork::nodeIsConvertible(file2)
                                >16 ShaderMgr::hasShaderType(file)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture3.translateFrameU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.translateFrameU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture3.translateFrameV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.translateFrameV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture3.translateFrame)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.translateFrame)
                              >15 ConvertShadingNetwork::nodeIsConvertible(file2)
                                >16 ShaderMgr::hasShaderType(file)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture3.wrapU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.wrapU)
                              >15 ConvertShadingNetwork::nodeIsConvertible(file2)
                                >16 ShaderMgr::hasShaderType(file)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture3.wrapV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.wrapV)
                              >15 ConvertShadingNetwork::nodeIsConvertible(file2)
                                >16 ShaderMgr::hasShaderType(file)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture3.outU)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.outU)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture3.outV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.outV)
                            >14 ConvertShadingNetwork::convertibleConnection(place2dTexture3.outUV)
                              >15 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.outUV)
                              >15 ConvertShadingNetwork::nodeIsConvertible(file2)
                                >16 ShaderMgr::hasShaderType(file)
                      >11 Visitor::preOutput(phong6)
                      >11 Visitor::outputBegin(phong6)
                      >11 ConvertShadingNetwork::traverseGraphAndOutputNodeFunctions( nodes, numConnections)
                        >12 Visitor::outputUpstreamShader(place2dTexture3)
                          >13 ShaderOutputVisitor::_outputUpstreamShader(place2dTexture3,place2dTexture)
                            >14 Visitor::visitPlace2dTexture(place2dTexture3)
                              >15 OutputHelper::beginRSL(maya_place2dTexture,place2dTexture3)
                              >15 ShaderMgr::convertibleConnection(place2dTexture3.uvCoord)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture3.uvCoord)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.uvCoord)
                              >15 ShaderMgr::convertibleConnection(place2dTexture3.coverageU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture3.coverageU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.coverageU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture3.coverageV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture3.coverageV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.coverageV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture3.mirrorU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture3.mirrorU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.mirrorU)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file2)
                                    >18 ShaderMgr::hasShaderType(file)
                              >15 ShaderMgr::convertibleConnection(place2dTexture3.mirrorV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture3.mirrorV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.mirrorV)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file2)
                                    >18 ShaderMgr::hasShaderType(file)
                              >15 ShaderMgr::convertibleConnection(place2dTexture3.noiseU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture3.noiseU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.noiseU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture3.noiseV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture3.noiseV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.noiseV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture3.offsetU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture3.offsetU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.offsetU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture3.offsetV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture3.offsetV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.offsetV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture3.repeatU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture3.repeatU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.repeatU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture3.repeatV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture3.repeatV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.repeatV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture3.rotateFrame)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture3.rotateFrame)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.rotateFrame)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file2)
                                    >18 ShaderMgr::hasShaderType(file)
                              >15 ShaderMgr::convertibleConnection(place2dTexture3.rotateUV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture3.rotateUV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.rotateUV)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file2)
                                    >18 ShaderMgr::hasShaderType(file)
                              >15 ShaderMgr::convertibleConnection(place2dTexture3.stagger)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture3.stagger)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.stagger)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file2)
                                    >18 ShaderMgr::hasShaderType(file)
                              >15 ShaderMgr::convertibleConnection(place2dTexture3.translateFrameU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture3.translateFrameU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.translateFrameU)
                              >15 ShaderMgr::convertibleConnection(place2dTexture3.translateFrameV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture3.translateFrameV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.translateFrameV)
                              >15 ShaderMgr::convertibleConnection(place2dTexture3.wrapU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture3.wrapU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.wrapU)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file2)
                                    >18 ShaderMgr::hasShaderType(file)
                              >15 ShaderMgr::convertibleConnection(place2dTexture3.wrapV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture3.wrapV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.wrapV)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file2)
                                    >18 ShaderMgr::hasShaderType(file)
                              >15 ShaderMgr::convertibleConnection(place2dTexture3.outUV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture3.outUV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.outUV)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file2)
                                    >18 ShaderMgr::hasShaderType(file)
                              >15 OutputHelper::endRSL()
                        >12 ShaderMgr::getValidConnection(place2dTexture3)
                        >12 ConvertShadingNetwork::decrementDownstreamConnections(place2dTexture3, nodes, numConnections, validConnections)
                        >12 ConvertShadingNetwork::getNodeVariables(place2dTexture3, validConnections,  inputSrc, inputDes, outputSrc)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture3.uCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.uCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture3.vCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.vCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture3.uvCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.uvCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture3.coverageU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.coverageU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture3.coverageV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.coverageV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture3.coverage)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.coverage)
                            >14 ConvertShadingNetwork::nodeIsConvertible(file2)
                              >15 ShaderMgr::hasShaderType(file)
                          >13 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture3,coverage,place2dTexture3.coverage, outputVars)
                            >14 Visitor::addShaderMethodVariavles(place2dTexture3,coverage,float,2,)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture3.mirrorU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.mirrorU)
                            >14 ConvertShadingNetwork::nodeIsConvertible(file2)
                              >15 ShaderMgr::hasShaderType(file)
                          >13 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture3,mirrorU,place2dTexture3.mirrorU, outputVars)
                            >14 Visitor::addShaderMethodVariavles(place2dTexture3,mirrorU,float,-1,)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture3.mirrorV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.mirrorV)
                            >14 ConvertShadingNetwork::nodeIsConvertible(file2)
                              >15 ShaderMgr::hasShaderType(file)
                          >13 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture3,mirrorV,place2dTexture3.mirrorV, outputVars)
                            >14 Visitor::addShaderMethodVariavles(place2dTexture3,mirrorV,float,-1,)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture3.noiseU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.noiseU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture3.noiseV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.noiseV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture3.noiseUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.noiseUV)
                            >14 ConvertShadingNetwork::nodeIsConvertible(file2)
                              >15 ShaderMgr::hasShaderType(file)
                          >13 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture3,noiseUV,place2dTexture3.noiseUV, outputVars)
                            >14 Visitor::addShaderMethodVariavles(place2dTexture3,noiseUV,float,2,)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture3.offsetU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.offsetU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture3.offsetV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.offsetV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture3.offset)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.offset)
                            >14 ConvertShadingNetwork::nodeIsConvertible(file2)
                              >15 ShaderMgr::hasShaderType(file)
                          >13 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture3,offset,place2dTexture3.offset, outputVars)
                            >14 Visitor::addShaderMethodVariavles(place2dTexture3,offset,float,2,)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture3.repeatU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.repeatU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture3.repeatV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.repeatV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture3.repeatUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.repeatUV)
                            >14 ConvertShadingNetwork::nodeIsConvertible(file2)
                              >15 ShaderMgr::hasShaderType(file)
                          >13 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture3,repeatUV,place2dTexture3.repeatUV, outputVars)
                            >14 Visitor::addShaderMethodVariavles(place2dTexture3,repeatUV,float,2,)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture3.rotateFrame)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.rotateFrame)
                            >14 ConvertShadingNetwork::nodeIsConvertible(file2)
                              >15 ShaderMgr::hasShaderType(file)
                          >13 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture3,rotateFrame,place2dTexture3.rotateFrame, outputVars)
                            >14 Visitor::addShaderMethodVariavles(place2dTexture3,rotateFrame,float,-1,)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture3.rotateUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.rotateUV)
                            >14 ConvertShadingNetwork::nodeIsConvertible(file2)
                              >15 ShaderMgr::hasShaderType(file)
                          >13 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture3,rotateUV,place2dTexture3.rotateUV, outputVars)
                            >14 Visitor::addShaderMethodVariavles(place2dTexture3,rotateUV,float,-1,)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture3.stagger)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.stagger)
                            >14 ConvertShadingNetwork::nodeIsConvertible(file2)
                              >15 ShaderMgr::hasShaderType(file)
                          >13 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture3,stagger,place2dTexture3.stagger, outputVars)
                            >14 Visitor::addShaderMethodVariavles(place2dTexture3,stagger,float,-1,)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture3.translateFrameU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.translateFrameU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture3.translateFrameV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.translateFrameV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture3.translateFrame)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.translateFrame)
                            >14 ConvertShadingNetwork::nodeIsConvertible(file2)
                              >15 ShaderMgr::hasShaderType(file)
                          >13 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture3,translateFrame,place2dTexture3.translateFrame, outputVars)
                            >14 Visitor::addShaderMethodVariavles(place2dTexture3,translateFrame,float,2,)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture3.wrapU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.wrapU)
                            >14 ConvertShadingNetwork::nodeIsConvertible(file2)
                              >15 ShaderMgr::hasShaderType(file)
                          >13 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture3,wrapU,place2dTexture3.wrapU, outputVars)
                            >14 Visitor::addShaderMethodVariavles(place2dTexture3,wrapU,float,-1,)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture3.wrapV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.wrapV)
                            >14 ConvertShadingNetwork::nodeIsConvertible(file2)
                              >15 ShaderMgr::hasShaderType(file)
                          >13 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture3,wrapV,place2dTexture3.wrapV, outputVars)
                            >14 Visitor::addShaderMethodVariavles(place2dTexture3,wrapV,float,-1,)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture3.outU)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.outU)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture3.outV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.outV)
                          >13 ConvertShadingNetwork::convertibleConnection(place2dTexture3.outUV)
                            >14 ConvertShadingNetwork::ensurePlugExists(place2dTexture3.outUV)
                            >14 ConvertShadingNetwork::nodeIsConvertible(file2)
                              >15 ShaderMgr::hasShaderType(file)
                          >13 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture3,outUV,place2dTexture3.outUV, outputVars)
                            >14 Visitor::addShaderMethodVariavles(place2dTexture3,outUV,float,2,)
                        >12 Visitor::addShaderMethodBody(place2dTexture3,,,place2dTexture3.coverage124place2dTexture3.mirrorU124place2dTexture3.mirrorV124place2dTexture3.noiseUV124place2dTexture3.offset124place2dTexture3.repeatUV124place2dTexture3.rotateFrame124place2dTexture3.rotateUV124place2dTexture3.stagger124place2dTexture3.translateFrame124place2dTexture3.wrapU124place2dTexture3.wrapV124place2dTexture3.outUV124)
                        >12 Visitor::outputUpstreamShader(file2)
                          >13 ShaderOutputVisitor::_outputUpstreamShader(file2,file)
                            >14 Visitor::visitFile(file2)
                              >15 OutputHelper::beginRSL(maya_file,file2)
                              >15 ShaderMgr::convertibleConnection(file2.alphaGain)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.alphaGain)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.alphaGain)
                              >15 ShaderMgr::convertibleConnection(file2.alphaIsLuminance)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.alphaIsLuminance)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.alphaIsLuminance)
                              >15 ShaderMgr::convertibleConnection(file2.alphaOffset)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.alphaOffset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.alphaOffset)
                              >15 ShaderMgr::convertibleConnection(file2.colorGain)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.colorGain)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.colorGain)
                              >15 ShaderMgr::convertibleConnection(file2.colorOffset)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.colorOffset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.colorOffset)
                              >15 ShaderMgr::convertibleConnection(file2.defaultColor)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.defaultColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.defaultColor)
                              >15 ShaderMgr::convertibleConnection(file2.filterType)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.filterType)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.filterType)
                              >15 ShaderMgr::convertibleConnection(file2.filter)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.filter)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.filter)
                              >15 ShaderMgr::convertibleConnection(file2.filterOffset)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.filterOffset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.filterOffset)
                              >15 ShaderMgr::convertibleConnection(file2.invert)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.invert)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.invert)
                              >15 ShaderMgr::convertibleConnection(file2.uvCoord)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.uvCoord)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.uvCoord)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(place2dTexture3)
                                    >18 ShaderMgr::hasShaderType(place2dTexture)
                              >15 ShaderMgr::convertibleConnection(file2.fileHasAlpha)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.fileHasAlpha)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.fileHasAlpha)
                              >15 ShaderMgr::convertibleConnection(file2.outAlpha)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.outAlpha)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.outAlpha)
                              >15 ShaderMgr::convertibleConnection(file2.outColor)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.outColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.outColor)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(phong6)
                                    >18 ShaderMgr::hasShaderType(phong)
                              >15 ShaderMgr::convertibleConnection(file2.outTransparency)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.outTransparency)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.outTransparency)
                              >15 OutputHelper::endRSL()
                        >12 ShaderMgr::getValidConnection(file2)
                        >12 ConvertShadingNetwork::decrementDownstreamConnections(file2, nodes, numConnections, validConnections)
                        >12 ConvertShadingNetwork::getNodeVariables(file2, validConnections,  inputSrc, inputDes, outputSrc)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.alphaGain)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.alphaGain)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.alphaIsLuminance)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.alphaIsLuminance)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.alphaOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.alphaOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.colorGainR)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.colorGainR)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.colorGainG)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.colorGainG)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.colorGainB)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.colorGainB)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.colorGain)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.colorGain)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.colorOffsetR)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.colorOffsetR)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.colorOffsetG)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.colorOffsetG)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.colorOffsetB)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.colorOffsetB)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.colorOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.colorOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.defaultColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.defaultColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.defaultColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.defaultColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.defaultColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.defaultColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.defaultColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.defaultColor)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.fileTextureName)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.fileTextureName)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.filterType)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.filterType)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.filter)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.filter)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.filterOffset)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.filterOffset)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.invert)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.invert)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.uCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.uCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.vCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.vCoord)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.uvCoord)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.uvCoord)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture3)
                              >15 ShaderMgr::hasShaderType(place2dTexture)
                          >13 ConvertShadingNetwork::addNodeInputVariable(file2.uvCoord, inputSrc, inputDes)
                            >14 ConvertShadingNetwork::nodeIsConvertible(place2dTexture3)
                              >15 ShaderMgr::hasShaderType(place2dTexture)
                            >14 ShaderMgr::getValidConnection(place2dTexture3)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.fileHasAlpha)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.fileHasAlpha)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.outAlpha)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.outAlpha)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.outColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.outColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.outColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.outColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.outColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.outColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.outColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.outColor)
                            >14 ConvertShadingNetwork::nodeIsConvertible(phong6)
                              >15 ShaderMgr::hasShaderType(phong)
                          >13 ConvertShadingNetwork::addNodeOutputVariable(file2,outColor,file2.outColor, outputVars)
                            >14 Visitor::addShaderMethodVariavles(file2,outColor,color,-1,)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.outTransparencyR)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.outTransparencyR)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.outTransparencyG)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.outTransparencyG)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.outTransparencyB)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.outTransparencyB)
                          >13 ConvertShadingNetwork::convertibleConnection(file2.outTransparency)
                            >14 ConvertShadingNetwork::ensurePlugExists(file2.outTransparency)
                        >12 Visitor::addShaderMethodBody(file2,place2dTexture3.outUV124,file2.uvCoord124,file2.outColor124)
                        >12 Visitor::outputUpstreamShader(phong6)
                          >13 ShaderOutputVisitor::_outputUpstreamShader(phong6,phong)
                            >14 Visitor::visitPhong(phong6)
                              >15 OutputHelper::beginRSL(maya_phong,phong6)
                              >15 ShaderMgr::convertibleConnection(phong6.ambientColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong6.ambientColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong6.ambientColor)
                              >15 ShaderMgr::convertibleConnection(phong6.color)
                                >16 ConvertShadingNetwork::convertibleConnection(phong6.color)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong6.color)
                              >15 ShaderMgr::convertibleConnection(phong6.cosinePower)
                                >16 ConvertShadingNetwork::convertibleConnection(phong6.cosinePower)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong6.cosinePower)
                              >15 ShaderMgr::convertibleConnection(phong6.diffuse)
                                >16 ConvertShadingNetwork::convertibleConnection(phong6.diffuse)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong6.diffuse)
                              >15 ShaderMgr::convertibleConnection(phong6.incandescence)
                                >16 ConvertShadingNetwork::convertibleConnection(phong6.incandescence)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong6.incandescence)
                              >15 ShaderMgr::convertibleConnection(phong6.matteOpacityMode)
                                >16 ConvertShadingNetwork::convertibleConnection(phong6.matteOpacityMode)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong6.matteOpacityMode)
                              >15 ShaderMgr::convertibleConnection(phong6.matteOpacity)
                                >16 ConvertShadingNetwork::convertibleConnection(phong6.matteOpacity)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong6.matteOpacity)
                              >15 OutputHelper::add_liq_UserDefinedNormal(phong6)
                              >15 ShaderMgr::convertibleConnection(phong6.normalCamera)
                                >16 ConvertShadingNetwork::convertibleConnection(phong6.normalCamera)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong6.normalCamera)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file2)
                                    >18 ShaderMgr::hasShaderType(file)
                              >15 ShaderMgr::convertibleConnection(phong6.specularColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong6.specularColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong6.specularColor)
                              >15 ShaderMgr::convertibleConnection(phong6.reflectivity)
                                >16 ConvertShadingNetwork::convertibleConnection(phong6.reflectivity)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong6.reflectivity)
                              >15 ShaderMgr::convertibleConnection(phong6.reflectedColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong6.reflectedColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong6.reflectedColor)
                              >15 ShaderMgr::convertibleConnection(phong6.reflectionLimit)
                                >16 ConvertShadingNetwork::convertibleConnection(phong6.reflectionLimit)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong6.reflectionLimit)
                              >15 ShaderMgr::convertibleConnection(phong6.translucence)
                                >16 ConvertShadingNetwork::convertibleConnection(phong6.translucence)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong6.translucence)
                              >15 ShaderMgr::convertibleConnection(phong6.translucenceDepth)
                                >16 ConvertShadingNetwork::convertibleConnection(phong6.translucenceDepth)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong6.translucenceDepth)
                              >15 ShaderMgr::convertibleConnection(phong6.translucenceFocus)
                                >16 ConvertShadingNetwork::convertibleConnection(phong6.translucenceFocus)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong6.translucenceFocus)
                              >15 ShaderMgr::convertibleConnection(phong6.transparency)
                                >16 ConvertShadingNetwork::convertibleConnection(phong6.transparency)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong6.transparency)
                              >15 ShaderMgr::convertibleConnection(phong6.outColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong6.outColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong6.outColor)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(phong6SG)
                                    >18 ShaderMgr::hasShaderType(shadingEngine)
                              >15 ShaderMgr::convertibleConnection(phong6.outTransparency)
                                >16 ConvertShadingNetwork::convertibleConnection(phong6.outTransparency)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong6.outTransparency)
                              >15 OutputHelper::endRSL()
                        >12 ShaderMgr::getValidConnection(phong6)
                        >12 ConvertShadingNetwork::decrementDownstreamConnections(phong6, nodes, numConnections, validConnections)
                        >12 ConvertShadingNetwork::getNodeVariables(phong6, validConnections,  inputSrc, inputDes, outputSrc)
                          >13 ConvertShadingNetwork::convertibleConnection(phong6.colorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong6.colorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong6.colorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong6.colorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong6.colorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong6.colorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong6.color)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong6.color)
                          >13 ConvertShadingNetwork::convertibleConnection(phong6.transparencyR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong6.transparencyR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong6.transparencyG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong6.transparencyG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong6.transparencyB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong6.transparencyB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong6.transparency)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong6.transparency)
                          >13 ConvertShadingNetwork::convertibleConnection(phong6.ambientColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong6.ambientColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong6.ambientColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong6.ambientColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong6.ambientColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong6.ambientColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong6.ambientColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong6.ambientColor)
                          >13 ConvertShadingNetwork::convertibleConnection(phong6.incandescenceR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong6.incandescenceR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong6.incandescenceG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong6.incandescenceG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong6.incandescenceB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong6.incandescenceB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong6.incandescence)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong6.incandescence)
                          >13 ConvertShadingNetwork::convertibleConnection(phong6.normalCameraX)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong6.normalCameraX)
                          >13 ConvertShadingNetwork::convertibleConnection(phong6.normalCameraY)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong6.normalCameraY)
                          >13 ConvertShadingNetwork::convertibleConnection(phong6.normalCameraZ)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong6.normalCameraZ)
                          >13 ConvertShadingNetwork::convertibleConnection(phong6.normalCamera)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong6.normalCamera)
                            >14 ConvertShadingNetwork::nodeIsConvertible(file2)
                              >15 ShaderMgr::hasShaderType(file)
                          >13 ConvertShadingNetwork::addNodeInputVariable(phong6.normalCamera, inputSrc, inputDes)
                            >14 ConvertShadingNetwork::nodeIsConvertible(file2)
                              >15 ShaderMgr::hasShaderType(file)
                            >14 ShaderMgr::getValidConnection(file2)
                          >13 ConvertShadingNetwork::convertibleConnection(phong6.diffuse)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong6.diffuse)
                          >13 ConvertShadingNetwork::convertibleConnection(phong6.translucence)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong6.translucence)
                          >13 ConvertShadingNetwork::convertibleConnection(phong6.translucenceDepth)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong6.translucenceDepth)
                          >13 ConvertShadingNetwork::convertibleConnection(phong6.translucenceFocus)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong6.translucenceFocus)
                          >13 ConvertShadingNetwork::convertibleConnection(phong6.cosinePower)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong6.cosinePower)
                          >13 ConvertShadingNetwork::convertibleConnection(phong6.specularColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong6.specularColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong6.specularColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong6.specularColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong6.specularColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong6.specularColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong6.specularColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong6.specularColor)
                          >13 ConvertShadingNetwork::convertibleConnection(phong6.reflectivity)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong6.reflectivity)
                          >13 ConvertShadingNetwork::convertibleConnection(phong6.reflectedColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong6.reflectedColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong6.reflectedColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong6.reflectedColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong6.reflectedColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong6.reflectedColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong6.reflectedColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong6.reflectedColor)
                          >13 ConvertShadingNetwork::convertibleConnection(phong6.matteOpacityMode)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong6.matteOpacityMode)
                          >13 ConvertShadingNetwork::convertibleConnection(phong6.matteOpacity)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong6.matteOpacity)
                          >13 ConvertShadingNetwork::convertibleConnection(phong6.reflectionLimit)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong6.reflectionLimit)
                          >13 ConvertShadingNetwork::convertibleConnection(phong6.outColorR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong6.outColorR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong6.outColorG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong6.outColorG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong6.outColorB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong6.outColorB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong6.outColor)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong6.outColor)
                            >14 ConvertShadingNetwork::nodeIsConvertible(phong6SG)
                              >15 ShaderMgr::hasShaderType(shadingEngine)
                          >13 ConvertShadingNetwork::convertibleConnection(phong6.outTransparencyR)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong6.outTransparencyR)
                          >13 ConvertShadingNetwork::convertibleConnection(phong6.outTransparencyG)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong6.outTransparencyG)
                          >13 ConvertShadingNetwork::convertibleConnection(phong6.outTransparencyB)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong6.outTransparencyB)
                          >13 ConvertShadingNetwork::convertibleConnection(phong6.outTransparency)
                            >14 ConvertShadingNetwork::ensurePlugExists(phong6.outTransparency)
                        >12 Visitor::addShaderMethodBody(phong6,file2.outColor124,phong6.normalCamera124,)
                      >11 ConvertShadingNetwork::outputShaderMethod()
                        >12 Visitor::outputShaderMethod()
                      >11 Visitor::outputEnd()
                      >11 Visitor::postOutput()
                    >10 ConvertShadingNetwork::exportShaderEnd(phong6)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong6SG,displacementShader)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong6SG,volumeShader)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong6SG,liqShadowShader)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong6SG,liqEnvironmentShader)
                  >9 ConvertShadingNetwork::exportShadingGroupBegin(phong6SG)
                  >9 ConvertShadingNetwork::outputShadingGroup(phong6SG)
                    >10 Visitor::outputShadingGroup(phong6SG)
                  >9 ConvertShadingNetwork::exportShadingGroupEnd(phong6SG)
                >8  ConvertShadingNetwork::afterExport()
            >6 liqRibTranslatorNew::worldPrologue__(cameraShape1)
              >7 Renderer::worldPrologue(cameraShape1)
            >6 liqRibTranslatorNew::lightBlock__(cameraShape1)
              >7 Renderer::writeLight_pre(|pointLight3|pointLightShape3,cameraShape1)
              >7 liqRibObj::writeObject(,cameraShape1,0)
                >8 liqRibLightData::write(,job=cameraShape1,0)
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::write(|pointLight3|pointLightShape3,,cameraShape1,ref=0)
                      >11 liqRibData::getFullPathName()
                    >10 er_writeLightData.cpp::_write(|pointLight3|pointLightShape3,cameraShape1,...)
                      >11 Renderer::exportPointLight(pointlight,pointLightShape3,...)
                        >12 addLightGroupForLight(|pointLight3|pointLightShape3)
              >7 Renderer::writeLight_post(|pointLight3|pointLightShape3,cameraShape1)
            >6 liqRibTranslatorNew::coordSysBlock__(cameraShape1)
              >7 Renderer::coordSysBlock__(cameraShape1)
            >6 liqRibTranslatorNew::objectBlock__(cameraShape1)
              >7 liqRibTranslatorNew::objectBlock_data(cameraShape1)
                >8 liqRibTranslatorNew::getShadowSetObject(cameraShape1)
                >8 liqRibTranslatorNew::oneObjectBlock_data(|camera1|cameraShape1,cameraShape1)
                  >9 Renderer::exportOneObject_data(|camera1|cameraShape1,cameraShape1)
                    >10 Renderer::_writeObject(|camera1|cameraShape1,cameraShape1,0,0,0)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_camera1_cameraShape1.1.rib,cameraShape1,0)
                        >12 liqRibCameraData::write(R:/MyDocuments/maya/projects/default/rib/_camera1_cameraShape1.1.rib,job=cameraShape1,0)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|camera1|cameraShape1,R:/MyDocuments/maya/projects/default/rib/_camera1_cameraShape1.1.rib,cameraShape1,ref=0)
                              >15 liqRibData::getFullPathName()
                            >14 er_writeCameraData.cpp::_write_camera_maya(|camera1|cameraShape1,cameraShape1)
                              >15 liqRibHT::find(|camera1|cameraShape1,|camera1|cameraShape1,0)
                              >15 Renderer::gatherCameraShaders(cameraShaders.size=0,|camera1|cameraShape1,liqEnvironmentShader)
                              >15 Renderer::cameraOutput(cameraShape1)
                >8 liqRibTranslatorNew::oneObjectBlock_data(|pPlane5|pPlaneShape5,cameraShape1)
                  >9 Renderer::exportOneObject_data(|pPlane5|pPlaneShape5,cameraShape1)
                    >10 Renderer::_writeObject(|pPlane5|pPlaneShape5,cameraShape1,0,0,0)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pPlane5_pPlaneShape5.1.rib,cameraShape1,0)
                        >12 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pPlane5_pPlaneShape5.1.rib,job=cameraShape1,0)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|pPlane5|pPlaneShape5,R:/MyDocuments/maya/projects/default/rib/_pPlane5_pPlaneShape5.1.rib,cameraShape1,ref=0)
                              >15 liqRibData::getFullPathName()
                            >14 er_writeMeshData.cpp::_write1(|pPlane5|pPlaneShape5,cameraShape1)
                              >15 liqRibHT::find(|pPlane5|pPlaneShape5,|pPlane5|pPlaneShape5,0)
                              >15 _exportVertexFromNodePlug(|pPlane5|pPlaneShape5,0)
                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqRibData::getFullPathName()
              >7 liqRibTranslatorNew::objectBlock_reference(cameraShape1)
                >8 Renderer::objectBlock_reference_begin()
                >8 liqRibTranslatorNew::preGeometryMel()
                  >9 Renderer::preGeometryMel()
                >8 liqRibTranslatorNew::getShadowSetObject(cameraShape1)
                >8 liqRibTranslatorNew::oneObjectBlock_reference(|camera1|cameraShape1,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_begin(|camera1|cameraShape1,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_block0(|camera1|cameraShape1,cameraShape1)
                  >9 liqRibTranslatorNew::tRiIlluminate(cameraShape1,|camera1|cameraShape1)
                    >10 Renderer::exportLightLinks(cameraShape1,|camera1|cameraShape1,lightedByWhichLightShapes.size=0)
                  >9 liqRibTranslatorNew::checkSurfaceShader(|camera1|cameraShape1,|camera1|cameraShape1,,,)
                  >9 liqRibTranslatorNew::checkDisplacementShader(|camera1|cameraShape1,|camera1|cameraShape1,,,)
                  >9 liqRibTranslatorNew::checkVolumeShader(|camera1|cameraShape1,|camera1|cameraShape1,,,)
                  >9 Renderer::oneObjectBlock_reference_attribute_block1(|camera1|cameraShape1,cameraShape1)
                  >9 liqRibTranslatorNew::writeShader_(1,|camera1|cameraShape1,v=0,s=0,c=0,,|camera1|cameraShape1,cameraShape1)
                    >10 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|camera1|cameraShape1,|camera1|cameraShape1,0)
                  >9 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|camera1|cameraShape1)
                  >9 Renderer::exportOneObject_reference(|camera1|cameraShape1,cameraShape1)
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::oneObjectBlock_reference_attribute_end(|camera1|cameraShape1,cameraShape1)
                >8 liqRibTranslatorNew::oneObjectBlock_reference(|pPlane5|pPlaneShape5,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_begin(|pPlane5|pPlaneShape5,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_block0(|pPlane5|pPlaneShape5,cameraShape1)
                  >9 liqRibTranslatorNew::tRiIlluminate(cameraShape1,|pPlane5|pPlaneShape5)
                    >10 Renderer::exportLightLinks(cameraShape1,|pPlane5|pPlaneShape5,lightedByWhichLightShapes.size=1)
                  >9 liqRibTranslatorNew::checkSurfaceShader(|pPlane5|pPlaneShape5,|pPlane5|pPlaneShape5,,,)
                  >9 liqRibTranslatorNew::checkDisplacementShader(|pPlane5|pPlaneShape5,|pPlane5|pPlaneShape5,,,)
                  >9 liqRibTranslatorNew::checkVolumeShader(|pPlane5|pPlaneShape5,|pPlane5|pPlaneShape5,,,)
                  >9 Renderer::oneObjectBlock_reference_attribute_block1(|pPlane5|pPlaneShape5,cameraShape1)
                  >9 liqRibTranslatorNew::writeShader_(1,|pPlane5|pPlaneShape5,v=0,s=0,c=0,,|pPlane5|pPlaneShape5,cameraShape1)
                    >10 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|pPlane5|pPlaneShape5,|pPlane5|pPlaneShape5,0)
                  >9 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|pPlane5|pPlaneShape5)
                  >9 Renderer::exportOneObject_reference(|pPlane5|pPlaneShape5,cameraShape1)
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::oneObjectBlock_reference_attribute_end(|pPlane5|pPlaneShape5,cameraShape1)
                >8 Renderer::objectBlock_reference_end()
            >6 liqRibTranslatorNew::worldEpilogue__()
              >7 liqRibTranslator::worldEpilogue()
                >8 Renderer::worldEpilogue()
            >6 liqRibTranslatorNew::frameEpilogue__(1)
              >7 Renderer::frameEpilogue(1)
            >6 liqRibTranslatorNew::ribEpilogue__(cameraShape1)
              >7 Renderer::ribPrologue_end(cameraShape1)
                >8 Renderer::cookInstanceGroup()
                >8 Renderer::render()
                  >9 Renderer::renderPreview(200,150,0,0,cameraShape1,cameraShape1,cameraShape1_option)
                    >10 Renderer::_renderPreview(200,150,0,0,cameraShape1,|camera1,cameraShape1_option)
          >5 Renderer::HeroPassEnd(cameraShape1)
        >4 liqRenderScript::addJob(job.title=bump2d_colorbumpFrame0,0)
          >5 liqRenderScript::popNextJobID()
        >4 liqRibTranslatorNew::postActions(defaultRenderLayer)
    >2 RendererMgr::test()
    >2 Renderer::closeLog()(but do nothing now)
      >3 OutputMgr::uninit()
        >4 OutputCall::~OutputCall()
        >4 OutputBase::~OutputBase()
        >4 OutputESS::~OutputESS()
        >4 OutputBase::~OutputBase()
        >4 OutputESA::~OutputESA()
        >4 OutputBase::~OutputBase()
    >2 RendererMgr::epilogue()
    >2 RendererMgr::uninstall()
      >3 Renderer::~Renderer()
    >2 RendererMgr::unsetFactory()
