//### SCENE BEGIN ###;
ei_context();
ei_verbose( 6 );
ei_link( "eiIMG" );
ei_link( "eiSHADER" );
ei_link( "eiSHADER_maya" );
//----------------phong_shader_for_test begin---;
ei_shader("plastic", "phong_shader_for_test");
ei_shader_param_vector("Cs",1,0.2,0.3);
ei_shader_param_vector("Kd",0.7,1,1);
ei_shader_param_scalar("Ks",1);
ei_shader_param_scalar("roughness",0.2);
ei_end_shader();
ei_shader("opaque", "opaque_shadow_for_test");
ei_end_shader();
ei_material("phong_mtl_for_test");
ei_surface_shader("phong_shader_for_test");
ei_shadow_shader("opaque_shadow_for_test");
ei_end_material();
//----------------phong_shader_for_test end ---;
//    Generated by Liquid v2.3.5 (buildtime=20:51:12.30);
//    Scene : E:/MyDocuments/maya/projects/default/mib_amb_occlusion;
//    User  : yaoyansi;

//############################### option #;
ei_options("perspShape_option");
ei_contrast(0.05);
ei_samples(0,16);
ei_filter(4,3);
//transform motion=0, deform motion=0;
ei_motion(0);
ei_trace_depth(4,4,4,4,4,4);
ei_displace(0);
ei_face(3);
ei_end_options();
// maya settings: focal=35, aperture = 36, aspect=1.33333;
//Depth of Field on camera "|persp|perspShape" is turned off in Maya;

//############################### camera #;
ei_camera("|persp|perspShape_object");
//beauty channel;
ei_output("E:/MyDocuments/maya/projects/default/rmanpix/mib_amb_occlusion.perspShape.10.elvishray.bmp","bmp",1);
//mode=rgb;
ei_output_variable("color",11);
ei_end_output();
// AOVs;
ei_focal(35);
ei_aperture(36);
ei_aspect(1.33333);
ei_resolution(200,150);
ei_clip(0.1,10000);
ei_end_camera();
//----------------------------------;
ei_instance("|persp|perspShape");
ei_element("|persp|perspShape_object");
ei_transform(0.97437,0,0.224951,0,   0.10747,0.878498,-0.465502,0,   -0.197619,0.477747,0.855982,0,   -2.03124,5.72027,9.88931,1);
ei_end_instance();
//;
ei_shader("maya_maya_mib_amb_occlusion", "mib_amb_occlusion1");
ei_shader_param_index("samples", 4);
ei_shader_param_vector("bright", 1, 0.992833, 0);
ei_shader_param_vector("dark", 1, 0.0163333, 0);
ei_shader_param_scalar("spread", 0.8);
ei_shader_param_scalar("max_distance", 0);
ei_shader_param_bool("reflective", 0);
ei_end_shader();

ei_shader("maya_phong_architectural", "phong1");
ei_shader_param_vector("color_", 0.5, 0.5, 0.5);
ei_shader_param_vector("transparency", 0, 0, 0);
ei_shader_link_param("ambientColor", "mib_amb_occlusion1", "outValue");
ei_shader_param_vector("incandescence", 0, 0, 0);
ei_shader_param_vector("normalCamera", 1, 1, 1);
ei_shader_param_scalar("diffuse", 0.8);
ei_shader_param_scalar("translucence", 0);
ei_shader_param_scalar("translucenceDepth", 0.5);
ei_shader_param_scalar("translucenceFocus", 0.5);
ei_shader_param_scalar("cosinePower", 20);
ei_shader_param_vector("specularColor", 0.5, 0.5, 0.5);
ei_shader_param_scalar("reflectivity", 0.5);
ei_shader_param_vector("reflectedColor", 0, 0, 0);
ei_shader_param_index("matteOpacityMode", 2);
ei_shader_param_scalar("matteOpacity", 1);
ei_shader_param_index("reflectionLimit", 1);
ei_shader_param_vector("outColor", 0, 0, 0);
ei_shader_param_vector("outTransparency", 0, 0, 0);
ei_end_shader();

ei_material("phong1SG");
ei_surface_shader("phong1");
ei_end_material();

//worldPrologue;

// Renderer::exportOneGeometry_Mesh(|pCube1|pCubeShape1,0,0);

//############################### mesh #;
//shape full path name=|pCube1|pCubeShape1;
ei_object("poly","|pCube1|pCubeShape1");
{;
eiTag tag;
//### vertex positions, fnMesh.numVertices()=8;
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_pos_list(tag);
ei_tab_add_vector(-0.5,-0.5,0.5);
ei_tab_add_vector(0.5,-0.5,0.5);
ei_tab_add_vector(-0.5,0.5,0.5);
ei_tab_add_vector(0.5,0.5,0.5);
ei_tab_add_vector(-0.5,0.5,-0.5);
ei_tab_add_vector(0.5,0.5,-0.5);
ei_tab_add_vector(-0.5,-0.5,-0.5);
ei_tab_add_vector(0.5,-0.5,-0.5);
ei_end_tab();
//vertex normals are not output temporarily.;
//### UV(map1), size=14;
tag = eiNULL_TAG;
ei_declare("uv",2,6, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2(0.375,0);
ei_tab_add_vector2(0.625,0);
ei_tab_add_vector2(0.375,0.25);
ei_tab_add_vector2(0.625,0.25);
ei_tab_add_vector2(0.375,0.5);
ei_tab_add_vector2(0.625,0.5);
ei_tab_add_vector2(0.375,0.75);
ei_tab_add_vector2(0.625,0.75);
ei_tab_add_vector2(0.375,1);
ei_tab_add_vector2(0.625,1);
ei_tab_add_vector2(0.875,0);
ei_tab_add_vector2(0.875,0.25);
ei_tab_add_vector2(0.125,0);
ei_tab_add_vector2(0.125,0.25);
ei_end_tab();
//### triangles, size=6;
tag = ei_tab(EI_TYPE_INDEX, 1024);
ei_triangle_list(tag);
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(2);
ei_tab_add_index(1);
ei_tab_add_index(3);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(4);
ei_tab_add_index(3);
ei_tab_add_index(5);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(6);
ei_tab_add_index(5);
ei_tab_add_index(7);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(0);
ei_tab_add_index(0);
ei_tab_add_index(7);
ei_tab_add_index(1);
ei_tab_add_index(1);
ei_tab_add_index(7);
ei_tab_add_index(3);
ei_tab_add_index(3);
ei_tab_add_index(7);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(0);
ei_tab_add_index(4);
ei_tab_add_index(4);
ei_tab_add_index(0);
ei_tab_add_index(2);
ei_end_tab();
}//|pCube1|pCubeShape1;
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|pPlane1|pPlaneShape1,0,0);

//############################### mesh #;
//shape full path name=|pPlane1|pPlaneShape1;
ei_object("poly","|pPlane1|pPlaneShape1");
{;
eiTag tag;
//### vertex positions, fnMesh.numVertices()=4;
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_pos_list(tag);
ei_tab_add_vector(-4.76676,-1.12863e-015,5.08292);
ei_tab_add_vector(4.76676,-1.12863e-015,5.08292);
ei_tab_add_vector(-4.76676,1.12863e-015,-5.08292);
ei_tab_add_vector(4.76676,1.12863e-015,-5.08292);
ei_end_tab();
//vertex normals are not output temporarily.;
//### N;
tag = eiNULL_TAG;
ei_declare("N",2,6, &tag);
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_variable("N", &tag);
ei_tab_add_vector(0,1,2.22045e-016);
ei_tab_add_vector(0,1,2.22045e-016);
ei_tab_add_vector(0,1,2.22045e-016);
ei_tab_add_vector(0,1,2.22045e-016);
ei_end_tab();
//### UV(map1), size=4;
tag = eiNULL_TAG;
ei_declare("uv",2,6, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2(0,0);
ei_tab_add_vector2(0.937799,0);
ei_tab_add_vector2(0,1);
ei_tab_add_vector2(0.937799,1);
ei_end_tab();
//### triangles, size=1;
tag = ei_tab(EI_TYPE_INDEX, 1024);
ei_triangle_list(tag);
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(2);
ei_tab_add_index(1);
ei_tab_add_index(3);
ei_end_tab();
}//|pPlane1|pPlaneShape1;
ei_end_object();
//|pCube1|pCubeShape1 is not lighted.;
//--------------------------;
//ribNode->name=|pCube1|pCubeShape1;
//ribNode's transform node=|pCube1;
//ribNode->object(0)->getDataPtr()->getFullPathName()=|pCube1|pCubeShape1;
ei_instance("|pCube1");
ei_mtl("phong1SG");
//shape name=|pCube1|pCubeShape1;
//shape full path name=|pCube1|pCubeShape1;
ei_element("|pCube1|pCubeShape1");
ei_transform(1,0,0,0,   0,1,0,0,   0,0,1,0,   1.75853,0.40275,0,1);
//ribNode->doDef=205, ribNode->doMotion=205;
ei_motion(1);
{//light group(light-link group);
const char *tag = NULL;
ei_declare("lightgroup",0,1, &tag);
tag = ei_token("|pCube1_lightgroup");;
ei_variable("lightgroup", &tag);
};
ei_end_instance();
//;
//|pPlane1|pPlaneShape1 is not lighted.;
//--------------------------;
//ribNode->name=|pPlane1|pPlaneShape1;
//ribNode's transform node=|pPlane1;
//ribNode->object(0)->getDataPtr()->getFullPathName()=|pPlane1|pPlaneShape1;
ei_instance("|pPlane1");
ei_mtl("phong1SG");
//shape name=|pPlane1|pPlaneShape1;
//shape full path name=|pPlane1|pPlaneShape1;
ei_element("|pPlane1|pPlaneShape1");
ei_transform(1,0,0,0,   0,1,0,0,   0,0,1,0,   0,0,0,1);
//ribNode->doDef=205, ribNode->doMotion=205;
ei_motion(1);
{//light group(light-link group);
const char *tag = NULL;
ei_declare("lightgroup",0,1, &tag);
tag = ei_token("|pPlane1_lightgroup");;
ei_variable("lightgroup", &tag);
};
ei_end_instance();
//;

//Renderer::worldEpilogue();
ei_instgroup("perspShape");
//camera;
ei_add_instance("|persp|perspShape");
//light(s);
//mesh(s);
ei_add_instance("|pCube1");
ei_add_instance("|pPlane1");
ei_end_instgroup( );
//ei_set_connection( &(MayaConnection::getInstance()->connection.base );
ei_render("perspShape", "|persp|perspShape", "perspShape_option");
ei_end_context();
