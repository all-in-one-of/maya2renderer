  >1 liqRibTranslator::doIt()-->if(checkSettings()==true)
    >2 RendererMgr::setFactory(renderman)
    >2 RendererMgr::install()
      >3 ShaderMgr::setValidConnection()
      >3 ShaderMgr::getShaderConnectionMap()
      >3 RNodeVisitorMgr::setValidConnection(...)
        >4 FlatNodeVisitor::setValidConnection(...)
        >4 OccLightNodeVisitor::setValidConnection(...)
        >4 PhysicalsunNodeVisitor::setValidConnection(...)
    >2 RendererMgr::prologue()
    >2 Renderer::openLog(R:/MyDocuments/maya/projects/default/rib/shader_graph_phong_transparent.perspShape.1.renderman.bmp)(but do nothing now)
    >2 Renderer::canExport()
    >2 liqRibTranslatorNew::_doItNew(args,defaultRenderLayer)
      >3 liqRibTranslatorNew::_doItNewWithoutRenderScript(arg,defaultRenderLayer)
        >4 liqRibTranslator::verifyOutputDirectories()
          >5 liqRibTranslator::verifyResourceDir(RIB, rib, 0)
          >5 liqRibTranslator::verifyResourceDir(Texture, rmantex, 0)
          >5 liqRibTranslator::verifyResourceDir(Picture, rmanpix/, 0)
          >5 liqRibTranslator::verifyResourceDir(Temp Files, rmantmp/, 0)
        >4 liqRibTranslator::generateRenderScriptName()
        >4 liqRibTranslator::generateTempMayaSceneName()
        >4 tFrameScriptJobMgr::setCommonParameters(shader_graph_phong_transparentFrame1)
        >4 liqRibTranslatorNew::processOneFrame(0, liqglo__)
          >5 liqRibTranslatorNew::buildJobs__()
            >6 liqRibTranslatorNew::buildShadowJobs__()
              >7 tLightMgr::buildShadowJob(thisJob___, 0)
              >7 tLightMgr::buildShadowCameraJob(thisJob___, 0)
            >6 tRibCameraMgr::gatherDataForJob(liqglo___, ,jobList__,0,1)
            >6 liqRibTranslator::generateFileName(4,perspShape)
            >6 liqRibTranslator::generateFileName(5,perspShape)
              >7 liqRibTranslator::generateImageName(, job(perspShape)), 
          >5 liqRibTranslatorNew::calaculateSamplingTime(1)
          >5 liqRibTranslatorNew::scanScene__(1,0)
            >6 tLightMgr::scanScene(1,0, htable__, count, returnStatus__)
              >7 liqRibHT::insert(|pointLight1|pointLightShape1,lframe,0,3,0,matrix,,-1)
                >8 liqRibHT::hash(|pointLight1|pointLightShape1,0)
                >8 liqRibHT::find(|pointLight1|pointLightShape1,|pointLight1|pointLightShape1,3)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pointLight1|pointLightShape1,0,3,-1)
                  >9 liqRibNode::parseVectorAttributes(pointLight1,,2)
                  >9 liqRibNode::parseVectorAttributes(pointLight1,,3)
                  >9 liqRibNode::parseVectorAttributes(pointLight1,,4)
                  >9 liqRibNode::findShadingGroup(|pointLight1|pointLightShape1,3)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pointLight1|pointLightShape1,3)
                    >10 liqRibLightData::liqRibLightData(|pointLight1|pointLightShape1)
                      >11 liqRibData::addAdditionalSurfaceParameters(pointLightShape1)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 tLocatorMgr::scanScene(1,0,htable__,count__,returnStatus__)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
              >7 liqRibHT::insert(|persp|perspShape,lframe,0,0,1,matrix,,-1)
                >8 liqRibHT::hash(|persp|perspShape,1)
                >8 liqRibHT::find(|persp|perspShape,|persp|perspShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|persp|perspShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(persp,,2)
                  >9 liqRibNode::parseVectorAttributes(persp,,3)
                  >9 liqRibNode::parseVectorAttributes(persp,,4)
                  >9 liqRibNode::findShadingGroup(|persp|perspShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|persp|perspShape,0)
                    >10 liqRibCameraData::liqRibCameraData(|persp|perspShape)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
              >7 liqRibHT::insert(|top|topShape,lframe,0,0,2,matrix,,-1)
                >8 liqRibHT::hash(|top|topShape,2)
                >8 liqRibHT::find(|top|topShape,|top|topShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|top|topShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(top,,2)
                  >9 liqRibNode::parseVectorAttributes(top,,3)
                  >9 liqRibNode::parseVectorAttributes(top,,4)
                  >9 liqRibNode::findShadingGroup(|top|topShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|top|topShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
              >7 liqRibHT::insert(|front|frontShape,lframe,0,0,3,matrix,,-1)
                >8 liqRibHT::hash(|front|frontShape,3)
                >8 liqRibHT::find(|front|frontShape,|front|frontShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|front|frontShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(front,,2)
                  >9 liqRibNode::parseVectorAttributes(front,,3)
                  >9 liqRibNode::parseVectorAttributes(front,,4)
                  >9 liqRibNode::findShadingGroup(|front|frontShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|front|frontShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
              >7 liqRibHT::insert(|side|sideShape,lframe,0,0,4,matrix,,-1)
                >8 liqRibHT::hash(|side|sideShape,4)
                >8 liqRibHT::find(|side|sideShape,|side|sideShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|side|sideShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(side,,2)
                  >9 liqRibNode::parseVectorAttributes(side,,3)
                  >9 liqRibNode::parseVectorAttributes(side,,4)
                  >9 liqRibNode::findShadingGroup(|side|sideShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|side|sideShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
              >7 liqRibHT::insert(|camera1|cameraShape1,lframe,0,0,5,matrix,,-1)
                >8 liqRibHT::hash(|camera1|cameraShape1,5)
                >8 liqRibHT::find(|camera1|cameraShape1,|camera1|cameraShape1,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|camera1|cameraShape1,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(camera1,,2)
                  >9 liqRibNode::parseVectorAttributes(camera1,,3)
                  >9 liqRibNode::parseVectorAttributes(camera1,,4)
                  >9 liqRibNode::findShadingGroup(|camera1|cameraShape1,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|camera1|cameraShape1,0)
                    >10 liqRibCameraData::liqRibCameraData(|camera1|cameraShape1)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
              >7 liqRibHT::insert(|pPlane1|pPlaneShape1,lframe,0,0,6,matrix,,-1)
                >8 liqRibHT::hash(|pPlane1|pPlaneShape1,6)
                >8 liqRibHT::find(|pPlane1|pPlaneShape1,|pPlane1|pPlaneShape1,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pPlane1|pPlaneShape1,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(pPlane1,,2)
                  >9 liqRibNode::parseVectorAttributes(pPlane1,,3)
                  >9 liqRibNode::parseVectorAttributes(pPlane1,,4)
                  >9 liqRibNode::findShadingGroup(|pPlane1|pPlaneShape1,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getColor(&shader,&color)
                  >9 liqRibNode::getOpacity(&shader,&color)
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pPlane1|pPlaneShape1,0)
                    >10 liqRibMeshData::liqRibMeshData(|pPlane1|pPlaneShape1)
                      >11 liqRibData::addAdditionalSurfaceParameters(pPlaneShape1)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
              >7 liqRibHT::insert(|pPlane2|pPlaneShape2,lframe,0,0,7,matrix,,-1)
                >8 liqRibHT::hash(|pPlane2|pPlaneShape2,7)
                >8 liqRibHT::find(|pPlane2|pPlaneShape2,|pPlane2|pPlaneShape2,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pPlane2|pPlaneShape2,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(pPlane2,,2)
                  >9 liqRibNode::parseVectorAttributes(pPlane2,,3)
                  >9 liqRibNode::parseVectorAttributes(pPlane2,,4)
                  >9 liqRibNode::findShadingGroup(|pPlane2|pPlaneShape2,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getColor(&shader,&color)
                  >9 liqRibNode::getOpacity(&shader,&color)
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pPlane2|pPlaneShape2,0)
                    >10 liqRibMeshData::liqRibMeshData(|pPlane2|pPlaneShape2)
                      >11 liqRibData::addAdditionalSurfaceParameters(pPlaneShape2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
              >7 liqRibHT::insert(|pPlane3|pPlaneShape3,lframe,0,0,8,matrix,,-1)
                >8 liqRibHT::hash(|pPlane3|pPlaneShape3,8)
                >8 liqRibHT::find(|pPlane3|pPlaneShape3,|pPlane3|pPlaneShape3,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pPlane3|pPlaneShape3,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(pPlane3,,2)
                  >9 liqRibNode::parseVectorAttributes(pPlane3,,3)
                  >9 liqRibNode::parseVectorAttributes(pPlane3,,4)
                  >9 liqRibNode::findShadingGroup(|pPlane3|pPlaneShape3,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getColor(&shader,&color)
                  >9 liqRibNode::getOpacity(&shader,&color)
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pPlane3|pPlaneShape3,0)
                    >10 liqRibMeshData::liqRibMeshData(|pPlane3|pPlaneShape3)
                      >11 liqRibData::addAdditionalSurfaceParameters(pPlaneShape3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,1,0,&count)
              >7 liqRibHT::insert(|pPlane4|pPlaneShape4,lframe,0,0,9,matrix,,-1)
                >8 liqRibHT::hash(|pPlane4|pPlaneShape4,9)
                >8 liqRibHT::find(|pPlane4|pPlaneShape4,|pPlane4|pPlaneShape4,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pPlane4|pPlaneShape4,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(pPlane4,,2)
                  >9 liqRibNode::parseVectorAttributes(pPlane4,,3)
                  >9 liqRibNode::parseVectorAttributes(pPlane4,,4)
                  >9 liqRibNode::findShadingGroup(|pPlane4|pPlaneShape4,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getColor(&shader,&color)
                  >9 liqRibNode::getOpacity(&shader,&color)
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pPlane4|pPlaneShape4,0)
                    >10 liqRibMeshData::liqRibMeshData(|pPlane4|pPlaneShape4)
                      >11 liqRibData::addAdditionalSurfaceParameters(pPlaneShape4)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 liqRibTranslatorNew::dealwithParticleInstancedObjects(0,1,10)
            >6 tCameraMgr::getCameraData(perspShape,0)
              >7 tCameraMgr::getCameraInfo(|persp|perspShape,)
                >8 tCameraMgr::portFieldOfView(200,150,&horizontal,&vertical,&fnCamera)
                  >9 tCameraMgr::computeViewingFrustum(1.33333,,&left,&right,&bottom,&top,|persp|perspShape)
              >7 tCameraMgr::getCameraFilmOffset(|persp|perspShape,)
              >7 tCameraMgr::getCameraTransform(|persp|perspShape,)
          >5 liqRibTranslatorNew::doTextures(size=0)
            >6 rm::Renderer::doTextures(txtList.size()=0)
          >5 liqRibTranslatorNew::doShadows(size=0)
            >6 rm::Renderer::doShadows(shadowList_.size()=0)
          >5 Renderer::setRenderScriptFormatAndCompress(0,0)
            >6 Renderer::_RiOption_format_compress(0,0)
          >5 Renderer::isHeroPassReady(perspShape)
          >5 Renderer::HeroPassBegin(perspShape)
          >5 tHeroRibWriterMgr::write(liqglo___,perspShape,1,0)
            >6 liqRibTranslatorNew::ribPrologue__(perspShape)
              >7 Renderer::ribPrologue_begin(perspShape)
                >8 RiBegin_liq(R:/MyDocuments/maya/projects/default/rib/shader_graph_phong_transparent_perspShape.0001..rib(strlen=92)
              >7 Renderer::ribPrologue_comment(2.3.5,R:/MyDocuments/maya/projects/default/shader_graph_phong_transparent,yaoyansi,time)
              >7 Renderer::ribPrologue_options(perspShape)
                >8 Renderer::ribPrologue_writeSearthPath()
                >8 tHeroRibWriterMgr::ribPrologue_hider(0)
                >8 tHeroRibWriterMgr::ribPrologue_samples(4,4)
                >8 tHeroRibWriterMgr::ribPrologue_shadingrate(1)
                >8 tHeroRibWriterMgr::ribPrologue_filter(0,2,2)
                >8 tHeroRibWriterMgr::ribPrologue_pass(beauty)
            >6 liqRibTranslatorNew::framePrologue__(1,perspShape)
              >7 Renderer::framePrologue(1,perspShape)
                >8 tHeroRibWriterMgr::framePrologue_display(perspShape)
                  >9 exportJobCamera(perspShape,,)
                >8 Renderer::framePrologue_camera(1,perspShape)
            >6 ShaderMgr::exportShaderGraph()
              >7 ConvertShadingNetwork::exportShaderGraph()
                >8 ConvertShadingNetwork::beforeExport()
                  >9 ShadingNetworkUser::beforeExport_user()
                >8 ConvertShadingNetwork::__export()
                  >9 ConvertShadingNetwork::canShadingGroupExported(phong1SG)
                  >9 Renderer::getValidShaderPlugsInShadingGroup()
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,surfaceShader)
                    >10 ConvertShadingNetwork::exportShaderNodeInPlug(phong1SG,surfaceShader)
                      >11 ConvertShadingNetwork::_exportShaderNodeInPlug(phong1SG,surfaceShader)
                        >12 ConvertShadingNetwork::exportShaderNode(phong1)
                          >13 ConvertShadingNetwork::canShaderExported(phong1)
                          >13 ConvertShadingNetwork::exportShaderBegin(phong1)
                          >13 ConvertShadingNetwork::convertShadingNetworkToRSL(phong1)
                            >14 Visitor::initShaderData(phong1)
                              >15 NodePlugConnectionMgr::setNodePlugMgr(...)
                              >15 NodePlugConnectionMgr::reset()
                            >14 ConvertShadingNetwork::getUpstreamConvertibleNodes(phong1, nodes, numConnections)
                              >15 DagMgr::BreadthFirstTraversal(phong1, ret)
                                >16 DagMgr::begin(phong1)
                                  >17 DagMgr::pushInputPlugs(phong1)
                                    >18 ShaderMgr::getValidConnection(phong1)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.colorR)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.colorR)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.colorG)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.colorG)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.colorB)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.colorB)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.color)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                                      >19 ConvertShadingNetwork::nodeIsConvertible(file1)
                                        >20 ShaderMgr::hasShaderType(file)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.transparencyR)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyR)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.transparencyG)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyG)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.transparencyB)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyB)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                                      >19 ConvertShadingNetwork::nodeIsConvertible(file2)
                                        >20 ShaderMgr::hasShaderType(file)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorR)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorR)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorG)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorG)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorB)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorB)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceR)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceR)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceG)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceG)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceB)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceB)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraX)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraX)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraY)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraY)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraZ)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraZ)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.specularColorR)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorR)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.specularColorG)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorG)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.specularColorB)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorB)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorR)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorR)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorG)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorG)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorB)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorB)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.outColorR)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.outColorR)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.outColorG)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.outColorG)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.outColorB)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.outColorB)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                                      >19 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                                        >20 ShaderMgr::hasShaderType(shadingEngine)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyR)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyR)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyG)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyG)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyB)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyB)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                                >16 DagMgr::pushInputPlugs(file1)
                                  >17 ShaderMgr::getValidConnection(file1)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.alphaGain)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.alphaGain)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.alphaIsLuminance)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.alphaIsLuminance)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.alphaOffset)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.alphaOffset)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.colorGainR)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.colorGainR)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.colorGainG)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.colorGainG)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.colorGainB)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.colorGainB)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.colorGain)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.colorGain)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.colorOffsetR)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.colorOffsetR)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.colorOffsetG)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.colorOffsetG)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.colorOffsetB)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.colorOffsetB)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.colorOffset)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.colorOffset)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.defaultColorR)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.defaultColorR)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.defaultColorG)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.defaultColorG)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.defaultColorB)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.defaultColorB)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.defaultColor)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.defaultColor)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.fileTextureName)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.fileTextureName)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.filterType)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.filterType)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.filter)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.filter)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.filterOffset)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.filterOffset)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.invert)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.invert)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.uCoord)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.uCoord)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.vCoord)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.vCoord)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.uvCoord)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.uvCoord)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                                      >19 ShaderMgr::hasShaderType(place2dTexture)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.fileHasAlpha)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.fileHasAlpha)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.outAlpha)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.outAlpha)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.outColorR)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.outColorR)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.outColorG)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.outColorG)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.outColorB)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.outColorB)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.outColor)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.outColor)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(phong4)
                                      >19 ShaderMgr::hasShaderType(phong)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.outTransparencyR)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.outTransparencyR)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.outTransparencyG)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.outTransparencyG)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.outTransparencyB)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.outTransparencyB)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.outTransparency)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.outTransparency)
                                >16 DagMgr::pushInputPlugs(file2)
                                  >17 ShaderMgr::getValidConnection(file2)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.alphaGain)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.alphaGain)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.alphaIsLuminance)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.alphaIsLuminance)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.alphaOffset)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.alphaOffset)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.colorGainR)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.colorGainR)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.colorGainG)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.colorGainG)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.colorGainB)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.colorGainB)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.colorGain)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.colorGain)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.colorOffsetR)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.colorOffsetR)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.colorOffsetG)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.colorOffsetG)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.colorOffsetB)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.colorOffsetB)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.colorOffset)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.colorOffset)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.defaultColorR)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.defaultColorR)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.defaultColorG)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.defaultColorG)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.defaultColorB)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.defaultColorB)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.defaultColor)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.defaultColor)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.fileTextureName)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.fileTextureName)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.filterType)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.filterType)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.filter)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.filter)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.filterOffset)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.filterOffset)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.invert)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.invert)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.uCoord)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.uCoord)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.vCoord)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.vCoord)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.uvCoord)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.uvCoord)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(place2dTexture2)
                                      >19 ShaderMgr::hasShaderType(place2dTexture)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.fileHasAlpha)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.fileHasAlpha)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.outAlpha)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.outAlpha)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.outColorR)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.outColorR)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.outColorG)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.outColorG)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.outColorB)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.outColorB)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.outColor)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.outColor)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(phong4)
                                      >19 ShaderMgr::hasShaderType(phong)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.outTransparencyR)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.outTransparencyR)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.outTransparencyG)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.outTransparencyG)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.outTransparencyB)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.outTransparencyB)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.outTransparency)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.outTransparency)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(phong1)
                                      >19 ShaderMgr::hasShaderType(phong)
                                >16 DagMgr::pushInputPlugs(place2dTexture1)
                                  >17 ShaderMgr::getValidConnection(place2dTexture1)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uCoord)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uCoord)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture1.vCoord)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.vCoord)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverage)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverage)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(file1)
                                      >19 ShaderMgr::hasShaderType(file)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(file1)
                                      >19 ShaderMgr::hasShaderType(file)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(file1)
                                      >19 ShaderMgr::hasShaderType(file)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseUV)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseUV)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(file1)
                                      >19 ShaderMgr::hasShaderType(file)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offset)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offset)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(file1)
                                      >19 ShaderMgr::hasShaderType(file)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatUV)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatUV)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(file1)
                                      >19 ShaderMgr::hasShaderType(file)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(file1)
                                      >19 ShaderMgr::hasShaderType(file)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(file1)
                                      >19 ShaderMgr::hasShaderType(file)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(file1)
                                      >19 ShaderMgr::hasShaderType(file)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrame)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrame)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(file1)
                                      >19 ShaderMgr::hasShaderType(file)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(file1)
                                      >19 ShaderMgr::hasShaderType(file)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(file1)
                                      >19 ShaderMgr::hasShaderType(file)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outU)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outU)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outV)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outV)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(file1)
                                      >19 ShaderMgr::hasShaderType(file)
                                >16 DagMgr::pushInputPlugs(place2dTexture2)
                                  >17 ShaderMgr::getValidConnection(place2dTexture2)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.uCoord)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.uCoord)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.vCoord)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.vCoord)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.uvCoord)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.uvCoord)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.coverageU)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.coverageU)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.coverageV)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.coverageV)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.coverage)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.coverage)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(file2)
                                      >19 ShaderMgr::hasShaderType(file)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.mirrorU)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.mirrorU)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(file2)
                                      >19 ShaderMgr::hasShaderType(file)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.mirrorV)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.mirrorV)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(file2)
                                      >19 ShaderMgr::hasShaderType(file)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.noiseU)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.noiseU)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.noiseV)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.noiseV)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.noiseUV)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.noiseUV)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(file2)
                                      >19 ShaderMgr::hasShaderType(file)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.offsetU)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.offsetU)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.offsetV)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.offsetV)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.offset)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.offset)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(file2)
                                      >19 ShaderMgr::hasShaderType(file)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.repeatU)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.repeatU)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.repeatV)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.repeatV)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.repeatUV)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.repeatUV)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(file2)
                                      >19 ShaderMgr::hasShaderType(file)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.rotateFrame)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.rotateFrame)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(file2)
                                      >19 ShaderMgr::hasShaderType(file)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.rotateUV)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.rotateUV)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(file2)
                                      >19 ShaderMgr::hasShaderType(file)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.stagger)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.stagger)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(file2)
                                      >19 ShaderMgr::hasShaderType(file)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.translateFrameU)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.translateFrameU)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.translateFrameV)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.translateFrameV)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.translateFrame)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.translateFrame)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(file2)
                                      >19 ShaderMgr::hasShaderType(file)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.wrapU)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.wrapU)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(file2)
                                      >19 ShaderMgr::hasShaderType(file)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.wrapV)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.wrapV)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(file2)
                                      >19 ShaderMgr::hasShaderType(file)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.outU)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.outU)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.outV)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.outV)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.outUV)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.outUV)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(file2)
                                      >19 ShaderMgr::hasShaderType(file)
                                >16 DagMgr::isVisited(place2dTexture2)
                                >16 DagMgr::visit(place2dTexture2)
                                >16 DagMgr::isVisited(place2dTexture1)
                                >16 DagMgr::visit(place2dTexture1)
                                >16 DagMgr::isVisited(file2)
                                >16 DagMgr::visit(file2)
                                >16 DagMgr::isVisited(file1)
                                >16 DagMgr::visit(file1)
                                >16 DagMgr::end()
                            >14 Visitor::preOutput(phong1)
                            >14 Visitor::outputBegin(phong1), open shader file
                              >15 getShaderFilePath_SRC(phong1)
                                >16 getShaderFilePath_NoExt(phong1)
                              >15 Visitor::getSurfaceShaderAOVOutputParametersString()
                              >15 Visitor::defineAOVVariables(phong1)
                            >14 ConvertShadingNetwork::traverseGraphAndOutputNodeFunctions( nodes, numConnections)
                              >15 Visitor::outputUpstreamShader(place2dTexture2)
                                >16 ShaderOutputVisitor::_outputUpstreamShader(place2dTexture2,place2dTexture)
                                  >17 Visitor::visitPlace2dTexture(place2dTexture2)
                                    >18 OutputHelper::addInclude(place2dTexture.h)
                                    >18 OutputHelper::beginRSL(place2dTexture2)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture2.coverage)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture2.coverage)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.coverage)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(file2)
                                          >21 ShaderMgr::hasShaderType(file)
                                    >18 NodePlugInfo::add(place2dTexture2,coverage,float2)
                                      >19 NodePlug::add(coverage, float2)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture2.mirrorU)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture2.mirrorU)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.mirrorU)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(file2)
                                          >21 ShaderMgr::hasShaderType(file)
                                    >18 NodePlugInfo::add(place2dTexture2,mirrorU,float)
                                      >19 NodePlug::add(mirrorU, float)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture2.mirrorV)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture2.mirrorV)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.mirrorV)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(file2)
                                          >21 ShaderMgr::hasShaderType(file)
                                    >18 NodePlugInfo::add(place2dTexture2,mirrorV,float)
                                      >19 NodePlug::add(mirrorV, float)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture2.noiseUV)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture2.noiseUV)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.noiseUV)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(file2)
                                          >21 ShaderMgr::hasShaderType(file)
                                    >18 NodePlugInfo::add(place2dTexture2,noiseUV,float2)
                                      >19 NodePlug::add(noiseUV, float2)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture2.offset)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture2.offset)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.offset)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(file2)
                                          >21 ShaderMgr::hasShaderType(file)
                                    >18 NodePlugInfo::add(place2dTexture2,offset,float2)
                                      >19 NodePlug::add(offset, float2)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture2.repeatUV)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture2.repeatUV)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.repeatUV)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(file2)
                                          >21 ShaderMgr::hasShaderType(file)
                                    >18 NodePlugInfo::add(place2dTexture2,repeatUV,float2)
                                      >19 NodePlug::add(repeatUV, float2)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture2.rotateFrame)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture2.rotateFrame)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.rotateFrame)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(file2)
                                          >21 ShaderMgr::hasShaderType(file)
                                    >18 NodePlugInfo::add(place2dTexture2,rotateFrame,float)
                                      >19 NodePlug::add(rotateFrame, float)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture2.rotateUV)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture2.rotateUV)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.rotateUV)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(file2)
                                          >21 ShaderMgr::hasShaderType(file)
                                    >18 NodePlugInfo::add(place2dTexture2,rotateUV,float)
                                      >19 NodePlug::add(rotateUV, float)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture2.stagger)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture2.stagger)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.stagger)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(file2)
                                          >21 ShaderMgr::hasShaderType(file)
                                    >18 NodePlugInfo::add(place2dTexture2,stagger,float)
                                      >19 NodePlug::add(stagger, float)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture2.translateFrame)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture2.translateFrame)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.translateFrame)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(file2)
                                          >21 ShaderMgr::hasShaderType(file)
                                    >18 NodePlugInfo::add(place2dTexture2,translateFrame,float2)
                                      >19 NodePlug::add(translateFrame, float2)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture2.wrapU)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture2.wrapU)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.wrapU)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(file2)
                                          >21 ShaderMgr::hasShaderType(file)
                                    >18 NodePlugInfo::add(place2dTexture2,wrapU,float)
                                      >19 NodePlug::add(wrapU, float)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture2.wrapV)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture2.wrapV)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.wrapV)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(file2)
                                          >21 ShaderMgr::hasShaderType(file)
                                    >18 NodePlugInfo::add(place2dTexture2,wrapV,float)
                                      >19 NodePlug::add(wrapV, float)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture2.outUV)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture2.outUV)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.outUV)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(file2)
                                          >21 ShaderMgr::hasShaderType(file)
                                    >18 NodePlugInfo::add(place2dTexture2,outUV,float2)
                                      >19 NodePlug::add(outUV, float2)
                                    >18 OutputHelper::endRSL()
                              >15 ShaderMgr::getValidConnection(place2dTexture2)
                              >15 ConvertShadingNetwork::getNodeVariables(place2dTexture2, validConnections,  inputSrc, inputDes, outputSrc)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.uCoord)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.uCoord)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.vCoord)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.vCoord)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.uvCoord)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.uvCoord)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.coverageU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.coverageU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.coverageV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.coverageV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.coverage)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.coverage)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file2)
                                    >18 ShaderMgr::hasShaderType(file)
                                >16 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture2,coverage,place2dTexture2.coverage, outputVars)
                                  >17 Visitor::addShaderMethodVariavles(place2dTexture2,coverage,float,2,)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.mirrorU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.mirrorU)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file2)
                                    >18 ShaderMgr::hasShaderType(file)
                                >16 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture2,mirrorU,place2dTexture2.mirrorU, outputVars)
                                  >17 Visitor::addShaderMethodVariavles(place2dTexture2,mirrorU,float,-1,)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.mirrorV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.mirrorV)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file2)
                                    >18 ShaderMgr::hasShaderType(file)
                                >16 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture2,mirrorV,place2dTexture2.mirrorV, outputVars)
                                  >17 Visitor::addShaderMethodVariavles(place2dTexture2,mirrorV,float,-1,)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.noiseU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.noiseU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.noiseV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.noiseV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.noiseUV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.noiseUV)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file2)
                                    >18 ShaderMgr::hasShaderType(file)
                                >16 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture2,noiseUV,place2dTexture2.noiseUV, outputVars)
                                  >17 Visitor::addShaderMethodVariavles(place2dTexture2,noiseUV,float,2,)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.offsetU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.offsetU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.offsetV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.offsetV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.offset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.offset)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file2)
                                    >18 ShaderMgr::hasShaderType(file)
                                >16 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture2,offset,place2dTexture2.offset, outputVars)
                                  >17 Visitor::addShaderMethodVariavles(place2dTexture2,offset,float,2,)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.repeatU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.repeatU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.repeatV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.repeatV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.repeatUV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.repeatUV)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file2)
                                    >18 ShaderMgr::hasShaderType(file)
                                >16 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture2,repeatUV,place2dTexture2.repeatUV, outputVars)
                                  >17 Visitor::addShaderMethodVariavles(place2dTexture2,repeatUV,float,2,)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.rotateFrame)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.rotateFrame)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file2)
                                    >18 ShaderMgr::hasShaderType(file)
                                >16 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture2,rotateFrame,place2dTexture2.rotateFrame, outputVars)
                                  >17 Visitor::addShaderMethodVariavles(place2dTexture2,rotateFrame,float,-1,)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.rotateUV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.rotateUV)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file2)
                                    >18 ShaderMgr::hasShaderType(file)
                                >16 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture2,rotateUV,place2dTexture2.rotateUV, outputVars)
                                  >17 Visitor::addShaderMethodVariavles(place2dTexture2,rotateUV,float,-1,)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.stagger)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.stagger)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file2)
                                    >18 ShaderMgr::hasShaderType(file)
                                >16 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture2,stagger,place2dTexture2.stagger, outputVars)
                                  >17 Visitor::addShaderMethodVariavles(place2dTexture2,stagger,float,-1,)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.translateFrameU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.translateFrameU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.translateFrameV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.translateFrameV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.translateFrame)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.translateFrame)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file2)
                                    >18 ShaderMgr::hasShaderType(file)
                                >16 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture2,translateFrame,place2dTexture2.translateFrame, outputVars)
                                  >17 Visitor::addShaderMethodVariavles(place2dTexture2,translateFrame,float,2,)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.wrapU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.wrapU)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file2)
                                    >18 ShaderMgr::hasShaderType(file)
                                >16 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture2,wrapU,place2dTexture2.wrapU, outputVars)
                                  >17 Visitor::addShaderMethodVariavles(place2dTexture2,wrapU,float,-1,)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.wrapV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.wrapV)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file2)
                                    >18 ShaderMgr::hasShaderType(file)
                                >16 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture2,wrapV,place2dTexture2.wrapV, outputVars)
                                  >17 Visitor::addShaderMethodVariavles(place2dTexture2,wrapV,float,-1,)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.outU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.outU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.outV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.outV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.outUV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.outUV)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file2)
                                    >18 ShaderMgr::hasShaderType(file)
                                >16 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture2,outUV,place2dTexture2.outUV, outputVars)
                                  >17 Visitor::addShaderMethodVariavles(place2dTexture2,outUV,float,2,)
                              >15 Visitor::addShaderMethodBody(place2dTexture2,,,place2dTexture2.coverage124place2dTexture2.mirrorU124place2dTexture2.mirrorV124place2dTexture2.noiseUV124place2dTexture2.offset124place2dTexture2.repeatUV124place2dTexture2.rotateFrame124place2dTexture2.rotateUV124place2dTexture2.stagger124place2dTexture2.translateFrame124place2dTexture2.wrapU124place2dTexture2.wrapV124place2dTexture2.outUV124)
                                >16 NodePlugConnectionMgr::add(place2dTexture2)
                              >15 Visitor::outputUpstreamShader(place2dTexture1)
                                >16 ShaderOutputVisitor::_outputUpstreamShader(place2dTexture1,place2dTexture)
                                  >17 Visitor::visitPlace2dTexture(place2dTexture1)
                                    >18 OutputHelper::addInclude(place2dTexture.h)
                                    >18 OutputHelper::beginRSL(place2dTexture1)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture1.coverage)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverage)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverage)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(file1)
                                          >21 ShaderMgr::hasShaderType(file)
                                    >18 NodePlugInfo::add(place2dTexture1,coverage,float2)
                                      >19 NodePlug::add(coverage, float2)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture1.mirrorU)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(file1)
                                          >21 ShaderMgr::hasShaderType(file)
                                    >18 NodePlugInfo::add(place2dTexture1,mirrorU,float)
                                      >19 NodePlug::add(mirrorU, float)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture1.mirrorV)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(file1)
                                          >21 ShaderMgr::hasShaderType(file)
                                    >18 NodePlugInfo::add(place2dTexture1,mirrorV,float)
                                      >19 NodePlug::add(mirrorV, float)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture1.noiseUV)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseUV)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseUV)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(file1)
                                          >21 ShaderMgr::hasShaderType(file)
                                    >18 NodePlugInfo::add(place2dTexture1,noiseUV,float2)
                                      >19 NodePlug::add(noiseUV, float2)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture1.offset)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offset)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offset)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(file1)
                                          >21 ShaderMgr::hasShaderType(file)
                                    >18 NodePlugInfo::add(place2dTexture1,offset,float2)
                                      >19 NodePlug::add(offset, float2)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture1.repeatUV)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatUV)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatUV)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(file1)
                                          >21 ShaderMgr::hasShaderType(file)
                                    >18 NodePlugInfo::add(place2dTexture1,repeatUV,float2)
                                      >19 NodePlug::add(repeatUV, float2)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture1.rotateFrame)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(file1)
                                          >21 ShaderMgr::hasShaderType(file)
                                    >18 NodePlugInfo::add(place2dTexture1,rotateFrame,float)
                                      >19 NodePlug::add(rotateFrame, float)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture1.rotateUV)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(file1)
                                          >21 ShaderMgr::hasShaderType(file)
                                    >18 NodePlugInfo::add(place2dTexture1,rotateUV,float)
                                      >19 NodePlug::add(rotateUV, float)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture1.stagger)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(file1)
                                          >21 ShaderMgr::hasShaderType(file)
                                    >18 NodePlugInfo::add(place2dTexture1,stagger,float)
                                      >19 NodePlug::add(stagger, float)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture1.translateFrame)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrame)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrame)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(file1)
                                          >21 ShaderMgr::hasShaderType(file)
                                    >18 NodePlugInfo::add(place2dTexture1,translateFrame,float2)
                                      >19 NodePlug::add(translateFrame, float2)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture1.wrapU)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(file1)
                                          >21 ShaderMgr::hasShaderType(file)
                                    >18 NodePlugInfo::add(place2dTexture1,wrapU,float)
                                      >19 NodePlug::add(wrapU, float)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture1.wrapV)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(file1)
                                          >21 ShaderMgr::hasShaderType(file)
                                    >18 NodePlugInfo::add(place2dTexture1,wrapV,float)
                                      >19 NodePlug::add(wrapV, float)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture1.outUV)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(file1)
                                          >21 ShaderMgr::hasShaderType(file)
                                    >18 NodePlugInfo::add(place2dTexture1,outUV,float2)
                                      >19 NodePlug::add(outUV, float2)
                                    >18 OutputHelper::endRSL()
                              >15 ShaderMgr::getValidConnection(place2dTexture1)
                              >15 ConvertShadingNetwork::getNodeVariables(place2dTexture1, validConnections,  inputSrc, inputDes, outputSrc)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uCoord)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uCoord)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.vCoord)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.vCoord)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverage)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverage)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file1)
                                    >18 ShaderMgr::hasShaderType(file)
                                >16 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture1,coverage,place2dTexture1.coverage, outputVars)
                                  >17 Visitor::addShaderMethodVariavles(place2dTexture1,coverage,float,2,)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file1)
                                    >18 ShaderMgr::hasShaderType(file)
                                >16 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture1,mirrorU,place2dTexture1.mirrorU, outputVars)
                                  >17 Visitor::addShaderMethodVariavles(place2dTexture1,mirrorU,float,-1,)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file1)
                                    >18 ShaderMgr::hasShaderType(file)
                                >16 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture1,mirrorV,place2dTexture1.mirrorV, outputVars)
                                  >17 Visitor::addShaderMethodVariavles(place2dTexture1,mirrorV,float,-1,)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseUV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseUV)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file1)
                                    >18 ShaderMgr::hasShaderType(file)
                                >16 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture1,noiseUV,place2dTexture1.noiseUV, outputVars)
                                  >17 Visitor::addShaderMethodVariavles(place2dTexture1,noiseUV,float,2,)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offset)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file1)
                                    >18 ShaderMgr::hasShaderType(file)
                                >16 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture1,offset,place2dTexture1.offset, outputVars)
                                  >17 Visitor::addShaderMethodVariavles(place2dTexture1,offset,float,2,)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatUV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatUV)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file1)
                                    >18 ShaderMgr::hasShaderType(file)
                                >16 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture1,repeatUV,place2dTexture1.repeatUV, outputVars)
                                  >17 Visitor::addShaderMethodVariavles(place2dTexture1,repeatUV,float,2,)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file1)
                                    >18 ShaderMgr::hasShaderType(file)
                                >16 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture1,rotateFrame,place2dTexture1.rotateFrame, outputVars)
                                  >17 Visitor::addShaderMethodVariavles(place2dTexture1,rotateFrame,float,-1,)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file1)
                                    >18 ShaderMgr::hasShaderType(file)
                                >16 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture1,rotateUV,place2dTexture1.rotateUV, outputVars)
                                  >17 Visitor::addShaderMethodVariavles(place2dTexture1,rotateUV,float,-1,)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file1)
                                    >18 ShaderMgr::hasShaderType(file)
                                >16 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture1,stagger,place2dTexture1.stagger, outputVars)
                                  >17 Visitor::addShaderMethodVariavles(place2dTexture1,stagger,float,-1,)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrame)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrame)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file1)
                                    >18 ShaderMgr::hasShaderType(file)
                                >16 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture1,translateFrame,place2dTexture1.translateFrame, outputVars)
                                  >17 Visitor::addShaderMethodVariavles(place2dTexture1,translateFrame,float,2,)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file1)
                                    >18 ShaderMgr::hasShaderType(file)
                                >16 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture1,wrapU,place2dTexture1.wrapU, outputVars)
                                  >17 Visitor::addShaderMethodVariavles(place2dTexture1,wrapU,float,-1,)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file1)
                                    >18 ShaderMgr::hasShaderType(file)
                                >16 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture1,wrapV,place2dTexture1.wrapV, outputVars)
                                  >17 Visitor::addShaderMethodVariavles(place2dTexture1,wrapV,float,-1,)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file1)
                                    >18 ShaderMgr::hasShaderType(file)
                                >16 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture1,outUV,place2dTexture1.outUV, outputVars)
                                  >17 Visitor::addShaderMethodVariavles(place2dTexture1,outUV,float,2,)
                              >15 Visitor::addShaderMethodBody(place2dTexture1,,,place2dTexture1.coverage124place2dTexture1.mirrorU124place2dTexture1.mirrorV124place2dTexture1.noiseUV124place2dTexture1.offset124place2dTexture1.repeatUV124place2dTexture1.rotateFrame124place2dTexture1.rotateUV124place2dTexture1.stagger124place2dTexture1.translateFrame124place2dTexture1.wrapU124place2dTexture1.wrapV124place2dTexture1.outUV124)
                                >16 NodePlugConnectionMgr::add(place2dTexture1)
                              >15 Visitor::outputUpstreamShader(file2)
                                >16 ShaderOutputVisitor::_outputUpstreamShader(file2,file)
                                  >17 Visitor::visitFile(file2)
                                    >18 OutputHelper::addInclude(file.h)
                                    >18 OutputHelper::beginRSL(file2)
                                    >18 Renderer::getTextureExt()
                                    >18 ShaderMgr::convertibleConnection(file2.alphaGain)
                                      >19 ConvertShadingNetwork::convertibleConnection(file2.alphaGain)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file2.alphaGain)
                                    >18 NodePlugInfo::add(file2,alphaGain,float)
                                      >19 NodePlug::add(alphaGain, float)
                                    >18 ShaderMgr::convertibleConnection(file2.alphaIsLuminance)
                                      >19 ConvertShadingNetwork::convertibleConnection(file2.alphaIsLuminance)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file2.alphaIsLuminance)
                                    >18 NodePlugInfo::add(file2,alphaIsLuminance,float)
                                      >19 NodePlug::add(alphaIsLuminance, float)
                                    >18 ShaderMgr::convertibleConnection(file2.alphaOffset)
                                      >19 ConvertShadingNetwork::convertibleConnection(file2.alphaOffset)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file2.alphaOffset)
                                    >18 NodePlugInfo::add(file2,alphaOffset,float)
                                      >19 NodePlug::add(alphaOffset, float)
                                    >18 ShaderMgr::convertibleConnection(file2.colorGain)
                                      >19 ConvertShadingNetwork::convertibleConnection(file2.colorGain)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file2.colorGain)
                                    >18 NodePlugInfo::add(file2,colorGain,color)
                                      >19 NodePlug::add(colorGain, color)
                                    >18 ShaderMgr::convertibleConnection(file2.colorOffset)
                                      >19 ConvertShadingNetwork::convertibleConnection(file2.colorOffset)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file2.colorOffset)
                                    >18 NodePlugInfo::add(file2,colorOffset,color)
                                      >19 NodePlug::add(colorOffset, color)
                                    >18 ShaderMgr::convertibleConnection(file2.defaultColor)
                                      >19 ConvertShadingNetwork::convertibleConnection(file2.defaultColor)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file2.defaultColor)
                                    >18 NodePlugInfo::add(file2,defaultColor,color)
                                      >19 NodePlug::add(defaultColor, color)
                                    >18 ShaderMgr::convertibleConnection(file2.filterType)
                                      >19 ConvertShadingNetwork::convertibleConnection(file2.filterType)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file2.filterType)
                                    >18 NodePlugInfo::add(file2,filterType,float)
                                      >19 NodePlug::add(filterType, float)
                                    >18 ShaderMgr::convertibleConnection(file2.filter)
                                      >19 ConvertShadingNetwork::convertibleConnection(file2.filter)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file2.filter)
                                    >18 NodePlugInfo::add(file2,filter,float)
                                      >19 NodePlug::add(filter, float)
                                    >18 ShaderMgr::convertibleConnection(file2.filterOffset)
                                      >19 ConvertShadingNetwork::convertibleConnection(file2.filterOffset)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file2.filterOffset)
                                    >18 NodePlugInfo::add(file2,filterOffset,float)
                                      >19 NodePlug::add(filterOffset, float)
                                    >18 ShaderMgr::convertibleConnection(file2.frameExtension)
                                      >19 ConvertShadingNetwork::convertibleConnection(file2.frameExtension)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file2.frameExtension)
                                    >18 NodePlugInfo::add(file2,frameExtension,float)
                                      >19 NodePlug::add(frameExtension, float)
                                    >18 ShaderMgr::convertibleConnection(file2.frameOffset)
                                      >19 ConvertShadingNetwork::convertibleConnection(file2.frameOffset)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file2.frameOffset)
                                    >18 NodePlugInfo::add(file2,frameOffset,float)
                                      >19 NodePlug::add(frameOffset, float)
                                    >18 ShaderMgr::convertibleConnection(file2.invert)
                                      >19 ConvertShadingNetwork::convertibleConnection(file2.invert)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file2.invert)
                                    >18 NodePlugInfo::add(file2,invert,float)
                                      >19 NodePlug::add(invert, float)
                                    >18 ShaderMgr::convertibleConnection(file2.useFrameExtension)
                                      >19 ConvertShadingNetwork::convertibleConnection(file2.useFrameExtension)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file2.useFrameExtension)
                                    >18 NodePlugInfo::add(file2,useFrameExtension,float)
                                      >19 NodePlug::add(useFrameExtension, float)
                                    >18 ShaderMgr::convertibleConnection(file2.uvCoord)
                                      >19 ConvertShadingNetwork::convertibleConnection(file2.uvCoord)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file2.uvCoord)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(place2dTexture2)
                                          >21 ShaderMgr::hasShaderType(place2dTexture)
                                    >18 NodePlugInfo::add(file2,uvCoord,float2)
                                      >19 NodePlug::add(uvCoord, float2)
                                    >18 ShaderMgr::convertibleConnection(file2.fileHasAlpha)
                                      >19 ConvertShadingNetwork::convertibleConnection(file2.fileHasAlpha)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file2.fileHasAlpha)
                                    >18 NodePlugInfo::add(file2,fileHasAlpha,float)
                                      >19 NodePlug::add(fileHasAlpha, float)
                                    >18 ShaderMgr::convertibleConnection(file2.outAlpha)
                                      >19 ConvertShadingNetwork::convertibleConnection(file2.outAlpha)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file2.outAlpha)
                                    >18 NodePlugInfo::add(file2,outAlpha,float)
                                      >19 NodePlug::add(outAlpha, float)
                                    >18 ShaderMgr::convertibleConnection(file2.outColor)
                                      >19 ConvertShadingNetwork::convertibleConnection(file2.outColor)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file2.outColor)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(phong4)
                                          >21 ShaderMgr::hasShaderType(phong)
                                    >18 NodePlugInfo::add(file2,outColor,color)
                                      >19 NodePlug::add(outColor, color)
                                    >18 ShaderMgr::convertibleConnection(file2.outTransparency)
                                      >19 ConvertShadingNetwork::convertibleConnection(file2.outTransparency)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file2.outTransparency)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(phong1)
                                          >21 ShaderMgr::hasShaderType(phong)
                                    >18 NodePlugInfo::add(file2,outTransparency,color)
                                      >19 NodePlug::add(outTransparency, color)
                                    >18 OutputHelper::endRSL()
                              >15 ShaderMgr::getValidConnection(file2)
                              >15 ConvertShadingNetwork::getNodeVariables(file2, validConnections,  inputSrc, inputDes, outputSrc)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.alphaGain)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.alphaGain)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.alphaIsLuminance)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.alphaIsLuminance)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.alphaOffset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.alphaOffset)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.colorGainR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.colorGainR)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.colorGainG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.colorGainG)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.colorGainB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.colorGainB)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.colorGain)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.colorGain)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.colorOffsetR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.colorOffsetR)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.colorOffsetG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.colorOffsetG)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.colorOffsetB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.colorOffsetB)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.colorOffset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.colorOffset)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.defaultColorR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.defaultColorR)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.defaultColorG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.defaultColorG)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.defaultColorB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.defaultColorB)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.defaultColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.defaultColor)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.fileTextureName)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.fileTextureName)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.filterType)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.filterType)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.filter)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.filter)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.filterOffset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.filterOffset)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.invert)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.invert)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.uCoord)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.uCoord)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.vCoord)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.vCoord)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.uvCoord)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.uvCoord)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(place2dTexture2)
                                    >18 ShaderMgr::hasShaderType(place2dTexture)
                                >16 ConvertShadingNetwork::addNodeInputVariable(file2.uvCoord, inputSrc, inputDes)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(place2dTexture2)
                                    >18 ShaderMgr::hasShaderType(place2dTexture)
                                  >17 ShaderMgr::getValidConnection(place2dTexture2)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.fileHasAlpha)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.fileHasAlpha)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.outAlpha)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.outAlpha)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.outColorR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.outColorR)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.outColorG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.outColorG)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.outColorB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.outColorB)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.outColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.outColor)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(phong4)
                                    >18 ShaderMgr::hasShaderType(phong)
                                >16 ConvertShadingNetwork::addNodeOutputVariable(file2,outColor,file2.outColor, outputVars)
                                  >17 Visitor::addShaderMethodVariavles(file2,outColor,color,-1,)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.outTransparencyR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.outTransparencyR)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.outTransparencyG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.outTransparencyG)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.outTransparencyB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.outTransparencyB)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.outTransparency)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.outTransparency)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(phong1)
                                    >18 ShaderMgr::hasShaderType(phong)
                                >16 ConvertShadingNetwork::addNodeOutputVariable(file2,outTransparency,file2.outTransparency, outputVars)
                                  >17 Visitor::addShaderMethodVariavles(file2,outTransparency,color,-1,)
                              >15 Visitor::addShaderMethodBody(file2,place2dTexture2.outUV124,file2.uvCoord124,file2.outColor124file2.outTransparency124)
                                >16 NodePlugConnectionMgr::add(file2)
                              >15 Visitor::outputUpstreamShader(file1)
                                >16 ShaderOutputVisitor::_outputUpstreamShader(file1,file)
                                  >17 Visitor::visitFile(file1)
                                    >18 OutputHelper::addInclude(file.h)
                                    >18 OutputHelper::beginRSL(file1)
                                    >18 Renderer::getTextureExt()
                                    >18 ShaderMgr::convertibleConnection(file1.alphaGain)
                                      >19 ConvertShadingNetwork::convertibleConnection(file1.alphaGain)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file1.alphaGain)
                                    >18 NodePlugInfo::add(file1,alphaGain,float)
                                      >19 NodePlug::add(alphaGain, float)
                                    >18 ShaderMgr::convertibleConnection(file1.alphaIsLuminance)
                                      >19 ConvertShadingNetwork::convertibleConnection(file1.alphaIsLuminance)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file1.alphaIsLuminance)
                                    >18 NodePlugInfo::add(file1,alphaIsLuminance,float)
                                      >19 NodePlug::add(alphaIsLuminance, float)
                                    >18 ShaderMgr::convertibleConnection(file1.alphaOffset)
                                      >19 ConvertShadingNetwork::convertibleConnection(file1.alphaOffset)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file1.alphaOffset)
                                    >18 NodePlugInfo::add(file1,alphaOffset,float)
                                      >19 NodePlug::add(alphaOffset, float)
                                    >18 ShaderMgr::convertibleConnection(file1.colorGain)
                                      >19 ConvertShadingNetwork::convertibleConnection(file1.colorGain)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file1.colorGain)
                                    >18 NodePlugInfo::add(file1,colorGain,color)
                                      >19 NodePlug::add(colorGain, color)
                                    >18 ShaderMgr::convertibleConnection(file1.colorOffset)
                                      >19 ConvertShadingNetwork::convertibleConnection(file1.colorOffset)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file1.colorOffset)
                                    >18 NodePlugInfo::add(file1,colorOffset,color)
                                      >19 NodePlug::add(colorOffset, color)
                                    >18 ShaderMgr::convertibleConnection(file1.defaultColor)
                                      >19 ConvertShadingNetwork::convertibleConnection(file1.defaultColor)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file1.defaultColor)
                                    >18 NodePlugInfo::add(file1,defaultColor,color)
                                      >19 NodePlug::add(defaultColor, color)
                                    >18 ShaderMgr::convertibleConnection(file1.filterType)
                                      >19 ConvertShadingNetwork::convertibleConnection(file1.filterType)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file1.filterType)
                                    >18 NodePlugInfo::add(file1,filterType,float)
                                      >19 NodePlug::add(filterType, float)
                                    >18 ShaderMgr::convertibleConnection(file1.filter)
                                      >19 ConvertShadingNetwork::convertibleConnection(file1.filter)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file1.filter)
                                    >18 NodePlugInfo::add(file1,filter,float)
                                      >19 NodePlug::add(filter, float)
                                    >18 ShaderMgr::convertibleConnection(file1.filterOffset)
                                      >19 ConvertShadingNetwork::convertibleConnection(file1.filterOffset)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file1.filterOffset)
                                    >18 NodePlugInfo::add(file1,filterOffset,float)
                                      >19 NodePlug::add(filterOffset, float)
                                    >18 ShaderMgr::convertibleConnection(file1.frameExtension)
                                      >19 ConvertShadingNetwork::convertibleConnection(file1.frameExtension)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file1.frameExtension)
                                    >18 NodePlugInfo::add(file1,frameExtension,float)
                                      >19 NodePlug::add(frameExtension, float)
                                    >18 ShaderMgr::convertibleConnection(file1.frameOffset)
                                      >19 ConvertShadingNetwork::convertibleConnection(file1.frameOffset)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file1.frameOffset)
                                    >18 NodePlugInfo::add(file1,frameOffset,float)
                                      >19 NodePlug::add(frameOffset, float)
                                    >18 ShaderMgr::convertibleConnection(file1.invert)
                                      >19 ConvertShadingNetwork::convertibleConnection(file1.invert)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file1.invert)
                                    >18 NodePlugInfo::add(file1,invert,float)
                                      >19 NodePlug::add(invert, float)
                                    >18 ShaderMgr::convertibleConnection(file1.useFrameExtension)
                                      >19 ConvertShadingNetwork::convertibleConnection(file1.useFrameExtension)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file1.useFrameExtension)
                                    >18 NodePlugInfo::add(file1,useFrameExtension,float)
                                      >19 NodePlug::add(useFrameExtension, float)
                                    >18 ShaderMgr::convertibleConnection(file1.uvCoord)
                                      >19 ConvertShadingNetwork::convertibleConnection(file1.uvCoord)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file1.uvCoord)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                                          >21 ShaderMgr::hasShaderType(place2dTexture)
                                    >18 NodePlugInfo::add(file1,uvCoord,float2)
                                      >19 NodePlug::add(uvCoord, float2)
                                    >18 ShaderMgr::convertibleConnection(file1.fileHasAlpha)
                                      >19 ConvertShadingNetwork::convertibleConnection(file1.fileHasAlpha)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file1.fileHasAlpha)
                                    >18 NodePlugInfo::add(file1,fileHasAlpha,float)
                                      >19 NodePlug::add(fileHasAlpha, float)
                                    >18 ShaderMgr::convertibleConnection(file1.outAlpha)
                                      >19 ConvertShadingNetwork::convertibleConnection(file1.outAlpha)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file1.outAlpha)
                                    >18 NodePlugInfo::add(file1,outAlpha,float)
                                      >19 NodePlug::add(outAlpha, float)
                                    >18 ShaderMgr::convertibleConnection(file1.outColor)
                                      >19 ConvertShadingNetwork::convertibleConnection(file1.outColor)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file1.outColor)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(phong4)
                                          >21 ShaderMgr::hasShaderType(phong)
                                    >18 NodePlugInfo::add(file1,outColor,color)
                                      >19 NodePlug::add(outColor, color)
                                    >18 ShaderMgr::convertibleConnection(file1.outTransparency)
                                      >19 ConvertShadingNetwork::convertibleConnection(file1.outTransparency)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file1.outTransparency)
                                    >18 NodePlugInfo::add(file1,outTransparency,color)
                                      >19 NodePlug::add(outTransparency, color)
                                    >18 OutputHelper::endRSL()
                              >15 ShaderMgr::getValidConnection(file1)
                              >15 ConvertShadingNetwork::getNodeVariables(file1, validConnections,  inputSrc, inputDes, outputSrc)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.alphaGain)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.alphaGain)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.alphaIsLuminance)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.alphaIsLuminance)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.alphaOffset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.alphaOffset)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.colorGainR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.colorGainR)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.colorGainG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.colorGainG)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.colorGainB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.colorGainB)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.colorGain)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.colorGain)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.colorOffsetR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.colorOffsetR)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.colorOffsetG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.colorOffsetG)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.colorOffsetB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.colorOffsetB)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.colorOffset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.colorOffset)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.defaultColorR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.defaultColorR)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.defaultColorG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.defaultColorG)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.defaultColorB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.defaultColorB)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.defaultColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.defaultColor)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.fileTextureName)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.fileTextureName)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.filterType)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.filterType)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.filter)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.filter)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.filterOffset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.filterOffset)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.invert)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.invert)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.uCoord)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.uCoord)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.vCoord)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.vCoord)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.uvCoord)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.uvCoord)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                                    >18 ShaderMgr::hasShaderType(place2dTexture)
                                >16 ConvertShadingNetwork::addNodeInputVariable(file1.uvCoord, inputSrc, inputDes)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                                    >18 ShaderMgr::hasShaderType(place2dTexture)
                                  >17 ShaderMgr::getValidConnection(place2dTexture1)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.fileHasAlpha)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.fileHasAlpha)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.outAlpha)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.outAlpha)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.outColorR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.outColorR)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.outColorG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.outColorG)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.outColorB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.outColorB)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.outColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.outColor)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(phong4)
                                    >18 ShaderMgr::hasShaderType(phong)
                                >16 ConvertShadingNetwork::addNodeOutputVariable(file1,outColor,file1.outColor, outputVars)
                                  >17 Visitor::addShaderMethodVariavles(file1,outColor,color,-1,)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.outTransparencyR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.outTransparencyR)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.outTransparencyG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.outTransparencyG)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.outTransparencyB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.outTransparencyB)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.outTransparency)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.outTransparency)
                              >15 Visitor::addShaderMethodBody(file1,place2dTexture1.outUV124,file1.uvCoord124,file1.outColor124)
                                >16 NodePlugConnectionMgr::add(file1)
                              >15 Visitor::outputUpstreamShader(phong1)
                                >16 ShaderOutputVisitor::_outputUpstreamShader(phong1,phong)
                                  >17 Visitor::visitPhong(phong1)
                                    >18 OutputHelper::addInclude(phong.h)
                                    >18 OutputHelper::beginRSL(phong1)
                                    >18 ShaderMgr::convertibleConnection(phong1.ambientColor)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                                    >18 NodePlugInfo::add(phong1,ambientColor,color)
                                      >19 NodePlug::add(ambientColor, color)
                                    >18 ShaderMgr::convertibleConnection(phong1.color)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong1.color)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(file1)
                                          >21 ShaderMgr::hasShaderType(file)
                                    >18 NodePlugInfo::add(phong1,color,color)
                                      >19 NodePlug::add(color, color)
                                    >18 ShaderMgr::convertibleConnection(phong1.cosinePower)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                                    >18 NodePlugInfo::add(phong1,cosinePower,float)
                                      >19 NodePlug::add(cosinePower, float)
                                    >18 ShaderMgr::convertibleConnection(phong1.diffuse)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                                    >18 NodePlugInfo::add(phong1,diffuse,float)
                                      >19 NodePlug::add(diffuse, float)
                                    >18 ShaderMgr::convertibleConnection(phong1.incandescence)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                                    >18 NodePlugInfo::add(phong1,incandescence,color)
                                      >19 NodePlug::add(incandescence, color)
                                    >18 ShaderMgr::convertibleConnection(phong1.matteOpacity)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                                    >18 NodePlugInfo::add(phong1,matteOpacity,float)
                                      >19 NodePlug::add(matteOpacity, float)
                                    >18 ShaderMgr::convertibleConnection(phong1.matteOpacityMode)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                                    >18 NodePlugInfo::add(phong1,matteOpacityMode,float)
                                      >19 NodePlug::add(matteOpacityMode, float)
                                    >18 ShaderMgr::convertibleConnection(phong1.specularColor)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                                    >18 NodePlugInfo::add(phong1,specularColor,color)
                                      >19 NodePlug::add(specularColor, color)
                                    >18 ShaderMgr::convertibleConnection(phong1.reflectivity)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                                    >18 NodePlugInfo::add(phong1,reflectivity,float)
                                      >19 NodePlug::add(reflectivity, float)
                                    >18 ShaderMgr::convertibleConnection(phong1.reflectedColor)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                                    >18 NodePlugInfo::add(phong1,reflectedColor,color)
                                      >19 NodePlug::add(reflectedColor, color)
                                    >18 ShaderMgr::convertibleConnection(phong1.refractions)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong1.refractions)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong1.refractions)
                                    >18 NodePlugInfo::add(phong1,refractions,float)
                                      >19 NodePlug::add(refractions, float)
                                    >18 ShaderMgr::convertibleConnection(phong1.refractiveIndex)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong1.refractiveIndex)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong1.refractiveIndex)
                                    >18 NodePlugInfo::add(phong1,refractiveIndex,float)
                                      >19 NodePlug::add(refractiveIndex, float)
                                    >18 ShaderMgr::convertibleConnection(phong1.refractionLimit)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong1.refractionLimit)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong1.refractionLimit)
                                    >18 NodePlugInfo::add(phong1,refractionLimit,float)
                                      >19 NodePlug::add(refractionLimit, float)
                                    >18 ShaderMgr::convertibleConnection(phong1.lightAbsorbance)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong1.lightAbsorbance)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong1.lightAbsorbance)
                                    >18 NodePlugInfo::add(phong1,lightAbsorbance,float)
                                      >19 NodePlug::add(lightAbsorbance, float)
                                    >18 ShaderMgr::convertibleConnection(phong1.shadowAttenuation)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong1.shadowAttenuation)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong1.shadowAttenuation)
                                    >18 NodePlugInfo::add(phong1,shadowAttenuation,float)
                                      >19 NodePlug::add(shadowAttenuation, float)
                                    >18 ShaderMgr::convertibleConnection(phong1.reflectionLimit)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                                    >18 NodePlugInfo::add(phong1,reflectionLimit,float)
                                      >19 NodePlug::add(reflectionLimit, float)
                                    >18 ShaderMgr::convertibleConnection(phong1.translucence)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                                    >18 NodePlugInfo::add(phong1,translucence,float)
                                      >19 NodePlug::add(translucence, float)
                                    >18 ShaderMgr::convertibleConnection(phong1.translucenceDepth)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                                    >18 NodePlugInfo::add(phong1,translucenceDepth,float)
                                      >19 NodePlug::add(translucenceDepth, float)
                                    >18 ShaderMgr::convertibleConnection(phong1.translucenceFocus)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                                    >18 NodePlugInfo::add(phong1,translucenceFocus,float)
                                      >19 NodePlug::add(translucenceFocus, float)
                                    >18 ShaderMgr::convertibleConnection(phong1.transparency)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(file2)
                                          >21 ShaderMgr::hasShaderType(file)
                                    >18 NodePlugInfo::add(phong1,transparency,color)
                                      >19 NodePlug::add(transparency, color)
                                    >18 ShaderMgr::convertibleConnection(phong1.outColor)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                                          >21 ShaderMgr::hasShaderType(shadingEngine)
                                    >18 NodePlugInfo::add(phong1,outColor,color)
                                      >19 NodePlug::add(outColor, color)
                                    >18 ShaderMgr::convertibleConnection(phong1.outTransparency)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                                    >18 NodePlugInfo::add(phong1,outTransparency,color)
                                      >19 NodePlug::add(outTransparency, color)
                                    >18 OutputHelper::endRSL()
                              >15 ShaderMgr::getValidConnection(phong1)
                              >15 ConvertShadingNetwork::getNodeVariables(phong1, validConnections,  inputSrc, inputDes, outputSrc)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.colorR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.colorR)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.colorG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.colorG)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.colorB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.colorB)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.color)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.color)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file1)
                                    >18 ShaderMgr::hasShaderType(file)
                                >16 ConvertShadingNetwork::addNodeInputVariable(phong1.color, inputSrc, inputDes)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file1)
                                    >18 ShaderMgr::hasShaderType(file)
                                  >17 ShaderMgr::getValidConnection(file1)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.transparencyR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyR)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.transparencyG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyG)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.transparencyB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.transparencyB)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.transparency)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.transparency)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file2)
                                    >18 ShaderMgr::hasShaderType(file)
                                >16 ConvertShadingNetwork::addNodeInputVariable(phong1.transparency, inputSrc, inputDes)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file2)
                                    >18 ShaderMgr::hasShaderType(file)
                                  >17 ShaderMgr::getValidConnection(file2)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorR)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorG)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.ambientColorB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColorB)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.ambientColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.ambientColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceR)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceG)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.incandescenceB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.incandescenceB)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.incandescence)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.incandescence)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraX)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraX)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraY)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraY)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.normalCameraZ)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.normalCameraZ)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.normalCamera)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.normalCamera)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.diffuse)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.diffuse)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.translucence)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.translucence)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.translucenceDepth)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceDepth)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.translucenceFocus)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.translucenceFocus)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.cosinePower)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.cosinePower)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.specularColorR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorR)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.specularColorG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorG)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.specularColorB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.specularColorB)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.specularColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.specularColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.reflectivity)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.reflectivity)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorR)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorG)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColorB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColorB)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.reflectedColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.reflectedColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacityMode)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacityMode)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.matteOpacity)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.matteOpacity)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.reflectionLimit)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.reflectionLimit)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.outColorR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.outColorR)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.outColorG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.outColorG)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.outColorB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.outColorB)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.outColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.outColor)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(phong1SG)
                                    >18 ShaderMgr::hasShaderType(shadingEngine)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyR)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyG)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.outTransparencyB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparencyB)
                                >16 ConvertShadingNetwork::convertibleConnection(phong1.outTransparency)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong1.outTransparency)
                              >15 Visitor::addShaderMethodBody(phong1,file1.outColor124file2.outTransparency124,phong1.color124phong1.transparency124,)
                                >16 NodePlugConnectionMgr::add(phong1)
                            >14 ConvertShadingNetwork::outputShaderMethod()
                              >15 Visitor::outputShaderMethod()
                                >16 NodePlugConnectionMgr::cookRSLFunctionCallString(0)
                                >16 NodePlugConnectionMgr::log(0)
                                >16 NodePlugConnectionMgr::cookRSLFunctionCallString(1)
                                >16 NodePlugConnectionMgr::log(1)
                                >16 NodePlugConnectionMgr::cookRSLFunctionCallString(2)
                                  >17 NodePlugInfo::getPlugInfo(place2dTexture2.outUV)
                                    >18 NodePlugInfo::getPlugInfo(place2dTexture2,outUV)
                                      >19 NodePlug::getPlugInfo(outUV)
                                  >17 NodePlugInfo::getPlugInfo(file2.uvCoord)
                                    >18 NodePlugInfo::getPlugInfo(file2,uvCoord)
                                      >19 NodePlug::getPlugInfo(uvCoord)
                                >16 NodePlugConnectionMgr::log(2)
                                >16 NodePlugConnectionMgr::cookRSLFunctionCallString(3)
                                  >17 NodePlugInfo::getPlugInfo(place2dTexture1.outUV)
                                    >18 NodePlugInfo::getPlugInfo(place2dTexture1,outUV)
                                      >19 NodePlug::getPlugInfo(outUV)
                                  >17 NodePlugInfo::getPlugInfo(file1.uvCoord)
                                    >18 NodePlugInfo::getPlugInfo(file1,uvCoord)
                                      >19 NodePlug::getPlugInfo(uvCoord)
                                >16 NodePlugConnectionMgr::log(3)
                                >16 NodePlugConnectionMgr::cookRSLFunctionCallString(4)
                                  >17 NodePlugInfo::getPlugInfo(file1.outColor)
                                    >18 NodePlugInfo::getPlugInfo(file1,outColor)
                                      >19 NodePlug::getPlugInfo(outColor)
                                  >17 NodePlugInfo::getPlugInfo(phong1.color)
                                    >18 NodePlugInfo::getPlugInfo(phong1,color)
                                      >19 NodePlug::getPlugInfo(color)
                                  >17 NodePlugInfo::getPlugInfo(file2.outTransparency)
                                    >18 NodePlugInfo::getPlugInfo(file2,outTransparency)
                                      >19 NodePlug::getPlugInfo(outTransparency)
                                  >17 NodePlugInfo::getPlugInfo(phong1.transparency)
                                    >18 NodePlugInfo::getPlugInfo(phong1,transparency)
                                      >19 NodePlug::getPlugInfo(transparency)
                                >16 NodePlugConnectionMgr::log(4)
                            >14 Visitor::outputEnd(), close shader file
                            >14 Visitor::postOutput()
                              >15 getShaderFilePath_SLO(phong1)
                                >16 getShaderFilePath_NoExt(phong1)
                              >15 getShaderFilePath_SRC(phong1)
                                >16 getShaderFilePath_NoExt(phong1)
                          >13 ConvertShadingNetwork::exportShaderEnd(phong1)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,displacementShader)
                    >10 ConvertShadingNetwork::exportShaderNodeInPlug(phong1SG,displacementShader)
                      >11 ConvertShadingNetwork::_exportShaderNodeInPlug(phong1SG,displacementShader)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong1SG,volumeShader)
                    >10 ConvertShadingNetwork::exportShaderNodeInPlug(phong1SG,volumeShader)
                      >11 ConvertShadingNetwork::_exportShaderNodeInPlug(phong1SG,volumeShader)
                  >9 ConvertShadingNetwork::exportShadingGroupBegin(phong1SG)
                  >9 ConvertShadingNetwork::outputShadingGroup(phong1SG)
                    >10 Visitor::outputShadingGroup(phong1SG)
                      >11 Visitor::outputShadingGroup(phong1SG,0)
                  >9 ConvertShadingNetwork::exportShadingGroupEnd(phong1SG)
                  >9 ConvertShadingNetwork::canShadingGroupExported(phong4SG)
                  >9 Renderer::getValidShaderPlugsInShadingGroup()
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong4SG,surfaceShader)
                    >10 ConvertShadingNetwork::exportShaderNodeInPlug(phong4SG,surfaceShader)
                      >11 ConvertShadingNetwork::_exportShaderNodeInPlug(phong4SG,surfaceShader)
                        >12 ConvertShadingNetwork::exportShaderNode(phong4)
                          >13 ConvertShadingNetwork::canShaderExported(phong4)
                          >13 ConvertShadingNetwork::exportShaderBegin(phong4)
                          >13 ConvertShadingNetwork::convertShadingNetworkToRSL(phong4)
                            >14 Visitor::initShaderData(phong4)
                              >15 NodePlugConnectionMgr::setNodePlugMgr(...)
                              >15 NodePlugConnectionMgr::reset()
                            >14 ConvertShadingNetwork::getUpstreamConvertibleNodes(phong4, nodes, numConnections)
                              >15 DagMgr::BreadthFirstTraversal(phong4, ret)
                                >16 DagMgr::begin(phong4)
                                  >17 DagMgr::pushInputPlugs(phong4)
                                    >18 ShaderMgr::getValidConnection(phong4)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong4.colorR)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong4.colorR)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong4.colorG)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong4.colorG)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong4.colorB)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong4.colorB)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong4.color)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong4.color)
                                      >19 ConvertShadingNetwork::nodeIsConvertible(file1)
                                        >20 ShaderMgr::hasShaderType(file)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong4.transparencyR)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong4.transparencyR)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong4.transparencyG)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong4.transparencyG)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong4.transparencyB)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong4.transparencyB)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong4.transparency)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong4.transparency)
                                      >19 ConvertShadingNetwork::nodeIsConvertible(file2)
                                        >20 ShaderMgr::hasShaderType(file)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong4.ambientColorR)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong4.ambientColorR)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong4.ambientColorG)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong4.ambientColorG)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong4.ambientColorB)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong4.ambientColorB)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong4.ambientColor)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong4.ambientColor)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong4.incandescenceR)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong4.incandescenceR)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong4.incandescenceG)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong4.incandescenceG)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong4.incandescenceB)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong4.incandescenceB)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong4.incandescence)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong4.incandescence)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong4.normalCameraX)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong4.normalCameraX)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong4.normalCameraY)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong4.normalCameraY)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong4.normalCameraZ)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong4.normalCameraZ)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong4.normalCamera)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong4.normalCamera)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong4.diffuse)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong4.diffuse)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong4.translucence)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong4.translucence)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong4.translucenceDepth)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong4.translucenceDepth)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong4.translucenceFocus)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong4.translucenceFocus)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong4.cosinePower)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong4.cosinePower)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong4.specularColorR)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong4.specularColorR)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong4.specularColorG)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong4.specularColorG)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong4.specularColorB)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong4.specularColorB)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong4.specularColor)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong4.specularColor)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong4.reflectivity)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong4.reflectivity)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong4.reflectedColorR)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong4.reflectedColorR)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong4.reflectedColorG)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong4.reflectedColorG)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong4.reflectedColorB)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong4.reflectedColorB)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong4.reflectedColor)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong4.reflectedColor)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong4.matteOpacityMode)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong4.matteOpacityMode)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong4.matteOpacity)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong4.matteOpacity)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong4.reflectionLimit)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong4.reflectionLimit)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong4.outColorR)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong4.outColorR)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong4.outColorG)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong4.outColorG)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong4.outColorB)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong4.outColorB)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong4.outColor)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong4.outColor)
                                      >19 ConvertShadingNetwork::nodeIsConvertible(phong4SG)
                                        >20 ShaderMgr::hasShaderType(shadingEngine)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong4.outTransparencyR)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong4.outTransparencyR)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong4.outTransparencyG)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong4.outTransparencyG)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong4.outTransparencyB)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong4.outTransparencyB)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong4.outTransparency)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong4.outTransparency)
                                >16 DagMgr::pushInputPlugs(file1)
                                  >17 ShaderMgr::getValidConnection(file1)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.alphaGain)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.alphaGain)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.alphaIsLuminance)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.alphaIsLuminance)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.alphaOffset)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.alphaOffset)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.colorGainR)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.colorGainR)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.colorGainG)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.colorGainG)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.colorGainB)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.colorGainB)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.colorGain)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.colorGain)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.colorOffsetR)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.colorOffsetR)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.colorOffsetG)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.colorOffsetG)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.colorOffsetB)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.colorOffsetB)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.colorOffset)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.colorOffset)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.defaultColorR)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.defaultColorR)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.defaultColorG)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.defaultColorG)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.defaultColorB)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.defaultColorB)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.defaultColor)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.defaultColor)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.fileTextureName)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.fileTextureName)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.filterType)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.filterType)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.filter)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.filter)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.filterOffset)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.filterOffset)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.invert)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.invert)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.uCoord)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.uCoord)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.vCoord)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.vCoord)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.uvCoord)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.uvCoord)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                                      >19 ShaderMgr::hasShaderType(place2dTexture)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.fileHasAlpha)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.fileHasAlpha)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.outAlpha)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.outAlpha)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.outColorR)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.outColorR)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.outColorG)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.outColorG)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.outColorB)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.outColorB)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.outColor)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.outColor)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(phong4)
                                      >19 ShaderMgr::hasShaderType(phong)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.outTransparencyR)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.outTransparencyR)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.outTransparencyG)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.outTransparencyG)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.outTransparencyB)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.outTransparencyB)
                                  >17 ConvertShadingNetwork::convertibleConnection(file1.outTransparency)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file1.outTransparency)
                                >16 DagMgr::pushInputPlugs(file2)
                                  >17 ShaderMgr::getValidConnection(file2)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.alphaGain)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.alphaGain)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.alphaIsLuminance)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.alphaIsLuminance)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.alphaOffset)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.alphaOffset)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.colorGainR)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.colorGainR)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.colorGainG)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.colorGainG)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.colorGainB)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.colorGainB)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.colorGain)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.colorGain)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.colorOffsetR)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.colorOffsetR)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.colorOffsetG)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.colorOffsetG)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.colorOffsetB)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.colorOffsetB)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.colorOffset)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.colorOffset)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.defaultColorR)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.defaultColorR)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.defaultColorG)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.defaultColorG)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.defaultColorB)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.defaultColorB)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.defaultColor)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.defaultColor)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.fileTextureName)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.fileTextureName)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.filterType)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.filterType)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.filter)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.filter)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.filterOffset)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.filterOffset)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.invert)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.invert)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.uCoord)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.uCoord)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.vCoord)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.vCoord)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.uvCoord)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.uvCoord)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(place2dTexture2)
                                      >19 ShaderMgr::hasShaderType(place2dTexture)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.fileHasAlpha)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.fileHasAlpha)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.outAlpha)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.outAlpha)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.outColorR)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.outColorR)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.outColorG)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.outColorG)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.outColorB)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.outColorB)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.outColor)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.outColor)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(phong4)
                                      >19 ShaderMgr::hasShaderType(phong)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.outTransparencyR)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.outTransparencyR)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.outTransparencyG)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.outTransparencyG)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.outTransparencyB)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.outTransparencyB)
                                  >17 ConvertShadingNetwork::convertibleConnection(file2.outTransparency)
                                    >18 ConvertShadingNetwork::ensurePlugExists(file2.outTransparency)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(phong1)
                                      >19 ShaderMgr::hasShaderType(phong)
                                >16 DagMgr::pushInputPlugs(place2dTexture1)
                                  >17 ShaderMgr::getValidConnection(place2dTexture1)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uCoord)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uCoord)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture1.vCoord)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.vCoord)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverage)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverage)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(file1)
                                      >19 ShaderMgr::hasShaderType(file)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(file1)
                                      >19 ShaderMgr::hasShaderType(file)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(file1)
                                      >19 ShaderMgr::hasShaderType(file)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseUV)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseUV)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(file1)
                                      >19 ShaderMgr::hasShaderType(file)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offset)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offset)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(file1)
                                      >19 ShaderMgr::hasShaderType(file)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatUV)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatUV)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(file1)
                                      >19 ShaderMgr::hasShaderType(file)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(file1)
                                      >19 ShaderMgr::hasShaderType(file)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(file1)
                                      >19 ShaderMgr::hasShaderType(file)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(file1)
                                      >19 ShaderMgr::hasShaderType(file)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrame)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrame)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(file1)
                                      >19 ShaderMgr::hasShaderType(file)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(file1)
                                      >19 ShaderMgr::hasShaderType(file)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(file1)
                                      >19 ShaderMgr::hasShaderType(file)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outU)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outU)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outV)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outV)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(file1)
                                      >19 ShaderMgr::hasShaderType(file)
                                >16 DagMgr::pushInputPlugs(place2dTexture2)
                                  >17 ShaderMgr::getValidConnection(place2dTexture2)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.uCoord)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.uCoord)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.vCoord)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.vCoord)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.uvCoord)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.uvCoord)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.coverageU)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.coverageU)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.coverageV)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.coverageV)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.coverage)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.coverage)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(file2)
                                      >19 ShaderMgr::hasShaderType(file)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.mirrorU)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.mirrorU)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(file2)
                                      >19 ShaderMgr::hasShaderType(file)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.mirrorV)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.mirrorV)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(file2)
                                      >19 ShaderMgr::hasShaderType(file)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.noiseU)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.noiseU)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.noiseV)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.noiseV)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.noiseUV)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.noiseUV)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(file2)
                                      >19 ShaderMgr::hasShaderType(file)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.offsetU)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.offsetU)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.offsetV)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.offsetV)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.offset)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.offset)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(file2)
                                      >19 ShaderMgr::hasShaderType(file)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.repeatU)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.repeatU)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.repeatV)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.repeatV)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.repeatUV)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.repeatUV)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(file2)
                                      >19 ShaderMgr::hasShaderType(file)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.rotateFrame)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.rotateFrame)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(file2)
                                      >19 ShaderMgr::hasShaderType(file)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.rotateUV)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.rotateUV)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(file2)
                                      >19 ShaderMgr::hasShaderType(file)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.stagger)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.stagger)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(file2)
                                      >19 ShaderMgr::hasShaderType(file)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.translateFrameU)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.translateFrameU)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.translateFrameV)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.translateFrameV)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.translateFrame)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.translateFrame)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(file2)
                                      >19 ShaderMgr::hasShaderType(file)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.wrapU)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.wrapU)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(file2)
                                      >19 ShaderMgr::hasShaderType(file)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.wrapV)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.wrapV)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(file2)
                                      >19 ShaderMgr::hasShaderType(file)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.outU)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.outU)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.outV)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.outV)
                                  >17 ConvertShadingNetwork::convertibleConnection(place2dTexture2.outUV)
                                    >18 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.outUV)
                                    >18 ConvertShadingNetwork::nodeIsConvertible(file2)
                                      >19 ShaderMgr::hasShaderType(file)
                                >16 DagMgr::isVisited(place2dTexture2)
                                >16 DagMgr::visit(place2dTexture2)
                                >16 DagMgr::isVisited(place2dTexture1)
                                >16 DagMgr::visit(place2dTexture1)
                                >16 DagMgr::isVisited(file2)
                                >16 DagMgr::visit(file2)
                                >16 DagMgr::isVisited(file1)
                                >16 DagMgr::visit(file1)
                                >16 DagMgr::end()
                            >14 Visitor::preOutput(phong4)
                            >14 Visitor::outputBegin(phong4), open shader file
                              >15 getShaderFilePath_SRC(phong4)
                                >16 getShaderFilePath_NoExt(phong4)
                              >15 Visitor::getSurfaceShaderAOVOutputParametersString()
                              >15 Visitor::defineAOVVariables(phong4)
                            >14 ConvertShadingNetwork::traverseGraphAndOutputNodeFunctions( nodes, numConnections)
                              >15 Visitor::outputUpstreamShader(place2dTexture2)
                                >16 ShaderOutputVisitor::_outputUpstreamShader(place2dTexture2,place2dTexture)
                                  >17 Visitor::visitPlace2dTexture(place2dTexture2)
                                    >18 OutputHelper::addInclude(place2dTexture.h)
                                    >18 OutputHelper::beginRSL(place2dTexture2)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture2.coverage)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture2.coverage)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.coverage)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(file2)
                                          >21 ShaderMgr::hasShaderType(file)
                                    >18 NodePlugInfo::add(place2dTexture2,coverage,float2)
                                      >19 NodePlug::add(coverage, float2)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture2.mirrorU)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture2.mirrorU)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.mirrorU)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(file2)
                                          >21 ShaderMgr::hasShaderType(file)
                                    >18 NodePlugInfo::add(place2dTexture2,mirrorU,float)
                                      >19 NodePlug::add(mirrorU, float)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture2.mirrorV)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture2.mirrorV)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.mirrorV)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(file2)
                                          >21 ShaderMgr::hasShaderType(file)
                                    >18 NodePlugInfo::add(place2dTexture2,mirrorV,float)
                                      >19 NodePlug::add(mirrorV, float)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture2.noiseUV)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture2.noiseUV)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.noiseUV)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(file2)
                                          >21 ShaderMgr::hasShaderType(file)
                                    >18 NodePlugInfo::add(place2dTexture2,noiseUV,float2)
                                      >19 NodePlug::add(noiseUV, float2)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture2.offset)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture2.offset)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.offset)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(file2)
                                          >21 ShaderMgr::hasShaderType(file)
                                    >18 NodePlugInfo::add(place2dTexture2,offset,float2)
                                      >19 NodePlug::add(offset, float2)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture2.repeatUV)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture2.repeatUV)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.repeatUV)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(file2)
                                          >21 ShaderMgr::hasShaderType(file)
                                    >18 NodePlugInfo::add(place2dTexture2,repeatUV,float2)
                                      >19 NodePlug::add(repeatUV, float2)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture2.rotateFrame)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture2.rotateFrame)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.rotateFrame)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(file2)
                                          >21 ShaderMgr::hasShaderType(file)
                                    >18 NodePlugInfo::add(place2dTexture2,rotateFrame,float)
                                      >19 NodePlug::add(rotateFrame, float)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture2.rotateUV)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture2.rotateUV)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.rotateUV)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(file2)
                                          >21 ShaderMgr::hasShaderType(file)
                                    >18 NodePlugInfo::add(place2dTexture2,rotateUV,float)
                                      >19 NodePlug::add(rotateUV, float)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture2.stagger)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture2.stagger)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.stagger)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(file2)
                                          >21 ShaderMgr::hasShaderType(file)
                                    >18 NodePlugInfo::add(place2dTexture2,stagger,float)
                                      >19 NodePlug::add(stagger, float)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture2.translateFrame)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture2.translateFrame)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.translateFrame)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(file2)
                                          >21 ShaderMgr::hasShaderType(file)
                                    >18 NodePlugInfo::add(place2dTexture2,translateFrame,float2)
                                      >19 NodePlug::add(translateFrame, float2)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture2.wrapU)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture2.wrapU)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.wrapU)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(file2)
                                          >21 ShaderMgr::hasShaderType(file)
                                    >18 NodePlugInfo::add(place2dTexture2,wrapU,float)
                                      >19 NodePlug::add(wrapU, float)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture2.wrapV)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture2.wrapV)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.wrapV)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(file2)
                                          >21 ShaderMgr::hasShaderType(file)
                                    >18 NodePlugInfo::add(place2dTexture2,wrapV,float)
                                      >19 NodePlug::add(wrapV, float)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture2.outUV)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture2.outUV)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.outUV)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(file2)
                                          >21 ShaderMgr::hasShaderType(file)
                                    >18 NodePlugInfo::add(place2dTexture2,outUV,float2)
                                      >19 NodePlug::add(outUV, float2)
                                    >18 OutputHelper::endRSL()
                              >15 ShaderMgr::getValidConnection(place2dTexture2)
                              >15 ConvertShadingNetwork::getNodeVariables(place2dTexture2, validConnections,  inputSrc, inputDes, outputSrc)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.uCoord)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.uCoord)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.vCoord)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.vCoord)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.uvCoord)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.uvCoord)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.coverageU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.coverageU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.coverageV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.coverageV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.coverage)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.coverage)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file2)
                                    >18 ShaderMgr::hasShaderType(file)
                                >16 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture2,coverage,place2dTexture2.coverage, outputVars)
                                  >17 Visitor::addShaderMethodVariavles(place2dTexture2,coverage,float,2,)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.mirrorU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.mirrorU)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file2)
                                    >18 ShaderMgr::hasShaderType(file)
                                >16 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture2,mirrorU,place2dTexture2.mirrorU, outputVars)
                                  >17 Visitor::addShaderMethodVariavles(place2dTexture2,mirrorU,float,-1,)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.mirrorV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.mirrorV)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file2)
                                    >18 ShaderMgr::hasShaderType(file)
                                >16 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture2,mirrorV,place2dTexture2.mirrorV, outputVars)
                                  >17 Visitor::addShaderMethodVariavles(place2dTexture2,mirrorV,float,-1,)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.noiseU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.noiseU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.noiseV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.noiseV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.noiseUV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.noiseUV)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file2)
                                    >18 ShaderMgr::hasShaderType(file)
                                >16 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture2,noiseUV,place2dTexture2.noiseUV, outputVars)
                                  >17 Visitor::addShaderMethodVariavles(place2dTexture2,noiseUV,float,2,)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.offsetU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.offsetU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.offsetV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.offsetV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.offset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.offset)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file2)
                                    >18 ShaderMgr::hasShaderType(file)
                                >16 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture2,offset,place2dTexture2.offset, outputVars)
                                  >17 Visitor::addShaderMethodVariavles(place2dTexture2,offset,float,2,)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.repeatU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.repeatU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.repeatV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.repeatV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.repeatUV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.repeatUV)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file2)
                                    >18 ShaderMgr::hasShaderType(file)
                                >16 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture2,repeatUV,place2dTexture2.repeatUV, outputVars)
                                  >17 Visitor::addShaderMethodVariavles(place2dTexture2,repeatUV,float,2,)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.rotateFrame)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.rotateFrame)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file2)
                                    >18 ShaderMgr::hasShaderType(file)
                                >16 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture2,rotateFrame,place2dTexture2.rotateFrame, outputVars)
                                  >17 Visitor::addShaderMethodVariavles(place2dTexture2,rotateFrame,float,-1,)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.rotateUV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.rotateUV)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file2)
                                    >18 ShaderMgr::hasShaderType(file)
                                >16 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture2,rotateUV,place2dTexture2.rotateUV, outputVars)
                                  >17 Visitor::addShaderMethodVariavles(place2dTexture2,rotateUV,float,-1,)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.stagger)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.stagger)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file2)
                                    >18 ShaderMgr::hasShaderType(file)
                                >16 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture2,stagger,place2dTexture2.stagger, outputVars)
                                  >17 Visitor::addShaderMethodVariavles(place2dTexture2,stagger,float,-1,)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.translateFrameU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.translateFrameU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.translateFrameV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.translateFrameV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.translateFrame)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.translateFrame)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file2)
                                    >18 ShaderMgr::hasShaderType(file)
                                >16 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture2,translateFrame,place2dTexture2.translateFrame, outputVars)
                                  >17 Visitor::addShaderMethodVariavles(place2dTexture2,translateFrame,float,2,)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.wrapU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.wrapU)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file2)
                                    >18 ShaderMgr::hasShaderType(file)
                                >16 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture2,wrapU,place2dTexture2.wrapU, outputVars)
                                  >17 Visitor::addShaderMethodVariavles(place2dTexture2,wrapU,float,-1,)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.wrapV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.wrapV)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file2)
                                    >18 ShaderMgr::hasShaderType(file)
                                >16 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture2,wrapV,place2dTexture2.wrapV, outputVars)
                                  >17 Visitor::addShaderMethodVariavles(place2dTexture2,wrapV,float,-1,)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.outU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.outU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.outV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.outV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture2.outUV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture2.outUV)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file2)
                                    >18 ShaderMgr::hasShaderType(file)
                                >16 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture2,outUV,place2dTexture2.outUV, outputVars)
                                  >17 Visitor::addShaderMethodVariavles(place2dTexture2,outUV,float,2,)
                              >15 Visitor::addShaderMethodBody(place2dTexture2,,,place2dTexture2.coverage124place2dTexture2.mirrorU124place2dTexture2.mirrorV124place2dTexture2.noiseUV124place2dTexture2.offset124place2dTexture2.repeatUV124place2dTexture2.rotateFrame124place2dTexture2.rotateUV124place2dTexture2.stagger124place2dTexture2.translateFrame124place2dTexture2.wrapU124place2dTexture2.wrapV124place2dTexture2.outUV124)
                                >16 NodePlugConnectionMgr::add(place2dTexture2)
                              >15 Visitor::outputUpstreamShader(place2dTexture1)
                                >16 ShaderOutputVisitor::_outputUpstreamShader(place2dTexture1,place2dTexture)
                                  >17 Visitor::visitPlace2dTexture(place2dTexture1)
                                    >18 OutputHelper::addInclude(place2dTexture.h)
                                    >18 OutputHelper::beginRSL(place2dTexture1)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture1.coverage)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverage)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverage)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(file1)
                                          >21 ShaderMgr::hasShaderType(file)
                                    >18 NodePlugInfo::add(place2dTexture1,coverage,float2)
                                      >19 NodePlug::add(coverage, float2)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture1.mirrorU)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(file1)
                                          >21 ShaderMgr::hasShaderType(file)
                                    >18 NodePlugInfo::add(place2dTexture1,mirrorU,float)
                                      >19 NodePlug::add(mirrorU, float)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture1.mirrorV)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(file1)
                                          >21 ShaderMgr::hasShaderType(file)
                                    >18 NodePlugInfo::add(place2dTexture1,mirrorV,float)
                                      >19 NodePlug::add(mirrorV, float)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture1.noiseUV)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseUV)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseUV)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(file1)
                                          >21 ShaderMgr::hasShaderType(file)
                                    >18 NodePlugInfo::add(place2dTexture1,noiseUV,float2)
                                      >19 NodePlug::add(noiseUV, float2)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture1.offset)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offset)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offset)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(file1)
                                          >21 ShaderMgr::hasShaderType(file)
                                    >18 NodePlugInfo::add(place2dTexture1,offset,float2)
                                      >19 NodePlug::add(offset, float2)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture1.repeatUV)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatUV)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatUV)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(file1)
                                          >21 ShaderMgr::hasShaderType(file)
                                    >18 NodePlugInfo::add(place2dTexture1,repeatUV,float2)
                                      >19 NodePlug::add(repeatUV, float2)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture1.rotateFrame)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(file1)
                                          >21 ShaderMgr::hasShaderType(file)
                                    >18 NodePlugInfo::add(place2dTexture1,rotateFrame,float)
                                      >19 NodePlug::add(rotateFrame, float)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture1.rotateUV)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(file1)
                                          >21 ShaderMgr::hasShaderType(file)
                                    >18 NodePlugInfo::add(place2dTexture1,rotateUV,float)
                                      >19 NodePlug::add(rotateUV, float)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture1.stagger)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(file1)
                                          >21 ShaderMgr::hasShaderType(file)
                                    >18 NodePlugInfo::add(place2dTexture1,stagger,float)
                                      >19 NodePlug::add(stagger, float)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture1.translateFrame)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrame)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrame)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(file1)
                                          >21 ShaderMgr::hasShaderType(file)
                                    >18 NodePlugInfo::add(place2dTexture1,translateFrame,float2)
                                      >19 NodePlug::add(translateFrame, float2)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture1.wrapU)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(file1)
                                          >21 ShaderMgr::hasShaderType(file)
                                    >18 NodePlugInfo::add(place2dTexture1,wrapU,float)
                                      >19 NodePlug::add(wrapU, float)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture1.wrapV)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(file1)
                                          >21 ShaderMgr::hasShaderType(file)
                                    >18 NodePlugInfo::add(place2dTexture1,wrapV,float)
                                      >19 NodePlug::add(wrapV, float)
                                    >18 ShaderMgr::convertibleConnection(place2dTexture1.outUV)
                                      >19 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                                        >20 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(file1)
                                          >21 ShaderMgr::hasShaderType(file)
                                    >18 NodePlugInfo::add(place2dTexture1,outUV,float2)
                                      >19 NodePlug::add(outUV, float2)
                                    >18 OutputHelper::endRSL()
                              >15 ShaderMgr::getValidConnection(place2dTexture1)
                              >15 ConvertShadingNetwork::getNodeVariables(place2dTexture1, validConnections,  inputSrc, inputDes, outputSrc)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uCoord)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uCoord)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.vCoord)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.vCoord)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.uvCoord)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.uvCoord)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverageV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverageV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.coverage)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.coverage)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file1)
                                    >18 ShaderMgr::hasShaderType(file)
                                >16 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture1,coverage,place2dTexture1.coverage, outputVars)
                                  >17 Visitor::addShaderMethodVariavles(place2dTexture1,coverage,float,2,)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorU)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file1)
                                    >18 ShaderMgr::hasShaderType(file)
                                >16 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture1,mirrorU,place2dTexture1.mirrorU, outputVars)
                                  >17 Visitor::addShaderMethodVariavles(place2dTexture1,mirrorU,float,-1,)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.mirrorV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.mirrorV)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file1)
                                    >18 ShaderMgr::hasShaderType(file)
                                >16 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture1,mirrorV,place2dTexture1.mirrorV, outputVars)
                                  >17 Visitor::addShaderMethodVariavles(place2dTexture1,mirrorV,float,-1,)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.noiseUV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.noiseUV)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file1)
                                    >18 ShaderMgr::hasShaderType(file)
                                >16 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture1,noiseUV,place2dTexture1.noiseUV, outputVars)
                                  >17 Visitor::addShaderMethodVariavles(place2dTexture1,noiseUV,float,2,)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offsetV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offsetV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.offset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.offset)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file1)
                                    >18 ShaderMgr::hasShaderType(file)
                                >16 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture1,offset,place2dTexture1.offset, outputVars)
                                  >17 Visitor::addShaderMethodVariavles(place2dTexture1,offset,float,2,)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.repeatUV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.repeatUV)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file1)
                                    >18 ShaderMgr::hasShaderType(file)
                                >16 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture1,repeatUV,place2dTexture1.repeatUV, outputVars)
                                  >17 Visitor::addShaderMethodVariavles(place2dTexture1,repeatUV,float,2,)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateFrame)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateFrame)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file1)
                                    >18 ShaderMgr::hasShaderType(file)
                                >16 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture1,rotateFrame,place2dTexture1.rotateFrame, outputVars)
                                  >17 Visitor::addShaderMethodVariavles(place2dTexture1,rotateFrame,float,-1,)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.rotateUV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.rotateUV)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file1)
                                    >18 ShaderMgr::hasShaderType(file)
                                >16 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture1,rotateUV,place2dTexture1.rotateUV, outputVars)
                                  >17 Visitor::addShaderMethodVariavles(place2dTexture1,rotateUV,float,-1,)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.stagger)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.stagger)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file1)
                                    >18 ShaderMgr::hasShaderType(file)
                                >16 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture1,stagger,place2dTexture1.stagger, outputVars)
                                  >17 Visitor::addShaderMethodVariavles(place2dTexture1,stagger,float,-1,)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrameV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrameV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.translateFrame)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.translateFrame)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file1)
                                    >18 ShaderMgr::hasShaderType(file)
                                >16 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture1,translateFrame,place2dTexture1.translateFrame, outputVars)
                                  >17 Visitor::addShaderMethodVariavles(place2dTexture1,translateFrame,float,2,)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapU)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file1)
                                    >18 ShaderMgr::hasShaderType(file)
                                >16 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture1,wrapU,place2dTexture1.wrapU, outputVars)
                                  >17 Visitor::addShaderMethodVariavles(place2dTexture1,wrapU,float,-1,)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.wrapV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.wrapV)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file1)
                                    >18 ShaderMgr::hasShaderType(file)
                                >16 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture1,wrapV,place2dTexture1.wrapV, outputVars)
                                  >17 Visitor::addShaderMethodVariavles(place2dTexture1,wrapV,float,-1,)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outU)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outU)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outV)
                                >16 ConvertShadingNetwork::convertibleConnection(place2dTexture1.outUV)
                                  >17 ConvertShadingNetwork::ensurePlugExists(place2dTexture1.outUV)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file1)
                                    >18 ShaderMgr::hasShaderType(file)
                                >16 ConvertShadingNetwork::addNodeOutputVariable(place2dTexture1,outUV,place2dTexture1.outUV, outputVars)
                                  >17 Visitor::addShaderMethodVariavles(place2dTexture1,outUV,float,2,)
                              >15 Visitor::addShaderMethodBody(place2dTexture1,,,place2dTexture1.coverage124place2dTexture1.mirrorU124place2dTexture1.mirrorV124place2dTexture1.noiseUV124place2dTexture1.offset124place2dTexture1.repeatUV124place2dTexture1.rotateFrame124place2dTexture1.rotateUV124place2dTexture1.stagger124place2dTexture1.translateFrame124place2dTexture1.wrapU124place2dTexture1.wrapV124place2dTexture1.outUV124)
                                >16 NodePlugConnectionMgr::add(place2dTexture1)
                              >15 Visitor::outputUpstreamShader(file2)
                                >16 ShaderOutputVisitor::_outputUpstreamShader(file2,file)
                                  >17 Visitor::visitFile(file2)
                                    >18 OutputHelper::addInclude(file.h)
                                    >18 OutputHelper::beginRSL(file2)
                                    >18 Renderer::getTextureExt()
                                    >18 ShaderMgr::convertibleConnection(file2.alphaGain)
                                      >19 ConvertShadingNetwork::convertibleConnection(file2.alphaGain)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file2.alphaGain)
                                    >18 NodePlugInfo::add(file2,alphaGain,float)
                                      >19 NodePlug::add(alphaGain, float)
                                    >18 ShaderMgr::convertibleConnection(file2.alphaIsLuminance)
                                      >19 ConvertShadingNetwork::convertibleConnection(file2.alphaIsLuminance)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file2.alphaIsLuminance)
                                    >18 NodePlugInfo::add(file2,alphaIsLuminance,float)
                                      >19 NodePlug::add(alphaIsLuminance, float)
                                    >18 ShaderMgr::convertibleConnection(file2.alphaOffset)
                                      >19 ConvertShadingNetwork::convertibleConnection(file2.alphaOffset)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file2.alphaOffset)
                                    >18 NodePlugInfo::add(file2,alphaOffset,float)
                                      >19 NodePlug::add(alphaOffset, float)
                                    >18 ShaderMgr::convertibleConnection(file2.colorGain)
                                      >19 ConvertShadingNetwork::convertibleConnection(file2.colorGain)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file2.colorGain)
                                    >18 NodePlugInfo::add(file2,colorGain,color)
                                      >19 NodePlug::add(colorGain, color)
                                    >18 ShaderMgr::convertibleConnection(file2.colorOffset)
                                      >19 ConvertShadingNetwork::convertibleConnection(file2.colorOffset)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file2.colorOffset)
                                    >18 NodePlugInfo::add(file2,colorOffset,color)
                                      >19 NodePlug::add(colorOffset, color)
                                    >18 ShaderMgr::convertibleConnection(file2.defaultColor)
                                      >19 ConvertShadingNetwork::convertibleConnection(file2.defaultColor)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file2.defaultColor)
                                    >18 NodePlugInfo::add(file2,defaultColor,color)
                                      >19 NodePlug::add(defaultColor, color)
                                    >18 ShaderMgr::convertibleConnection(file2.filterType)
                                      >19 ConvertShadingNetwork::convertibleConnection(file2.filterType)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file2.filterType)
                                    >18 NodePlugInfo::add(file2,filterType,float)
                                      >19 NodePlug::add(filterType, float)
                                    >18 ShaderMgr::convertibleConnection(file2.filter)
                                      >19 ConvertShadingNetwork::convertibleConnection(file2.filter)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file2.filter)
                                    >18 NodePlugInfo::add(file2,filter,float)
                                      >19 NodePlug::add(filter, float)
                                    >18 ShaderMgr::convertibleConnection(file2.filterOffset)
                                      >19 ConvertShadingNetwork::convertibleConnection(file2.filterOffset)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file2.filterOffset)
                                    >18 NodePlugInfo::add(file2,filterOffset,float)
                                      >19 NodePlug::add(filterOffset, float)
                                    >18 ShaderMgr::convertibleConnection(file2.frameExtension)
                                      >19 ConvertShadingNetwork::convertibleConnection(file2.frameExtension)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file2.frameExtension)
                                    >18 NodePlugInfo::add(file2,frameExtension,float)
                                      >19 NodePlug::add(frameExtension, float)
                                    >18 ShaderMgr::convertibleConnection(file2.frameOffset)
                                      >19 ConvertShadingNetwork::convertibleConnection(file2.frameOffset)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file2.frameOffset)
                                    >18 NodePlugInfo::add(file2,frameOffset,float)
                                      >19 NodePlug::add(frameOffset, float)
                                    >18 ShaderMgr::convertibleConnection(file2.invert)
                                      >19 ConvertShadingNetwork::convertibleConnection(file2.invert)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file2.invert)
                                    >18 NodePlugInfo::add(file2,invert,float)
                                      >19 NodePlug::add(invert, float)
                                    >18 ShaderMgr::convertibleConnection(file2.useFrameExtension)
                                      >19 ConvertShadingNetwork::convertibleConnection(file2.useFrameExtension)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file2.useFrameExtension)
                                    >18 NodePlugInfo::add(file2,useFrameExtension,float)
                                      >19 NodePlug::add(useFrameExtension, float)
                                    >18 ShaderMgr::convertibleConnection(file2.uvCoord)
                                      >19 ConvertShadingNetwork::convertibleConnection(file2.uvCoord)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file2.uvCoord)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(place2dTexture2)
                                          >21 ShaderMgr::hasShaderType(place2dTexture)
                                    >18 NodePlugInfo::add(file2,uvCoord,float2)
                                      >19 NodePlug::add(uvCoord, float2)
                                    >18 ShaderMgr::convertibleConnection(file2.fileHasAlpha)
                                      >19 ConvertShadingNetwork::convertibleConnection(file2.fileHasAlpha)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file2.fileHasAlpha)
                                    >18 NodePlugInfo::add(file2,fileHasAlpha,float)
                                      >19 NodePlug::add(fileHasAlpha, float)
                                    >18 ShaderMgr::convertibleConnection(file2.outAlpha)
                                      >19 ConvertShadingNetwork::convertibleConnection(file2.outAlpha)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file2.outAlpha)
                                    >18 NodePlugInfo::add(file2,outAlpha,float)
                                      >19 NodePlug::add(outAlpha, float)
                                    >18 ShaderMgr::convertibleConnection(file2.outColor)
                                      >19 ConvertShadingNetwork::convertibleConnection(file2.outColor)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file2.outColor)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(phong4)
                                          >21 ShaderMgr::hasShaderType(phong)
                                    >18 NodePlugInfo::add(file2,outColor,color)
                                      >19 NodePlug::add(outColor, color)
                                    >18 ShaderMgr::convertibleConnection(file2.outTransparency)
                                      >19 ConvertShadingNetwork::convertibleConnection(file2.outTransparency)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file2.outTransparency)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(phong1)
                                          >21 ShaderMgr::hasShaderType(phong)
                                    >18 NodePlugInfo::add(file2,outTransparency,color)
                                      >19 NodePlug::add(outTransparency, color)
                                    >18 OutputHelper::endRSL()
                              >15 ShaderMgr::getValidConnection(file2)
                              >15 ConvertShadingNetwork::getNodeVariables(file2, validConnections,  inputSrc, inputDes, outputSrc)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.alphaGain)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.alphaGain)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.alphaIsLuminance)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.alphaIsLuminance)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.alphaOffset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.alphaOffset)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.colorGainR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.colorGainR)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.colorGainG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.colorGainG)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.colorGainB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.colorGainB)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.colorGain)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.colorGain)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.colorOffsetR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.colorOffsetR)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.colorOffsetG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.colorOffsetG)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.colorOffsetB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.colorOffsetB)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.colorOffset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.colorOffset)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.defaultColorR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.defaultColorR)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.defaultColorG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.defaultColorG)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.defaultColorB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.defaultColorB)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.defaultColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.defaultColor)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.fileTextureName)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.fileTextureName)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.filterType)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.filterType)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.filter)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.filter)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.filterOffset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.filterOffset)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.invert)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.invert)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.uCoord)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.uCoord)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.vCoord)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.vCoord)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.uvCoord)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.uvCoord)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(place2dTexture2)
                                    >18 ShaderMgr::hasShaderType(place2dTexture)
                                >16 ConvertShadingNetwork::addNodeInputVariable(file2.uvCoord, inputSrc, inputDes)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(place2dTexture2)
                                    >18 ShaderMgr::hasShaderType(place2dTexture)
                                  >17 ShaderMgr::getValidConnection(place2dTexture2)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.fileHasAlpha)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.fileHasAlpha)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.outAlpha)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.outAlpha)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.outColorR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.outColorR)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.outColorG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.outColorG)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.outColorB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.outColorB)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.outColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.outColor)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(phong4)
                                    >18 ShaderMgr::hasShaderType(phong)
                                >16 ConvertShadingNetwork::addNodeOutputVariable(file2,outColor,file2.outColor, outputVars)
                                  >17 Visitor::addShaderMethodVariavles(file2,outColor,color,-1,)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.outTransparencyR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.outTransparencyR)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.outTransparencyG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.outTransparencyG)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.outTransparencyB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.outTransparencyB)
                                >16 ConvertShadingNetwork::convertibleConnection(file2.outTransparency)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file2.outTransparency)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(phong1)
                                    >18 ShaderMgr::hasShaderType(phong)
                                >16 ConvertShadingNetwork::addNodeOutputVariable(file2,outTransparency,file2.outTransparency, outputVars)
                                  >17 Visitor::addShaderMethodVariavles(file2,outTransparency,color,-1,)
                              >15 Visitor::addShaderMethodBody(file2,place2dTexture2.outUV124,file2.uvCoord124,file2.outColor124file2.outTransparency124)
                                >16 NodePlugConnectionMgr::add(file2)
                              >15 Visitor::outputUpstreamShader(file1)
                                >16 ShaderOutputVisitor::_outputUpstreamShader(file1,file)
                                  >17 Visitor::visitFile(file1)
                                    >18 OutputHelper::addInclude(file.h)
                                    >18 OutputHelper::beginRSL(file1)
                                    >18 Renderer::getTextureExt()
                                    >18 ShaderMgr::convertibleConnection(file1.alphaGain)
                                      >19 ConvertShadingNetwork::convertibleConnection(file1.alphaGain)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file1.alphaGain)
                                    >18 NodePlugInfo::add(file1,alphaGain,float)
                                      >19 NodePlug::add(alphaGain, float)
                                    >18 ShaderMgr::convertibleConnection(file1.alphaIsLuminance)
                                      >19 ConvertShadingNetwork::convertibleConnection(file1.alphaIsLuminance)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file1.alphaIsLuminance)
                                    >18 NodePlugInfo::add(file1,alphaIsLuminance,float)
                                      >19 NodePlug::add(alphaIsLuminance, float)
                                    >18 ShaderMgr::convertibleConnection(file1.alphaOffset)
                                      >19 ConvertShadingNetwork::convertibleConnection(file1.alphaOffset)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file1.alphaOffset)
                                    >18 NodePlugInfo::add(file1,alphaOffset,float)
                                      >19 NodePlug::add(alphaOffset, float)
                                    >18 ShaderMgr::convertibleConnection(file1.colorGain)
                                      >19 ConvertShadingNetwork::convertibleConnection(file1.colorGain)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file1.colorGain)
                                    >18 NodePlugInfo::add(file1,colorGain,color)
                                      >19 NodePlug::add(colorGain, color)
                                    >18 ShaderMgr::convertibleConnection(file1.colorOffset)
                                      >19 ConvertShadingNetwork::convertibleConnection(file1.colorOffset)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file1.colorOffset)
                                    >18 NodePlugInfo::add(file1,colorOffset,color)
                                      >19 NodePlug::add(colorOffset, color)
                                    >18 ShaderMgr::convertibleConnection(file1.defaultColor)
                                      >19 ConvertShadingNetwork::convertibleConnection(file1.defaultColor)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file1.defaultColor)
                                    >18 NodePlugInfo::add(file1,defaultColor,color)
                                      >19 NodePlug::add(defaultColor, color)
                                    >18 ShaderMgr::convertibleConnection(file1.filterType)
                                      >19 ConvertShadingNetwork::convertibleConnection(file1.filterType)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file1.filterType)
                                    >18 NodePlugInfo::add(file1,filterType,float)
                                      >19 NodePlug::add(filterType, float)
                                    >18 ShaderMgr::convertibleConnection(file1.filter)
                                      >19 ConvertShadingNetwork::convertibleConnection(file1.filter)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file1.filter)
                                    >18 NodePlugInfo::add(file1,filter,float)
                                      >19 NodePlug::add(filter, float)
                                    >18 ShaderMgr::convertibleConnection(file1.filterOffset)
                                      >19 ConvertShadingNetwork::convertibleConnection(file1.filterOffset)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file1.filterOffset)
                                    >18 NodePlugInfo::add(file1,filterOffset,float)
                                      >19 NodePlug::add(filterOffset, float)
                                    >18 ShaderMgr::convertibleConnection(file1.frameExtension)
                                      >19 ConvertShadingNetwork::convertibleConnection(file1.frameExtension)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file1.frameExtension)
                                    >18 NodePlugInfo::add(file1,frameExtension,float)
                                      >19 NodePlug::add(frameExtension, float)
                                    >18 ShaderMgr::convertibleConnection(file1.frameOffset)
                                      >19 ConvertShadingNetwork::convertibleConnection(file1.frameOffset)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file1.frameOffset)
                                    >18 NodePlugInfo::add(file1,frameOffset,float)
                                      >19 NodePlug::add(frameOffset, float)
                                    >18 ShaderMgr::convertibleConnection(file1.invert)
                                      >19 ConvertShadingNetwork::convertibleConnection(file1.invert)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file1.invert)
                                    >18 NodePlugInfo::add(file1,invert,float)
                                      >19 NodePlug::add(invert, float)
                                    >18 ShaderMgr::convertibleConnection(file1.useFrameExtension)
                                      >19 ConvertShadingNetwork::convertibleConnection(file1.useFrameExtension)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file1.useFrameExtension)
                                    >18 NodePlugInfo::add(file1,useFrameExtension,float)
                                      >19 NodePlug::add(useFrameExtension, float)
                                    >18 ShaderMgr::convertibleConnection(file1.uvCoord)
                                      >19 ConvertShadingNetwork::convertibleConnection(file1.uvCoord)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file1.uvCoord)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                                          >21 ShaderMgr::hasShaderType(place2dTexture)
                                    >18 NodePlugInfo::add(file1,uvCoord,float2)
                                      >19 NodePlug::add(uvCoord, float2)
                                    >18 ShaderMgr::convertibleConnection(file1.fileHasAlpha)
                                      >19 ConvertShadingNetwork::convertibleConnection(file1.fileHasAlpha)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file1.fileHasAlpha)
                                    >18 NodePlugInfo::add(file1,fileHasAlpha,float)
                                      >19 NodePlug::add(fileHasAlpha, float)
                                    >18 ShaderMgr::convertibleConnection(file1.outAlpha)
                                      >19 ConvertShadingNetwork::convertibleConnection(file1.outAlpha)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file1.outAlpha)
                                    >18 NodePlugInfo::add(file1,outAlpha,float)
                                      >19 NodePlug::add(outAlpha, float)
                                    >18 ShaderMgr::convertibleConnection(file1.outColor)
                                      >19 ConvertShadingNetwork::convertibleConnection(file1.outColor)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file1.outColor)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(phong4)
                                          >21 ShaderMgr::hasShaderType(phong)
                                    >18 NodePlugInfo::add(file1,outColor,color)
                                      >19 NodePlug::add(outColor, color)
                                    >18 ShaderMgr::convertibleConnection(file1.outTransparency)
                                      >19 ConvertShadingNetwork::convertibleConnection(file1.outTransparency)
                                        >20 ConvertShadingNetwork::ensurePlugExists(file1.outTransparency)
                                    >18 NodePlugInfo::add(file1,outTransparency,color)
                                      >19 NodePlug::add(outTransparency, color)
                                    >18 OutputHelper::endRSL()
                              >15 ShaderMgr::getValidConnection(file1)
                              >15 ConvertShadingNetwork::getNodeVariables(file1, validConnections,  inputSrc, inputDes, outputSrc)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.alphaGain)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.alphaGain)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.alphaIsLuminance)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.alphaIsLuminance)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.alphaOffset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.alphaOffset)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.colorGainR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.colorGainR)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.colorGainG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.colorGainG)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.colorGainB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.colorGainB)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.colorGain)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.colorGain)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.colorOffsetR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.colorOffsetR)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.colorOffsetG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.colorOffsetG)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.colorOffsetB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.colorOffsetB)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.colorOffset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.colorOffset)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.defaultColorR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.defaultColorR)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.defaultColorG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.defaultColorG)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.defaultColorB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.defaultColorB)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.defaultColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.defaultColor)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.fileTextureName)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.fileTextureName)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.filterType)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.filterType)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.filter)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.filter)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.filterOffset)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.filterOffset)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.invert)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.invert)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.uCoord)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.uCoord)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.vCoord)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.vCoord)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.uvCoord)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.uvCoord)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                                    >18 ShaderMgr::hasShaderType(place2dTexture)
                                >16 ConvertShadingNetwork::addNodeInputVariable(file1.uvCoord, inputSrc, inputDes)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(place2dTexture1)
                                    >18 ShaderMgr::hasShaderType(place2dTexture)
                                  >17 ShaderMgr::getValidConnection(place2dTexture1)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.fileHasAlpha)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.fileHasAlpha)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.outAlpha)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.outAlpha)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.outColorR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.outColorR)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.outColorG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.outColorG)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.outColorB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.outColorB)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.outColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.outColor)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(phong4)
                                    >18 ShaderMgr::hasShaderType(phong)
                                >16 ConvertShadingNetwork::addNodeOutputVariable(file1,outColor,file1.outColor, outputVars)
                                  >17 Visitor::addShaderMethodVariavles(file1,outColor,color,-1,)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.outTransparencyR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.outTransparencyR)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.outTransparencyG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.outTransparencyG)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.outTransparencyB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.outTransparencyB)
                                >16 ConvertShadingNetwork::convertibleConnection(file1.outTransparency)
                                  >17 ConvertShadingNetwork::ensurePlugExists(file1.outTransparency)
                              >15 Visitor::addShaderMethodBody(file1,place2dTexture1.outUV124,file1.uvCoord124,file1.outColor124)
                                >16 NodePlugConnectionMgr::add(file1)
                              >15 Visitor::outputUpstreamShader(phong4)
                                >16 ShaderOutputVisitor::_outputUpstreamShader(phong4,phong)
                                  >17 Visitor::visitPhong(phong4)
                                    >18 OutputHelper::addInclude(phong.h)
                                    >18 OutputHelper::beginRSL(phong4)
                                    >18 ShaderMgr::convertibleConnection(phong4.ambientColor)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong4.ambientColor)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong4.ambientColor)
                                    >18 NodePlugInfo::add(phong4,ambientColor,color)
                                      >19 NodePlug::add(ambientColor, color)
                                    >18 ShaderMgr::convertibleConnection(phong4.color)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong4.color)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong4.color)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(file1)
                                          >21 ShaderMgr::hasShaderType(file)
                                    >18 NodePlugInfo::add(phong4,color,color)
                                      >19 NodePlug::add(color, color)
                                    >18 ShaderMgr::convertibleConnection(phong4.cosinePower)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong4.cosinePower)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong4.cosinePower)
                                    >18 NodePlugInfo::add(phong4,cosinePower,float)
                                      >19 NodePlug::add(cosinePower, float)
                                    >18 ShaderMgr::convertibleConnection(phong4.diffuse)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong4.diffuse)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong4.diffuse)
                                    >18 NodePlugInfo::add(phong4,diffuse,float)
                                      >19 NodePlug::add(diffuse, float)
                                    >18 ShaderMgr::convertibleConnection(phong4.incandescence)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong4.incandescence)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong4.incandescence)
                                    >18 NodePlugInfo::add(phong4,incandescence,color)
                                      >19 NodePlug::add(incandescence, color)
                                    >18 ShaderMgr::convertibleConnection(phong4.matteOpacity)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong4.matteOpacity)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong4.matteOpacity)
                                    >18 NodePlugInfo::add(phong4,matteOpacity,float)
                                      >19 NodePlug::add(matteOpacity, float)
                                    >18 ShaderMgr::convertibleConnection(phong4.matteOpacityMode)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong4.matteOpacityMode)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong4.matteOpacityMode)
                                    >18 NodePlugInfo::add(phong4,matteOpacityMode,float)
                                      >19 NodePlug::add(matteOpacityMode, float)
                                    >18 ShaderMgr::convertibleConnection(phong4.specularColor)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong4.specularColor)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong4.specularColor)
                                    >18 NodePlugInfo::add(phong4,specularColor,color)
                                      >19 NodePlug::add(specularColor, color)
                                    >18 ShaderMgr::convertibleConnection(phong4.reflectivity)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong4.reflectivity)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong4.reflectivity)
                                    >18 NodePlugInfo::add(phong4,reflectivity,float)
                                      >19 NodePlug::add(reflectivity, float)
                                    >18 ShaderMgr::convertibleConnection(phong4.reflectedColor)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong4.reflectedColor)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong4.reflectedColor)
                                    >18 NodePlugInfo::add(phong4,reflectedColor,color)
                                      >19 NodePlug::add(reflectedColor, color)
                                    >18 ShaderMgr::convertibleConnection(phong4.refractions)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong4.refractions)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong4.refractions)
                                    >18 NodePlugInfo::add(phong4,refractions,float)
                                      >19 NodePlug::add(refractions, float)
                                    >18 ShaderMgr::convertibleConnection(phong4.refractiveIndex)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong4.refractiveIndex)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong4.refractiveIndex)
                                    >18 NodePlugInfo::add(phong4,refractiveIndex,float)
                                      >19 NodePlug::add(refractiveIndex, float)
                                    >18 ShaderMgr::convertibleConnection(phong4.refractionLimit)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong4.refractionLimit)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong4.refractionLimit)
                                    >18 NodePlugInfo::add(phong4,refractionLimit,float)
                                      >19 NodePlug::add(refractionLimit, float)
                                    >18 ShaderMgr::convertibleConnection(phong4.lightAbsorbance)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong4.lightAbsorbance)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong4.lightAbsorbance)
                                    >18 NodePlugInfo::add(phong4,lightAbsorbance,float)
                                      >19 NodePlug::add(lightAbsorbance, float)
                                    >18 ShaderMgr::convertibleConnection(phong4.shadowAttenuation)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong4.shadowAttenuation)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong4.shadowAttenuation)
                                    >18 NodePlugInfo::add(phong4,shadowAttenuation,float)
                                      >19 NodePlug::add(shadowAttenuation, float)
                                    >18 ShaderMgr::convertibleConnection(phong4.reflectionLimit)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong4.reflectionLimit)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong4.reflectionLimit)
                                    >18 NodePlugInfo::add(phong4,reflectionLimit,float)
                                      >19 NodePlug::add(reflectionLimit, float)
                                    >18 ShaderMgr::convertibleConnection(phong4.translucence)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong4.translucence)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong4.translucence)
                                    >18 NodePlugInfo::add(phong4,translucence,float)
                                      >19 NodePlug::add(translucence, float)
                                    >18 ShaderMgr::convertibleConnection(phong4.translucenceDepth)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong4.translucenceDepth)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong4.translucenceDepth)
                                    >18 NodePlugInfo::add(phong4,translucenceDepth,float)
                                      >19 NodePlug::add(translucenceDepth, float)
                                    >18 ShaderMgr::convertibleConnection(phong4.translucenceFocus)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong4.translucenceFocus)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong4.translucenceFocus)
                                    >18 NodePlugInfo::add(phong4,translucenceFocus,float)
                                      >19 NodePlug::add(translucenceFocus, float)
                                    >18 ShaderMgr::convertibleConnection(phong4.transparency)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong4.transparency)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong4.transparency)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(file2)
                                          >21 ShaderMgr::hasShaderType(file)
                                    >18 NodePlugInfo::add(phong4,transparency,color)
                                      >19 NodePlug::add(transparency, color)
                                    >18 ShaderMgr::convertibleConnection(phong4.outColor)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong4.outColor)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong4.outColor)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(phong4SG)
                                          >21 ShaderMgr::hasShaderType(shadingEngine)
                                    >18 NodePlugInfo::add(phong4,outColor,color)
                                      >19 NodePlug::add(outColor, color)
                                    >18 ShaderMgr::convertibleConnection(phong4.outTransparency)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong4.outTransparency)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong4.outTransparency)
                                    >18 NodePlugInfo::add(phong4,outTransparency,color)
                                      >19 NodePlug::add(outTransparency, color)
                                    >18 OutputHelper::endRSL()
                              >15 ShaderMgr::getValidConnection(phong4)
                              >15 ConvertShadingNetwork::getNodeVariables(phong4, validConnections,  inputSrc, inputDes, outputSrc)
                                >16 ConvertShadingNetwork::convertibleConnection(phong4.colorR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong4.colorR)
                                >16 ConvertShadingNetwork::convertibleConnection(phong4.colorG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong4.colorG)
                                >16 ConvertShadingNetwork::convertibleConnection(phong4.colorB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong4.colorB)
                                >16 ConvertShadingNetwork::convertibleConnection(phong4.color)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong4.color)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file1)
                                    >18 ShaderMgr::hasShaderType(file)
                                >16 ConvertShadingNetwork::addNodeInputVariable(phong4.color, inputSrc, inputDes)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file1)
                                    >18 ShaderMgr::hasShaderType(file)
                                  >17 ShaderMgr::getValidConnection(file1)
                                >16 ConvertShadingNetwork::convertibleConnection(phong4.transparencyR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong4.transparencyR)
                                >16 ConvertShadingNetwork::convertibleConnection(phong4.transparencyG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong4.transparencyG)
                                >16 ConvertShadingNetwork::convertibleConnection(phong4.transparencyB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong4.transparencyB)
                                >16 ConvertShadingNetwork::convertibleConnection(phong4.transparency)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong4.transparency)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file2)
                                    >18 ShaderMgr::hasShaderType(file)
                                >16 ConvertShadingNetwork::addNodeInputVariable(phong4.transparency, inputSrc, inputDes)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(file2)
                                    >18 ShaderMgr::hasShaderType(file)
                                  >17 ShaderMgr::getValidConnection(file2)
                                >16 ConvertShadingNetwork::convertibleConnection(phong4.ambientColorR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong4.ambientColorR)
                                >16 ConvertShadingNetwork::convertibleConnection(phong4.ambientColorG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong4.ambientColorG)
                                >16 ConvertShadingNetwork::convertibleConnection(phong4.ambientColorB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong4.ambientColorB)
                                >16 ConvertShadingNetwork::convertibleConnection(phong4.ambientColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong4.ambientColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong4.incandescenceR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong4.incandescenceR)
                                >16 ConvertShadingNetwork::convertibleConnection(phong4.incandescenceG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong4.incandescenceG)
                                >16 ConvertShadingNetwork::convertibleConnection(phong4.incandescenceB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong4.incandescenceB)
                                >16 ConvertShadingNetwork::convertibleConnection(phong4.incandescence)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong4.incandescence)
                                >16 ConvertShadingNetwork::convertibleConnection(phong4.normalCameraX)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong4.normalCameraX)
                                >16 ConvertShadingNetwork::convertibleConnection(phong4.normalCameraY)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong4.normalCameraY)
                                >16 ConvertShadingNetwork::convertibleConnection(phong4.normalCameraZ)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong4.normalCameraZ)
                                >16 ConvertShadingNetwork::convertibleConnection(phong4.normalCamera)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong4.normalCamera)
                                >16 ConvertShadingNetwork::convertibleConnection(phong4.diffuse)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong4.diffuse)
                                >16 ConvertShadingNetwork::convertibleConnection(phong4.translucence)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong4.translucence)
                                >16 ConvertShadingNetwork::convertibleConnection(phong4.translucenceDepth)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong4.translucenceDepth)
                                >16 ConvertShadingNetwork::convertibleConnection(phong4.translucenceFocus)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong4.translucenceFocus)
                                >16 ConvertShadingNetwork::convertibleConnection(phong4.cosinePower)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong4.cosinePower)
                                >16 ConvertShadingNetwork::convertibleConnection(phong4.specularColorR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong4.specularColorR)
                                >16 ConvertShadingNetwork::convertibleConnection(phong4.specularColorG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong4.specularColorG)
                                >16 ConvertShadingNetwork::convertibleConnection(phong4.specularColorB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong4.specularColorB)
                                >16 ConvertShadingNetwork::convertibleConnection(phong4.specularColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong4.specularColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong4.reflectivity)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong4.reflectivity)
                                >16 ConvertShadingNetwork::convertibleConnection(phong4.reflectedColorR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong4.reflectedColorR)
                                >16 ConvertShadingNetwork::convertibleConnection(phong4.reflectedColorG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong4.reflectedColorG)
                                >16 ConvertShadingNetwork::convertibleConnection(phong4.reflectedColorB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong4.reflectedColorB)
                                >16 ConvertShadingNetwork::convertibleConnection(phong4.reflectedColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong4.reflectedColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong4.matteOpacityMode)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong4.matteOpacityMode)
                                >16 ConvertShadingNetwork::convertibleConnection(phong4.matteOpacity)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong4.matteOpacity)
                                >16 ConvertShadingNetwork::convertibleConnection(phong4.reflectionLimit)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong4.reflectionLimit)
                                >16 ConvertShadingNetwork::convertibleConnection(phong4.outColorR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong4.outColorR)
                                >16 ConvertShadingNetwork::convertibleConnection(phong4.outColorG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong4.outColorG)
                                >16 ConvertShadingNetwork::convertibleConnection(phong4.outColorB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong4.outColorB)
                                >16 ConvertShadingNetwork::convertibleConnection(phong4.outColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong4.outColor)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(phong4SG)
                                    >18 ShaderMgr::hasShaderType(shadingEngine)
                                >16 ConvertShadingNetwork::convertibleConnection(phong4.outTransparencyR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong4.outTransparencyR)
                                >16 ConvertShadingNetwork::convertibleConnection(phong4.outTransparencyG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong4.outTransparencyG)
                                >16 ConvertShadingNetwork::convertibleConnection(phong4.outTransparencyB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong4.outTransparencyB)
                                >16 ConvertShadingNetwork::convertibleConnection(phong4.outTransparency)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong4.outTransparency)
                              >15 Visitor::addShaderMethodBody(phong4,file1.outColor124file2.outColor124,phong4.color124phong4.transparency124,)
                                >16 NodePlugConnectionMgr::add(phong4)
                            >14 ConvertShadingNetwork::outputShaderMethod()
                              >15 Visitor::outputShaderMethod()
                                >16 NodePlugConnectionMgr::cookRSLFunctionCallString(0)
                                >16 NodePlugConnectionMgr::log(0)
                                >16 NodePlugConnectionMgr::cookRSLFunctionCallString(1)
                                >16 NodePlugConnectionMgr::log(1)
                                >16 NodePlugConnectionMgr::cookRSLFunctionCallString(2)
                                  >17 NodePlugInfo::getPlugInfo(place2dTexture2.outUV)
                                    >18 NodePlugInfo::getPlugInfo(place2dTexture2,outUV)
                                      >19 NodePlug::getPlugInfo(outUV)
                                  >17 NodePlugInfo::getPlugInfo(file2.uvCoord)
                                    >18 NodePlugInfo::getPlugInfo(file2,uvCoord)
                                      >19 NodePlug::getPlugInfo(uvCoord)
                                >16 NodePlugConnectionMgr::log(2)
                                >16 NodePlugConnectionMgr::cookRSLFunctionCallString(3)
                                  >17 NodePlugInfo::getPlugInfo(place2dTexture1.outUV)
                                    >18 NodePlugInfo::getPlugInfo(place2dTexture1,outUV)
                                      >19 NodePlug::getPlugInfo(outUV)
                                  >17 NodePlugInfo::getPlugInfo(file1.uvCoord)
                                    >18 NodePlugInfo::getPlugInfo(file1,uvCoord)
                                      >19 NodePlug::getPlugInfo(uvCoord)
                                >16 NodePlugConnectionMgr::log(3)
                                >16 NodePlugConnectionMgr::cookRSLFunctionCallString(4)
                                  >17 NodePlugInfo::getPlugInfo(file1.outColor)
                                    >18 NodePlugInfo::getPlugInfo(file1,outColor)
                                      >19 NodePlug::getPlugInfo(outColor)
                                  >17 NodePlugInfo::getPlugInfo(phong4.color)
                                    >18 NodePlugInfo::getPlugInfo(phong4,color)
                                      >19 NodePlug::getPlugInfo(color)
                                  >17 NodePlugInfo::getPlugInfo(file2.outColor)
                                    >18 NodePlugInfo::getPlugInfo(file2,outColor)
                                      >19 NodePlug::getPlugInfo(outColor)
                                  >17 NodePlugInfo::getPlugInfo(phong4.transparency)
                                    >18 NodePlugInfo::getPlugInfo(phong4,transparency)
                                      >19 NodePlug::getPlugInfo(transparency)
                                >16 NodePlugConnectionMgr::log(4)
                            >14 Visitor::outputEnd(), close shader file
                            >14 Visitor::postOutput()
                              >15 getShaderFilePath_SLO(phong4)
                                >16 getShaderFilePath_NoExt(phong4)
                              >15 getShaderFilePath_SRC(phong4)
                                >16 getShaderFilePath_NoExt(phong4)
                          >13 ConvertShadingNetwork::exportShaderEnd(phong4)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong4SG,displacementShader)
                    >10 ConvertShadingNetwork::exportShaderNodeInPlug(phong4SG,displacementShader)
                      >11 ConvertShadingNetwork::_exportShaderNodeInPlug(phong4SG,displacementShader)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong4SG,volumeShader)
                    >10 ConvertShadingNetwork::exportShaderNodeInPlug(phong4SG,volumeShader)
                      >11 ConvertShadingNetwork::_exportShaderNodeInPlug(phong4SG,volumeShader)
                  >9 ConvertShadingNetwork::exportShadingGroupBegin(phong4SG)
                  >9 ConvertShadingNetwork::outputShadingGroup(phong4SG)
                    >10 Visitor::outputShadingGroup(phong4SG)
                      >11 Visitor::outputShadingGroup(phong4SG,0)
                  >9 ConvertShadingNetwork::exportShadingGroupEnd(phong4SG)
                  >9 ConvertShadingNetwork::canShadingGroupExported(phong5SG)
                  >9 Renderer::getValidShaderPlugsInShadingGroup()
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong5SG,surfaceShader)
                    >10 ConvertShadingNetwork::exportShaderNodeInPlug(phong5SG,surfaceShader)
                      >11 ConvertShadingNetwork::_exportShaderNodeInPlug(phong5SG,surfaceShader)
                        >12 ConvertShadingNetwork::exportShaderNode(phong5)
                          >13 ConvertShadingNetwork::canShaderExported(phong5)
                          >13 ConvertShadingNetwork::exportShaderBegin(phong5)
                          >13 ConvertShadingNetwork::convertShadingNetworkToRSL(phong5)
                            >14 Visitor::initShaderData(phong5)
                              >15 NodePlugConnectionMgr::setNodePlugMgr(...)
                              >15 NodePlugConnectionMgr::reset()
                            >14 ConvertShadingNetwork::getUpstreamConvertibleNodes(phong5, nodes, numConnections)
                              >15 DagMgr::BreadthFirstTraversal(phong5, ret)
                                >16 DagMgr::begin(phong5)
                                  >17 DagMgr::pushInputPlugs(phong5)
                                    >18 ShaderMgr::getValidConnection(phong5)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong5.colorR)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong5.colorR)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong5.colorG)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong5.colorG)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong5.colorB)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong5.colorB)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong5.color)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong5.color)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong5.transparencyR)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong5.transparencyR)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong5.transparencyG)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong5.transparencyG)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong5.transparencyB)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong5.transparencyB)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong5.transparency)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong5.transparency)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong5.ambientColorR)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong5.ambientColorR)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong5.ambientColorG)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong5.ambientColorG)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong5.ambientColorB)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong5.ambientColorB)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong5.ambientColor)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong5.ambientColor)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong5.incandescenceR)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong5.incandescenceR)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong5.incandescenceG)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong5.incandescenceG)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong5.incandescenceB)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong5.incandescenceB)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong5.incandescence)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong5.incandescence)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong5.normalCameraX)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong5.normalCameraX)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong5.normalCameraY)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong5.normalCameraY)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong5.normalCameraZ)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong5.normalCameraZ)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong5.normalCamera)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong5.normalCamera)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong5.diffuse)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong5.diffuse)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong5.translucence)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong5.translucence)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong5.translucenceDepth)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong5.translucenceDepth)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong5.translucenceFocus)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong5.translucenceFocus)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong5.cosinePower)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong5.cosinePower)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong5.specularColorR)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong5.specularColorR)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong5.specularColorG)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong5.specularColorG)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong5.specularColorB)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong5.specularColorB)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong5.specularColor)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong5.specularColor)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong5.reflectivity)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong5.reflectivity)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong5.reflectedColorR)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong5.reflectedColorR)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong5.reflectedColorG)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong5.reflectedColorG)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong5.reflectedColorB)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong5.reflectedColorB)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong5.reflectedColor)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong5.reflectedColor)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong5.matteOpacityMode)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong5.matteOpacityMode)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong5.matteOpacity)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong5.matteOpacity)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong5.reflectionLimit)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong5.reflectionLimit)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong5.outColorR)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong5.outColorR)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong5.outColorG)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong5.outColorG)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong5.outColorB)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong5.outColorB)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong5.outColor)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong5.outColor)
                                      >19 ConvertShadingNetwork::nodeIsConvertible(phong5SG)
                                        >20 ShaderMgr::hasShaderType(shadingEngine)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong5.outTransparencyR)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong5.outTransparencyR)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong5.outTransparencyG)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong5.outTransparencyG)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong5.outTransparencyB)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong5.outTransparencyB)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong5.outTransparency)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong5.outTransparency)
                                >16 DagMgr::end()
                            >14 Visitor::preOutput(phong5)
                            >14 Visitor::outputBegin(phong5), open shader file
                              >15 getShaderFilePath_SRC(phong5)
                                >16 getShaderFilePath_NoExt(phong5)
                              >15 Visitor::getSurfaceShaderAOVOutputParametersString()
                              >15 Visitor::defineAOVVariables(phong5)
                            >14 ConvertShadingNetwork::traverseGraphAndOutputNodeFunctions( nodes, numConnections)
                              >15 Visitor::outputUpstreamShader(phong5)
                                >16 ShaderOutputVisitor::_outputUpstreamShader(phong5,phong)
                                  >17 Visitor::visitPhong(phong5)
                                    >18 OutputHelper::addInclude(phong.h)
                                    >18 OutputHelper::beginRSL(phong5)
                                    >18 ShaderMgr::convertibleConnection(phong5.ambientColor)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong5.ambientColor)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong5.ambientColor)
                                    >18 NodePlugInfo::add(phong5,ambientColor,color)
                                      >19 NodePlug::add(ambientColor, color)
                                    >18 ShaderMgr::convertibleConnection(phong5.color)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong5.color)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong5.color)
                                    >18 NodePlugInfo::add(phong5,color,color)
                                      >19 NodePlug::add(color, color)
                                    >18 ShaderMgr::convertibleConnection(phong5.cosinePower)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong5.cosinePower)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong5.cosinePower)
                                    >18 NodePlugInfo::add(phong5,cosinePower,float)
                                      >19 NodePlug::add(cosinePower, float)
                                    >18 ShaderMgr::convertibleConnection(phong5.diffuse)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong5.diffuse)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong5.diffuse)
                                    >18 NodePlugInfo::add(phong5,diffuse,float)
                                      >19 NodePlug::add(diffuse, float)
                                    >18 ShaderMgr::convertibleConnection(phong5.incandescence)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong5.incandescence)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong5.incandescence)
                                    >18 NodePlugInfo::add(phong5,incandescence,color)
                                      >19 NodePlug::add(incandescence, color)
                                    >18 ShaderMgr::convertibleConnection(phong5.matteOpacity)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong5.matteOpacity)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong5.matteOpacity)
                                    >18 NodePlugInfo::add(phong5,matteOpacity,float)
                                      >19 NodePlug::add(matteOpacity, float)
                                    >18 ShaderMgr::convertibleConnection(phong5.matteOpacityMode)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong5.matteOpacityMode)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong5.matteOpacityMode)
                                    >18 NodePlugInfo::add(phong5,matteOpacityMode,float)
                                      >19 NodePlug::add(matteOpacityMode, float)
                                    >18 ShaderMgr::convertibleConnection(phong5.specularColor)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong5.specularColor)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong5.specularColor)
                                    >18 NodePlugInfo::add(phong5,specularColor,color)
                                      >19 NodePlug::add(specularColor, color)
                                    >18 ShaderMgr::convertibleConnection(phong5.reflectivity)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong5.reflectivity)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong5.reflectivity)
                                    >18 NodePlugInfo::add(phong5,reflectivity,float)
                                      >19 NodePlug::add(reflectivity, float)
                                    >18 ShaderMgr::convertibleConnection(phong5.reflectedColor)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong5.reflectedColor)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong5.reflectedColor)
                                    >18 NodePlugInfo::add(phong5,reflectedColor,color)
                                      >19 NodePlug::add(reflectedColor, color)
                                    >18 ShaderMgr::convertibleConnection(phong5.refractions)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong5.refractions)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong5.refractions)
                                    >18 NodePlugInfo::add(phong5,refractions,float)
                                      >19 NodePlug::add(refractions, float)
                                    >18 ShaderMgr::convertibleConnection(phong5.refractiveIndex)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong5.refractiveIndex)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong5.refractiveIndex)
                                    >18 NodePlugInfo::add(phong5,refractiveIndex,float)
                                      >19 NodePlug::add(refractiveIndex, float)
                                    >18 ShaderMgr::convertibleConnection(phong5.refractionLimit)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong5.refractionLimit)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong5.refractionLimit)
                                    >18 NodePlugInfo::add(phong5,refractionLimit,float)
                                      >19 NodePlug::add(refractionLimit, float)
                                    >18 ShaderMgr::convertibleConnection(phong5.lightAbsorbance)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong5.lightAbsorbance)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong5.lightAbsorbance)
                                    >18 NodePlugInfo::add(phong5,lightAbsorbance,float)
                                      >19 NodePlug::add(lightAbsorbance, float)
                                    >18 ShaderMgr::convertibleConnection(phong5.shadowAttenuation)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong5.shadowAttenuation)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong5.shadowAttenuation)
                                    >18 NodePlugInfo::add(phong5,shadowAttenuation,float)
                                      >19 NodePlug::add(shadowAttenuation, float)
                                    >18 ShaderMgr::convertibleConnection(phong5.reflectionLimit)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong5.reflectionLimit)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong5.reflectionLimit)
                                    >18 NodePlugInfo::add(phong5,reflectionLimit,float)
                                      >19 NodePlug::add(reflectionLimit, float)
                                    >18 ShaderMgr::convertibleConnection(phong5.translucence)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong5.translucence)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong5.translucence)
                                    >18 NodePlugInfo::add(phong5,translucence,float)
                                      >19 NodePlug::add(translucence, float)
                                    >18 ShaderMgr::convertibleConnection(phong5.translucenceDepth)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong5.translucenceDepth)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong5.translucenceDepth)
                                    >18 NodePlugInfo::add(phong5,translucenceDepth,float)
                                      >19 NodePlug::add(translucenceDepth, float)
                                    >18 ShaderMgr::convertibleConnection(phong5.translucenceFocus)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong5.translucenceFocus)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong5.translucenceFocus)
                                    >18 NodePlugInfo::add(phong5,translucenceFocus,float)
                                      >19 NodePlug::add(translucenceFocus, float)
                                    >18 ShaderMgr::convertibleConnection(phong5.transparency)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong5.transparency)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong5.transparency)
                                    >18 NodePlugInfo::add(phong5,transparency,color)
                                      >19 NodePlug::add(transparency, color)
                                    >18 ShaderMgr::convertibleConnection(phong5.outColor)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong5.outColor)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong5.outColor)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(phong5SG)
                                          >21 ShaderMgr::hasShaderType(shadingEngine)
                                    >18 NodePlugInfo::add(phong5,outColor,color)
                                      >19 NodePlug::add(outColor, color)
                                    >18 ShaderMgr::convertibleConnection(phong5.outTransparency)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong5.outTransparency)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong5.outTransparency)
                                    >18 NodePlugInfo::add(phong5,outTransparency,color)
                                      >19 NodePlug::add(outTransparency, color)
                                    >18 OutputHelper::endRSL()
                              >15 ShaderMgr::getValidConnection(phong5)
                              >15 ConvertShadingNetwork::getNodeVariables(phong5, validConnections,  inputSrc, inputDes, outputSrc)
                                >16 ConvertShadingNetwork::convertibleConnection(phong5.colorR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong5.colorR)
                                >16 ConvertShadingNetwork::convertibleConnection(phong5.colorG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong5.colorG)
                                >16 ConvertShadingNetwork::convertibleConnection(phong5.colorB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong5.colorB)
                                >16 ConvertShadingNetwork::convertibleConnection(phong5.color)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong5.color)
                                >16 ConvertShadingNetwork::convertibleConnection(phong5.transparencyR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong5.transparencyR)
                                >16 ConvertShadingNetwork::convertibleConnection(phong5.transparencyG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong5.transparencyG)
                                >16 ConvertShadingNetwork::convertibleConnection(phong5.transparencyB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong5.transparencyB)
                                >16 ConvertShadingNetwork::convertibleConnection(phong5.transparency)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong5.transparency)
                                >16 ConvertShadingNetwork::convertibleConnection(phong5.ambientColorR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong5.ambientColorR)
                                >16 ConvertShadingNetwork::convertibleConnection(phong5.ambientColorG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong5.ambientColorG)
                                >16 ConvertShadingNetwork::convertibleConnection(phong5.ambientColorB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong5.ambientColorB)
                                >16 ConvertShadingNetwork::convertibleConnection(phong5.ambientColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong5.ambientColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong5.incandescenceR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong5.incandescenceR)
                                >16 ConvertShadingNetwork::convertibleConnection(phong5.incandescenceG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong5.incandescenceG)
                                >16 ConvertShadingNetwork::convertibleConnection(phong5.incandescenceB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong5.incandescenceB)
                                >16 ConvertShadingNetwork::convertibleConnection(phong5.incandescence)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong5.incandescence)
                                >16 ConvertShadingNetwork::convertibleConnection(phong5.normalCameraX)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong5.normalCameraX)
                                >16 ConvertShadingNetwork::convertibleConnection(phong5.normalCameraY)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong5.normalCameraY)
                                >16 ConvertShadingNetwork::convertibleConnection(phong5.normalCameraZ)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong5.normalCameraZ)
                                >16 ConvertShadingNetwork::convertibleConnection(phong5.normalCamera)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong5.normalCamera)
                                >16 ConvertShadingNetwork::convertibleConnection(phong5.diffuse)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong5.diffuse)
                                >16 ConvertShadingNetwork::convertibleConnection(phong5.translucence)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong5.translucence)
                                >16 ConvertShadingNetwork::convertibleConnection(phong5.translucenceDepth)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong5.translucenceDepth)
                                >16 ConvertShadingNetwork::convertibleConnection(phong5.translucenceFocus)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong5.translucenceFocus)
                                >16 ConvertShadingNetwork::convertibleConnection(phong5.cosinePower)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong5.cosinePower)
                                >16 ConvertShadingNetwork::convertibleConnection(phong5.specularColorR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong5.specularColorR)
                                >16 ConvertShadingNetwork::convertibleConnection(phong5.specularColorG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong5.specularColorG)
                                >16 ConvertShadingNetwork::convertibleConnection(phong5.specularColorB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong5.specularColorB)
                                >16 ConvertShadingNetwork::convertibleConnection(phong5.specularColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong5.specularColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong5.reflectivity)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong5.reflectivity)
                                >16 ConvertShadingNetwork::convertibleConnection(phong5.reflectedColorR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong5.reflectedColorR)
                                >16 ConvertShadingNetwork::convertibleConnection(phong5.reflectedColorG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong5.reflectedColorG)
                                >16 ConvertShadingNetwork::convertibleConnection(phong5.reflectedColorB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong5.reflectedColorB)
                                >16 ConvertShadingNetwork::convertibleConnection(phong5.reflectedColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong5.reflectedColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong5.matteOpacityMode)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong5.matteOpacityMode)
                                >16 ConvertShadingNetwork::convertibleConnection(phong5.matteOpacity)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong5.matteOpacity)
                                >16 ConvertShadingNetwork::convertibleConnection(phong5.reflectionLimit)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong5.reflectionLimit)
                                >16 ConvertShadingNetwork::convertibleConnection(phong5.outColorR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong5.outColorR)
                                >16 ConvertShadingNetwork::convertibleConnection(phong5.outColorG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong5.outColorG)
                                >16 ConvertShadingNetwork::convertibleConnection(phong5.outColorB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong5.outColorB)
                                >16 ConvertShadingNetwork::convertibleConnection(phong5.outColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong5.outColor)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(phong5SG)
                                    >18 ShaderMgr::hasShaderType(shadingEngine)
                                >16 ConvertShadingNetwork::convertibleConnection(phong5.outTransparencyR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong5.outTransparencyR)
                                >16 ConvertShadingNetwork::convertibleConnection(phong5.outTransparencyG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong5.outTransparencyG)
                                >16 ConvertShadingNetwork::convertibleConnection(phong5.outTransparencyB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong5.outTransparencyB)
                                >16 ConvertShadingNetwork::convertibleConnection(phong5.outTransparency)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong5.outTransparency)
                              >15 Visitor::addShaderMethodBody(phong5,,,)
                                >16 NodePlugConnectionMgr::add(phong5)
                            >14 ConvertShadingNetwork::outputShaderMethod()
                              >15 Visitor::outputShaderMethod()
                                >16 NodePlugConnectionMgr::cookRSLFunctionCallString(0)
                                >16 NodePlugConnectionMgr::log(0)
                            >14 Visitor::outputEnd(), close shader file
                            >14 Visitor::postOutput()
                              >15 getShaderFilePath_SLO(phong5)
                                >16 getShaderFilePath_NoExt(phong5)
                              >15 getShaderFilePath_SRC(phong5)
                                >16 getShaderFilePath_NoExt(phong5)
                          >13 ConvertShadingNetwork::exportShaderEnd(phong5)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong5SG,displacementShader)
                    >10 ConvertShadingNetwork::exportShaderNodeInPlug(phong5SG,displacementShader)
                      >11 ConvertShadingNetwork::_exportShaderNodeInPlug(phong5SG,displacementShader)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong5SG,volumeShader)
                    >10 ConvertShadingNetwork::exportShaderNodeInPlug(phong5SG,volumeShader)
                      >11 ConvertShadingNetwork::_exportShaderNodeInPlug(phong5SG,volumeShader)
                  >9 ConvertShadingNetwork::exportShadingGroupBegin(phong5SG)
                  >9 ConvertShadingNetwork::outputShadingGroup(phong5SG)
                    >10 Visitor::outputShadingGroup(phong5SG)
                      >11 Visitor::outputShadingGroup(phong5SG,0)
                  >9 ConvertShadingNetwork::exportShadingGroupEnd(phong5SG)
                  >9 ConvertShadingNetwork::canShadingGroupExported(phong6SG)
                  >9 Renderer::getValidShaderPlugsInShadingGroup()
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong6SG,surfaceShader)
                    >10 ConvertShadingNetwork::exportShaderNodeInPlug(phong6SG,surfaceShader)
                      >11 ConvertShadingNetwork::_exportShaderNodeInPlug(phong6SG,surfaceShader)
                        >12 ConvertShadingNetwork::exportShaderNode(phong6)
                          >13 ConvertShadingNetwork::canShaderExported(phong6)
                          >13 ConvertShadingNetwork::exportShaderBegin(phong6)
                          >13 ConvertShadingNetwork::convertShadingNetworkToRSL(phong6)
                            >14 Visitor::initShaderData(phong6)
                              >15 NodePlugConnectionMgr::setNodePlugMgr(...)
                              >15 NodePlugConnectionMgr::reset()
                            >14 ConvertShadingNetwork::getUpstreamConvertibleNodes(phong6, nodes, numConnections)
                              >15 DagMgr::BreadthFirstTraversal(phong6, ret)
                                >16 DagMgr::begin(phong6)
                                  >17 DagMgr::pushInputPlugs(phong6)
                                    >18 ShaderMgr::getValidConnection(phong6)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong6.colorR)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong6.colorR)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong6.colorG)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong6.colorG)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong6.colorB)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong6.colorB)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong6.color)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong6.color)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong6.transparencyR)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong6.transparencyR)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong6.transparencyG)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong6.transparencyG)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong6.transparencyB)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong6.transparencyB)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong6.transparency)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong6.transparency)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong6.ambientColorR)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong6.ambientColorR)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong6.ambientColorG)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong6.ambientColorG)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong6.ambientColorB)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong6.ambientColorB)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong6.ambientColor)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong6.ambientColor)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong6.incandescenceR)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong6.incandescenceR)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong6.incandescenceG)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong6.incandescenceG)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong6.incandescenceB)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong6.incandescenceB)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong6.incandescence)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong6.incandescence)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong6.normalCameraX)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong6.normalCameraX)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong6.normalCameraY)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong6.normalCameraY)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong6.normalCameraZ)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong6.normalCameraZ)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong6.normalCamera)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong6.normalCamera)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong6.diffuse)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong6.diffuse)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong6.translucence)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong6.translucence)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong6.translucenceDepth)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong6.translucenceDepth)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong6.translucenceFocus)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong6.translucenceFocus)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong6.cosinePower)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong6.cosinePower)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong6.specularColorR)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong6.specularColorR)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong6.specularColorG)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong6.specularColorG)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong6.specularColorB)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong6.specularColorB)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong6.specularColor)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong6.specularColor)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong6.reflectivity)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong6.reflectivity)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong6.reflectedColorR)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong6.reflectedColorR)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong6.reflectedColorG)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong6.reflectedColorG)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong6.reflectedColorB)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong6.reflectedColorB)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong6.reflectedColor)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong6.reflectedColor)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong6.matteOpacityMode)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong6.matteOpacityMode)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong6.matteOpacity)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong6.matteOpacity)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong6.reflectionLimit)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong6.reflectionLimit)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong6.outColorR)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong6.outColorR)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong6.outColorG)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong6.outColorG)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong6.outColorB)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong6.outColorB)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong6.outColor)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong6.outColor)
                                      >19 ConvertShadingNetwork::nodeIsConvertible(phong6SG)
                                        >20 ShaderMgr::hasShaderType(shadingEngine)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong6.outTransparencyR)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong6.outTransparencyR)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong6.outTransparencyG)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong6.outTransparencyG)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong6.outTransparencyB)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong6.outTransparencyB)
                                    >18 ConvertShadingNetwork::convertibleConnection(phong6.outTransparency)
                                      >19 ConvertShadingNetwork::ensurePlugExists(phong6.outTransparency)
                                >16 DagMgr::end()
                            >14 Visitor::preOutput(phong6)
                            >14 Visitor::outputBegin(phong6), open shader file
                              >15 getShaderFilePath_SRC(phong6)
                                >16 getShaderFilePath_NoExt(phong6)
                              >15 Visitor::getSurfaceShaderAOVOutputParametersString()
                              >15 Visitor::defineAOVVariables(phong6)
                            >14 ConvertShadingNetwork::traverseGraphAndOutputNodeFunctions( nodes, numConnections)
                              >15 Visitor::outputUpstreamShader(phong6)
                                >16 ShaderOutputVisitor::_outputUpstreamShader(phong6,phong)
                                  >17 Visitor::visitPhong(phong6)
                                    >18 OutputHelper::addInclude(phong.h)
                                    >18 OutputHelper::beginRSL(phong6)
                                    >18 ShaderMgr::convertibleConnection(phong6.ambientColor)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong6.ambientColor)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong6.ambientColor)
                                    >18 NodePlugInfo::add(phong6,ambientColor,color)
                                      >19 NodePlug::add(ambientColor, color)
                                    >18 ShaderMgr::convertibleConnection(phong6.color)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong6.color)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong6.color)
                                    >18 NodePlugInfo::add(phong6,color,color)
                                      >19 NodePlug::add(color, color)
                                    >18 ShaderMgr::convertibleConnection(phong6.cosinePower)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong6.cosinePower)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong6.cosinePower)
                                    >18 NodePlugInfo::add(phong6,cosinePower,float)
                                      >19 NodePlug::add(cosinePower, float)
                                    >18 ShaderMgr::convertibleConnection(phong6.diffuse)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong6.diffuse)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong6.diffuse)
                                    >18 NodePlugInfo::add(phong6,diffuse,float)
                                      >19 NodePlug::add(diffuse, float)
                                    >18 ShaderMgr::convertibleConnection(phong6.incandescence)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong6.incandescence)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong6.incandescence)
                                    >18 NodePlugInfo::add(phong6,incandescence,color)
                                      >19 NodePlug::add(incandescence, color)
                                    >18 ShaderMgr::convertibleConnection(phong6.matteOpacity)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong6.matteOpacity)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong6.matteOpacity)
                                    >18 NodePlugInfo::add(phong6,matteOpacity,float)
                                      >19 NodePlug::add(matteOpacity, float)
                                    >18 ShaderMgr::convertibleConnection(phong6.matteOpacityMode)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong6.matteOpacityMode)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong6.matteOpacityMode)
                                    >18 NodePlugInfo::add(phong6,matteOpacityMode,float)
                                      >19 NodePlug::add(matteOpacityMode, float)
                                    >18 ShaderMgr::convertibleConnection(phong6.specularColor)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong6.specularColor)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong6.specularColor)
                                    >18 NodePlugInfo::add(phong6,specularColor,color)
                                      >19 NodePlug::add(specularColor, color)
                                    >18 ShaderMgr::convertibleConnection(phong6.reflectivity)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong6.reflectivity)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong6.reflectivity)
                                    >18 NodePlugInfo::add(phong6,reflectivity,float)
                                      >19 NodePlug::add(reflectivity, float)
                                    >18 ShaderMgr::convertibleConnection(phong6.reflectedColor)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong6.reflectedColor)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong6.reflectedColor)
                                    >18 NodePlugInfo::add(phong6,reflectedColor,color)
                                      >19 NodePlug::add(reflectedColor, color)
                                    >18 ShaderMgr::convertibleConnection(phong6.refractions)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong6.refractions)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong6.refractions)
                                    >18 NodePlugInfo::add(phong6,refractions,float)
                                      >19 NodePlug::add(refractions, float)
                                    >18 ShaderMgr::convertibleConnection(phong6.refractiveIndex)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong6.refractiveIndex)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong6.refractiveIndex)
                                    >18 NodePlugInfo::add(phong6,refractiveIndex,float)
                                      >19 NodePlug::add(refractiveIndex, float)
                                    >18 ShaderMgr::convertibleConnection(phong6.refractionLimit)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong6.refractionLimit)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong6.refractionLimit)
                                    >18 NodePlugInfo::add(phong6,refractionLimit,float)
                                      >19 NodePlug::add(refractionLimit, float)
                                    >18 ShaderMgr::convertibleConnection(phong6.lightAbsorbance)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong6.lightAbsorbance)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong6.lightAbsorbance)
                                    >18 NodePlugInfo::add(phong6,lightAbsorbance,float)
                                      >19 NodePlug::add(lightAbsorbance, float)
                                    >18 ShaderMgr::convertibleConnection(phong6.shadowAttenuation)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong6.shadowAttenuation)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong6.shadowAttenuation)
                                    >18 NodePlugInfo::add(phong6,shadowAttenuation,float)
                                      >19 NodePlug::add(shadowAttenuation, float)
                                    >18 ShaderMgr::convertibleConnection(phong6.reflectionLimit)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong6.reflectionLimit)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong6.reflectionLimit)
                                    >18 NodePlugInfo::add(phong6,reflectionLimit,float)
                                      >19 NodePlug::add(reflectionLimit, float)
                                    >18 ShaderMgr::convertibleConnection(phong6.translucence)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong6.translucence)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong6.translucence)
                                    >18 NodePlugInfo::add(phong6,translucence,float)
                                      >19 NodePlug::add(translucence, float)
                                    >18 ShaderMgr::convertibleConnection(phong6.translucenceDepth)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong6.translucenceDepth)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong6.translucenceDepth)
                                    >18 NodePlugInfo::add(phong6,translucenceDepth,float)
                                      >19 NodePlug::add(translucenceDepth, float)
                                    >18 ShaderMgr::convertibleConnection(phong6.translucenceFocus)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong6.translucenceFocus)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong6.translucenceFocus)
                                    >18 NodePlugInfo::add(phong6,translucenceFocus,float)
                                      >19 NodePlug::add(translucenceFocus, float)
                                    >18 ShaderMgr::convertibleConnection(phong6.transparency)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong6.transparency)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong6.transparency)
                                    >18 NodePlugInfo::add(phong6,transparency,color)
                                      >19 NodePlug::add(transparency, color)
                                    >18 ShaderMgr::convertibleConnection(phong6.outColor)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong6.outColor)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong6.outColor)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(phong6SG)
                                          >21 ShaderMgr::hasShaderType(shadingEngine)
                                    >18 NodePlugInfo::add(phong6,outColor,color)
                                      >19 NodePlug::add(outColor, color)
                                    >18 ShaderMgr::convertibleConnection(phong6.outTransparency)
                                      >19 ConvertShadingNetwork::convertibleConnection(phong6.outTransparency)
                                        >20 ConvertShadingNetwork::ensurePlugExists(phong6.outTransparency)
                                    >18 NodePlugInfo::add(phong6,outTransparency,color)
                                      >19 NodePlug::add(outTransparency, color)
                                    >18 OutputHelper::endRSL()
                              >15 ShaderMgr::getValidConnection(phong6)
                              >15 ConvertShadingNetwork::getNodeVariables(phong6, validConnections,  inputSrc, inputDes, outputSrc)
                                >16 ConvertShadingNetwork::convertibleConnection(phong6.colorR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong6.colorR)
                                >16 ConvertShadingNetwork::convertibleConnection(phong6.colorG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong6.colorG)
                                >16 ConvertShadingNetwork::convertibleConnection(phong6.colorB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong6.colorB)
                                >16 ConvertShadingNetwork::convertibleConnection(phong6.color)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong6.color)
                                >16 ConvertShadingNetwork::convertibleConnection(phong6.transparencyR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong6.transparencyR)
                                >16 ConvertShadingNetwork::convertibleConnection(phong6.transparencyG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong6.transparencyG)
                                >16 ConvertShadingNetwork::convertibleConnection(phong6.transparencyB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong6.transparencyB)
                                >16 ConvertShadingNetwork::convertibleConnection(phong6.transparency)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong6.transparency)
                                >16 ConvertShadingNetwork::convertibleConnection(phong6.ambientColorR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong6.ambientColorR)
                                >16 ConvertShadingNetwork::convertibleConnection(phong6.ambientColorG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong6.ambientColorG)
                                >16 ConvertShadingNetwork::convertibleConnection(phong6.ambientColorB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong6.ambientColorB)
                                >16 ConvertShadingNetwork::convertibleConnection(phong6.ambientColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong6.ambientColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong6.incandescenceR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong6.incandescenceR)
                                >16 ConvertShadingNetwork::convertibleConnection(phong6.incandescenceG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong6.incandescenceG)
                                >16 ConvertShadingNetwork::convertibleConnection(phong6.incandescenceB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong6.incandescenceB)
                                >16 ConvertShadingNetwork::convertibleConnection(phong6.incandescence)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong6.incandescence)
                                >16 ConvertShadingNetwork::convertibleConnection(phong6.normalCameraX)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong6.normalCameraX)
                                >16 ConvertShadingNetwork::convertibleConnection(phong6.normalCameraY)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong6.normalCameraY)
                                >16 ConvertShadingNetwork::convertibleConnection(phong6.normalCameraZ)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong6.normalCameraZ)
                                >16 ConvertShadingNetwork::convertibleConnection(phong6.normalCamera)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong6.normalCamera)
                                >16 ConvertShadingNetwork::convertibleConnection(phong6.diffuse)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong6.diffuse)
                                >16 ConvertShadingNetwork::convertibleConnection(phong6.translucence)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong6.translucence)
                                >16 ConvertShadingNetwork::convertibleConnection(phong6.translucenceDepth)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong6.translucenceDepth)
                                >16 ConvertShadingNetwork::convertibleConnection(phong6.translucenceFocus)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong6.translucenceFocus)
                                >16 ConvertShadingNetwork::convertibleConnection(phong6.cosinePower)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong6.cosinePower)
                                >16 ConvertShadingNetwork::convertibleConnection(phong6.specularColorR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong6.specularColorR)
                                >16 ConvertShadingNetwork::convertibleConnection(phong6.specularColorG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong6.specularColorG)
                                >16 ConvertShadingNetwork::convertibleConnection(phong6.specularColorB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong6.specularColorB)
                                >16 ConvertShadingNetwork::convertibleConnection(phong6.specularColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong6.specularColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong6.reflectivity)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong6.reflectivity)
                                >16 ConvertShadingNetwork::convertibleConnection(phong6.reflectedColorR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong6.reflectedColorR)
                                >16 ConvertShadingNetwork::convertibleConnection(phong6.reflectedColorG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong6.reflectedColorG)
                                >16 ConvertShadingNetwork::convertibleConnection(phong6.reflectedColorB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong6.reflectedColorB)
                                >16 ConvertShadingNetwork::convertibleConnection(phong6.reflectedColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong6.reflectedColor)
                                >16 ConvertShadingNetwork::convertibleConnection(phong6.matteOpacityMode)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong6.matteOpacityMode)
                                >16 ConvertShadingNetwork::convertibleConnection(phong6.matteOpacity)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong6.matteOpacity)
                                >16 ConvertShadingNetwork::convertibleConnection(phong6.reflectionLimit)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong6.reflectionLimit)
                                >16 ConvertShadingNetwork::convertibleConnection(phong6.outColorR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong6.outColorR)
                                >16 ConvertShadingNetwork::convertibleConnection(phong6.outColorG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong6.outColorG)
                                >16 ConvertShadingNetwork::convertibleConnection(phong6.outColorB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong6.outColorB)
                                >16 ConvertShadingNetwork::convertibleConnection(phong6.outColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong6.outColor)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(phong6SG)
                                    >18 ShaderMgr::hasShaderType(shadingEngine)
                                >16 ConvertShadingNetwork::convertibleConnection(phong6.outTransparencyR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong6.outTransparencyR)
                                >16 ConvertShadingNetwork::convertibleConnection(phong6.outTransparencyG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong6.outTransparencyG)
                                >16 ConvertShadingNetwork::convertibleConnection(phong6.outTransparencyB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong6.outTransparencyB)
                                >16 ConvertShadingNetwork::convertibleConnection(phong6.outTransparency)
                                  >17 ConvertShadingNetwork::ensurePlugExists(phong6.outTransparency)
                              >15 Visitor::addShaderMethodBody(phong6,,,)
                                >16 NodePlugConnectionMgr::add(phong6)
                            >14 ConvertShadingNetwork::outputShaderMethod()
                              >15 Visitor::outputShaderMethod()
                                >16 NodePlugConnectionMgr::cookRSLFunctionCallString(0)
                                >16 NodePlugConnectionMgr::log(0)
                            >14 Visitor::outputEnd(), close shader file
                            >14 Visitor::postOutput()
                              >15 getShaderFilePath_SLO(phong6)
                                >16 getShaderFilePath_NoExt(phong6)
                              >15 getShaderFilePath_SRC(phong6)
                                >16 getShaderFilePath_NoExt(phong6)
                          >13 ConvertShadingNetwork::exportShaderEnd(phong6)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong6SG,displacementShader)
                    >10 ConvertShadingNetwork::exportShaderNodeInPlug(phong6SG,displacementShader)
                      >11 ConvertShadingNetwork::_exportShaderNodeInPlug(phong6SG,displacementShader)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(phong6SG,volumeShader)
                    >10 ConvertShadingNetwork::exportShaderNodeInPlug(phong6SG,volumeShader)
                      >11 ConvertShadingNetwork::_exportShaderNodeInPlug(phong6SG,volumeShader)
                  >9 ConvertShadingNetwork::exportShadingGroupBegin(phong6SG)
                  >9 ConvertShadingNetwork::outputShadingGroup(phong6SG)
                    >10 Visitor::outputShadingGroup(phong6SG)
                      >11 Visitor::outputShadingGroup(phong6SG,0)
                  >9 ConvertShadingNetwork::exportShadingGroupEnd(phong6SG)
                  >9 ConvertShadingNetwork::exportShaderNodeInPlug(perspShape,miEnvironmentShader)
                  >9 ConvertShadingNetwork::exportShaderNodeInPlug(perspShape,liqVolumeShader)
                  >9 ConvertShadingNetwork::exportShaderNodeInPlug(perspShape,liqEnvironmentShader)
                    >10 ConvertShadingNetwork::_exportShaderNodeInPlug(perspShape,liqEnvironmentShader)
                  >9 ConvertShadingNetwork::exportShaderNodeInPlug(perspShape,liqLensShader)
                    >10 ConvertShadingNetwork::_exportShaderNodeInPlug(perspShape,liqLensShader)
                  >9 ShadingNetworkUser::export_user()
                >8  ConvertShadingNetwork::afterExport()
                  >9 ShadingNetworkUser::afterExport_user()
            >6 liqRibTranslatorNew::worldPrologue__(perspShape)
              >7 Renderer::worldPrologue(perspShape)
            >6 liqRibTranslatorNew::lightBlock__(perspShape)
              >7 Renderer::writeLight_pre(|pointLight1|pointLightShape1,perspShape)
              >7 liqRibObj::writeObject(,perspShape,0)
                >8 liqRibLightData::write(,job=perspShape,0)
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::write(|pointLight1|pointLightShape1,,perspShape,ref=0)
                    >10 Helper::RiBeginRef()
                      >11 liqRibData::getFullPathName()
                    >10 rm_writeLightData.cpp::_write(|pointLight1|pointLightShape1,perspShape,...)
                      >11 Renderer::exportPointLight(pointlight,pointLightShape1,...)
                    >10 Helper::RiEndRef()
              >7 Renderer::writeLight_post(|pointLight1|pointLightShape1,perspShape)
            >6 liqRibTranslatorNew::coordSysBlock__(perspShape)
              >7 Renderer::coordSysBlock__(perspShape)
            >6 liqRibTranslatorNew::objectBlock__(perspShape)
              >7 liqRibTranslatorNew::objectBlock_data(perspShape)
                >8 liqRibTranslatorNew::getShadowSetObject(perspShape)
                >8 liqRibTranslatorNew::oneObjectBlock_data(|persp|perspShape,perspShape)
                  >9 Renderer::exportOneObject_data(|persp|perspShape,perspShape)
                    >10 Renderer::_writeObject(|persp|perspShape,perspShape,0,0,0)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_persp_perspShape.1.rib,perspShape,0)
                        >12 liqRibCameraData::write(R:/MyDocuments/maya/projects/default/rib/_persp_perspShape.1.rib,job=perspShape,0)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|persp|perspShape,R:/MyDocuments/maya/projects/default/rib/_persp_perspShape.1.rib,perspShape,ref=0)
                >8 liqRibTranslatorNew::oneObjectBlock_data(|camera1|cameraShape1,perspShape)
                  >9 Renderer::exportOneObject_data(|camera1|cameraShape1,perspShape)
                    >10 Renderer::_writeObject(|camera1|cameraShape1,perspShape,0,0,0)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_camera1_cameraShape1.1.rib,perspShape,0)
                        >12 liqRibCameraData::write(R:/MyDocuments/maya/projects/default/rib/_camera1_cameraShape1.1.rib,job=perspShape,0)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|camera1|cameraShape1,R:/MyDocuments/maya/projects/default/rib/_camera1_cameraShape1.1.rib,perspShape,ref=0)
                >8 liqRibTranslatorNew::oneObjectBlock_data(|pPlane1|pPlaneShape1,perspShape)
                  >9 Renderer::exportOneObject_data(|pPlane1|pPlaneShape1,perspShape)
                    >10 Renderer::_writeObject(|pPlane1|pPlaneShape1,perspShape,0,0,0)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pPlane1_pPlaneShape1.1.rib,perspShape,0)
                        >12 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pPlane1_pPlaneShape1.1.rib,job=perspShape,0)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|pPlane1|pPlaneShape1,R:/MyDocuments/maya/projects/default/rib/_pPlane1_pPlaneShape1.1.rib,perspShape,ref=0)
                >8 liqRibTranslatorNew::oneObjectBlock_data(|pPlane2|pPlaneShape2,perspShape)
                  >9 Renderer::exportOneObject_data(|pPlane2|pPlaneShape2,perspShape)
                    >10 Renderer::_writeObject(|pPlane2|pPlaneShape2,perspShape,0,0,0)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape2.1.rib,perspShape,0)
                        >12 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape2.1.rib,job=perspShape,0)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|pPlane2|pPlaneShape2,R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape2.1.rib,perspShape,ref=0)
                >8 liqRibTranslatorNew::oneObjectBlock_data(|pPlane3|pPlaneShape3,perspShape)
                  >9 Renderer::exportOneObject_data(|pPlane3|pPlaneShape3,perspShape)
                    >10 Renderer::_writeObject(|pPlane3|pPlaneShape3,perspShape,0,0,0)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pPlane3_pPlaneShape3.1.rib,perspShape,0)
                        >12 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pPlane3_pPlaneShape3.1.rib,job=perspShape,0)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|pPlane3|pPlaneShape3,R:/MyDocuments/maya/projects/default/rib/_pPlane3_pPlaneShape3.1.rib,perspShape,ref=0)
                >8 liqRibTranslatorNew::oneObjectBlock_data(|pPlane4|pPlaneShape4,perspShape)
                  >9 Renderer::exportOneObject_data(|pPlane4|pPlaneShape4,perspShape)
                    >10 Renderer::_writeObject(|pPlane4|pPlaneShape4,perspShape,0,0,0)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pPlane4_pPlaneShape4.1.rib,perspShape,0)
                        >12 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pPlane4_pPlaneShape4.1.rib,job=perspShape,0)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|pPlane4|pPlaneShape4,R:/MyDocuments/maya/projects/default/rib/_pPlane4_pPlaneShape4.1.rib,perspShape,ref=0)
              >7 liqRibTranslatorNew::objectBlock_reference(perspShape)
                >8 Renderer::objectBlock_reference_begin()
                >8 liqRibTranslatorNew::preGeometryMel()
                  >9 Renderer::preGeometryMel()
                >8 liqRibTranslatorNew::getShadowSetObject(perspShape)
                >8 liqRibTranslatorNew::oneObjectBlock_reference(|persp|perspShape,perspShape)
                  >9 Renderer::oneObjectBlock_reference_attribute_begin(|persp|perspShape,perspShape)
                  >9 Renderer::oneObjectBlock_reference_attribute_block0(|persp|perspShape,perspShape)
                  >9 liqRibTranslatorNew::tRiIlluminate(perspShape,|persp|perspShape)
                    >10 Renderer::exportLightLinks(perspShape,|persp|perspShape,lightedByWhichLightShapes.size=0)
                      >11 Renderer::logFrame(|persp|perspShape is not lighted.)
                  >9 liqRibTranslatorNew::checkSurfaceShader(|persp|perspShape,|persp|perspShape,,,)
                  >9 liqRibTranslatorNew::checkDisplacementShader(|persp|perspShape,|persp|perspShape,,,)
                  >9 liqRibTranslatorNew::checkVolumeShader(|persp|perspShape,|persp|perspShape,,,)
                  >9 Renderer::oneObjectBlock_reference_attribute_block1(|persp|perspShape,perspShape)
                    >10 objectNonShadowAttribute(|persp|perspShape)
                      >11 liqRibNode::writeUserAttributes()
                        >12 Renderer::writeUserAttributes()
                  >9 liqRibTranslatorNew::writeShader_(1,|persp|perspShape,v=0,s=0,c=0,,|persp|perspShape,perspShape)
                    >10 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|persp|perspShape,|persp|perspShape,0)
                      >11 Renderer::F2(0,|persp|perspShape)
                      >11 liqRibNode::findShader()
                  >9 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|persp|perspShape)
                  >9 Renderer::exportOneObject_reference(|persp|perspShape,perspShape)
                    >10 liqRibTranslatorNew::preTransformMel
                    >10 MaxtrixMotionBlur(|persp|perspShape,|persp|perspShape,0)
                    >10 liqRibTranslatorNew::postTransformMel(kTransform)
                    >10 liqRibTranslatorNew::preShapeMel(kTransform)
                    >10 Renderer::_writeObject(|persp|perspShape,perspShape,0,0,1)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_persp_perspShape.1.rib,perspShape,1)
                        >12 liqRibCameraData::write(R:/MyDocuments/maya/projects/default/rib/_persp_perspShape.1.rib,job=perspShape,1)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|persp|perspShape,R:/MyDocuments/maya/projects/default/rib/_persp_perspShape.1.rib,perspShape,ref=1)
                              >15 liqRibData::getFullPathName()
                            >14 rm_writeCameraData.cpp::_write(|persp|perspShape,perspShape)
                    >10 liqRibTranslatorNew::postShapeMel(kTransform)
                  >9 Renderer::oneObjectBlock_reference_attribute_end(|persp|perspShape,perspShape)
                >8 liqRibTranslatorNew::oneObjectBlock_reference(|camera1|cameraShape1,perspShape)
                  >9 Renderer::oneObjectBlock_reference_attribute_begin(|camera1|cameraShape1,perspShape)
                  >9 Renderer::oneObjectBlock_reference_attribute_block0(|camera1|cameraShape1,perspShape)
                  >9 liqRibTranslatorNew::tRiIlluminate(perspShape,|camera1|cameraShape1)
                    >10 Renderer::exportLightLinks(perspShape,|camera1|cameraShape1,lightedByWhichLightShapes.size=0)
                      >11 Renderer::logFrame(|camera1|cameraShape1 is not lighted.)
                  >9 liqRibTranslatorNew::checkSurfaceShader(|camera1|cameraShape1,|camera1|cameraShape1,,,)
                  >9 liqRibTranslatorNew::checkDisplacementShader(|camera1|cameraShape1,|camera1|cameraShape1,,,)
                  >9 liqRibTranslatorNew::checkVolumeShader(|camera1|cameraShape1,|camera1|cameraShape1,,,)
                  >9 Renderer::oneObjectBlock_reference_attribute_block1(|camera1|cameraShape1,perspShape)
                    >10 objectNonShadowAttribute(|camera1|cameraShape1)
                      >11 liqRibNode::writeUserAttributes()
                        >12 Renderer::writeUserAttributes()
                  >9 liqRibTranslatorNew::writeShader_(1,|camera1|cameraShape1,v=0,s=0,c=0,,|camera1|cameraShape1,perspShape)
                    >10 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|camera1|cameraShape1,|camera1|cameraShape1,0)
                      >11 Renderer::F2(0,|camera1|cameraShape1)
                      >11 liqRibNode::findShader()
                  >9 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|camera1|cameraShape1)
                  >9 Renderer::exportOneObject_reference(|camera1|cameraShape1,perspShape)
                    >10 liqRibTranslatorNew::preTransformMel
                    >10 MaxtrixMotionBlur(|camera1|cameraShape1,|camera1|cameraShape1,0)
                    >10 liqRibTranslatorNew::postTransformMel(kTransform)
                    >10 liqRibTranslatorNew::preShapeMel(kTransform)
                    >10 Renderer::_writeObject(|camera1|cameraShape1,perspShape,0,0,1)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_camera1_cameraShape1.1.rib,perspShape,1)
                        >12 liqRibCameraData::write(R:/MyDocuments/maya/projects/default/rib/_camera1_cameraShape1.1.rib,job=perspShape,1)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|camera1|cameraShape1,R:/MyDocuments/maya/projects/default/rib/_camera1_cameraShape1.1.rib,perspShape,ref=1)
                              >15 liqRibData::getFullPathName()
                            >14 rm_writeCameraData.cpp::_write(|camera1|cameraShape1,perspShape)
                    >10 liqRibTranslatorNew::postShapeMel(kTransform)
                  >9 Renderer::oneObjectBlock_reference_attribute_end(|camera1|cameraShape1,perspShape)
                >8 liqRibTranslatorNew::oneObjectBlock_reference(|pPlane1|pPlaneShape1,perspShape)
                  >9 Renderer::oneObjectBlock_reference_attribute_begin(|pPlane1|pPlaneShape1,perspShape)
                  >9 Renderer::oneObjectBlock_reference_attribute_block0(|pPlane1|pPlaneShape1,perspShape)
                  >9 liqRibTranslatorNew::tRiIlluminate(perspShape,|pPlane1|pPlaneShape1)
                    >10 Renderer::exportLightLinks(perspShape,|pPlane1|pPlaneShape1,lightedByWhichLightShapes.size=1)
                  >9 liqRibTranslatorNew::checkSurfaceShader(|pPlane1|pPlaneShape1,|pPlane1|pPlaneShape1,,,)
                  >9 liqRibTranslatorNew::checkDisplacementShader(|pPlane1|pPlaneShape1,|pPlane1|pPlaneShape1,,,)
                  >9 liqRibTranslatorNew::checkVolumeShader(|pPlane1|pPlaneShape1,|pPlane1|pPlaneShape1,,,)
                  >9 Renderer::oneObjectBlock_reference_attribute_block1(|pPlane1|pPlaneShape1,perspShape)
                    >10 objectNonShadowAttribute(|pPlane1|pPlaneShape1)
                      >11 liqRibNode::writeUserAttributes()
                        >12 Renderer::writeUserAttributes()
                  >9 liqRibTranslatorNew::writeShader_(1,|pPlane1|pPlaneShape1,v=0,s=0,c=0,,|pPlane1|pPlaneShape1,perspShape)
                    >10 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|pPlane1|pPlaneShape1,|pPlane1|pPlaneShape1,0)
                      >11 Renderer::F2(0,|pPlane1|pPlaneShape1)
                      >11 liqRibNode::findShader()
                  >9 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|pPlane1|pPlaneShape1)
                    >10 Visitor::outputShadingGroup(phong1SG,1)
                      >11 _outputShadingGroup(phong1SG)
                        >12 getShaderFilePath_NoExt(phong1)
                  >9 Renderer::exportOneObject_reference(|pPlane1|pPlaneShape1,perspShape)
                    >10 liqRibTranslatorNew::preTransformMel
                    >10 MaxtrixMotionBlur(|pPlane1|pPlaneShape1,|pPlane1|pPlaneShape1,0)
                    >10 liqRibTranslatorNew::postTransformMel(kTransform)
                    >10 liqRibTranslatorNew::preShapeMel(kTransform)
                    >10 Renderer::_writeObject(|pPlane1|pPlaneShape1,perspShape,0,0,1)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pPlane1_pPlaneShape1.1.rib,perspShape,1)
                        >12 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pPlane1_pPlaneShape1.1.rib,job=perspShape,1)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|pPlane1|pPlaneShape1,R:/MyDocuments/maya/projects/default/rib/_pPlane1_pPlaneShape1.1.rib,perspShape,ref=1)
                              >15 liqRibData::getFullPathName()
                            >14 rm_writeMeshData.cpp::_write(|pPlane1|pPlaneShape1,perspShape)
                    >10 liqRibTranslatorNew::postShapeMel(kTransform)
                  >9 Renderer::oneObjectBlock_reference_attribute_end(|pPlane1|pPlaneShape1,perspShape)
                >8 liqRibTranslatorNew::oneObjectBlock_reference(|pPlane2|pPlaneShape2,perspShape)
                  >9 Renderer::oneObjectBlock_reference_attribute_begin(|pPlane2|pPlaneShape2,perspShape)
                  >9 Renderer::oneObjectBlock_reference_attribute_block0(|pPlane2|pPlaneShape2,perspShape)
                  >9 liqRibTranslatorNew::tRiIlluminate(perspShape,|pPlane2|pPlaneShape2)
                    >10 Renderer::exportLightLinks(perspShape,|pPlane2|pPlaneShape2,lightedByWhichLightShapes.size=1)
                  >9 liqRibTranslatorNew::checkSurfaceShader(|pPlane2|pPlaneShape2,|pPlane2|pPlaneShape2,,,)
                  >9 liqRibTranslatorNew::checkDisplacementShader(|pPlane2|pPlaneShape2,|pPlane2|pPlaneShape2,,,)
                  >9 liqRibTranslatorNew::checkVolumeShader(|pPlane2|pPlaneShape2,|pPlane2|pPlaneShape2,,,)
                  >9 Renderer::oneObjectBlock_reference_attribute_block1(|pPlane2|pPlaneShape2,perspShape)
                    >10 objectNonShadowAttribute(|pPlane2|pPlaneShape2)
                      >11 liqRibNode::writeUserAttributes()
                        >12 Renderer::writeUserAttributes()
                  >9 liqRibTranslatorNew::writeShader_(1,|pPlane2|pPlaneShape2,v=0,s=0,c=0,,|pPlane2|pPlaneShape2,perspShape)
                    >10 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|pPlane2|pPlaneShape2,|pPlane2|pPlaneShape2,0)
                      >11 Renderer::F2(0,|pPlane2|pPlaneShape2)
                      >11 liqRibNode::findShader()
                  >9 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|pPlane2|pPlaneShape2)
                    >10 Visitor::outputShadingGroup(phong4SG,1)
                      >11 _outputShadingGroup(phong4SG)
                        >12 getShaderFilePath_NoExt(phong4)
                  >9 Renderer::exportOneObject_reference(|pPlane2|pPlaneShape2,perspShape)
                    >10 liqRibTranslatorNew::preTransformMel
                    >10 MaxtrixMotionBlur(|pPlane2|pPlaneShape2,|pPlane2|pPlaneShape2,0)
                    >10 liqRibTranslatorNew::postTransformMel(kTransform)
                    >10 liqRibTranslatorNew::preShapeMel(kTransform)
                    >10 Renderer::_writeObject(|pPlane2|pPlaneShape2,perspShape,0,0,1)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape2.1.rib,perspShape,1)
                        >12 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape2.1.rib,job=perspShape,1)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|pPlane2|pPlaneShape2,R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape2.1.rib,perspShape,ref=1)
                              >15 liqRibData::getFullPathName()
                            >14 rm_writeMeshData.cpp::_write(|pPlane2|pPlaneShape2,perspShape)
                    >10 liqRibTranslatorNew::postShapeMel(kTransform)
                  >9 Renderer::oneObjectBlock_reference_attribute_end(|pPlane2|pPlaneShape2,perspShape)
                >8 liqRibTranslatorNew::oneObjectBlock_reference(|pPlane3|pPlaneShape3,perspShape)
                  >9 Renderer::oneObjectBlock_reference_attribute_begin(|pPlane3|pPlaneShape3,perspShape)
                  >9 Renderer::oneObjectBlock_reference_attribute_block0(|pPlane3|pPlaneShape3,perspShape)
                  >9 liqRibTranslatorNew::tRiIlluminate(perspShape,|pPlane3|pPlaneShape3)
                    >10 Renderer::exportLightLinks(perspShape,|pPlane3|pPlaneShape3,lightedByWhichLightShapes.size=1)
                  >9 liqRibTranslatorNew::checkSurfaceShader(|pPlane3|pPlaneShape3,|pPlane3|pPlaneShape3,,,)
                  >9 liqRibTranslatorNew::checkDisplacementShader(|pPlane3|pPlaneShape3,|pPlane3|pPlaneShape3,,,)
                  >9 liqRibTranslatorNew::checkVolumeShader(|pPlane3|pPlaneShape3,|pPlane3|pPlaneShape3,,,)
                  >9 Renderer::oneObjectBlock_reference_attribute_block1(|pPlane3|pPlaneShape3,perspShape)
                    >10 objectNonShadowAttribute(|pPlane3|pPlaneShape3)
                      >11 liqRibNode::writeUserAttributes()
                        >12 Renderer::writeUserAttributes()
                  >9 liqRibTranslatorNew::writeShader_(1,|pPlane3|pPlaneShape3,v=0,s=0,c=0,,|pPlane3|pPlaneShape3,perspShape)
                    >10 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|pPlane3|pPlaneShape3,|pPlane3|pPlaneShape3,0)
                      >11 Renderer::F2(0,|pPlane3|pPlaneShape3)
                      >11 liqRibNode::findShader()
                  >9 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|pPlane3|pPlaneShape3)
                    >10 Visitor::outputShadingGroup(phong5SG,1)
                      >11 _outputShadingGroup(phong5SG)
                        >12 getShaderFilePath_NoExt(phong5)
                  >9 Renderer::exportOneObject_reference(|pPlane3|pPlaneShape3,perspShape)
                    >10 liqRibTranslatorNew::preTransformMel
                    >10 MaxtrixMotionBlur(|pPlane3|pPlaneShape3,|pPlane3|pPlaneShape3,0)
                    >10 liqRibTranslatorNew::postTransformMel(kTransform)
                    >10 liqRibTranslatorNew::preShapeMel(kTransform)
                    >10 Renderer::_writeObject(|pPlane3|pPlaneShape3,perspShape,0,0,1)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pPlane3_pPlaneShape3.1.rib,perspShape,1)
                        >12 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pPlane3_pPlaneShape3.1.rib,job=perspShape,1)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|pPlane3|pPlaneShape3,R:/MyDocuments/maya/projects/default/rib/_pPlane3_pPlaneShape3.1.rib,perspShape,ref=1)
                              >15 liqRibData::getFullPathName()
                            >14 rm_writeMeshData.cpp::_write(|pPlane3|pPlaneShape3,perspShape)
                    >10 liqRibTranslatorNew::postShapeMel(kTransform)
                  >9 Renderer::oneObjectBlock_reference_attribute_end(|pPlane3|pPlaneShape3,perspShape)
                >8 liqRibTranslatorNew::oneObjectBlock_reference(|pPlane4|pPlaneShape4,perspShape)
                  >9 Renderer::oneObjectBlock_reference_attribute_begin(|pPlane4|pPlaneShape4,perspShape)
                  >9 Renderer::oneObjectBlock_reference_attribute_block0(|pPlane4|pPlaneShape4,perspShape)
                  >9 liqRibTranslatorNew::tRiIlluminate(perspShape,|pPlane4|pPlaneShape4)
                    >10 Renderer::exportLightLinks(perspShape,|pPlane4|pPlaneShape4,lightedByWhichLightShapes.size=1)
                  >9 liqRibTranslatorNew::checkSurfaceShader(|pPlane4|pPlaneShape4,|pPlane4|pPlaneShape4,,,)
                  >9 liqRibTranslatorNew::checkDisplacementShader(|pPlane4|pPlaneShape4,|pPlane4|pPlaneShape4,,,)
                  >9 liqRibTranslatorNew::checkVolumeShader(|pPlane4|pPlaneShape4,|pPlane4|pPlaneShape4,,,)
                  >9 Renderer::oneObjectBlock_reference_attribute_block1(|pPlane4|pPlaneShape4,perspShape)
                    >10 objectNonShadowAttribute(|pPlane4|pPlaneShape4)
                      >11 liqRibNode::writeUserAttributes()
                        >12 Renderer::writeUserAttributes()
                  >9 liqRibTranslatorNew::writeShader_(1,|pPlane4|pPlaneShape4,v=0,s=0,c=0,,|pPlane4|pPlaneShape4,perspShape)
                    >10 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|pPlane4|pPlaneShape4,|pPlane4|pPlaneShape4,0)
                      >11 Renderer::F2(0,|pPlane4|pPlaneShape4)
                      >11 liqRibNode::findShader()
                  >9 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|pPlane4|pPlaneShape4)
                    >10 Visitor::outputShadingGroup(phong6SG,1)
                      >11 _outputShadingGroup(phong6SG)
                        >12 getShaderFilePath_NoExt(phong6)
                  >9 Renderer::exportOneObject_reference(|pPlane4|pPlaneShape4,perspShape)
                    >10 liqRibTranslatorNew::preTransformMel
                    >10 MaxtrixMotionBlur(|pPlane4|pPlaneShape4,|pPlane4|pPlaneShape4,0)
                    >10 liqRibTranslatorNew::postTransformMel(kTransform)
                    >10 liqRibTranslatorNew::preShapeMel(kTransform)
                    >10 Renderer::_writeObject(|pPlane4|pPlaneShape4,perspShape,0,0,1)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pPlane4_pPlaneShape4.1.rib,perspShape,1)
                        >12 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pPlane4_pPlaneShape4.1.rib,job=perspShape,1)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|pPlane4|pPlaneShape4,R:/MyDocuments/maya/projects/default/rib/_pPlane4_pPlaneShape4.1.rib,perspShape,ref=1)
                              >15 liqRibData::getFullPathName()
                            >14 rm_writeMeshData.cpp::_write(|pPlane4|pPlaneShape4,perspShape)
                    >10 liqRibTranslatorNew::postShapeMel(kTransform)
                  >9 Renderer::oneObjectBlock_reference_attribute_end(|pPlane4|pPlaneShape4,perspShape)
                >8 Renderer::objectBlock_reference_end()
            >6 liqRibTranslatorNew::worldEpilogue__()
              >7 liqRibTranslator::worldEpilogue()
                >8 Renderer::worldEpilogue()
            >6 liqRibTranslatorNew::frameEpilogue__(1)
              >7 Renderer::frameEpilogue(1)
            >6 liqRibTranslatorNew::ribEpilogue__(perspShape)
              >7 Renderer::ribPrologue_end(perspShape)
          >5 Renderer::HeroPassEnd(perspShape)
            >6 rm::Renderer::renderAll_local(R:/MyDocuments/maya/projects/default/rib/shader_graph_phong_transparent_perspShape.0001..rib)
              >7 liqProcessLauncher::_execute(renderdl,   "R:/MyDocuments/maya/projects/default/rib/shader_graph_phong_transparent_perspShape.0001..rib","R:/MyDocuments/maya/projects/default/", wait=0)
                >8 liqProcessLauncher::_execute(renderdl,   "R:/MyDocuments/maya/projects/default/rib/shader_graph_phong_transparent_perspShape.0001..rib","R:/MyDocuments/maya/projects/default/", wait=0)
        >4 liqRenderScript::addJob(job.title=shader_graph_phong_transparentFrame1,0)
          >5 liqRenderScript::popNextJobID()
        >4 liqRibTranslatorNew::postActions(defaultRenderLayer)
    >2 RendererMgr::test()
    >2 Renderer::closeLog()(but do nothing now)
    >2 RendererMgr::epilogue()
    >2 RendererMgr::uninstall()
      >3 ShaderMgr::clearValidConnection()
    >2 RendererMgr::unsetFactory()
