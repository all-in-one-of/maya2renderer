ei_context();
ei_verbose( 6 );
ei_link( "eiIMG" );
ei_link( "eiSHADER" );
ei_link( "eiSHADER_maya" );
//----------------shader_for_test begin---;
ei_shader("maya_surfaceShader", "liquid_shader_for_test");
ei_shader_param_vector("outColor",1,0,0);
ei_end_shader();
ei_material("liquid_material_for_test");
ei_surface_shader("liquid_shader_for_test");
ei_end_material();
//----------------shader_for_test end ---;
//    Generated by Liquid v2.3.5 (buildtime=20:51:12.30);
//    Scene : R:/MyDocuments/maya/projects/default/three_boxes;
//    User  : yaoyansi;

//############################### option #;
ei_options("cameraShape1_option");
ei_contrast(0.01);
ei_samples(0,16);
ei_filter(4,3);
//transform motion=0, deform motion=0;
ei_motion(0);
ei_trace_depth(4,4,4,4,4,4);
ei_displace(0);
ei_face(3);
ei_end_options();
// maya settings: focal=35, aperture = 32, aspect=1.33333;
//Depth of Field on camera "|camera1|cameraShape1" is turned off in Maya;

//############################### camera #;
ei_camera("|camera1|cameraShape1_object");
//beauty channel;
ei_output("R:/MyDocuments/maya/projects/default/rmanpix/three_boxes.cameraShape1.1.elvishray.bmp","bmp",1);
//mode=rgb;
ei_output_variable("color",11);
ei_end_output();
// AOV;
// AOV end;
ei_focal(35);
ei_aperture(32);
ei_aspect(1.33333);
ei_resolution(200,150);
ei_clip(0.01,10000);
ei_end_camera();
//----------------------------------;
ei_instance("|camera1|cameraShape1");
ei_element("|camera1|cameraShape1_object");
ei_transform(1,0,0,0,   0,1,0,0,   0,0,1,0,   0,0,20.2125,1);
ei_end_instance();
//;
ei_shader("maya_lambert_transparent", "lambert1");
ei_shader_param_vector("Cs", 0, 0.00300002, 0.5);
ei_shader_param_vector("transparency", 0, 0, 0);
ei_shader_param_vector("ambientColor", 0, 0, 0);
ei_shader_param_vector("incandescence", 0, 0, 0);
ei_shader_param_scalar("diffusion", 0.8);
ei_shader_param_vector("outColor", 0, 0, 0);
ei_shader_param_vector("outTransparency", 0, 0, 0);
ei_end_shader();

ei_material("initialShadingGroup");
ei_surface_shader("lambert1");
ei_end_material();
ei_shader("maya_lambert_transparent", "lambert3");
ei_shader_param_vector("Cs", 0.5, 0.24725, 0);
ei_shader_param_vector("transparency", 0, 0, 0);
ei_shader_param_vector("ambientColor", 0, 0, 0);
ei_shader_param_vector("incandescence", 0, 0, 0);
ei_shader_param_scalar("diffusion", 0.8);
ei_shader_param_vector("outColor", 0, 0, 0);
ei_shader_param_vector("outTransparency", 0, 0, 0);
ei_end_shader();

ei_material("lambert3SG");
ei_surface_shader("lambert3");
ei_end_material();
ei_shader("maya_lambert_transparent", "lambert4");
ei_shader_param_vector("Cs", 0, 0.5, 0.0157501);
ei_shader_param_vector("transparency", 0, 0, 0);
ei_shader_param_vector("ambientColor", 0, 0, 0);
ei_shader_param_vector("incandescence", 0, 0, 0);
ei_shader_param_scalar("diffusion", 0.8);
ei_shader_param_vector("outColor", 0, 0, 0);
ei_shader_param_vector("outTransparency", 0, 0, 0);
ei_end_shader();

ei_material("lambert4SG");
ei_surface_shader("lambert4");
ei_end_material();

//worldPrologue;

// Renderer::exportLight("_pointLight1_pointLightShape1");;

// Renderer::exportPointLight();
ei_shader("pointlight", "|pointLight1|pointLightShape1_shader");
ei_shader_param_vector("lightcolor",1,1,1);
ei_shader_param_scalar("intensity",1);
ei_end_shader();
ei_light("|pointLight1|pointLightShape1_object");
ei_light_shader("|pointLight1|pointLightShape1_shader" );
ei_origin(0,0,0);
ei_end_light();
ei_instance("|pointLight1|pointLightShape1");
ei_element("|pointLight1|pointLightShape1_object");
ei_transform(1,0,0,0,   0,1,0,0,   0,0,1,0,   -3.2215,3.88361,7,1);
{;
eiInt tag = 0;
ei_declare("|pCube1_lightgroup",0,4, &tag);
ei_declare("|pCube3_lightgroup",0,4, &tag);
};
ei_end_instance();

// Renderer::exportLight("_pointLight2_pointLightShape2");;

// Renderer::exportPointLight();
ei_shader("pointlight", "|pointLight2|pointLightShape2_shader");
ei_shader_param_vector("lightcolor",1,1,1);
ei_shader_param_scalar("intensity",1);
ei_end_shader();
ei_light("|pointLight2|pointLightShape2_object");
ei_light_shader("|pointLight2|pointLightShape2_shader" );
ei_origin(0,0,0);
ei_end_light();
ei_instance("|pointLight2|pointLightShape2");
ei_element("|pointLight2|pointLightShape2_object");
ei_transform(1,0,0,0,   0,1,0,0,   0,0,1,0,   3.96105,0,7.93838,1);
{;
eiInt tag = 0;
ei_declare("|pCube2_lightgroup",0,4, &tag);
ei_declare("|pCube3_lightgroup",0,4, &tag);
};
ei_end_instance();

// Renderer::exportOneGeometry_Mesh(|pCube1|pCubeShape1,0,0);

//############################### mesh #;
//shape full path name=|pCube1|pCubeShape1;
ei_object("poly","|pCube1|pCubeShape1");
{;
eiTag tag;
//### vertex positions, fnMesh.numVertices()=8;
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_pos_list(tag);
ei_tab_add_vector(-6.41789,-2.94955,4.29563);
ei_tab_add_vector(6.41789,-2.94955,4.29563);
ei_tab_add_vector(-6.41789,2.94955,4.29563);
ei_tab_add_vector(-6.41789,2.94955,4.29563);
ei_tab_add_vector(6.41789,-2.94955,4.29563);
ei_tab_add_vector(6.41789,2.94955,4.29563);
ei_tab_add_vector(-6.41789,2.94955,4.29563);
ei_tab_add_vector(6.41789,2.94955,4.29563);
ei_tab_add_vector(-6.41789,2.94955,-4.29563);
ei_tab_add_vector(-6.41789,2.94955,-4.29563);
ei_tab_add_vector(6.41789,2.94955,4.29563);
ei_tab_add_vector(6.41789,2.94955,-4.29563);
ei_tab_add_vector(-6.41789,2.94955,-4.29563);
ei_tab_add_vector(6.41789,2.94955,-4.29563);
ei_tab_add_vector(-6.41789,-2.94955,-4.29563);
ei_tab_add_vector(-6.41789,-2.94955,-4.29563);
ei_tab_add_vector(6.41789,2.94955,-4.29563);
ei_tab_add_vector(6.41789,-2.94955,-4.29563);
ei_tab_add_vector(-6.41789,-2.94955,-4.29563);
ei_tab_add_vector(6.41789,-2.94955,-4.29563);
ei_tab_add_vector(-6.41789,-2.94955,4.29563);
ei_tab_add_vector(-6.41789,-2.94955,4.29563);
ei_tab_add_vector(6.41789,-2.94955,-4.29563);
ei_tab_add_vector(6.41789,-2.94955,4.29563);
ei_tab_add_vector(6.41789,-2.94955,4.29563);
ei_tab_add_vector(6.41789,-2.94955,-4.29563);
ei_tab_add_vector(6.41789,2.94955,4.29563);
ei_tab_add_vector(6.41789,2.94955,4.29563);
ei_tab_add_vector(6.41789,-2.94955,-4.29563);
ei_tab_add_vector(6.41789,2.94955,-4.29563);
ei_tab_add_vector(-6.41789,-2.94955,-4.29563);
ei_tab_add_vector(-6.41789,-2.94955,4.29563);
ei_tab_add_vector(-6.41789,2.94955,-4.29563);
ei_tab_add_vector(-6.41789,2.94955,-4.29563);
ei_tab_add_vector(-6.41789,-2.94955,4.29563);
ei_tab_add_vector(-6.41789,2.94955,4.29563);
ei_end_tab();
//### N ###;
//numNormals != numPoints, ER doesn't support this case now;
//### N ### end;
//### UV(map1), size=14;
//# numUVSets(1;
//# uvsetNames[0]=map1;
//# uvsetFamilyNames[0]=map1;
tag = eiNULL_TAG;
ei_declare("uv",2,6, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2(0.375,0);
ei_tab_add_vector2(0.625,0);
ei_tab_add_vector2(0.375,0.25);
ei_tab_add_vector2(0.375,0.25);
ei_tab_add_vector2(0.625,0);
ei_tab_add_vector2(0.625,0.25);
ei_tab_add_vector2(0.375,0.25);
ei_tab_add_vector2(0.625,0.25);
ei_tab_add_vector2(0.375,0.5);
ei_tab_add_vector2(0.375,0.5);
ei_tab_add_vector2(0.625,0.25);
ei_tab_add_vector2(0.625,0.5);
ei_tab_add_vector2(0.375,0.5);
ei_tab_add_vector2(0.625,0.5);
ei_tab_add_vector2(0.375,0.75);
ei_tab_add_vector2(0.375,0.75);
ei_tab_add_vector2(0.625,0.5);
ei_tab_add_vector2(0.625,0.75);
ei_tab_add_vector2(0.375,0.75);
ei_tab_add_vector2(0.625,0.75);
ei_tab_add_vector2(0.375,1);
ei_tab_add_vector2(0.375,1);
ei_tab_add_vector2(0.625,0.75);
ei_tab_add_vector2(0.625,1);
ei_tab_add_vector2(0.625,0);
ei_tab_add_vector2(0.875,0);
ei_tab_add_vector2(0.625,0.25);
ei_tab_add_vector2(0.625,0.25);
ei_tab_add_vector2(0.875,0);
ei_tab_add_vector2(0.875,0.25);
ei_tab_add_vector2(0.125,0);
ei_tab_add_vector2(0.375,0);
ei_tab_add_vector2(0.125,0.25);
ei_tab_add_vector2(0.125,0.25);
ei_tab_add_vector2(0.375,0);
ei_tab_add_vector2(0.375,0.25);
ei_end_tab();
//### triangles, size=36;
tag = ei_tab(EI_TYPE_INDEX, 1024);
ei_triangle_list(tag);
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|pCube1|pCubeShape1;
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|pCube2|pCubeShape2,0,0);

//############################### mesh #;
//shape full path name=|pCube2|pCubeShape2;
ei_object("poly","|pCube2|pCubeShape2");
{;
eiTag tag;
//### vertex positions, fnMesh.numVertices()=8;
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_pos_list(tag);
ei_tab_add_vector(-1.94857,-4.48075,2.49472);
ei_tab_add_vector(1.94857,-4.48075,2.49472);
ei_tab_add_vector(-1.94857,4.48075,2.49472);
ei_tab_add_vector(-1.94857,4.48075,2.49472);
ei_tab_add_vector(1.94857,-4.48075,2.49472);
ei_tab_add_vector(1.94857,4.48075,2.49472);
ei_tab_add_vector(-1.94857,4.48075,2.49472);
ei_tab_add_vector(1.94857,4.48075,2.49472);
ei_tab_add_vector(-1.94857,4.48075,-2.49472);
ei_tab_add_vector(-1.94857,4.48075,-2.49472);
ei_tab_add_vector(1.94857,4.48075,2.49472);
ei_tab_add_vector(1.94857,4.48075,-2.49472);
ei_tab_add_vector(-1.94857,4.48075,-2.49472);
ei_tab_add_vector(1.94857,4.48075,-2.49472);
ei_tab_add_vector(-1.94857,-4.48075,-2.49472);
ei_tab_add_vector(-1.94857,-4.48075,-2.49472);
ei_tab_add_vector(1.94857,4.48075,-2.49472);
ei_tab_add_vector(1.94857,-4.48075,-2.49472);
ei_tab_add_vector(-1.94857,-4.48075,-2.49472);
ei_tab_add_vector(1.94857,-4.48075,-2.49472);
ei_tab_add_vector(-1.94857,-4.48075,2.49472);
ei_tab_add_vector(-1.94857,-4.48075,2.49472);
ei_tab_add_vector(1.94857,-4.48075,-2.49472);
ei_tab_add_vector(1.94857,-4.48075,2.49472);
ei_tab_add_vector(1.94857,-4.48075,2.49472);
ei_tab_add_vector(1.94857,-4.48075,-2.49472);
ei_tab_add_vector(1.94857,4.48075,2.49472);
ei_tab_add_vector(1.94857,4.48075,2.49472);
ei_tab_add_vector(1.94857,-4.48075,-2.49472);
ei_tab_add_vector(1.94857,4.48075,-2.49472);
ei_tab_add_vector(-1.94857,-4.48075,-2.49472);
ei_tab_add_vector(-1.94857,-4.48075,2.49472);
ei_tab_add_vector(-1.94857,4.48075,-2.49472);
ei_tab_add_vector(-1.94857,4.48075,-2.49472);
ei_tab_add_vector(-1.94857,-4.48075,2.49472);
ei_tab_add_vector(-1.94857,4.48075,2.49472);
ei_end_tab();
//### N ###;
//numNormals != numPoints, ER doesn't support this case now;
//### N ### end;
//### UV(map1), size=14;
//# numUVSets(1;
//# uvsetNames[0]=map1;
//# uvsetFamilyNames[0]=map1;
tag = eiNULL_TAG;
ei_declare("uv",2,6, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2(0.375,0);
ei_tab_add_vector2(0.625,0);
ei_tab_add_vector2(0.375,0.25);
ei_tab_add_vector2(0.375,0.25);
ei_tab_add_vector2(0.625,0);
ei_tab_add_vector2(0.625,0.25);
ei_tab_add_vector2(0.375,0.25);
ei_tab_add_vector2(0.625,0.25);
ei_tab_add_vector2(0.375,0.5);
ei_tab_add_vector2(0.375,0.5);
ei_tab_add_vector2(0.625,0.25);
ei_tab_add_vector2(0.625,0.5);
ei_tab_add_vector2(0.375,0.5);
ei_tab_add_vector2(0.625,0.5);
ei_tab_add_vector2(0.375,0.75);
ei_tab_add_vector2(0.375,0.75);
ei_tab_add_vector2(0.625,0.5);
ei_tab_add_vector2(0.625,0.75);
ei_tab_add_vector2(0.375,0.75);
ei_tab_add_vector2(0.625,0.75);
ei_tab_add_vector2(0.375,1);
ei_tab_add_vector2(0.375,1);
ei_tab_add_vector2(0.625,0.75);
ei_tab_add_vector2(0.625,1);
ei_tab_add_vector2(0.625,0);
ei_tab_add_vector2(0.875,0);
ei_tab_add_vector2(0.625,0.25);
ei_tab_add_vector2(0.625,0.25);
ei_tab_add_vector2(0.875,0);
ei_tab_add_vector2(0.875,0.25);
ei_tab_add_vector2(0.125,0);
ei_tab_add_vector2(0.375,0);
ei_tab_add_vector2(0.125,0.25);
ei_tab_add_vector2(0.125,0.25);
ei_tab_add_vector2(0.375,0);
ei_tab_add_vector2(0.375,0.25);
ei_end_tab();
//### triangles, size=36;
tag = ei_tab(EI_TYPE_INDEX, 1024);
ei_triangle_list(tag);
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|pCube2|pCubeShape2;
ei_end_object();

// Renderer::exportOneGeometry_Mesh(|pCube3|pCubeShape3,0,0);

//############################### mesh #;
//shape full path name=|pCube3|pCubeShape3;
ei_object("poly","|pCube3|pCubeShape3");
{;
eiTag tag;
//### vertex positions, fnMesh.numVertices()=8;
tag = ei_tab(EI_TYPE_VECTOR, 1024);
ei_pos_list(tag);
ei_tab_add_vector(-2.99374,-5.25365,3.17741);
ei_tab_add_vector(2.99374,-5.25365,3.17741);
ei_tab_add_vector(-2.99374,5.25365,3.17741);
ei_tab_add_vector(-2.99374,5.25365,3.17741);
ei_tab_add_vector(2.99374,-5.25365,3.17741);
ei_tab_add_vector(2.99374,5.25365,3.17741);
ei_tab_add_vector(-2.99374,5.25365,3.17741);
ei_tab_add_vector(2.99374,5.25365,3.17741);
ei_tab_add_vector(-2.99374,5.25365,-3.17741);
ei_tab_add_vector(-2.99374,5.25365,-3.17741);
ei_tab_add_vector(2.99374,5.25365,3.17741);
ei_tab_add_vector(2.99374,5.25365,-3.17741);
ei_tab_add_vector(-2.99374,5.25365,-3.17741);
ei_tab_add_vector(2.99374,5.25365,-3.17741);
ei_tab_add_vector(-2.99374,-5.25365,-3.17741);
ei_tab_add_vector(-2.99374,-5.25365,-3.17741);
ei_tab_add_vector(2.99374,5.25365,-3.17741);
ei_tab_add_vector(2.99374,-5.25365,-3.17741);
ei_tab_add_vector(-2.99374,-5.25365,-3.17741);
ei_tab_add_vector(2.99374,-5.25365,-3.17741);
ei_tab_add_vector(-2.99374,-5.25365,3.17741);
ei_tab_add_vector(-2.99374,-5.25365,3.17741);
ei_tab_add_vector(2.99374,-5.25365,-3.17741);
ei_tab_add_vector(2.99374,-5.25365,3.17741);
ei_tab_add_vector(2.99374,-5.25365,3.17741);
ei_tab_add_vector(2.99374,-5.25365,-3.17741);
ei_tab_add_vector(2.99374,5.25365,3.17741);
ei_tab_add_vector(2.99374,5.25365,3.17741);
ei_tab_add_vector(2.99374,-5.25365,-3.17741);
ei_tab_add_vector(2.99374,5.25365,-3.17741);
ei_tab_add_vector(-2.99374,-5.25365,-3.17741);
ei_tab_add_vector(-2.99374,-5.25365,3.17741);
ei_tab_add_vector(-2.99374,5.25365,-3.17741);
ei_tab_add_vector(-2.99374,5.25365,-3.17741);
ei_tab_add_vector(-2.99374,-5.25365,3.17741);
ei_tab_add_vector(-2.99374,5.25365,3.17741);
ei_end_tab();
//### N ###;
//numNormals != numPoints, ER doesn't support this case now;
//### N ### end;
//### UV(map1), size=14;
//# numUVSets(1;
//# uvsetNames[0]=map1;
//# uvsetFamilyNames[0]=map1;
tag = eiNULL_TAG;
ei_declare("uv",2,6, &tag);
tag = ei_tab(EI_TYPE_VECTOR2, 1024);
ei_variable("uv", &tag);
ei_tab_add_vector2(0.375,0);
ei_tab_add_vector2(0.625,0);
ei_tab_add_vector2(0.375,0.25);
ei_tab_add_vector2(0.375,0.25);
ei_tab_add_vector2(0.625,0);
ei_tab_add_vector2(0.625,0.25);
ei_tab_add_vector2(0.375,0.25);
ei_tab_add_vector2(0.625,0.25);
ei_tab_add_vector2(0.375,0.5);
ei_tab_add_vector2(0.375,0.5);
ei_tab_add_vector2(0.625,0.25);
ei_tab_add_vector2(0.625,0.5);
ei_tab_add_vector2(0.375,0.5);
ei_tab_add_vector2(0.625,0.5);
ei_tab_add_vector2(0.375,0.75);
ei_tab_add_vector2(0.375,0.75);
ei_tab_add_vector2(0.625,0.5);
ei_tab_add_vector2(0.625,0.75);
ei_tab_add_vector2(0.375,0.75);
ei_tab_add_vector2(0.625,0.75);
ei_tab_add_vector2(0.375,1);
ei_tab_add_vector2(0.375,1);
ei_tab_add_vector2(0.625,0.75);
ei_tab_add_vector2(0.625,1);
ei_tab_add_vector2(0.625,0);
ei_tab_add_vector2(0.875,0);
ei_tab_add_vector2(0.625,0.25);
ei_tab_add_vector2(0.625,0.25);
ei_tab_add_vector2(0.875,0);
ei_tab_add_vector2(0.875,0.25);
ei_tab_add_vector2(0.125,0);
ei_tab_add_vector2(0.375,0);
ei_tab_add_vector2(0.125,0.25);
ei_tab_add_vector2(0.125,0.25);
ei_tab_add_vector2(0.375,0);
ei_tab_add_vector2(0.375,0.25);
ei_end_tab();
//### triangles, size=36;
tag = ei_tab(EI_TYPE_INDEX, 1024);
ei_triangle_list(tag);
ei_tab_add_index(0);
ei_tab_add_index(1);
ei_tab_add_index(2);
ei_tab_add_index(3);
ei_tab_add_index(4);
ei_tab_add_index(5);
ei_tab_add_index(6);
ei_tab_add_index(7);
ei_tab_add_index(8);
ei_tab_add_index(9);
ei_tab_add_index(10);
ei_tab_add_index(11);
ei_tab_add_index(12);
ei_tab_add_index(13);
ei_tab_add_index(14);
ei_tab_add_index(15);
ei_tab_add_index(16);
ei_tab_add_index(17);
ei_tab_add_index(18);
ei_tab_add_index(19);
ei_tab_add_index(20);
ei_tab_add_index(21);
ei_tab_add_index(22);
ei_tab_add_index(23);
ei_tab_add_index(24);
ei_tab_add_index(25);
ei_tab_add_index(26);
ei_tab_add_index(27);
ei_tab_add_index(28);
ei_tab_add_index(29);
ei_tab_add_index(30);
ei_tab_add_index(31);
ei_tab_add_index(32);
ei_tab_add_index(33);
ei_tab_add_index(34);
ei_tab_add_index(35);
ei_end_tab();
}//|pCube3|pCubeShape3;
ei_end_object();
//--------------------------;
//ribNode->name=|pCube1|pCubeShape1;
//ribNode's transform node=|pCube1;
//ribNode->object(0)->getDataPtr()->getFullPathName()=|pCube1|pCubeShape1;
ei_instance("|pCube1");
ei_mtl("initialShadingGroup");
//shape name=|pCube1|pCubeShape1;
//shape full path name=|pCube1|pCubeShape1;
ei_element("|pCube1|pCubeShape1");
ei_transform(1,0,0,0,   0,1,0,0,   0,0,1,0,   0,0,0,1);
//ribNode->doDef=205, ribNode->doMotion=205;
ei_motion(1);
{//light group(light-link group);
const char *tag = NULL;
ei_declare("lightgroup",0,1, &tag);
tag = ei_token("|pCube1_lightgroup");;
ei_variable("lightgroup", &tag);
};
ei_end_instance();
//;
//--------------------------;
//ribNode->name=|pCube2|pCubeShape2;
//ribNode's transform node=|pCube2;
//ribNode->object(0)->getDataPtr()->getFullPathName()=|pCube2|pCubeShape2;
ei_instance("|pCube2");
ei_mtl("lambert3SG");
//shape name=|pCube2|pCubeShape2;
//shape full path name=|pCube2|pCubeShape2;
ei_element("|pCube2|pCubeShape2");
ei_transform(5.51642,0,0,0,   0,1,0,0,   0,0,1,0,   4.1177,4.48075,-0.309225,1);
//ribNode->doDef=205, ribNode->doMotion=205;
ei_motion(1);
{//light group(light-link group);
const char *tag = NULL;
ei_declare("lightgroup",0,1, &tag);
tag = ei_token("|pCube2_lightgroup");;
ei_variable("lightgroup", &tag);
};
ei_end_instance();
//;
//--------------------------;
//ribNode->name=|pCube3|pCubeShape3;
//ribNode's transform node=|pCube3;
//ribNode->object(0)->getDataPtr()->getFullPathName()=|pCube3|pCubeShape3;
ei_instance("|pCube3");
ei_mtl("lambert4SG");
//shape name=|pCube3|pCubeShape3;
//shape full path name=|pCube3|pCubeShape3;
ei_element("|pCube3|pCubeShape3");
ei_transform(1,0,0,0,   0,1,0,0,   0,0,1,0,   1.56327,5.25365,2.98931,1);
//ribNode->doDef=205, ribNode->doMotion=205;
ei_motion(1);
{//light group(light-link group);
const char *tag = NULL;
ei_declare("lightgroup",0,1, &tag);
tag = ei_token("|pCube3_lightgroup");;
ei_variable("lightgroup", &tag);
};
ei_end_instance();
//;

//Renderer::worldEpilogue();
ei_instgroup("cameraShape1");
//camera;
ei_add_instance("|camera1|cameraShape1");
//light(s);
ei_add_instance("|pointLight1|pointLightShape1");
ei_add_instance("|pointLight2|pointLightShape2");
//mesh(s);
ei_add_instance("|pCube1");
ei_add_instance("|pCube2");
ei_add_instance("|pCube3");
ei_end_instgroup( );
// in batch render mode;
ei_render("cameraShape1", "|camera1|cameraShape1", "cameraShape1_option");
ei_end_context();
