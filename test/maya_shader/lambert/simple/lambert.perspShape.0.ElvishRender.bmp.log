  >1 liqRibTranslator::doIt()-->if(checkSettings()==true)
    >2 RendererMgr::setFactory(ElvishRender)
    >2 RendererMgr::install()
      >3 Renderer::Renderer()
      >3 ShaderMgr::setValidConnection()
      >3 ShaderMgr::getShaderConnectionMap()
    >2 RendererMgr::prologue()
    >2 Renderer::openLog(R:/MyDocuments/maya/projects/default/rib/lambert.perspShape.6.ElvishRender.bmp)
      >3 OutputMgr::setOutputImagePath(R:/MyDocuments/maya/projects/default/rib/lambert.perspShape.6.ElvishRender.bmp)
      >3 OutputMgr::add(0)
      >3 OutputMgr::add(1)
      >3 OutputMgr::add(2)
      >3 OutputMgr::init()
        >4 OutputMgr::createOutput(0)
          >5 OutputBase::OutputBase()
          >5 OutputCall::OutputCall()
        >4 OutputMgr::createOutput(1)
          >5 OutputBase::OutputBase()
          >5 OutputESS::OutputESS(R:/MyDocuments/maya/projects/default/rib/lambert.perspShape.6.ElvishRender.bmp)
        >4 OutputMgr::createOutput(2)
          >5 OutputBase::OutputBase()
          >5 OutputESA::OutputESA(R:/MyDocuments/maya/projects/default/rib/lambert.perspShape.6.ElvishRender.bmp)
        >4 OutputCall::init()
        >4 OutputESS::init()
        >4 OutputESA::init()
    >2 Renderer::canExport()
    >2 liqRibTranslatorNew::_doItNew(args,defaultRenderLayer)
      >3 liqRibTranslatorNew::_doItNewWithoutRenderScript(arg,defaultRenderLayer)
        >4 liqRibTranslator::verifyOutputDirectories()
          >5 liqRibTranslator::verifyResourceDir(RIB, rib, 0)
          >5 liqRibTranslator::verifyResourceDir(Texture, rmantex, 0)
          >5 liqRibTranslator::verifyResourceDir(Picture, rmanpix/, 0)
          >5 liqRibTranslator::verifyResourceDir(Temp Files, rmantmp/, 0)
        >4 liqRibTranslator::generateRenderScriptName()
        >4 liqRibTranslator::generateTempMayaSceneName()
        >4 tFrameScriptJobMgr::setCommonParameters(lambertFrame0)
        >4 liqRibTranslatorNew::processOneFrame(0, liqglo__)
          >5 liqRibTranslatorNew::buildJobs__()
            >6 liqRibTranslatorNew::buildShadowJobs__()
              >7 tLightMgr::buildShadowJob(thisJob___, 0)
              >7 tLightMgr::buildShadowCameraJob(thisJob___, 0)
            >6 tRibCameraMgr::gatherDataForJob(liqglo___, ,jobList__,0,1)
            >6 liqRibTranslator::generateFileName(4,perspShape)
            >6 liqRibTranslator::generateFileName(5,perspShape)
              >7 liqRibTranslator::generateImageName(, job(perspShape)), 
          >5 liqRibTranslatorNew::calaculateSamplingTime(6)
          >5 liqRibTranslatorNew::scanScene__(6,0)
            >6 tLightMgr::scanScene(6,0, htable__, count, returnStatus__)
              >7 liqRibHT::insert(|pointLight1|pointLightShape1,lframe,0,3,0,matrix,,-1)
                >8 liqRibHT::hash(|pointLight1|pointLightShape1,0)
                >8 liqRibHT::find(|pointLight1|pointLightShape1,|pointLight1|pointLightShape1,3)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pointLight1|pointLightShape1,0,3,-1)
                  >9 liqRibNode::parseVectorAttributes(pointLight1,,2)
                  >9 liqRibNode::parseVectorAttributes(pointLight1,,3)
                  >9 liqRibNode::parseVectorAttributes(pointLight1,,4)
                  >9 liqRibNode::findShadingGroup(|pointLight1|pointLightShape1,3)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pointLight1|pointLightShape1,3)
                    >10 liqRibLightData::liqRibLightData(|pointLight1|pointLightShape1)
                      >11 liqRibData::addAdditionalSurfaceParameters(pointLightShape1)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 tLocatorMgr::scanScene(6,0,htable__,count__,returnStatus__)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
              >7 liqRibHT::insert(|persp|perspShape,lframe,0,0,1,matrix,,-1)
                >8 liqRibHT::hash(|persp|perspShape,1)
                >8 liqRibHT::find(|persp|perspShape,|persp|perspShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|persp|perspShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(persp,,2)
                  >9 liqRibNode::parseVectorAttributes(persp,,3)
                  >9 liqRibNode::parseVectorAttributes(persp,,4)
                  >9 liqRibNode::findShadingGroup(|persp|perspShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|persp|perspShape,0)
                    >10 liqRibCameraData::liqRibCameraData(|persp|perspShape)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
              >7 liqRibHT::insert(|top|topShape,lframe,0,0,2,matrix,,-1)
                >8 liqRibHT::hash(|top|topShape,2)
                >8 liqRibHT::find(|top|topShape,|top|topShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|top|topShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(top,,2)
                  >9 liqRibNode::parseVectorAttributes(top,,3)
                  >9 liqRibNode::parseVectorAttributes(top,,4)
                  >9 liqRibNode::findShadingGroup(|top|topShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|top|topShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
              >7 liqRibHT::insert(|front|frontShape,lframe,0,0,3,matrix,,-1)
                >8 liqRibHT::hash(|front|frontShape,3)
                >8 liqRibHT::find(|front|frontShape,|front|frontShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|front|frontShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(front,,2)
                  >9 liqRibNode::parseVectorAttributes(front,,3)
                  >9 liqRibNode::parseVectorAttributes(front,,4)
                  >9 liqRibNode::findShadingGroup(|front|frontShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|front|frontShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
              >7 liqRibHT::insert(|side|sideShape,lframe,0,0,4,matrix,,-1)
                >8 liqRibHT::hash(|side|sideShape,4)
                >8 liqRibHT::find(|side|sideShape,|side|sideShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|side|sideShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(side,,2)
                  >9 liqRibNode::parseVectorAttributes(side,,3)
                  >9 liqRibNode::parseVectorAttributes(side,,4)
                  >9 liqRibNode::findShadingGroup(|side|sideShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|side|sideShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
              >7 liqRibHT::insert(|pPlane2|pPlaneShape2,lframe,0,0,5,matrix,,-1)
                >8 liqRibHT::hash(|pPlane2|pPlaneShape2,5)
                >8 liqRibHT::find(|pPlane2|pPlaneShape2,|pPlane2|pPlaneShape2,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pPlane2|pPlaneShape2,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(pPlane2,,2)
                  >9 liqRibNode::parseVectorAttributes(pPlane2,,3)
                  >9 liqRibNode::parseVectorAttributes(pPlane2,,4)
                  >9 liqRibNode::findShadingGroup(|pPlane2|pPlaneShape2,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getColor(&shader,&color)
                  >9 liqRibNode::getOpacity(&shader,&color)
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pPlane2|pPlaneShape2,0)
                    >10 liqRibMeshData::liqRibMeshData(|pPlane2|pPlaneShape2)
                      >11 liqRibData::addAdditionalSurfaceParameters(pPlaneShape2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
              >7 liqRibHT::insert(|pCube2|pCubeShape2,lframe,0,0,6,matrix,,-1)
                >8 liqRibHT::hash(|pCube2|pCubeShape2,6)
                >8 liqRibHT::find(|pCube2|pCubeShape2,|pCube2|pCubeShape2,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pCube2|pCubeShape2,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(pCube2,,2)
                  >9 liqRibNode::parseVectorAttributes(pCube2,,3)
                  >9 liqRibNode::parseVectorAttributes(pCube2,,4)
                  >9 liqRibNode::findShadingGroup(|pCube2|pCubeShape2,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getColor(&shader,&color)
                  >9 liqRibNode::getOpacity(&shader,&color)
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pCube2|pCubeShape2,0)
                    >10 liqRibMeshData::liqRibMeshData(|pCube2|pCubeShape2)
                      >11 liqRibData::addAdditionalSurfaceParameters(pCubeShape2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
              >7 liqRibHT::insert(|pPlane3|pPlaneShape3,lframe,0,0,7,matrix,,-1)
                >8 liqRibHT::hash(|pPlane3|pPlaneShape3,7)
                >8 liqRibHT::find(|pPlane3|pPlaneShape3,|pPlane3|pPlaneShape3,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pPlane3|pPlaneShape3,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(pPlane3,,2)
                  >9 liqRibNode::parseVectorAttributes(pPlane3,,3)
                  >9 liqRibNode::parseVectorAttributes(pPlane3,,4)
                  >9 liqRibNode::findShadingGroup(|pPlane3|pPlaneShape3,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getColor(&shader,&color)
                  >9 liqRibNode::getOpacity(&shader,&color)
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pPlane3|pPlaneShape3,0)
                    >10 liqRibMeshData::liqRibMeshData(|pPlane3|pPlaneShape3)
                      >11 liqRibData::addAdditionalSurfaceParameters(pPlaneShape3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
              >7 liqRibHT::insert(|pPlane4|pPlaneShape4,lframe,0,0,8,matrix,,-1)
                >8 liqRibHT::hash(|pPlane4|pPlaneShape4,8)
                >8 liqRibHT::find(|pPlane4|pPlaneShape4,|pPlane4|pPlaneShape4,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pPlane4|pPlaneShape4,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(pPlane4,,2)
                  >9 liqRibNode::parseVectorAttributes(pPlane4,,3)
                  >9 liqRibNode::parseVectorAttributes(pPlane4,,4)
                  >9 liqRibNode::findShadingGroup(|pPlane4|pPlaneShape4,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getColor(&shader,&color)
                  >9 liqRibNode::getOpacity(&shader,&color)
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pPlane4|pPlaneShape4,0)
                    >10 liqRibMeshData::liqRibMeshData(|pPlane4|pPlaneShape4)
                      >11 liqRibData::addAdditionalSurfaceParameters(pPlaneShape4)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 liqRibTranslatorNew::dealwithParticleInstancedObjects(0,6,9)
            >6 tCameraMgr::getCameraData(perspShape,0)
              >7 tCameraMgr::getCameraInfo(|persp|perspShape,)
                >8 tCameraMgr::portFieldOfView(200,150,&horizontal,&vertical,&fnCamera)
                  >9 tCameraMgr::computeViewingFrustum(1.33333,,&left,&right,&bottom,&top,|persp|perspShape)
              >7 tCameraMgr::getCameraFilmOffset(|persp|perspShape,)
              >7 tCameraMgr::getCameraTransform(|persp|perspShape,)
          >5 liqRibTranslatorNew::doTextures(size=0)
            >6 Renderer::frameEpilogue(txtList_.size=0)
          >5 liqRibTranslatorNew::doShadows(size=0)
            >6 Renderer::doShadows(shadowList_.size=0)
          >5 Renderer::setRenderScriptFormatAndCompress(0,0)
          >5 Renderer::isHeroPassReady(perspShape)
          >5 Renderer::HeroPassBegin(perspShape)
          >5 tHeroRibWriterMgr::write(liqglo___,perspShape,6,0)
            >6 liqRibTranslatorNew::ribPrologue__(perspShape)
              >7 Renderer::ribPrologue_begin(perspShape)
                >8 Renderer::dummyPhongShader()
              >7 Renderer::ribPrologue_comment(2.3.5,R:/MyDocuments/maya/projects/default/lambert,yaoyansi,time)
              >7 Renderer::ribPrologue_options(perspShape)
            >6 liqRibTranslatorNew::framePrologue__(6,perspShape)
              >7 Renderer::framePrologue(6,perspShape)
            >6 ShaderMgr::exportShaderGraph()
              >7 ConvertShadingNetwork::exportShaderGraph()
                >8 ConvertShadingNetwork::beforeExport()
                >8 ConvertShadingNetwork::__export()
                  >9 ConvertShadingNetwork::canShadingGroupExported(lambert3SG)
                  >9 Renderer::getValidShaderPlugsInShadingGroup()
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(lambert3SG,surfaceShader)
                    >10 ConvertShadingNetwork::exportShaderNodeInPlug(lambert3SG,surfaceShader)
                      >11 ConvertShadingNetwork::_exportShaderNodeInPlug(lambert3SG,surfaceShader)
                        >12 ConvertShadingNetwork::exportShaderNode(lambert5)
                          >13 ConvertShadingNetwork::canShaderExported(lambert5)
                          >13 ConvertShadingNetwork::exportShaderBegin(lambert5)
                          >13 ConvertShadingNetwork::convertShadingNetworkToRSL(lambert5,surfaceShader)
                            >14 Visitor::initShaderData(lambert5,surfaceShader)
                            >14 ConvertShadingNetwork::getUpstreamConvertibleNodes(lambert5, nodes, numConnections)
                              >15 ConvertShadingNetwork::nodeIsConvertible(lambert5)
                                >16 ShaderMgr::hasShaderType(lambert)
                              >15 ShaderMgr::getValidConnection(lambert5)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert5.colorR)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert5.colorR)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert5.colorG)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert5.colorG)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert5.colorB)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert5.colorB)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert5.color)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert5.color)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert5.transparencyR)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert5.transparencyR)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert5.transparencyG)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert5.transparencyG)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert5.transparencyB)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert5.transparencyB)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert5.transparency)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert5.transparency)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert5.ambientColorR)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert5.ambientColorR)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert5.ambientColorG)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert5.ambientColorG)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert5.ambientColorB)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert5.ambientColorB)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert5.ambientColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert5.ambientColor)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert5.incandescenceR)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert5.incandescenceR)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert5.incandescenceG)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert5.incandescenceG)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert5.incandescenceB)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert5.incandescenceB)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert5.incandescence)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert5.incandescence)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert5.normalCameraX)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert5.normalCameraX)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert5.normalCameraY)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert5.normalCameraY)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert5.normalCameraZ)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert5.normalCameraZ)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert5.normalCamera)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert5.normalCamera)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert5.diffuse)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert5.diffuse)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert5.translucence)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert5.translucence)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert5.translucenceDepth)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert5.translucenceDepth)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert5.translucenceFocus)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert5.translucenceFocus)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert5.outColorR)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert5.outColorR)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert5.outColorG)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert5.outColorG)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert5.outColorB)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert5.outColorB)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert5.outColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert5.outColor)
                                >16 ConvertShadingNetwork::nodeIsConvertible(lambert3SG)
                                  >17 ShaderMgr::hasShaderType(shadingEngine)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert5.outTransparencyR)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert5.outTransparencyR)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert5.outTransparencyG)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert5.outTransparencyG)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert5.outTransparencyB)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert5.outTransparencyB)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert5.outTransparency)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert5.outTransparency)
                            >14 Visitor::preOutput(lambert5)
                            >14 Visitor::outputBegin(lambert5)
                            >14 ConvertShadingNetwork::traverseGraphAndOutputNodeFunctions( nodes, numConnections)
                              >15 Visitor::outputUpstreamShader(lambert5)
                                >16 ShaderOutputVisitor::_outputUpstreamShader(lambert5,lambert)
                                  >17 Visitor::visitLambert(lambert5)
                                    >18 OutputHelper::beginRSL(maya_lambert,lambert5)
                                    >18 ShaderMgr::convertibleConnection(lambert5.ambientColor)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert5.ambientColor)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert5.ambientColor)
                                    >18 ShaderMgr::convertibleConnection(lambert5.color)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert5.color)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert5.color)
                                    >18 ShaderMgr::convertibleConnection(lambert5.diffuse)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert5.diffuse)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert5.diffuse)
                                    >18 ShaderMgr::convertibleConnection(lambert5.incandescence)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert5.incandescence)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert5.incandescence)
                                    >18 ShaderMgr::convertibleConnection(lambert5.matteOpacityMode)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert5.matteOpacityMode)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert5.matteOpacityMode)
                                    >18 ShaderMgr::convertibleConnection(lambert5.matteOpacity)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert5.matteOpacity)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert5.matteOpacity)
                                    >18 ShaderMgr::convertibleConnection(lambert5.refractions)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert5.refractions)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert5.refractions)
                                    >18 ShaderMgr::convertibleConnection(lambert5.refractiveIndex)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert5.refractiveIndex)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert5.refractiveIndex)
                                    >18 ShaderMgr::convertibleConnection(lambert5.refractionLimit)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert5.refractionLimit)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert5.refractionLimit)
                                    >18 ShaderMgr::convertibleConnection(lambert5.lightAbsorbance)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert5.lightAbsorbance)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert5.lightAbsorbance)
                                    >18 ShaderMgr::convertibleConnection(lambert5.shadowAttenuation)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert5.shadowAttenuation)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert5.shadowAttenuation)
                                    >18 OutputHelper::add_liq_UserDefinedNormal(lambert5)
                                    >18 ShaderMgr::convertibleConnection(lambert5.normalCamera)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert5.normalCamera)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert5.normalCamera)
                                    >18 ShaderMgr::convertibleConnection(lambert5.transparency)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert5.transparency)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert5.transparency)
                                    >18 ShaderMgr::convertibleConnection(lambert5.translucence)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert5.translucence)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert5.translucence)
                                    >18 ShaderMgr::convertibleConnection(lambert5.translucenceDepth)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert5.translucenceDepth)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert5.translucenceDepth)
                                    >18 ShaderMgr::convertibleConnection(lambert5.translucenceFocus)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert5.translucenceFocus)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert5.translucenceFocus)
                                    >18 ShaderMgr::convertibleConnection(lambert5.outColor)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert5.outColor)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert5.outColor)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(lambert3SG)
                                          >21 ShaderMgr::hasShaderType(shadingEngine)
                                    >18 ShaderMgr::convertibleConnection(lambert5.outTransparency)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert5.outTransparency)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert5.outTransparency)
                                    >18 OutputHelper::endRSL()
                              >15 ShaderMgr::getValidConnection(lambert5)
                              >15 ConvertShadingNetwork::decrementDownstreamConnections(lambert5, nodes, numConnections, validConnections)
                              >15 ConvertShadingNetwork::getNodeVariables(lambert5, validConnections,  inputSrc, inputDes, outputSrc)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert5.colorR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert5.colorR)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert5.colorG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert5.colorG)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert5.colorB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert5.colorB)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert5.color)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert5.color)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert5.transparencyR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert5.transparencyR)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert5.transparencyG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert5.transparencyG)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert5.transparencyB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert5.transparencyB)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert5.transparency)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert5.transparency)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert5.ambientColorR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert5.ambientColorR)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert5.ambientColorG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert5.ambientColorG)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert5.ambientColorB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert5.ambientColorB)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert5.ambientColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert5.ambientColor)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert5.incandescenceR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert5.incandescenceR)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert5.incandescenceG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert5.incandescenceG)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert5.incandescenceB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert5.incandescenceB)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert5.incandescence)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert5.incandescence)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert5.normalCameraX)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert5.normalCameraX)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert5.normalCameraY)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert5.normalCameraY)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert5.normalCameraZ)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert5.normalCameraZ)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert5.normalCamera)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert5.normalCamera)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert5.diffuse)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert5.diffuse)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert5.translucence)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert5.translucence)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert5.translucenceDepth)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert5.translucenceDepth)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert5.translucenceFocus)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert5.translucenceFocus)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert5.outColorR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert5.outColorR)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert5.outColorG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert5.outColorG)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert5.outColorB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert5.outColorB)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert5.outColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert5.outColor)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(lambert3SG)
                                    >18 ShaderMgr::hasShaderType(shadingEngine)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert5.outTransparencyR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert5.outTransparencyR)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert5.outTransparencyG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert5.outTransparencyG)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert5.outTransparencyB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert5.outTransparencyB)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert5.outTransparency)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert5.outTransparency)
                              >15 Visitor::addShaderMethodBody(lambert5,,,)
                            >14 ConvertShadingNetwork::outputShaderMethod()
                              >15 Visitor::outputShaderMethod()
                            >14 Visitor::outputEnd()
                            >14 Visitor::postOutput()
                          >13 ConvertShadingNetwork::exportShaderEnd(lambert5)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(lambert3SG,displacementShader)
                    >10 ConvertShadingNetwork::exportShaderNodeInPlug(lambert3SG,displacementShader)
                      >11 ConvertShadingNetwork::_exportShaderNodeInPlug(lambert3SG,displacementShader)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(lambert3SG,volumeShader)
                    >10 ConvertShadingNetwork::exportShaderNodeInPlug(lambert3SG,volumeShader)
                      >11 ConvertShadingNetwork::_exportShaderNodeInPlug(lambert3SG,volumeShader)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(lambert3SG,liqShadowShader)
                    >10 ConvertShadingNetwork::exportShaderNodeInPlug(lambert3SG,liqShadowShader)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(lambert3SG,liqEnvironmentShader)
                    >10 ConvertShadingNetwork::exportShaderNodeInPlug(lambert3SG,liqEnvironmentShader)
                  >9 ConvertShadingNetwork::exportShadingGroupBegin(lambert3SG)
                  >9 ConvertShadingNetwork::outputShadingGroup(lambert3SG)
                    >10 Visitor::outputShadingGroup(lambert3SG)
                  >9 ConvertShadingNetwork::exportShadingGroupEnd(lambert3SG)
                  >9 ConvertShadingNetwork::canShadingGroupExported(lambert2SG)
                  >9 Renderer::getValidShaderPlugsInShadingGroup()
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(lambert2SG,surfaceShader)
                    >10 ConvertShadingNetwork::exportShaderNodeInPlug(lambert2SG,surfaceShader)
                      >11 ConvertShadingNetwork::_exportShaderNodeInPlug(lambert2SG,surfaceShader)
                        >12 ConvertShadingNetwork::exportShaderNode(lambert4)
                          >13 ConvertShadingNetwork::canShaderExported(lambert4)
                          >13 ConvertShadingNetwork::exportShaderBegin(lambert4)
                          >13 ConvertShadingNetwork::convertShadingNetworkToRSL(lambert4,surfaceShader)
                            >14 Visitor::initShaderData(lambert4,surfaceShader)
                            >14 ConvertShadingNetwork::getUpstreamConvertibleNodes(lambert4, nodes, numConnections)
                              >15 ConvertShadingNetwork::nodeIsConvertible(lambert4)
                                >16 ShaderMgr::hasShaderType(lambert)
                              >15 ShaderMgr::getValidConnection(lambert4)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert4.colorR)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert4.colorR)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert4.colorG)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert4.colorG)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert4.colorB)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert4.colorB)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert4.color)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert4.color)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert4.transparencyR)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert4.transparencyR)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert4.transparencyG)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert4.transparencyG)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert4.transparencyB)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert4.transparencyB)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert4.transparency)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert4.transparency)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert4.ambientColorR)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert4.ambientColorR)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert4.ambientColorG)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert4.ambientColorG)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert4.ambientColorB)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert4.ambientColorB)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert4.ambientColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert4.ambientColor)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert4.incandescenceR)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert4.incandescenceR)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert4.incandescenceG)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert4.incandescenceG)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert4.incandescenceB)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert4.incandescenceB)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert4.incandescence)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert4.incandescence)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert4.normalCameraX)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert4.normalCameraX)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert4.normalCameraY)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert4.normalCameraY)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert4.normalCameraZ)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert4.normalCameraZ)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert4.normalCamera)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert4.normalCamera)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert4.diffuse)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert4.diffuse)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert4.translucence)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert4.translucence)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert4.translucenceDepth)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert4.translucenceDepth)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert4.translucenceFocus)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert4.translucenceFocus)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert4.outColorR)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert4.outColorR)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert4.outColorG)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert4.outColorG)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert4.outColorB)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert4.outColorB)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert4.outColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert4.outColor)
                                >16 ConvertShadingNetwork::nodeIsConvertible(lambert2SG)
                                  >17 ShaderMgr::hasShaderType(shadingEngine)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert4.outTransparencyR)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert4.outTransparencyR)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert4.outTransparencyG)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert4.outTransparencyG)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert4.outTransparencyB)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert4.outTransparencyB)
                              >15 ConvertShadingNetwork::convertibleConnection(lambert4.outTransparency)
                                >16 ConvertShadingNetwork::ensurePlugExists(lambert4.outTransparency)
                            >14 Visitor::preOutput(lambert4)
                            >14 Visitor::outputBegin(lambert4)
                            >14 ConvertShadingNetwork::traverseGraphAndOutputNodeFunctions( nodes, numConnections)
                              >15 Visitor::outputUpstreamShader(lambert4)
                                >16 ShaderOutputVisitor::_outputUpstreamShader(lambert4,lambert)
                                  >17 Visitor::visitLambert(lambert4)
                                    >18 OutputHelper::beginRSL(maya_lambert,lambert4)
                                    >18 ShaderMgr::convertibleConnection(lambert4.ambientColor)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert4.ambientColor)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert4.ambientColor)
                                    >18 ShaderMgr::convertibleConnection(lambert4.color)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert4.color)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert4.color)
                                    >18 ShaderMgr::convertibleConnection(lambert4.diffuse)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert4.diffuse)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert4.diffuse)
                                    >18 ShaderMgr::convertibleConnection(lambert4.incandescence)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert4.incandescence)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert4.incandescence)
                                    >18 ShaderMgr::convertibleConnection(lambert4.matteOpacityMode)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert4.matteOpacityMode)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert4.matteOpacityMode)
                                    >18 ShaderMgr::convertibleConnection(lambert4.matteOpacity)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert4.matteOpacity)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert4.matteOpacity)
                                    >18 ShaderMgr::convertibleConnection(lambert4.refractions)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert4.refractions)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert4.refractions)
                                    >18 ShaderMgr::convertibleConnection(lambert4.refractiveIndex)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert4.refractiveIndex)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert4.refractiveIndex)
                                    >18 ShaderMgr::convertibleConnection(lambert4.refractionLimit)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert4.refractionLimit)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert4.refractionLimit)
                                    >18 ShaderMgr::convertibleConnection(lambert4.lightAbsorbance)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert4.lightAbsorbance)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert4.lightAbsorbance)
                                    >18 ShaderMgr::convertibleConnection(lambert4.shadowAttenuation)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert4.shadowAttenuation)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert4.shadowAttenuation)
                                    >18 OutputHelper::add_liq_UserDefinedNormal(lambert4)
                                    >18 ShaderMgr::convertibleConnection(lambert4.normalCamera)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert4.normalCamera)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert4.normalCamera)
                                    >18 ShaderMgr::convertibleConnection(lambert4.transparency)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert4.transparency)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert4.transparency)
                                    >18 ShaderMgr::convertibleConnection(lambert4.translucence)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert4.translucence)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert4.translucence)
                                    >18 ShaderMgr::convertibleConnection(lambert4.translucenceDepth)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert4.translucenceDepth)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert4.translucenceDepth)
                                    >18 ShaderMgr::convertibleConnection(lambert4.translucenceFocus)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert4.translucenceFocus)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert4.translucenceFocus)
                                    >18 ShaderMgr::convertibleConnection(lambert4.outColor)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert4.outColor)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert4.outColor)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(lambert2SG)
                                          >21 ShaderMgr::hasShaderType(shadingEngine)
                                    >18 ShaderMgr::convertibleConnection(lambert4.outTransparency)
                                      >19 ConvertShadingNetwork::convertibleConnection(lambert4.outTransparency)
                                        >20 ConvertShadingNetwork::ensurePlugExists(lambert4.outTransparency)
                                    >18 OutputHelper::endRSL()
                              >15 ShaderMgr::getValidConnection(lambert4)
                              >15 ConvertShadingNetwork::decrementDownstreamConnections(lambert4, nodes, numConnections, validConnections)
                              >15 ConvertShadingNetwork::getNodeVariables(lambert4, validConnections,  inputSrc, inputDes, outputSrc)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert4.colorR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert4.colorR)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert4.colorG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert4.colorG)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert4.colorB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert4.colorB)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert4.color)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert4.color)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert4.transparencyR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert4.transparencyR)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert4.transparencyG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert4.transparencyG)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert4.transparencyB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert4.transparencyB)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert4.transparency)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert4.transparency)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert4.ambientColorR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert4.ambientColorR)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert4.ambientColorG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert4.ambientColorG)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert4.ambientColorB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert4.ambientColorB)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert4.ambientColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert4.ambientColor)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert4.incandescenceR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert4.incandescenceR)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert4.incandescenceG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert4.incandescenceG)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert4.incandescenceB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert4.incandescenceB)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert4.incandescence)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert4.incandescence)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert4.normalCameraX)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert4.normalCameraX)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert4.normalCameraY)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert4.normalCameraY)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert4.normalCameraZ)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert4.normalCameraZ)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert4.normalCamera)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert4.normalCamera)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert4.diffuse)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert4.diffuse)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert4.translucence)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert4.translucence)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert4.translucenceDepth)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert4.translucenceDepth)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert4.translucenceFocus)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert4.translucenceFocus)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert4.outColorR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert4.outColorR)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert4.outColorG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert4.outColorG)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert4.outColorB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert4.outColorB)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert4.outColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert4.outColor)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(lambert2SG)
                                    >18 ShaderMgr::hasShaderType(shadingEngine)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert4.outTransparencyR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert4.outTransparencyR)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert4.outTransparencyG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert4.outTransparencyG)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert4.outTransparencyB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert4.outTransparencyB)
                                >16 ConvertShadingNetwork::convertibleConnection(lambert4.outTransparency)
                                  >17 ConvertShadingNetwork::ensurePlugExists(lambert4.outTransparency)
                              >15 Visitor::addShaderMethodBody(lambert4,,,)
                            >14 ConvertShadingNetwork::outputShaderMethod()
                              >15 Visitor::outputShaderMethod()
                            >14 Visitor::outputEnd()
                            >14 Visitor::postOutput()
                          >13 ConvertShadingNetwork::exportShaderEnd(lambert4)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(lambert2SG,displacementShader)
                    >10 ConvertShadingNetwork::exportShaderNodeInPlug(lambert2SG,displacementShader)
                      >11 ConvertShadingNetwork::_exportShaderNodeInPlug(lambert2SG,displacementShader)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(lambert2SG,volumeShader)
                    >10 ConvertShadingNetwork::exportShaderNodeInPlug(lambert2SG,volumeShader)
                      >11 ConvertShadingNetwork::_exportShaderNodeInPlug(lambert2SG,volumeShader)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(lambert2SG,liqShadowShader)
                    >10 ConvertShadingNetwork::exportShaderNodeInPlug(lambert2SG,liqShadowShader)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(lambert2SG,liqEnvironmentShader)
                    >10 ConvertShadingNetwork::exportShaderNodeInPlug(lambert2SG,liqEnvironmentShader)
                  >9 ConvertShadingNetwork::exportShadingGroupBegin(lambert2SG)
                  >9 ConvertShadingNetwork::outputShadingGroup(lambert2SG)
                    >10 Visitor::outputShadingGroup(lambert2SG)
                  >9 ConvertShadingNetwork::exportShadingGroupEnd(lambert2SG)
                  >9 ConvertShadingNetwork::canShadingGroupExported(lambert2SG)
                  >9 ConvertShadingNetwork::canShadingGroupExported(lambert3SG)
                  >9 ConvertShadingNetwork::exportShaderNodeInPlug(perspShape,miEnvironmentShader)
                  >9 ConvertShadingNetwork::exportShaderNodeInPlug(perspShape,liqVolumeShader)
                  >9 ConvertShadingNetwork::exportShaderNodeInPlug(perspShape,liqEnvironmentShader)
                  >9 ConvertShadingNetwork::exportShaderNodeInPlug(perspShape,liqLensShader)
                >8  ConvertShadingNetwork::afterExport()
            >6 liqRibTranslatorNew::worldPrologue__(perspShape)
              >7 Renderer::worldPrologue(perspShape)
            >6 liqRibTranslatorNew::lightBlock__(perspShape)
              >7 Renderer::writeLight_pre(|pointLight1|pointLightShape1,perspShape)
              >7 liqRibObj::writeObject(,perspShape,0)
                >8 liqRibLightData::write(,job=perspShape,0)
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::write(|pointLight1|pointLightShape1,,perspShape,ref=0)
                      >11 liqRibData::getFullPathName()
                    >10 er_writeLightData.cpp::_write(|pointLight1|pointLightShape1,perspShape,...)
                      >11 Renderer::exportPointLight(pointlight,pointLightShape1,...)
                        >12 addLightGroupForLight(|pointLight1|pointLightShape1)
              >7 Renderer::writeLight_post(|pointLight1|pointLightShape1,perspShape)
            >6 liqRibTranslatorNew::coordSysBlock__(perspShape)
              >7 Renderer::coordSysBlock__(perspShape)
            >6 liqRibTranslatorNew::objectBlock__(perspShape)
              >7 liqRibTranslatorNew::objectBlock_data(perspShape)
                >8 liqRibTranslatorNew::getShadowSetObject(perspShape)
                >8 liqRibTranslatorNew::oneObjectBlock_data(|persp|perspShape,perspShape)
                  >9 Renderer::exportOneObject_data(|persp|perspShape,perspShape)
                    >10 Renderer::_writeObject(|persp|perspShape,perspShape,0,0,0)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_persp_perspShape.6.rib,perspShape,0)
                        >12 liqRibCameraData::write(R:/MyDocuments/maya/projects/default/rib/_persp_perspShape.6.rib,job=perspShape,0)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|persp|perspShape,R:/MyDocuments/maya/projects/default/rib/_persp_perspShape.6.rib,perspShape,ref=0)
                              >15 liqRibData::getFullPathName()
                            >14 er_writeCameraData.cpp::_write_camera_maya(|persp|perspShape,perspShape)
                              >15 liqRibHT::find(|persp|perspShape,|persp|perspShape,0)
                              >15 Renderer::gatherCameraShaders(cameraShaders.size=0,|persp|perspShape,liqEnvironmentShader)
                              >15 Renderer::gatherCameraShaders(cameraShaders.size=0,|persp|perspShape,miEnvironmentShader)
                              >15 Renderer::cameraOutput(perspShape)
                >8 liqRibTranslatorNew::oneObjectBlock_data(|pPlane2|pPlaneShape2,perspShape)
                  >9 Renderer::exportOneObject_data(|pPlane2|pPlaneShape2,perspShape)
                    >10 Renderer::_writeObject(|pPlane2|pPlaneShape2,perspShape,0,0,0)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape2.6.rib,perspShape,0)
                        >12 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape2.6.rib,job=perspShape,0)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|pPlane2|pPlaneShape2,R:/MyDocuments/maya/projects/default/rib/_pPlane2_pPlaneShape2.6.rib,perspShape,ref=0)
                              >15 liqRibData::getFullPathName()
                            >14 er_writeMeshData.cpp::_write1(|pPlane2|pPlaneShape2,perspShape)
                              >15 liqRibHT::find(|pPlane2|pPlaneShape2,|pPlane2|pPlaneShape2,0)
                              >15 _exportVertexFromNodePlug(|pPlane2|pPlaneShape2,0)
                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqRibData::getFullPathName()
                >8 liqRibTranslatorNew::oneObjectBlock_data(|pCube2|pCubeShape2,perspShape)
                  >9 Renderer::exportOneObject_data(|pCube2|pCubeShape2,perspShape)
                    >10 Renderer::_writeObject(|pCube2|pCubeShape2,perspShape,0,0,0)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pCube2_pCubeShape2.6.rib,perspShape,0)
                        >12 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pCube2_pCubeShape2.6.rib,job=perspShape,0)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|pCube2|pCubeShape2,R:/MyDocuments/maya/projects/default/rib/_pCube2_pCubeShape2.6.rib,perspShape,ref=0)
                              >15 liqRibData::getFullPathName()
                            >14 er_writeMeshData.cpp::_write1(|pCube2|pCubeShape2,perspShape)
                              >15 liqRibHT::find(|pCube2|pCubeShape2,|pCube2|pCubeShape2,0)
                              >15 _exportVertexFromNodePlug(|pCube2|pCubeShape2,0)
                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=8
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=24
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=8
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=24
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=8
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=24
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=8
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=24
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=8
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=24
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=8
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=24
,m_tokenFloats.use_count()=1

                              >15 liqRibData::getFullPathName()
                >8 liqRibTranslatorNew::oneObjectBlock_data(|pPlane3|pPlaneShape3,perspShape)
                  >9 Renderer::exportOneObject_data(|pPlane3|pPlaneShape3,perspShape)
                    >10 Renderer::_writeObject(|pPlane3|pPlaneShape3,perspShape,0,0,0)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pPlane3_pPlaneShape3.6.rib,perspShape,0)
                        >12 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pPlane3_pPlaneShape3.6.rib,job=perspShape,0)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|pPlane3|pPlaneShape3,R:/MyDocuments/maya/projects/default/rib/_pPlane3_pPlaneShape3.6.rib,perspShape,ref=0)
                              >15 liqRibData::getFullPathName()
                            >14 er_writeMeshData.cpp::_write1(|pPlane3|pPlaneShape3,perspShape)
                              >15 liqRibHT::find(|pPlane3|pPlaneShape3,|pPlane3|pPlaneShape3,0)
                              >15 _exportVertexFromNodePlug(|pPlane3|pPlaneShape3,0)
                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqRibData::getFullPathName()
                >8 liqRibTranslatorNew::oneObjectBlock_data(|pPlane4|pPlaneShape4,perspShape)
                  >9 Renderer::exportOneObject_data(|pPlane4|pPlaneShape4,perspShape)
                    >10 Renderer::_writeObject(|pPlane4|pPlaneShape4,perspShape,0,0,0)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pPlane4_pPlaneShape4.6.rib,perspShape,0)
                        >12 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pPlane4_pPlaneShape4.6.rib,job=perspShape,0)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|pPlane4|pPlaneShape4,R:/MyDocuments/maya/projects/default/rib/_pPlane4_pPlaneShape4.6.rib,perspShape,ref=0)
                              >15 liqRibData::getFullPathName()
                            >14 er_writeMeshData.cpp::_write1(|pPlane4|pPlaneShape4,perspShape)
                              >15 liqRibHT::find(|pPlane4|pPlaneShape4,|pPlane4|pPlaneShape4,0)
                              >15 _exportVertexFromNodePlug(|pPlane4|pPlaneShape4,0)
                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqTokenPointer:getTokenFloatArraySize() 
,m_pType=1
,m_dType=2
,m_tokenName=P
,detailedTokenName=P
,m_arraySize=4
,m_uArraySize=0
,m_eltSize=3
,m_isArray=1
,m_isUArray=0
,m_isString=0
,m_isFull=0
,m_stringSize=0
,m_tokenSize=12
,m_tokenFloats.use_count()=1

                              >15 liqRibData::getFullPathName()
              >7 liqRibTranslatorNew::objectBlock_reference(perspShape)
                >8 Renderer::objectBlock_reference_begin()
                >8 liqRibTranslatorNew::preGeometryMel()
                  >9 Renderer::preGeometryMel()
                >8 liqRibTranslatorNew::getShadowSetObject(perspShape)
                >8 liqRibTranslatorNew::oneObjectBlock_reference(|persp|perspShape,perspShape)
                  >9 Renderer::oneObjectBlock_reference_attribute_begin(|persp|perspShape,perspShape)
                  >9 Renderer::oneObjectBlock_reference_attribute_block0(|persp|perspShape,perspShape)
                  >9 liqRibTranslatorNew::tRiIlluminate(perspShape,|persp|perspShape)
                    >10 Renderer::exportLightLinks(perspShape,|persp|perspShape,lightedByWhichLightShapes.size=0)
                  >9 liqRibTranslatorNew::checkSurfaceShader(|persp|perspShape,|persp|perspShape,,,)
                  >9 liqRibTranslatorNew::checkDisplacementShader(|persp|perspShape,|persp|perspShape,,,)
                  >9 liqRibTranslatorNew::checkVolumeShader(|persp|perspShape,|persp|perspShape,,,)
                  >9 Renderer::oneObjectBlock_reference_attribute_block1(|persp|perspShape,perspShape)
                  >9 liqRibTranslatorNew::writeShader_(1,|persp|perspShape,v=0,s=0,c=0,,|persp|perspShape,perspShape)
                    >10 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|persp|perspShape,|persp|perspShape,0)
                  >9 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|persp|perspShape)
                  >9 Renderer::exportOneObject_reference(|persp|perspShape,perspShape)
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::oneObjectBlock_reference_attribute_end(|persp|perspShape,perspShape)
                >8 liqRibTranslatorNew::oneObjectBlock_reference(|pPlane2|pPlaneShape2,perspShape)
                  >9 Renderer::oneObjectBlock_reference_attribute_begin(|pPlane2|pPlaneShape2,perspShape)
                  >9 Renderer::oneObjectBlock_reference_attribute_block0(|pPlane2|pPlaneShape2,perspShape)
                  >9 liqRibTranslatorNew::tRiIlluminate(perspShape,|pPlane2|pPlaneShape2)
                    >10 Renderer::exportLightLinks(perspShape,|pPlane2|pPlaneShape2,lightedByWhichLightShapes.size=1)
                  >9 liqRibTranslatorNew::checkSurfaceShader(|pPlane2|pPlaneShape2,|pPlane2|pPlaneShape2,,,)
                  >9 liqRibTranslatorNew::checkDisplacementShader(|pPlane2|pPlaneShape2,|pPlane2|pPlaneShape2,,,)
                  >9 liqRibTranslatorNew::checkVolumeShader(|pPlane2|pPlaneShape2,|pPlane2|pPlaneShape2,,,)
                  >9 Renderer::oneObjectBlock_reference_attribute_block1(|pPlane2|pPlaneShape2,perspShape)
                  >9 liqRibTranslatorNew::writeShader_(1,|pPlane2|pPlaneShape2,v=0,s=0,c=0,,|pPlane2|pPlaneShape2,perspShape)
                    >10 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|pPlane2|pPlaneShape2,|pPlane2|pPlaneShape2,0)
                  >9 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|pPlane2|pPlaneShape2)
                  >9 Renderer::exportOneObject_reference(|pPlane2|pPlaneShape2,perspShape)
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::oneObjectBlock_reference_attribute_end(|pPlane2|pPlaneShape2,perspShape)
                >8 liqRibTranslatorNew::oneObjectBlock_reference(|pCube2|pCubeShape2,perspShape)
                  >9 Renderer::oneObjectBlock_reference_attribute_begin(|pCube2|pCubeShape2,perspShape)
                  >9 Renderer::oneObjectBlock_reference_attribute_block0(|pCube2|pCubeShape2,perspShape)
                  >9 liqRibTranslatorNew::tRiIlluminate(perspShape,|pCube2|pCubeShape2)
                    >10 Renderer::exportLightLinks(perspShape,|pCube2|pCubeShape2,lightedByWhichLightShapes.size=1)
                  >9 liqRibTranslatorNew::checkSurfaceShader(|pCube2|pCubeShape2,|pCube2|pCubeShape2,,,)
                  >9 liqRibTranslatorNew::checkDisplacementShader(|pCube2|pCubeShape2,|pCube2|pCubeShape2,,,)
                  >9 liqRibTranslatorNew::checkVolumeShader(|pCube2|pCubeShape2,|pCube2|pCubeShape2,,,)
                  >9 Renderer::oneObjectBlock_reference_attribute_block1(|pCube2|pCubeShape2,perspShape)
                  >9 liqRibTranslatorNew::writeShader_(1,|pCube2|pCubeShape2,v=0,s=0,c=0,,|pCube2|pCubeShape2,perspShape)
                    >10 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|pCube2|pCubeShape2,|pCube2|pCubeShape2,0)
                  >9 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|pCube2|pCubeShape2)
                  >9 Renderer::exportOneObject_reference(|pCube2|pCubeShape2,perspShape)
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::oneObjectBlock_reference_attribute_end(|pCube2|pCubeShape2,perspShape)
                >8 liqRibTranslatorNew::oneObjectBlock_reference(|pPlane3|pPlaneShape3,perspShape)
                  >9 Renderer::oneObjectBlock_reference_attribute_begin(|pPlane3|pPlaneShape3,perspShape)
                  >9 Renderer::oneObjectBlock_reference_attribute_block0(|pPlane3|pPlaneShape3,perspShape)
                  >9 liqRibTranslatorNew::tRiIlluminate(perspShape,|pPlane3|pPlaneShape3)
                    >10 Renderer::exportLightLinks(perspShape,|pPlane3|pPlaneShape3,lightedByWhichLightShapes.size=1)
                  >9 liqRibTranslatorNew::checkSurfaceShader(|pPlane3|pPlaneShape3,|pPlane3|pPlaneShape3,,,)
                  >9 liqRibTranslatorNew::checkDisplacementShader(|pPlane3|pPlaneShape3,|pPlane3|pPlaneShape3,,,)
                  >9 liqRibTranslatorNew::checkVolumeShader(|pPlane3|pPlaneShape3,|pPlane3|pPlaneShape3,,,)
                  >9 Renderer::oneObjectBlock_reference_attribute_block1(|pPlane3|pPlaneShape3,perspShape)
                  >9 liqRibTranslatorNew::writeShader_(1,|pPlane3|pPlaneShape3,v=0,s=0,c=0,,|pPlane3|pPlaneShape3,perspShape)
                    >10 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|pPlane3|pPlaneShape3,|pPlane3|pPlaneShape3,0)
                  >9 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|pPlane3|pPlaneShape3)
                  >9 Renderer::exportOneObject_reference(|pPlane3|pPlaneShape3,perspShape)
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::oneObjectBlock_reference_attribute_end(|pPlane3|pPlaneShape3,perspShape)
                >8 liqRibTranslatorNew::oneObjectBlock_reference(|pPlane4|pPlaneShape4,perspShape)
                  >9 Renderer::oneObjectBlock_reference_attribute_begin(|pPlane4|pPlaneShape4,perspShape)
                  >9 Renderer::oneObjectBlock_reference_attribute_block0(|pPlane4|pPlaneShape4,perspShape)
                  >9 liqRibTranslatorNew::tRiIlluminate(perspShape,|pPlane4|pPlaneShape4)
                    >10 Renderer::exportLightLinks(perspShape,|pPlane4|pPlaneShape4,lightedByWhichLightShapes.size=1)
                  >9 liqRibTranslatorNew::checkSurfaceShader(|pPlane4|pPlaneShape4,|pPlane4|pPlaneShape4,,,)
                  >9 liqRibTranslatorNew::checkDisplacementShader(|pPlane4|pPlaneShape4,|pPlane4|pPlaneShape4,,,)
                  >9 liqRibTranslatorNew::checkVolumeShader(|pPlane4|pPlaneShape4,|pPlane4|pPlaneShape4,,,)
                  >9 Renderer::oneObjectBlock_reference_attribute_block1(|pPlane4|pPlaneShape4,perspShape)
                  >9 liqRibTranslatorNew::writeShader_(1,|pPlane4|pPlaneShape4,v=0,s=0,c=0,,|pPlane4|pPlaneShape4,perspShape)
                    >10 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|pPlane4|pPlaneShape4,|pPlane4|pPlaneShape4,0)
                  >9 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|pPlane4|pPlaneShape4)
                  >9 Renderer::exportOneObject_reference(|pPlane4|pPlaneShape4,perspShape)
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::oneObjectBlock_reference_attribute_end(|pPlane4|pPlaneShape4,perspShape)
                >8 Renderer::objectBlock_reference_end()
            >6 liqRibTranslatorNew::worldEpilogue__()
              >7 liqRibTranslator::worldEpilogue()
                >8 Renderer::worldEpilogue()
            >6 liqRibTranslatorNew::frameEpilogue__(6)
              >7 Renderer::frameEpilogue(6)
            >6 liqRibTranslatorNew::ribEpilogue__(perspShape)
              >7 Renderer::ribPrologue_end(perspShape)
                >8 Renderer::cookInstanceGroup()
                >8 Renderer::render()
                  >9 Renderer::renderPreview(200,150,0,0,perspShape,perspShape,perspShape_option)
                    >10 Renderer::_renderPreview(200,150,0,0,perspShape,|persp,perspShape_option)
          >5 Renderer::HeroPassEnd(perspShape)
        >4 liqRenderScript::addJob(job.title=lambertFrame0,0)
          >5 liqRenderScript::popNextJobID()
        >4 liqRibTranslatorNew::postActions(defaultRenderLayer)
    >2 RendererMgr::test()
    >2 Renderer::closeLog()(but do nothing now)
      >3 OutputMgr::uninit()
        >4 OutputCall::~OutputCall()
        >4 OutputBase::~OutputBase()
        >4 OutputESS::~OutputESS()
        >4 OutputBase::~OutputBase()
        >4 OutputESA::~OutputESA()
        >4 OutputBase::~OutputBase()
    >2 RendererMgr::epilogue()
    >2 RendererMgr::uninstall()
      >3 ShaderMgr::clearValidConnection()
      >3 Renderer::~Renderer()
    >2 RendererMgr::unsetFactory()
