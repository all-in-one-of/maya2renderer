  >1 liqRibTranslator::doIt()-->if(checkSettings()==true)
    >2 RendererMgr::setFactory(renderman)
    >2 RendererMgr::install()
      >3 ShaderMgr::setValidConnection()
      >3 ShaderMgr::getShaderConnectionMap()
    >2 RendererMgr::prologue()
    >2 Renderer::openLog(R:/MyDocuments/maya/projects/default/rib/blinn.cameraShape1.6.renderman.bmp)(but do nothing now)
    >2 Renderer::canExport()
    >2 liqRibTranslatorNew::_doItNew(args,defaultRenderLayer)
      >3 liqRibTranslatorNew::_doItNewWithoutRenderScript(arg,defaultRenderLayer)
        >4 liqRibTranslator::verifyOutputDirectories()
          >5 liqRibTranslator::verifyResourceDir(RIB, rib, 0)
          >5 liqRibTranslator::verifyResourceDir(Texture, rmantex, 0)
          >5 liqRibTranslator::verifyResourceDir(Picture, rmanpix/, 0)
          >5 liqRibTranslator::verifyResourceDir(Temp Files, rmantmp/, 0)
        >4 liqRibTranslator::generateRenderScriptName()
        >4 liqRibTranslator::generateTempMayaSceneName()
        >4 tFrameScriptJobMgr::setCommonParameters(blinnFrame0)
        >4 liqRibTranslatorNew::processOneFrame(0, liqglo__)
          >5 liqRibTranslatorNew::buildJobs__()
            >6 liqRibTranslatorNew::buildShadowJobs__()
              >7 tLightMgr::buildShadowJob(thisJob___, 0)
              >7 tLightMgr::buildShadowCameraJob(thisJob___, 0)
            >6 tRibCameraMgr::gatherDataForJob(liqglo___, ,jobList__,0,1)
            >6 liqRibTranslator::generateFileName(4,cameraShape1)
            >6 liqRibTranslator::generateFileName(5,cameraShape1)
              >7 liqRibTranslator::generateImageName(, job(cameraShape1)), 
          >5 liqRibTranslatorNew::calaculateSamplingTime(6)
          >5 liqRibTranslatorNew::scanScene__(6,0)
            >6 tLightMgr::scanScene(6,0, htable__, count, returnStatus__)
              >7 liqRibHT::insert(|pointLight1|pointLightShape1,lframe,0,3,0,matrix,,-1)
                >8 liqRibHT::hash(|pointLight1|pointLightShape1,0)
                >8 liqRibHT::find(|pointLight1|pointLightShape1,|pointLight1|pointLightShape1,3)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pointLight1|pointLightShape1,0,3,-1)
                  >9 liqRibNode::parseVectorAttributes(pointLight1,,2)
                  >9 liqRibNode::parseVectorAttributes(pointLight1,,3)
                  >9 liqRibNode::parseVectorAttributes(pointLight1,,4)
                  >9 liqRibNode::findShadingGroup(|pointLight1|pointLightShape1,3)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pointLight1|pointLightShape1,3)
                    >10 liqRibLightData::liqRibLightData(|pointLight1|pointLightShape1)
                      >11 liqRibData::addAdditionalSurfaceParameters(pointLightShape1)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 tLocatorMgr::scanScene(6,0,htable__,count__,returnStatus__)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
              >7 liqRibHT::insert(|persp|perspShape,lframe,0,0,1,matrix,,-1)
                >8 liqRibHT::hash(|persp|perspShape,1)
                >8 liqRibHT::find(|persp|perspShape,|persp|perspShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|persp|perspShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(persp,,2)
                  >9 liqRibNode::parseVectorAttributes(persp,,3)
                  >9 liqRibNode::parseVectorAttributes(persp,,4)
                  >9 liqRibNode::findShadingGroup(|persp|perspShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|persp|perspShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
              >7 liqRibHT::insert(|top|topShape,lframe,0,0,2,matrix,,-1)
                >8 liqRibHT::hash(|top|topShape,2)
                >8 liqRibHT::find(|top|topShape,|top|topShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|top|topShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(top,,2)
                  >9 liqRibNode::parseVectorAttributes(top,,3)
                  >9 liqRibNode::parseVectorAttributes(top,,4)
                  >9 liqRibNode::findShadingGroup(|top|topShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|top|topShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
              >7 liqRibHT::insert(|front|frontShape,lframe,0,0,3,matrix,,-1)
                >8 liqRibHT::hash(|front|frontShape,3)
                >8 liqRibHT::find(|front|frontShape,|front|frontShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|front|frontShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(front,,2)
                  >9 liqRibNode::parseVectorAttributes(front,,3)
                  >9 liqRibNode::parseVectorAttributes(front,,4)
                  >9 liqRibNode::findShadingGroup(|front|frontShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|front|frontShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
              >7 liqRibHT::insert(|side|sideShape,lframe,0,0,4,matrix,,-1)
                >8 liqRibHT::hash(|side|sideShape,4)
                >8 liqRibHT::find(|side|sideShape,|side|sideShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|side|sideShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(side,,2)
                  >9 liqRibNode::parseVectorAttributes(side,,3)
                  >9 liqRibNode::parseVectorAttributes(side,,4)
                  >9 liqRibNode::findShadingGroup(|side|sideShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|side|sideShape,0)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
              >7 liqRibHT::insert(|pPlane4|pPlaneShape4,lframe,0,0,5,matrix,,-1)
                >8 liqRibHT::hash(|pPlane4|pPlaneShape4,5)
                >8 liqRibHT::find(|pPlane4|pPlaneShape4,|pPlane4|pPlaneShape4,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|pPlane4|pPlaneShape4,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(pPlane4,,2)
                  >9 liqRibNode::parseVectorAttributes(pPlane4,,3)
                  >9 liqRibNode::parseVectorAttributes(pPlane4,,4)
                  >9 liqRibNode::findShadingGroup(|pPlane4|pPlaneShape4,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getColor(&shader,&color)
                  >9 liqRibNode::getOpacity(&shader,&color)
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|pPlane4|pPlaneShape4,0)
                    >10 liqRibMeshData::liqRibMeshData(|pPlane4|pPlaneShape4)
                      >11 liqRibData::addAdditionalSurfaceParameters(pPlaneShape4)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=2)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=3)
                        >12 liqRibData::parseVectorAttributes(&nodeFn, &strArray, pType=4)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
              >7 liqRibHT::insert(|camera1_group|camera1|cameraShape1,lframe,0,0,6,matrix,,-1)
                >8 liqRibHT::hash(|camera1_group|camera1|cameraShape1,6)
                >8 liqRibHT::find(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|camera1_group|camera1|cameraShape1,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(camera1,,2)
                  >9 liqRibNode::parseVectorAttributes(camera1,,3)
                  >9 liqRibNode::parseVectorAttributes(camera1,,4)
                  >9 liqRibNode::findShadingGroup(|camera1_group|camera1|cameraShape1,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|camera1_group|camera1|cameraShape1,0)
                    >10 liqRibCameraData::liqRibCameraData(|camera1_group|camera1|cameraShape1)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
            >6 liqRibTranslator::scanSceneNodes(&currentNode, &path,6,0,&count)
              >7 liqRibHT::insert(|camera1_group|camera1_aim|camera1_aimShape,lframe,0,0,7,matrix,,-1)
                >8 liqRibHT::hash(|camera1_group|camera1_aim|camera1_aimShape,7)
                >8 liqRibHT::find(|camera1_group|camera1_aim|camera1_aimShape,|camera1_group|camera1_aim|camera1_aimShape,0)
                >8 liqRibNode::liqRibNode(instanceOfNode,)
                >8 liqRibNode::set(|camera1_group|camera1_aim|camera1_aimShape,0,0,-1)
                  >9 liqRibNode::parseVectorAttributes(camera1_aim,,2)
                  >9 liqRibNode::parseVectorAttributes(camera1_aim,,3)
                  >9 liqRibNode::parseVectorAttributes(camera1_aim,,4)
                  >9 liqRibNode::findShadingGroup(|camera1_group|camera1_aim|camera1_aimShape,0)
                  >9 liqRibNode::findShader()
                  >9 liqRibNode::findDisp()
                  >9 liqRibNode::findVolume()
                  >9 liqRibNode::getMatteMode(&shader)
                  >9 liqRibObj::liqRibObj(|camera1_group|camera1_aim|camera1_aimShape,0)
            >6 liqRibTranslatorNew::dealwithParticleInstancedObjects(0,6,8)
            >6 tCameraMgr::getCameraData(cameraShape1,0)
              >7 tCameraMgr::getCameraInfo(|camera1_group|camera1|cameraShape1,)
                >8 tCameraMgr::portFieldOfView(200,150,&horizontal,&vertical,&fnCamera)
                  >9 tCameraMgr::computeViewingFrustum(1.33333,,&left,&right,&bottom,&top,|camera1_group|camera1|cameraShape1)
              >7 tCameraMgr::getCameraFilmOffset(|camera1_group|camera1|cameraShape1,)
              >7 tCameraMgr::getCameraTransform(|camera1_group|camera1|cameraShape1,)
          >5 liqRibTranslatorNew::doTextures(size=0)
            >6 rm::Renderer::doTextures(txtList.size()=0)
          >5 liqRibTranslatorNew::doShadows(size=0)
            >6 rm::Renderer::doShadows(shadowList_.size()=0)
          >5 Renderer::setRenderScriptFormatAndCompress(0,0)
            >6 Renderer::_RiOption_format_compress(0,0)
          >5 Renderer::isHeroPassReady(cameraShape1)
          >5 Renderer::HeroPassBegin(cameraShape1)
          >5 tHeroRibWriterMgr::write(liqglo___,cameraShape1,6,0)
            >6 liqRibTranslatorNew::ribPrologue__(cameraShape1)
              >7 Renderer::ribPrologue_begin(cameraShape1)
                >8 RiBegin_liq(R:/MyDocuments/maya/projects/default/rib/blinn_cameraShape1.0006..rib(strlen=69)
              >7 Renderer::ribPrologue_comment(2.3.5,R:/MyDocuments/maya/projects/default/blinn,yaoyansi,time)
              >7 Renderer::ribPrologue_options(cameraShape1)
                >8 Renderer::ribPrologue_writeSearthPath()
                >8 tHeroRibWriterMgr::ribPrologue_hider(0)
                >8 tHeroRibWriterMgr::ribPrologue_samples(4,4)
                >8 tHeroRibWriterMgr::ribPrologue_shadingrate(1)
                >8 tHeroRibWriterMgr::ribPrologue_filter(0,2,2)
                >8 tHeroRibWriterMgr::ribPrologue_pass(beauty)
            >6 liqRibTranslatorNew::framePrologue__(6,cameraShape1)
              >7 Renderer::framePrologue(6,cameraShape1)
                >8 tHeroRibWriterMgr::framePrologue_display(cameraShape1)
                  >9 exportJobCamera(cameraShape1,,)
                >8 Renderer::framePrologue_camera(6,cameraShape1)
            >6 ShaderMgr::exportShaderGraph()
              >7 ConvertShadingNetwork::exportShaderGraph()
                >8 ConvertShadingNetwork::beforeExport()
                >8 ConvertShadingNetwork::__export()
                  >9 ConvertShadingNetwork::canShadingGroupExported(lambert3SG)
                  >9 Renderer::getValidShaderPlugsInShadingGroup()
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(lambert3SG,surfaceShader)
                    >10 ConvertShadingNetwork::exportShaderNodeInPlug(lambert3SG,surfaceShader)
                      >11 ConvertShadingNetwork::_exportShaderNodeInPlug(lambert3SG,surfaceShader)
                        >12 ConvertShadingNetwork::exportShaderNode(blinn1)
                          >13 ConvertShadingNetwork::canShaderExported(blinn1)
                          >13 ConvertShadingNetwork::exportShaderBegin(blinn1)
                          >13 ConvertShadingNetwork::convertShadingNetworkToRSL(blinn1,surfaceShader)
                            >14 Visitor::initShaderData(blinn1,surfaceShader)
                              >15 NodePlugConnectionMgr::setNodePlugMgr(...)
                              >15 NodePlugConnectionMgr::reset()
                            >14 ConvertShadingNetwork::getUpstreamConvertibleNodes(blinn1, nodes, numConnections)
                              >15 ConvertShadingNetwork::nodeIsConvertible(blinn1)
                                >16 ShaderMgr::hasShaderType(blinn)
                              >15 ShaderMgr::getValidConnection(blinn1)
                              >15 ConvertShadingNetwork::convertibleConnection(blinn1.ambientColorR)
                                >16 ConvertShadingNetwork::ensurePlugExists(blinn1.ambientColorR)
                              >15 ConvertShadingNetwork::convertibleConnection(blinn1.ambientColorG)
                                >16 ConvertShadingNetwork::ensurePlugExists(blinn1.ambientColorG)
                              >15 ConvertShadingNetwork::convertibleConnection(blinn1.ambientColorB)
                                >16 ConvertShadingNetwork::ensurePlugExists(blinn1.ambientColorB)
                              >15 ConvertShadingNetwork::convertibleConnection(blinn1.ambientColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(blinn1.ambientColor)
                              >15 ConvertShadingNetwork::convertibleConnection(blinn1.colorR)
                                >16 ConvertShadingNetwork::ensurePlugExists(blinn1.colorR)
                              >15 ConvertShadingNetwork::convertibleConnection(blinn1.colorG)
                                >16 ConvertShadingNetwork::ensurePlugExists(blinn1.colorG)
                              >15 ConvertShadingNetwork::convertibleConnection(blinn1.colorB)
                                >16 ConvertShadingNetwork::ensurePlugExists(blinn1.colorB)
                              >15 ConvertShadingNetwork::convertibleConnection(blinn1.color)
                                >16 ConvertShadingNetwork::ensurePlugExists(blinn1.color)
                              >15 ConvertShadingNetwork::convertibleConnection(blinn1.diffuse)
                                >16 ConvertShadingNetwork::ensurePlugExists(blinn1.diffuse)
                              >15 ConvertShadingNetwork::convertibleConnection(blinn1.eccentricity)
                                >16 ConvertShadingNetwork::ensurePlugExists(blinn1.eccentricity)
                              >15 ConvertShadingNetwork::convertibleConnection(blinn1.incandescenceR)
                                >16 ConvertShadingNetwork::ensurePlugExists(blinn1.incandescenceR)
                              >15 ConvertShadingNetwork::convertibleConnection(blinn1.incandescenceG)
                                >16 ConvertShadingNetwork::ensurePlugExists(blinn1.incandescenceG)
                              >15 ConvertShadingNetwork::convertibleConnection(blinn1.incandescenceB)
                                >16 ConvertShadingNetwork::ensurePlugExists(blinn1.incandescenceB)
                              >15 ConvertShadingNetwork::convertibleConnection(blinn1.incandescence)
                                >16 ConvertShadingNetwork::ensurePlugExists(blinn1.incandescence)
                              >15 ConvertShadingNetwork::convertibleConnection(blinn1.matteOpacityMode)
                                >16 ConvertShadingNetwork::ensurePlugExists(blinn1.matteOpacityMode)
                              >15 ConvertShadingNetwork::convertibleConnection(blinn1.matteOpacity)
                                >16 ConvertShadingNetwork::ensurePlugExists(blinn1.matteOpacity)
                              >15 ConvertShadingNetwork::convertibleConnection(blinn1.specularColorR)
                                >16 ConvertShadingNetwork::ensurePlugExists(blinn1.specularColorR)
                              >15 ConvertShadingNetwork::convertibleConnection(blinn1.specularColorG)
                                >16 ConvertShadingNetwork::ensurePlugExists(blinn1.specularColorG)
                              >15 ConvertShadingNetwork::convertibleConnection(blinn1.specularColorB)
                                >16 ConvertShadingNetwork::ensurePlugExists(blinn1.specularColorB)
                              >15 ConvertShadingNetwork::convertibleConnection(blinn1.specularColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(blinn1.specularColor)
                              >15 ConvertShadingNetwork::convertibleConnection(blinn1.specularRollOff)
                                >16 ConvertShadingNetwork::ensurePlugExists(blinn1.specularRollOff)
                              >15 ConvertShadingNetwork::convertibleConnection(blinn1.reflectivity)
                                >16 ConvertShadingNetwork::ensurePlugExists(blinn1.reflectivity)
                              >15 ConvertShadingNetwork::convertibleConnection(blinn1.reflectedColorR)
                                >16 ConvertShadingNetwork::ensurePlugExists(blinn1.reflectedColorR)
                              >15 ConvertShadingNetwork::convertibleConnection(blinn1.reflectedColorG)
                                >16 ConvertShadingNetwork::ensurePlugExists(blinn1.reflectedColorG)
                              >15 ConvertShadingNetwork::convertibleConnection(blinn1.reflectedColorB)
                                >16 ConvertShadingNetwork::ensurePlugExists(blinn1.reflectedColorB)
                              >15 ConvertShadingNetwork::convertibleConnection(blinn1.reflectedColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(blinn1.reflectedColor)
                              >15 ConvertShadingNetwork::convertibleConnection(blinn1.refractions)
                                >16 ConvertShadingNetwork::ensurePlugExists(blinn1.refractions)
                              >15 ConvertShadingNetwork::convertibleConnection(blinn1.refractiveIndex)
                                >16 ConvertShadingNetwork::ensurePlugExists(blinn1.refractiveIndex)
                              >15 ConvertShadingNetwork::convertibleConnection(blinn1.refractionLimit)
                                >16 ConvertShadingNetwork::ensurePlugExists(blinn1.refractionLimit)
                              >15 ConvertShadingNetwork::convertibleConnection(blinn1.lightAbsorbance)
                                >16 ConvertShadingNetwork::ensurePlugExists(blinn1.lightAbsorbance)
                              >15 ConvertShadingNetwork::convertibleConnection(blinn1.shadowAttenuation)
                                >16 ConvertShadingNetwork::ensurePlugExists(blinn1.shadowAttenuation)
                              >15 ConvertShadingNetwork::convertibleConnection(blinn1.reflectionLimit)
                                >16 ConvertShadingNetwork::ensurePlugExists(blinn1.reflectionLimit)
                              >15 ConvertShadingNetwork::convertibleConnection(blinn1.translucence)
                                >16 ConvertShadingNetwork::ensurePlugExists(blinn1.translucence)
                              >15 ConvertShadingNetwork::convertibleConnection(blinn1.translucenceDepth)
                                >16 ConvertShadingNetwork::ensurePlugExists(blinn1.translucenceDepth)
                              >15 ConvertShadingNetwork::convertibleConnection(blinn1.translucenceFocus)
                                >16 ConvertShadingNetwork::ensurePlugExists(blinn1.translucenceFocus)
                              >15 ConvertShadingNetwork::convertibleConnection(blinn1.transparencyR)
                                >16 ConvertShadingNetwork::ensurePlugExists(blinn1.transparencyR)
                              >15 ConvertShadingNetwork::convertibleConnection(blinn1.transparencyG)
                                >16 ConvertShadingNetwork::ensurePlugExists(blinn1.transparencyG)
                              >15 ConvertShadingNetwork::convertibleConnection(blinn1.transparencyB)
                                >16 ConvertShadingNetwork::ensurePlugExists(blinn1.transparencyB)
                              >15 ConvertShadingNetwork::convertibleConnection(blinn1.transparency)
                                >16 ConvertShadingNetwork::ensurePlugExists(blinn1.transparency)
                              >15 ConvertShadingNetwork::convertibleConnection(blinn1.normalCameraX)
                                >16 ConvertShadingNetwork::ensurePlugExists(blinn1.normalCameraX)
                              >15 ConvertShadingNetwork::convertibleConnection(blinn1.normalCameraY)
                                >16 ConvertShadingNetwork::ensurePlugExists(blinn1.normalCameraY)
                              >15 ConvertShadingNetwork::convertibleConnection(blinn1.normalCameraZ)
                                >16 ConvertShadingNetwork::ensurePlugExists(blinn1.normalCameraZ)
                              >15 ConvertShadingNetwork::convertibleConnection(blinn1.normalCamera)
                                >16 ConvertShadingNetwork::ensurePlugExists(blinn1.normalCamera)
                              >15 ConvertShadingNetwork::convertibleConnection(blinn1.outColorR)
                                >16 ConvertShadingNetwork::ensurePlugExists(blinn1.outColorR)
                              >15 ConvertShadingNetwork::convertibleConnection(blinn1.outColorG)
                                >16 ConvertShadingNetwork::ensurePlugExists(blinn1.outColorG)
                              >15 ConvertShadingNetwork::convertibleConnection(blinn1.outColorB)
                                >16 ConvertShadingNetwork::ensurePlugExists(blinn1.outColorB)
                              >15 ConvertShadingNetwork::convertibleConnection(blinn1.outColor)
                                >16 ConvertShadingNetwork::ensurePlugExists(blinn1.outColor)
                                >16 ConvertShadingNetwork::nodeIsConvertible(lambert3SG)
                                  >17 ShaderMgr::hasShaderType(shadingEngine)
                              >15 ConvertShadingNetwork::convertibleConnection(blinn1.outTransparencyR)
                                >16 ConvertShadingNetwork::ensurePlugExists(blinn1.outTransparencyR)
                              >15 ConvertShadingNetwork::convertibleConnection(blinn1.outTransparencyG)
                                >16 ConvertShadingNetwork::ensurePlugExists(blinn1.outTransparencyG)
                              >15 ConvertShadingNetwork::convertibleConnection(blinn1.outTransparencyB)
                                >16 ConvertShadingNetwork::ensurePlugExists(blinn1.outTransparencyB)
                              >15 ConvertShadingNetwork::convertibleConnection(blinn1.outTransparency)
                                >16 ConvertShadingNetwork::ensurePlugExists(blinn1.outTransparency)
                            >14 Visitor::preOutput(blinn1)
                            >14 Visitor::outputBegin(blinn1), open shader file
                              >15 getShaderFilePath_SRC(blinn1)
                                >16 getShaderFilePath_NoExt(blinn1)
                              >15 Visitor::getSurfaceShaderAOVOutputParametersString()
                              >15 Visitor::defineAOVVariables(blinn1)
                            >14 ConvertShadingNetwork::traverseGraphAndOutputNodeFunctions( nodes, numConnections)
                              >15 Visitor::outputUpstreamShader(blinn1)
                                >16 ShaderOutputVisitor::_outputUpstreamShader(blinn1,blinn)
                                  >17 Visitor::visitBlinn(blinn1)
                                    >18 OutputHelper::addInclude(blinn.h)
                                    >18 OutputHelper::beginRSL(blinn1)
                                    >18 ShaderMgr::convertibleConnection(blinn1.ambientColor)
                                      >19 ConvertShadingNetwork::convertibleConnection(blinn1.ambientColor)
                                        >20 ConvertShadingNetwork::ensurePlugExists(blinn1.ambientColor)
                                    >18 NodePlugInfo::add(blinn1,ambientColor,color)
                                      >19 NodePlug::add(ambientColor, color)
                                    >18 ShaderMgr::convertibleConnection(blinn1.color)
                                      >19 ConvertShadingNetwork::convertibleConnection(blinn1.color)
                                        >20 ConvertShadingNetwork::ensurePlugExists(blinn1.color)
                                    >18 NodePlugInfo::add(blinn1,color,color)
                                      >19 NodePlug::add(color, color)
                                    >18 ShaderMgr::convertibleConnection(blinn1.diffuse)
                                      >19 ConvertShadingNetwork::convertibleConnection(blinn1.diffuse)
                                        >20 ConvertShadingNetwork::ensurePlugExists(blinn1.diffuse)
                                    >18 NodePlugInfo::add(blinn1,diffuse,float)
                                      >19 NodePlug::add(diffuse, float)
                                    >18 ShaderMgr::convertibleConnection(blinn1.eccentricity)
                                      >19 ConvertShadingNetwork::convertibleConnection(blinn1.eccentricity)
                                        >20 ConvertShadingNetwork::ensurePlugExists(blinn1.eccentricity)
                                    >18 NodePlugInfo::add(blinn1,eccentricity,float)
                                      >19 NodePlug::add(eccentricity, float)
                                    >18 ShaderMgr::convertibleConnection(blinn1.incandescence)
                                      >19 ConvertShadingNetwork::convertibleConnection(blinn1.incandescence)
                                        >20 ConvertShadingNetwork::ensurePlugExists(blinn1.incandescence)
                                    >18 NodePlugInfo::add(blinn1,incandescence,color)
                                      >19 NodePlug::add(incandescence, color)
                                    >18 ShaderMgr::convertibleConnection(blinn1.matteOpacityMode)
                                      >19 ConvertShadingNetwork::convertibleConnection(blinn1.matteOpacityMode)
                                        >20 ConvertShadingNetwork::ensurePlugExists(blinn1.matteOpacityMode)
                                    >18 NodePlugInfo::add(blinn1,matteOpacityMode,float)
                                      >19 NodePlug::add(matteOpacityMode, float)
                                    >18 ShaderMgr::convertibleConnection(blinn1.matteOpacity)
                                      >19 ConvertShadingNetwork::convertibleConnection(blinn1.matteOpacity)
                                        >20 ConvertShadingNetwork::ensurePlugExists(blinn1.matteOpacity)
                                    >18 NodePlugInfo::add(blinn1,matteOpacity,float)
                                      >19 NodePlug::add(matteOpacity, float)
                                    >18 ShaderMgr::convertibleConnection(blinn1.specularColor)
                                      >19 ConvertShadingNetwork::convertibleConnection(blinn1.specularColor)
                                        >20 ConvertShadingNetwork::ensurePlugExists(blinn1.specularColor)
                                    >18 NodePlugInfo::add(blinn1,specularColor,color)
                                      >19 NodePlug::add(specularColor, color)
                                    >18 ShaderMgr::convertibleConnection(blinn1.specularRollOff)
                                      >19 ConvertShadingNetwork::convertibleConnection(blinn1.specularRollOff)
                                        >20 ConvertShadingNetwork::ensurePlugExists(blinn1.specularRollOff)
                                    >18 NodePlugInfo::add(blinn1,specularRollOff,float)
                                      >19 NodePlug::add(specularRollOff, float)
                                    >18 ShaderMgr::convertibleConnection(blinn1.reflectivity)
                                      >19 ConvertShadingNetwork::convertibleConnection(blinn1.reflectivity)
                                        >20 ConvertShadingNetwork::ensurePlugExists(blinn1.reflectivity)
                                    >18 NodePlugInfo::add(blinn1,reflectivity,float)
                                      >19 NodePlug::add(reflectivity, float)
                                    >18 ShaderMgr::convertibleConnection(blinn1.reflectedColor)
                                      >19 ConvertShadingNetwork::convertibleConnection(blinn1.reflectedColor)
                                        >20 ConvertShadingNetwork::ensurePlugExists(blinn1.reflectedColor)
                                    >18 NodePlugInfo::add(blinn1,reflectedColor,color)
                                      >19 NodePlug::add(reflectedColor, color)
                                    >18 ShaderMgr::convertibleConnection(blinn1.refractions)
                                      >19 ConvertShadingNetwork::convertibleConnection(blinn1.refractions)
                                        >20 ConvertShadingNetwork::ensurePlugExists(blinn1.refractions)
                                    >18 NodePlugInfo::add(blinn1,refractions,float)
                                      >19 NodePlug::add(refractions, float)
                                    >18 ShaderMgr::convertibleConnection(blinn1.refractiveIndex)
                                      >19 ConvertShadingNetwork::convertibleConnection(blinn1.refractiveIndex)
                                        >20 ConvertShadingNetwork::ensurePlugExists(blinn1.refractiveIndex)
                                    >18 NodePlugInfo::add(blinn1,refractiveIndex,float)
                                      >19 NodePlug::add(refractiveIndex, float)
                                    >18 ShaderMgr::convertibleConnection(blinn1.refractionLimit)
                                      >19 ConvertShadingNetwork::convertibleConnection(blinn1.refractionLimit)
                                        >20 ConvertShadingNetwork::ensurePlugExists(blinn1.refractionLimit)
                                    >18 NodePlugInfo::add(blinn1,refractionLimit,float)
                                      >19 NodePlug::add(refractionLimit, float)
                                    >18 ShaderMgr::convertibleConnection(blinn1.lightAbsorbance)
                                      >19 ConvertShadingNetwork::convertibleConnection(blinn1.lightAbsorbance)
                                        >20 ConvertShadingNetwork::ensurePlugExists(blinn1.lightAbsorbance)
                                    >18 NodePlugInfo::add(blinn1,lightAbsorbance,float)
                                      >19 NodePlug::add(lightAbsorbance, float)
                                    >18 ShaderMgr::convertibleConnection(blinn1.shadowAttenuation)
                                      >19 ConvertShadingNetwork::convertibleConnection(blinn1.shadowAttenuation)
                                        >20 ConvertShadingNetwork::ensurePlugExists(blinn1.shadowAttenuation)
                                    >18 NodePlugInfo::add(blinn1,shadowAttenuation,float)
                                      >19 NodePlug::add(shadowAttenuation, float)
                                    >18 ShaderMgr::convertibleConnection(blinn1.reflectionLimit)
                                      >19 ConvertShadingNetwork::convertibleConnection(blinn1.reflectionLimit)
                                        >20 ConvertShadingNetwork::ensurePlugExists(blinn1.reflectionLimit)
                                    >18 NodePlugInfo::add(blinn1,reflectionLimit,float)
                                      >19 NodePlug::add(reflectionLimit, float)
                                    >18 ShaderMgr::convertibleConnection(blinn1.translucence)
                                      >19 ConvertShadingNetwork::convertibleConnection(blinn1.translucence)
                                        >20 ConvertShadingNetwork::ensurePlugExists(blinn1.translucence)
                                    >18 NodePlugInfo::add(blinn1,translucence,float)
                                      >19 NodePlug::add(translucence, float)
                                    >18 ShaderMgr::convertibleConnection(blinn1.translucenceDepth)
                                      >19 ConvertShadingNetwork::convertibleConnection(blinn1.translucenceDepth)
                                        >20 ConvertShadingNetwork::ensurePlugExists(blinn1.translucenceDepth)
                                    >18 NodePlugInfo::add(blinn1,translucenceDepth,float)
                                      >19 NodePlug::add(translucenceDepth, float)
                                    >18 ShaderMgr::convertibleConnection(blinn1.translucenceFocus)
                                      >19 ConvertShadingNetwork::convertibleConnection(blinn1.translucenceFocus)
                                        >20 ConvertShadingNetwork::ensurePlugExists(blinn1.translucenceFocus)
                                    >18 NodePlugInfo::add(blinn1,translucenceFocus,float)
                                      >19 NodePlug::add(translucenceFocus, float)
                                    >18 ShaderMgr::convertibleConnection(blinn1.transparency)
                                      >19 ConvertShadingNetwork::convertibleConnection(blinn1.transparency)
                                        >20 ConvertShadingNetwork::ensurePlugExists(blinn1.transparency)
                                    >18 NodePlugInfo::add(blinn1,transparency,color)
                                      >19 NodePlug::add(transparency, color)
                                    >18 ShaderMgr::convertibleConnection(blinn1.outColor)
                                      >19 ConvertShadingNetwork::convertibleConnection(blinn1.outColor)
                                        >20 ConvertShadingNetwork::ensurePlugExists(blinn1.outColor)
                                        >20 ConvertShadingNetwork::nodeIsConvertible(lambert3SG)
                                          >21 ShaderMgr::hasShaderType(shadingEngine)
                                    >18 NodePlugInfo::add(blinn1,outColor,color)
                                      >19 NodePlug::add(outColor, color)
                                    >18 ShaderMgr::convertibleConnection(blinn1.outTransparency)
                                      >19 ConvertShadingNetwork::convertibleConnection(blinn1.outTransparency)
                                        >20 ConvertShadingNetwork::ensurePlugExists(blinn1.outTransparency)
                                    >18 NodePlugInfo::add(blinn1,outTransparency,color)
                                      >19 NodePlug::add(outTransparency, color)
                                    >18 OutputHelper::endRSL()
                              >15 ShaderMgr::getValidConnection(blinn1)
                              >15 ConvertShadingNetwork::decrementDownstreamConnections(blinn1, nodes, numConnections, validConnections)
                              >15 ConvertShadingNetwork::getNodeVariables(blinn1, validConnections,  inputSrc, inputDes, outputSrc)
                                >16 ConvertShadingNetwork::convertibleConnection(blinn1.ambientColorR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(blinn1.ambientColorR)
                                >16 ConvertShadingNetwork::convertibleConnection(blinn1.ambientColorG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(blinn1.ambientColorG)
                                >16 ConvertShadingNetwork::convertibleConnection(blinn1.ambientColorB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(blinn1.ambientColorB)
                                >16 ConvertShadingNetwork::convertibleConnection(blinn1.ambientColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(blinn1.ambientColor)
                                >16 ConvertShadingNetwork::convertibleConnection(blinn1.colorR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(blinn1.colorR)
                                >16 ConvertShadingNetwork::convertibleConnection(blinn1.colorG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(blinn1.colorG)
                                >16 ConvertShadingNetwork::convertibleConnection(blinn1.colorB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(blinn1.colorB)
                                >16 ConvertShadingNetwork::convertibleConnection(blinn1.color)
                                  >17 ConvertShadingNetwork::ensurePlugExists(blinn1.color)
                                >16 ConvertShadingNetwork::convertibleConnection(blinn1.diffuse)
                                  >17 ConvertShadingNetwork::ensurePlugExists(blinn1.diffuse)
                                >16 ConvertShadingNetwork::convertibleConnection(blinn1.eccentricity)
                                  >17 ConvertShadingNetwork::ensurePlugExists(blinn1.eccentricity)
                                >16 ConvertShadingNetwork::convertibleConnection(blinn1.incandescenceR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(blinn1.incandescenceR)
                                >16 ConvertShadingNetwork::convertibleConnection(blinn1.incandescenceG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(blinn1.incandescenceG)
                                >16 ConvertShadingNetwork::convertibleConnection(blinn1.incandescenceB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(blinn1.incandescenceB)
                                >16 ConvertShadingNetwork::convertibleConnection(blinn1.incandescence)
                                  >17 ConvertShadingNetwork::ensurePlugExists(blinn1.incandescence)
                                >16 ConvertShadingNetwork::convertibleConnection(blinn1.matteOpacityMode)
                                  >17 ConvertShadingNetwork::ensurePlugExists(blinn1.matteOpacityMode)
                                >16 ConvertShadingNetwork::convertibleConnection(blinn1.matteOpacity)
                                  >17 ConvertShadingNetwork::ensurePlugExists(blinn1.matteOpacity)
                                >16 ConvertShadingNetwork::convertibleConnection(blinn1.specularColorR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(blinn1.specularColorR)
                                >16 ConvertShadingNetwork::convertibleConnection(blinn1.specularColorG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(blinn1.specularColorG)
                                >16 ConvertShadingNetwork::convertibleConnection(blinn1.specularColorB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(blinn1.specularColorB)
                                >16 ConvertShadingNetwork::convertibleConnection(blinn1.specularColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(blinn1.specularColor)
                                >16 ConvertShadingNetwork::convertibleConnection(blinn1.specularRollOff)
                                  >17 ConvertShadingNetwork::ensurePlugExists(blinn1.specularRollOff)
                                >16 ConvertShadingNetwork::convertibleConnection(blinn1.reflectivity)
                                  >17 ConvertShadingNetwork::ensurePlugExists(blinn1.reflectivity)
                                >16 ConvertShadingNetwork::convertibleConnection(blinn1.reflectedColorR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(blinn1.reflectedColorR)
                                >16 ConvertShadingNetwork::convertibleConnection(blinn1.reflectedColorG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(blinn1.reflectedColorG)
                                >16 ConvertShadingNetwork::convertibleConnection(blinn1.reflectedColorB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(blinn1.reflectedColorB)
                                >16 ConvertShadingNetwork::convertibleConnection(blinn1.reflectedColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(blinn1.reflectedColor)
                                >16 ConvertShadingNetwork::convertibleConnection(blinn1.refractions)
                                  >17 ConvertShadingNetwork::ensurePlugExists(blinn1.refractions)
                                >16 ConvertShadingNetwork::convertibleConnection(blinn1.refractiveIndex)
                                  >17 ConvertShadingNetwork::ensurePlugExists(blinn1.refractiveIndex)
                                >16 ConvertShadingNetwork::convertibleConnection(blinn1.refractionLimit)
                                  >17 ConvertShadingNetwork::ensurePlugExists(blinn1.refractionLimit)
                                >16 ConvertShadingNetwork::convertibleConnection(blinn1.lightAbsorbance)
                                  >17 ConvertShadingNetwork::ensurePlugExists(blinn1.lightAbsorbance)
                                >16 ConvertShadingNetwork::convertibleConnection(blinn1.shadowAttenuation)
                                  >17 ConvertShadingNetwork::ensurePlugExists(blinn1.shadowAttenuation)
                                >16 ConvertShadingNetwork::convertibleConnection(blinn1.reflectionLimit)
                                  >17 ConvertShadingNetwork::ensurePlugExists(blinn1.reflectionLimit)
                                >16 ConvertShadingNetwork::convertibleConnection(blinn1.translucence)
                                  >17 ConvertShadingNetwork::ensurePlugExists(blinn1.translucence)
                                >16 ConvertShadingNetwork::convertibleConnection(blinn1.translucenceDepth)
                                  >17 ConvertShadingNetwork::ensurePlugExists(blinn1.translucenceDepth)
                                >16 ConvertShadingNetwork::convertibleConnection(blinn1.translucenceFocus)
                                  >17 ConvertShadingNetwork::ensurePlugExists(blinn1.translucenceFocus)
                                >16 ConvertShadingNetwork::convertibleConnection(blinn1.transparencyR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(blinn1.transparencyR)
                                >16 ConvertShadingNetwork::convertibleConnection(blinn1.transparencyG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(blinn1.transparencyG)
                                >16 ConvertShadingNetwork::convertibleConnection(blinn1.transparencyB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(blinn1.transparencyB)
                                >16 ConvertShadingNetwork::convertibleConnection(blinn1.transparency)
                                  >17 ConvertShadingNetwork::ensurePlugExists(blinn1.transparency)
                                >16 ConvertShadingNetwork::convertibleConnection(blinn1.normalCameraX)
                                  >17 ConvertShadingNetwork::ensurePlugExists(blinn1.normalCameraX)
                                >16 ConvertShadingNetwork::convertibleConnection(blinn1.normalCameraY)
                                  >17 ConvertShadingNetwork::ensurePlugExists(blinn1.normalCameraY)
                                >16 ConvertShadingNetwork::convertibleConnection(blinn1.normalCameraZ)
                                  >17 ConvertShadingNetwork::ensurePlugExists(blinn1.normalCameraZ)
                                >16 ConvertShadingNetwork::convertibleConnection(blinn1.normalCamera)
                                  >17 ConvertShadingNetwork::ensurePlugExists(blinn1.normalCamera)
                                >16 ConvertShadingNetwork::convertibleConnection(blinn1.outColorR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(blinn1.outColorR)
                                >16 ConvertShadingNetwork::convertibleConnection(blinn1.outColorG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(blinn1.outColorG)
                                >16 ConvertShadingNetwork::convertibleConnection(blinn1.outColorB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(blinn1.outColorB)
                                >16 ConvertShadingNetwork::convertibleConnection(blinn1.outColor)
                                  >17 ConvertShadingNetwork::ensurePlugExists(blinn1.outColor)
                                  >17 ConvertShadingNetwork::nodeIsConvertible(lambert3SG)
                                    >18 ShaderMgr::hasShaderType(shadingEngine)
                                >16 ConvertShadingNetwork::convertibleConnection(blinn1.outTransparencyR)
                                  >17 ConvertShadingNetwork::ensurePlugExists(blinn1.outTransparencyR)
                                >16 ConvertShadingNetwork::convertibleConnection(blinn1.outTransparencyG)
                                  >17 ConvertShadingNetwork::ensurePlugExists(blinn1.outTransparencyG)
                                >16 ConvertShadingNetwork::convertibleConnection(blinn1.outTransparencyB)
                                  >17 ConvertShadingNetwork::ensurePlugExists(blinn1.outTransparencyB)
                                >16 ConvertShadingNetwork::convertibleConnection(blinn1.outTransparency)
                                  >17 ConvertShadingNetwork::ensurePlugExists(blinn1.outTransparency)
                              >15 Visitor::addShaderMethodBody(blinn1,,,)
                                >16 NodePlugConnectionMgr::add(blinn1)
                            >14 ConvertShadingNetwork::outputShaderMethod()
                              >15 Visitor::outputShaderMethod()
                                >16 NodePlugConnectionMgr::cookRSLFunctionCallString(0)
                                >16 NodePlugConnectionMgr::log(0)
                            >14 Visitor::outputEnd(), close shader file
                            >14 Visitor::postOutput()
                              >15 getShaderFilePath_SLO(blinn1)
                                >16 getShaderFilePath_NoExt(blinn1)
                              >15 getShaderFilePath_SRC(blinn1)
                                >16 getShaderFilePath_NoExt(blinn1)
                          >13 ConvertShadingNetwork::exportShaderEnd(blinn1)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(lambert3SG,displacementShader)
                    >10 ConvertShadingNetwork::exportShaderNodeInPlug(lambert3SG,displacementShader)
                      >11 ConvertShadingNetwork::_exportShaderNodeInPlug(lambert3SG,displacementShader)
                  >9 ConvertShadingNetwork::exportShaderInShadingGroup(lambert3SG,volumeShader)
                    >10 ConvertShadingNetwork::exportShaderNodeInPlug(lambert3SG,volumeShader)
                      >11 ConvertShadingNetwork::_exportShaderNodeInPlug(lambert3SG,volumeShader)
                  >9 ConvertShadingNetwork::exportShadingGroupBegin(lambert3SG)
                  >9 ConvertShadingNetwork::outputShadingGroup(lambert3SG)
                    >10 Visitor::outputShadingGroup(lambert3SG)
                      >11 Visitor::outputShadingGroup(lambert3SG,0)
                  >9 ConvertShadingNetwork::exportShadingGroupEnd(lambert3SG)
                  >9 ConvertShadingNetwork::exportShaderNodeInPlug(cameraShape1,miEnvironmentShader)
                    >10 ConvertShadingNetwork::_exportShaderNodeInPlug(cameraShape1,miEnvironmentShader)
                  >9 ConvertShadingNetwork::exportShaderNodeInPlug(cameraShape1,liqVolumeShader)
                  >9 ConvertShadingNetwork::exportShaderNodeInPlug(cameraShape1,liqEnvironmentShader)
                  >9 ConvertShadingNetwork::exportShaderNodeInPlug(cameraShape1,liqLensShader)
                >8  ConvertShadingNetwork::afterExport()
            >6 liqRibTranslatorNew::worldPrologue__(cameraShape1)
              >7 Renderer::worldPrologue(cameraShape1)
            >6 liqRibTranslatorNew::lightBlock__(cameraShape1)
              >7 Renderer::writeLight_pre(|pointLight1|pointLightShape1,cameraShape1)
              >7 liqRibObj::writeObject(,cameraShape1,0)
                >8 liqRibLightData::write(,job=cameraShape1,0)
                    >10 liqRibData::getFullPathName()
                  >9 Renderer::write(|pointLight1|pointLightShape1,,cameraShape1,ref=0)
                    >10 Helper::RiBeginRef()
                      >11 liqRibData::getFullPathName()
                    >10 rm_writeLightData.cpp::_write(|pointLight1|pointLightShape1,cameraShape1,...)
                      >11 Renderer::exportPointLight(pointlight,pointLightShape1,...)
                    >10 Helper::RiEndRef()
              >7 Renderer::writeLight_post(|pointLight1|pointLightShape1,cameraShape1)
            >6 liqRibTranslatorNew::coordSysBlock__(cameraShape1)
              >7 Renderer::coordSysBlock__(cameraShape1)
            >6 liqRibTranslatorNew::objectBlock__(cameraShape1)
              >7 liqRibTranslatorNew::objectBlock_data(cameraShape1)
                >8 liqRibTranslatorNew::getShadowSetObject(cameraShape1)
                >8 liqRibTranslatorNew::oneObjectBlock_data(|pPlane4|pPlaneShape4,cameraShape1)
                  >9 Renderer::exportOneObject_data(|pPlane4|pPlaneShape4,cameraShape1)
                    >10 Renderer::_writeObject(|pPlane4|pPlaneShape4,cameraShape1,0,0,0)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pPlane4_pPlaneShape4.6.rib,cameraShape1,0)
                        >12 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pPlane4_pPlaneShape4.6.rib,job=cameraShape1,0)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|pPlane4|pPlaneShape4,R:/MyDocuments/maya/projects/default/rib/_pPlane4_pPlaneShape4.6.rib,cameraShape1,ref=0)
                >8 liqRibTranslatorNew::oneObjectBlock_data(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 Renderer::exportOneObject_data(|camera1_group|camera1|cameraShape1,cameraShape1)
                    >10 Renderer::_writeObject(|camera1_group|camera1|cameraShape1,cameraShape1,0,0,0)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_camera1_group_camera1_cameraShape1.6.rib,cameraShape1,0)
                        >12 liqRibCameraData::write(R:/MyDocuments/maya/projects/default/rib/_camera1_group_camera1_cameraShape1.6.rib,job=cameraShape1,0)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|camera1_group|camera1|cameraShape1,R:/MyDocuments/maya/projects/default/rib/_camera1_group_camera1_cameraShape1.6.rib,cameraShape1,ref=0)
              >7 liqRibTranslatorNew::objectBlock_reference(cameraShape1)
                >8 Renderer::objectBlock_reference_begin()
                >8 liqRibTranslatorNew::preGeometryMel()
                  >9 Renderer::preGeometryMel()
                >8 liqRibTranslatorNew::getShadowSetObject(cameraShape1)
                >8 liqRibTranslatorNew::oneObjectBlock_reference(|pPlane4|pPlaneShape4,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_begin(|pPlane4|pPlaneShape4,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_block0(|pPlane4|pPlaneShape4,cameraShape1)
                  >9 liqRibTranslatorNew::tRiIlluminate(cameraShape1,|pPlane4|pPlaneShape4)
                    >10 Renderer::exportLightLinks(cameraShape1,|pPlane4|pPlaneShape4,lightedByWhichLightShapes.size=1)
                  >9 liqRibTranslatorNew::checkSurfaceShader(|pPlane4|pPlaneShape4,|pPlane4|pPlaneShape4,,,)
                  >9 liqRibTranslatorNew::checkDisplacementShader(|pPlane4|pPlaneShape4,|pPlane4|pPlaneShape4,,,)
                  >9 liqRibTranslatorNew::checkVolumeShader(|pPlane4|pPlaneShape4,|pPlane4|pPlaneShape4,,,)
                  >9 Renderer::oneObjectBlock_reference_attribute_block1(|pPlane4|pPlaneShape4,cameraShape1)
                    >10 objectNonShadowAttribute(|pPlane4|pPlaneShape4)
                      >11 liqRibNode::writeUserAttributes()
                        >12 Renderer::writeUserAttributes()
                  >9 liqRibTranslatorNew::writeShader_(1,|pPlane4|pPlaneShape4,v=0,s=0,c=0,,|pPlane4|pPlaneShape4,cameraShape1)
                    >10 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|pPlane4|pPlaneShape4,|pPlane4|pPlaneShape4,0)
                      >11 Renderer::F2(0,|pPlane4|pPlaneShape4)
                      >11 liqRibNode::findShader()
                  >9 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|pPlane4|pPlaneShape4)
                    >10 Visitor::outputShadingGroup(lambert3SG,1)
                      >11 _outputShadingGroup(lambert3SG)
                        >12 getShaderFilePath_NoExt(blinn1)
                  >9 Renderer::exportOneObject_reference(|pPlane4|pPlaneShape4,cameraShape1)
                    >10 liqRibTranslatorNew::preTransformMel
                    >10 MaxtrixMotionBlur(|pPlane4|pPlaneShape4,|pPlane4|pPlaneShape4,0)
                    >10 liqRibTranslatorNew::postTransformMel(kTransform)
                    >10 liqRibTranslatorNew::preShapeMel(kTransform)
                    >10 Renderer::_writeObject(|pPlane4|pPlaneShape4,cameraShape1,0,0,1)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_pPlane4_pPlaneShape4.6.rib,cameraShape1,1)
                        >12 liqRibMeshData::write(R:/MyDocuments/maya/projects/default/rib/_pPlane4_pPlaneShape4.6.rib,job=cameraShape1,1)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|pPlane4|pPlaneShape4,R:/MyDocuments/maya/projects/default/rib/_pPlane4_pPlaneShape4.6.rib,cameraShape1,ref=1)
                              >15 liqRibData::getFullPathName()
                            >14 rm_writeMeshData.cpp::_write(|pPlane4|pPlaneShape4,cameraShape1)
                    >10 liqRibTranslatorNew::postShapeMel(kTransform)
                  >9 Renderer::oneObjectBlock_reference_attribute_end(|pPlane4|pPlaneShape4,cameraShape1)
                >8 liqRibTranslatorNew::oneObjectBlock_reference(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_begin(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 Renderer::oneObjectBlock_reference_attribute_block0(|camera1_group|camera1|cameraShape1,cameraShape1)
                  >9 liqRibTranslatorNew::tRiIlluminate(cameraShape1,|camera1_group|camera1|cameraShape1)
                    >10 Renderer::exportLightLinks(cameraShape1,|camera1_group|camera1|cameraShape1,lightedByWhichLightShapes.size=0)
                      >11 Renderer::logFrame(|camera1_group|camera1|cameraShape1 is not lighted.)
                  >9 liqRibTranslatorNew::checkSurfaceShader(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,,,)
                  >9 liqRibTranslatorNew::checkDisplacementShader(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,,,)
                  >9 liqRibTranslatorNew::checkVolumeShader(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,,,)
                  >9 Renderer::oneObjectBlock_reference_attribute_block1(|camera1_group|camera1|cameraShape1,cameraShape1)
                    >10 objectNonShadowAttribute(|camera1_group|camera1|cameraShape1)
                      >11 liqRibNode::writeUserAttributes()
                        >12 Renderer::writeUserAttributes()
                  >9 liqRibTranslatorNew::writeShader_(1,|camera1_group|camera1|cameraShape1,v=0,s=0,c=0,,|camera1_group|camera1|cameraShape1,cameraShape1)
                    >10 Renderer::oneObjectBlock_reference_attribute_block2_writeShader_HasNoSurfaceShaderORIngoreSurface(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,0)
                      >11 Renderer::F2(0,|camera1_group|camera1|cameraShape1)
                      >11 liqRibNode::findShader()
                  >9 Renderer::oneObjectBlock_reference_attribute_block3_ShadingGroup(|camera1_group|camera1|cameraShape1)
                  >9 Renderer::exportOneObject_reference(|camera1_group|camera1|cameraShape1,cameraShape1)
                    >10 liqRibTranslatorNew::preTransformMel
                    >10 MaxtrixMotionBlur(|camera1_group|camera1|cameraShape1,|camera1_group|camera1|cameraShape1,0)
                    >10 liqRibTranslatorNew::postTransformMel(kTransform)
                    >10 liqRibTranslatorNew::preShapeMel(kTransform)
                    >10 Renderer::_writeObject(|camera1_group|camera1|cameraShape1,cameraShape1,0,0,1)
                      >11 liqRibObj::writeObject(R:/MyDocuments/maya/projects/default/rib/_camera1_group_camera1_cameraShape1.6.rib,cameraShape1,1)
                        >12 liqRibCameraData::write(R:/MyDocuments/maya/projects/default/rib/_camera1_group_camera1_cameraShape1.6.rib,job=cameraShape1,1)
                            >14 liqRibData::getFullPathName()
                          >13 Renderer::write(|camera1_group|camera1|cameraShape1,R:/MyDocuments/maya/projects/default/rib/_camera1_group_camera1_cameraShape1.6.rib,cameraShape1,ref=1)
                              >15 liqRibData::getFullPathName()
                            >14 rm_writeCameraData.cpp::_write(|camera1_group|camera1|cameraShape1,cameraShape1)
                    >10 liqRibTranslatorNew::postShapeMel(kTransform)
                  >9 Renderer::oneObjectBlock_reference_attribute_end(|camera1_group|camera1|cameraShape1,cameraShape1)
                >8 Renderer::objectBlock_reference_end()
            >6 liqRibTranslatorNew::worldEpilogue__()
              >7 liqRibTranslator::worldEpilogue()
                >8 Renderer::worldEpilogue()
            >6 liqRibTranslatorNew::frameEpilogue__(6)
              >7 Renderer::frameEpilogue(6)
            >6 liqRibTranslatorNew::ribEpilogue__(cameraShape1)
              >7 Renderer::ribPrologue_end(cameraShape1)
          >5 Renderer::HeroPassEnd(cameraShape1)
            >6 rm::Renderer::renderAll_local(R:/MyDocuments/maya/projects/default/rib/blinn_cameraShape1.0006..rib)
              >7 liqProcessLauncher::_execute(renderdl,   "R:/MyDocuments/maya/projects/default/rib/blinn_cameraShape1.0006..rib","R:/MyDocuments/maya/projects/default/", wait=0)
                >8 liqProcessLauncher::_execute(renderdl,   "R:/MyDocuments/maya/projects/default/rib/blinn_cameraShape1.0006..rib","R:/MyDocuments/maya/projects/default/", wait=0)
        >4 liqRenderScript::addJob(job.title=blinnFrame0,0)
          >5 liqRenderScript::popNextJobID()
        >4 liqRibTranslatorNew::postActions(defaultRenderLayer)
    >2 RendererMgr::test()
    >2 Renderer::closeLog()(but do nothing now)
    >2 RendererMgr::epilogue()
    >2 RendererMgr::uninstall()
      >3 ShaderMgr::clearValidConnection()
    >2 RendererMgr::unsetFactory()
